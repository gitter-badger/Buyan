if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__16044__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__16043 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__16043) : cljs.core.into_array.call(null, G__16043);
      }());
    };
    var G__16044 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__16045__i = 0, G__16045__a = new Array(arguments.length - 0);
        while (G__16045__i < G__16045__a.length) {
          G__16045__a[G__16045__i] = arguments[G__16045__i + 0];
          ++G__16045__i;
        }
        args = new cljs.core.IndexedSeq(G__16045__a, 0);
      }
      return G__16044__delegate.call(this, args);
    };
    G__16044.cljs$lang$maxFixedArity = 0;
    G__16044.cljs$lang$applyTo = function(arglist__16046) {
      var args = cljs.core.seq(arglist__16046);
      return G__16044__delegate(args);
    };
    G__16044.cljs$core$IFn$_invoke$arity$variadic = G__16044__delegate;
    return G__16044;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__16048 = x;
  return goog.isString(G__16048);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__16050 = x__$1;
    return goog.typeOf(G__16050);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3913__auto__ = ty;
    if (cljs.core.truth_(and__3913__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3913__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__16052 = obj;
    return goog.typeOf(G__16052);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__16054 = Symbol;
  return goog.typeOf(G__16054);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4812__auto___16056 = len;
  var i_16057 = 0;
  while (true) {
    if (i_16057 < n__4812__auto___16056) {
      new_arr[i_16057] = arr[i_16057];
      var G__16058 = i_16057 + 1;
      i_16057 = G__16058;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__16059 = i + 1;
      i = G__16059;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__16068__delegate = function(array, i, idxs) {
      var G__16065 = aget;
      var G__16066 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__16067 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__16065, G__16066, G__16067) : cljs.core.apply.call(null, G__16065, G__16066, G__16067);
    };
    var G__16068 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__16069__i = 0, G__16069__a = new Array(arguments.length - 2);
        while (G__16069__i < G__16069__a.length) {
          G__16069__a[G__16069__i] = arguments[G__16069__i + 2];
          ++G__16069__i;
        }
        idxs = new cljs.core.IndexedSeq(G__16069__a, 0);
      }
      return G__16068__delegate.call(this, array, i, idxs);
    };
    G__16068.cljs$lang$maxFixedArity = 2;
    G__16068.cljs$lang$applyTo = function(arglist__16070) {
      var array = cljs.core.first(arglist__16070);
      arglist__16070 = cljs.core.next(arglist__16070);
      var i = cljs.core.first(arglist__16070);
      var idxs = cljs.core.rest(arglist__16070);
      return G__16068__delegate(array, i, idxs);
    };
    G__16068.cljs$core$IFn$_invoke$arity$variadic = G__16068__delegate;
    return G__16068;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__16071 = null;
        if (arguments.length > 2) {
          var G__16072__i = 0, G__16072__a = new Array(arguments.length - 2);
          while (G__16072__i < G__16072__a.length) {
            G__16072__a[G__16072__i] = arguments[G__16072__i + 2];
            ++G__16072__i;
          }
          G__16071 = new cljs.core.IndexedSeq(G__16072__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__16071);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__16081__delegate = function(array, idx, idx2, idxv) {
      var G__16077 = aset;
      var G__16078 = array[idx];
      var G__16079 = idx2;
      var G__16080 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__16077, G__16078, G__16079, G__16080) : cljs.core.apply.call(null, G__16077, G__16078, G__16079, G__16080);
    };
    var G__16081 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__16082__i = 0, G__16082__a = new Array(arguments.length - 3);
        while (G__16082__i < G__16082__a.length) {
          G__16082__a[G__16082__i] = arguments[G__16082__i + 3];
          ++G__16082__i;
        }
        idxv = new cljs.core.IndexedSeq(G__16082__a, 0);
      }
      return G__16081__delegate.call(this, array, idx, idx2, idxv);
    };
    G__16081.cljs$lang$maxFixedArity = 3;
    G__16081.cljs$lang$applyTo = function(arglist__16083) {
      var array = cljs.core.first(arglist__16083);
      arglist__16083 = cljs.core.next(arglist__16083);
      var idx = cljs.core.first(arglist__16083);
      arglist__16083 = cljs.core.next(arglist__16083);
      var idx2 = cljs.core.first(arglist__16083);
      var idxv = cljs.core.rest(arglist__16083);
      return G__16081__delegate(array, idx, idx2, idxv);
    };
    G__16081.cljs$core$IFn$_invoke$arity$variadic = G__16081__delegate;
    return G__16081;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__16084 = null;
        if (arguments.length > 3) {
          var G__16085__i = 0, G__16085__a = new Array(arguments.length - 3);
          while (G__16085__i < G__16085__a.length) {
            G__16085__a[G__16085__i] = arguments[G__16085__i + 3];
            ++G__16085__i;
          }
          G__16084 = new cljs.core.IndexedSeq(G__16085__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__16084);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__16091 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__16092 = [];
    var G__16093 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__16091, G__16092, G__16093) : cljs.core.reduce.call(null, G__16091, G__16092, G__16093);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__16094__i = 0, G__16094__a = new Array(arguments.length - 2);
      while (G__16094__i < G__16094__a.length) {
        G__16094__a[G__16094__i] = arguments[G__16094__i + 2];
        ++G__16094__i;
      }
      args = new cljs.core.IndexedSeq(G__16094__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__16095) {
    var obj = cljs.core.first(arglist__16095);
    arglist__16095 = cljs.core.next(arglist__16095);
    var s = cljs.core.first(arglist__16095);
    var args = cljs.core.rest(arglist__16095);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj16097 = {};
  return obj16097;
}();
cljs.core.IFn = function() {
  var obj16099 = {};
  return obj16099;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16145 = x__4569__auto__;
          return goog.typeOf(G__16145);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16147 = x__4569__auto__;
          return goog.typeOf(G__16147);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16149 = x__4569__auto__;
          return goog.typeOf(G__16149);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16151 = x__4569__auto__;
          return goog.typeOf(G__16151);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16153 = x__4569__auto__;
          return goog.typeOf(G__16153);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16155 = x__4569__auto__;
          return goog.typeOf(G__16155);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16157 = x__4569__auto__;
          return goog.typeOf(G__16157);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16159 = x__4569__auto__;
          return goog.typeOf(G__16159);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16161 = x__4569__auto__;
          return goog.typeOf(G__16161);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16163 = x__4569__auto__;
          return goog.typeOf(G__16163);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16165 = x__4569__auto__;
          return goog.typeOf(G__16165);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16167 = x__4569__auto__;
          return goog.typeOf(G__16167);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16169 = x__4569__auto__;
          return goog.typeOf(G__16169);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16171 = x__4569__auto__;
          return goog.typeOf(G__16171);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16173 = x__4569__auto__;
          return goog.typeOf(G__16173);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16175 = x__4569__auto__;
          return goog.typeOf(G__16175);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16177 = x__4569__auto__;
          return goog.typeOf(G__16177);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16179 = x__4569__auto__;
          return goog.typeOf(G__16179);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16181 = x__4569__auto__;
          return goog.typeOf(G__16181);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16183 = x__4569__auto__;
          return goog.typeOf(G__16183);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16185 = x__4569__auto__;
          return goog.typeOf(G__16185);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__16187 = x__4569__auto__;
          return goog.typeOf(G__16187);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj16189 = {};
  return obj16189;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3913__auto__ = value;
    if (and__3913__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4569__auto__ = value == null ? null : value;
    return function() {
      var or__3925__auto__ = cljs.core._clone[function() {
        var G__16193 = x__4569__auto__;
        return goog.typeOf(G__16193);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._clone["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj16195 = {};
  return obj16195;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._count[function() {
        var G__16199 = x__4569__auto__;
        return goog.typeOf(G__16199);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._count["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj16201 = {};
  return obj16201;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._empty[function() {
        var G__16205 = x__4569__auto__;
        return goog.typeOf(G__16205);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._empty["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj16207 = {};
  return obj16207;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._conj[function() {
        var G__16211 = x__4569__auto__;
        return goog.typeOf(G__16211);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._conj["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj16213 = {};
  return obj16213;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3913__auto__ = coll;
      if (and__3913__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4569__auto__ = coll == null ? null : coll;
      return function() {
        var or__3925__auto__ = cljs.core._nth[function() {
          var G__16219 = x__4569__auto__;
          return goog.typeOf(G__16219);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._nth["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3913__auto__ = coll;
      if (and__3913__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4569__auto__ = coll == null ? null : coll;
      return function() {
        var or__3925__auto__ = cljs.core._nth[function() {
          var G__16221 = x__4569__auto__;
          return goog.typeOf(G__16221);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._nth["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj16223 = {};
  return obj16223;
}();
cljs.core.ISeq = function() {
  var obj16225 = {};
  return obj16225;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._first[function() {
        var G__16229 = x__4569__auto__;
        return goog.typeOf(G__16229);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._first["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._rest[function() {
        var G__16233 = x__4569__auto__;
        return goog.typeOf(G__16233);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._rest["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj16235 = {};
  return obj16235;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._next[function() {
        var G__16239 = x__4569__auto__;
        return goog.typeOf(G__16239);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._next["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj16241 = {};
  return obj16241;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._lookup[function() {
          var G__16247 = x__4569__auto__;
          return goog.typeOf(G__16247);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._lookup["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._lookup[function() {
          var G__16249 = x__4569__auto__;
          return goog.typeOf(G__16249);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._lookup["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj16251 = {};
  return obj16251;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__16255 = x__4569__auto__;
        return goog.typeOf(G__16255);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._assoc[function() {
        var G__16259 = x__4569__auto__;
        return goog.typeOf(G__16259);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._assoc["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj16261 = {};
  return obj16261;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._dissoc[function() {
        var G__16265 = x__4569__auto__;
        return goog.typeOf(G__16265);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._dissoc["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj16267 = {};
  return obj16267;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._key[function() {
        var G__16271 = x__4569__auto__;
        return goog.typeOf(G__16271);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._key["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._val[function() {
        var G__16275 = x__4569__auto__;
        return goog.typeOf(G__16275);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._val["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj16277 = {};
  return obj16277;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._disjoin[function() {
        var G__16281 = x__4569__auto__;
        return goog.typeOf(G__16281);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._disjoin["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj16283 = {};
  return obj16283;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._peek[function() {
        var G__16287 = x__4569__auto__;
        return goog.typeOf(G__16287);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._peek["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._pop[function() {
        var G__16291 = x__4569__auto__;
        return goog.typeOf(G__16291);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._pop["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj16293 = {};
  return obj16293;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._assoc_n[function() {
        var G__16297 = x__4569__auto__;
        return goog.typeOf(G__16297);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj16299 = {};
  return obj16299;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._deref[function() {
        var G__16303 = x__4569__auto__;
        return goog.typeOf(G__16303);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._deref["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj16305 = {};
  return obj16305;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._deref_with_timeout[function() {
        var G__16309 = x__4569__auto__;
        return goog.typeOf(G__16309);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj16311 = {};
  return obj16311;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._meta[function() {
        var G__16315 = x__4569__auto__;
        return goog.typeOf(G__16315);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._meta["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj16317 = {};
  return obj16317;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._with_meta[function() {
        var G__16321 = x__4569__auto__;
        return goog.typeOf(G__16321);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._with_meta["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj16323 = {};
  return obj16323;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3913__auto__ = coll;
      if (and__3913__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4569__auto__ = coll == null ? null : coll;
      return function() {
        var or__3925__auto__ = cljs.core._reduce[function() {
          var G__16329 = x__4569__auto__;
          return goog.typeOf(G__16329);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._reduce["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3913__auto__ = coll;
      if (and__3913__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4569__auto__ = coll == null ? null : coll;
      return function() {
        var or__3925__auto__ = cljs.core._reduce[function() {
          var G__16331 = x__4569__auto__;
          return goog.typeOf(G__16331);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._reduce["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj16333 = {};
  return obj16333;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._kv_reduce[function() {
        var G__16337 = x__4569__auto__;
        return goog.typeOf(G__16337);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj16339 = {};
  return obj16339;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._equiv[function() {
        var G__16343 = x__4569__auto__;
        return goog.typeOf(G__16343);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._equiv["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj16345 = {};
  return obj16345;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._hash[function() {
        var G__16349 = x__4569__auto__;
        return goog.typeOf(G__16349);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._hash["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj16351 = {};
  return obj16351;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._seq[function() {
        var G__16355 = x__4569__auto__;
        return goog.typeOf(G__16355);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._seq["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj16357 = {};
  return obj16357;
}();
cljs.core.IList = function() {
  var obj16359 = {};
  return obj16359;
}();
cljs.core.IRecord = function() {
  var obj16361 = {};
  return obj16361;
}();
cljs.core.IReversible = function() {
  var obj16363 = {};
  return obj16363;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._rseq[function() {
        var G__16367 = x__4569__auto__;
        return goog.typeOf(G__16367);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._rseq["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj16369 = {};
  return obj16369;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._sorted_seq[function() {
        var G__16373 = x__4569__auto__;
        return goog.typeOf(G__16373);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._sorted_seq_from[function() {
        var G__16377 = x__4569__auto__;
        return goog.typeOf(G__16377);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._entry_key[function() {
        var G__16381 = x__4569__auto__;
        return goog.typeOf(G__16381);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._entry_key["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._comparator[function() {
        var G__16385 = x__4569__auto__;
        return goog.typeOf(G__16385);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._comparator["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj16387 = {};
  return obj16387;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3913__auto__ = writer;
    if (and__3913__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4569__auto__ = writer == null ? null : writer;
    return function() {
      var or__3925__auto__ = cljs.core._write[function() {
        var G__16391 = x__4569__auto__;
        return goog.typeOf(G__16391);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._write["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3913__auto__ = writer;
    if (and__3913__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4569__auto__ = writer == null ? null : writer;
    return function() {
      var or__3925__auto__ = cljs.core._flush[function() {
        var G__16395 = x__4569__auto__;
        return goog.typeOf(G__16395);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._flush["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj16397 = {};
  return obj16397;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._pr_writer[function() {
        var G__16401 = x__4569__auto__;
        return goog.typeOf(G__16401);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj16403 = {};
  return obj16403;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3913__auto__ = d;
    if (and__3913__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4569__auto__ = d == null ? null : d;
    return function() {
      var or__3925__auto__ = cljs.core._realized_QMARK_[function() {
        var G__16407 = x__4569__auto__;
        return goog.typeOf(G__16407);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj16409 = {};
  return obj16409;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = cljs.core._notify_watches[function() {
        var G__16413 = x__4569__auto__;
        return goog.typeOf(G__16413);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = cljs.core._add_watch[function() {
        var G__16417 = x__4569__auto__;
        return goog.typeOf(G__16417);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._add_watch["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = cljs.core._remove_watch[function() {
        var G__16421 = x__4569__auto__;
        return goog.typeOf(G__16421);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj16423 = {};
  return obj16423;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._as_transient[function() {
        var G__16427 = x__4569__auto__;
        return goog.typeOf(G__16427);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._as_transient["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj16429 = {};
  return obj16429;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._conj_BANG_[function() {
        var G__16433 = x__4569__auto__;
        return goog.typeOf(G__16433);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._persistent_BANG_[function() {
        var G__16437 = x__4569__auto__;
        return goog.typeOf(G__16437);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj16439 = {};
  return obj16439;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._assoc_BANG_[function() {
        var G__16443 = x__4569__auto__;
        return goog.typeOf(G__16443);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj16445 = {};
  return obj16445;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__16449 = x__4569__auto__;
        return goog.typeOf(G__16449);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj16451 = {};
  return obj16451;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__16455 = x__4569__auto__;
        return goog.typeOf(G__16455);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._pop_BANG_[function() {
        var G__16459 = x__4569__auto__;
        return goog.typeOf(G__16459);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj16461 = {};
  return obj16461;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__16465 = x__4569__auto__;
        return goog.typeOf(G__16465);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj16467 = {};
  return obj16467;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._compare[function() {
        var G__16471 = x__4569__auto__;
        return goog.typeOf(G__16471);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._compare["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj16473 = {};
  return obj16473;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._drop_first[function() {
        var G__16477 = x__4569__auto__;
        return goog.typeOf(G__16477);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._drop_first["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj16479 = {};
  return obj16479;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._chunked_first[function() {
        var G__16483 = x__4569__auto__;
        return goog.typeOf(G__16483);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._chunked_rest[function() {
        var G__16487 = x__4569__auto__;
        return goog.typeOf(G__16487);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj16489 = {};
  return obj16489;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._chunked_next[function() {
        var G__16493 = x__4569__auto__;
        return goog.typeOf(G__16493);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj16495 = {};
  return obj16495;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._name[function() {
        var G__16499 = x__4569__auto__;
        return goog.typeOf(G__16499);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._name["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._namespace[function() {
        var G__16503 = x__4569__auto__;
        return goog.typeOf(G__16503);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._namespace["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj16505 = {};
  return obj16505;
}();
cljs.core.IReset = function() {
  var obj16507 = {};
  return obj16507;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._reset_BANG_[function() {
        var G__16511 = x__4569__auto__;
        return goog.typeOf(G__16511);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj16513 = {};
  return obj16513;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._swap_BANG_[function() {
          var G__16523 = x__4569__auto__;
          return goog.typeOf(G__16523);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._swap_BANG_[function() {
          var G__16525 = x__4569__auto__;
          return goog.typeOf(G__16525);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._swap_BANG_[function() {
          var G__16527 = x__4569__auto__;
          return goog.typeOf(G__16527);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._swap_BANG_[function() {
          var G__16529 = x__4569__auto__;
          return goog.typeOf(G__16529);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj16531 = {};
  return obj16531;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._vreset_BANG_[function() {
        var G__16535 = x__4569__auto__;
        return goog.typeOf(G__16535);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj16537 = {};
  return obj16537;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._iterator[function() {
        var G__16541 = x__4569__auto__;
        return goog.typeOf(G__16541);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._iterator["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__16544 = 4294967295;
  var G__16545 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__16544, G__16545) : Math.imul.call(null, G__16544, G__16545);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__16548 = a;
    var G__16549 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__16548, G__16549) : Math.imul.call(null, G__16548, G__16549);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__16550 = i + 2;
        var G__16551 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__16550;
        h1 = G__16551;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj16553 = {};
  return obj16553;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__16554 = i + 1;
          var G__16555 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__16554;
          hash = G__16555;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj16559 = {};
      return obj16559;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__16562 = o;
    if (G__16562) {
      var bit__4599__auto__ = G__16562.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4599__auto__ || G__16562.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__16563 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16563) : Math.floor.call(null, G__16563);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = cljs.core.not(a.ns);
      if (and__3913__auto__) {
        return b.ns;
      } else {
        return and__3913__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__16570 = a.ns;
            var G__16571 = b.ns;
            return goog.array.defaultCompare(G__16570, G__16571);
          }();
          if (0 === nsc) {
            var G__16572 = a.name;
            var G__16573 = b.name;
            return goog.array.defaultCompare(G__16572, G__16573);
          } else {
            return nsc;
          }
        }
      } else {
        var G__16574 = a.name;
        var G__16575 = b.name;
        return goog.array.defaultCompare(G__16574, G__16575);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4346__auto__ = self__._hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__16577 = null;
  var G__16577__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__16577__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__16577 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16577__2.call(this, self__, coll);
      case 3:
        return G__16577__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16577.cljs$core$IFn$_invoke$arity$2 = G__16577__2;
  G__16577.cljs$core$IFn$_invoke$arity$3 = G__16577__3;
  return G__16577;
}();
cljs.core.Symbol.prototype.apply = function(self__, args16576) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16576)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__16625 = null;
  var G__16625__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__16625__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__16625__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__16625__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__16625__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__16625__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__16625__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__16625__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__16625__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__16625__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__16625__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__16625__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__16625__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__16625__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__16625__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__16625__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__16625__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__16625__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__16625__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__16625__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__16625__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__16625__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16581 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__16582 = a;
    var G__16583 = b;
    var G__16584 = c;
    var G__16585 = d;
    var G__16586 = e;
    var G__16587 = f;
    var G__16588 = g;
    var G__16589 = h;
    var G__16590 = i;
    var G__16591 = j;
    var G__16592 = k;
    var G__16593 = l;
    var G__16594 = m;
    var G__16595 = n;
    var G__16596 = o;
    var G__16597 = p;
    var G__16598 = q;
    var G__16599 = r;
    var G__16600 = s;
    var G__16601 = t;
    var G__16602 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__16581, G__16582, G__16583, G__16584, G__16585, G__16586, G__16587, G__16588, G__16589, G__16590, G__16591, G__16592, G__16593, G__16594, G__16595, G__16596, G__16597, G__16598, G__16599, G__16600, G__16601, G__16602) : cljs.core.apply.call(null, G__16581, G__16582, G__16583, G__16584, G__16585, G__16586, G__16587, G__16588, G__16589, G__16590, G__16591, G__16592, G__16593, G__16594, G__16595, 
    G__16596, G__16597, G__16598, G__16599, G__16600, G__16601, G__16602);
  };
  G__16625 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__16625__1.call(this, self__);
      case 2:
        return G__16625__2.call(this, self__, a);
      case 3:
        return G__16625__3.call(this, self__, a, b);
      case 4:
        return G__16625__4.call(this, self__, a, b, c);
      case 5:
        return G__16625__5.call(this, self__, a, b, c, d);
      case 6:
        return G__16625__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__16625__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__16625__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__16625__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__16625__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__16625__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__16625__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__16625__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__16625__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__16625__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__16625__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__16625__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__16625__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__16625__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__16625__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__16625__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__16625__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16625.cljs$core$IFn$_invoke$arity$1 = G__16625__1;
  G__16625.cljs$core$IFn$_invoke$arity$2 = G__16625__2;
  G__16625.cljs$core$IFn$_invoke$arity$3 = G__16625__3;
  G__16625.cljs$core$IFn$_invoke$arity$4 = G__16625__4;
  G__16625.cljs$core$IFn$_invoke$arity$5 = G__16625__5;
  G__16625.cljs$core$IFn$_invoke$arity$6 = G__16625__6;
  G__16625.cljs$core$IFn$_invoke$arity$7 = G__16625__7;
  G__16625.cljs$core$IFn$_invoke$arity$8 = G__16625__8;
  G__16625.cljs$core$IFn$_invoke$arity$9 = G__16625__9;
  G__16625.cljs$core$IFn$_invoke$arity$10 = G__16625__10;
  G__16625.cljs$core$IFn$_invoke$arity$11 = G__16625__11;
  G__16625.cljs$core$IFn$_invoke$arity$12 = G__16625__12;
  G__16625.cljs$core$IFn$_invoke$arity$13 = G__16625__13;
  G__16625.cljs$core$IFn$_invoke$arity$14 = G__16625__14;
  G__16625.cljs$core$IFn$_invoke$arity$15 = G__16625__15;
  G__16625.cljs$core$IFn$_invoke$arity$16 = G__16625__16;
  G__16625.cljs$core$IFn$_invoke$arity$17 = G__16625__17;
  G__16625.cljs$core$IFn$_invoke$arity$18 = G__16625__18;
  G__16625.cljs$core$IFn$_invoke$arity$19 = G__16625__19;
  G__16625.cljs$core$IFn$_invoke$arity$20 = G__16625__20;
  G__16625.cljs$core$IFn$_invoke$arity$21 = G__16625__21;
  G__16625.cljs$core$IFn$_invoke$arity$22 = G__16625__22;
  return G__16625;
}();
cljs.core.Var.prototype.apply = function(self__, args16580) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16580)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__16603 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__16604 = a;
  var G__16605 = b;
  var G__16606 = c;
  var G__16607 = d;
  var G__16608 = e;
  var G__16609 = f;
  var G__16610 = g;
  var G__16611 = h;
  var G__16612 = i;
  var G__16613 = j;
  var G__16614 = k;
  var G__16615 = l;
  var G__16616 = m;
  var G__16617 = n;
  var G__16618 = o;
  var G__16619 = p;
  var G__16620 = q;
  var G__16621 = r;
  var G__16622 = s;
  var G__16623 = t;
  var G__16624 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__16603, G__16604, G__16605, G__16606, G__16607, G__16608, G__16609, G__16610, G__16611, G__16612, G__16613, G__16614, G__16615, G__16616, G__16617, G__16618, G__16619, G__16620, G__16621, G__16622, G__16623, G__16624) : cljs.core.apply.call(null, G__16603, G__16604, G__16605, G__16606, G__16607, G__16608, G__16609, G__16610, G__16611, G__16612, G__16613, G__16614, G__16615, G__16616, G__16617, 
  G__16618, G__16619, G__16620, G__16621, G__16622, G__16623, G__16624);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__16627 = x;
  if (G__16627) {
    var bit__4606__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3925__auto__ = bit__4606__auto__;
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return G__16627.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__16627.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__16627);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__16627);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__16629 = value;
  if (G__16629) {
    var bit__4606__auto__ = G__16629.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4606__auto__ || G__16629.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__16629.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__16629);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__16629);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__16631 = coll;
      if (G__16631) {
        var bit__4599__auto__ = G__16631.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4599__auto__ || G__16631.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__16633 = coll;
      if (G__16633) {
        var bit__4599__auto__ = G__16633.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4599__auto__ || G__16633.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__16635 = coll;
      if (G__16635) {
        var bit__4599__auto__ = G__16635.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4599__auto__ || G__16635.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__16637 = coll;
      if (G__16637) {
        var bit__4599__auto__ = G__16637.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4599__auto__ || G__16637.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__16642__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__16643 = y;
            var G__16644 = cljs.core.first(more);
            var G__16645 = cljs.core.next(more);
            x = G__16643;
            y = G__16644;
            more = G__16645;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__16642 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__16646__i = 0, G__16646__a = new Array(arguments.length - 2);
        while (G__16646__i < G__16646__a.length) {
          G__16646__a[G__16646__i] = arguments[G__16646__i + 2];
          ++G__16646__i;
        }
        more = new cljs.core.IndexedSeq(G__16646__a, 0);
      }
      return G__16642__delegate.call(this, x, y, more);
    };
    G__16642.cljs$lang$maxFixedArity = 2;
    G__16642.cljs$lang$applyTo = function(arglist__16647) {
      var x = cljs.core.first(arglist__16647);
      arglist__16647 = cljs.core.next(arglist__16647);
      var y = cljs.core.first(arglist__16647);
      var more = cljs.core.rest(arglist__16647);
      return G__16642__delegate(x, y, more);
    };
    G__16642.cljs$core$IFn$_invoke$arity$variadic = G__16642__delegate;
    return G__16642;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__16648 = null;
        if (arguments.length > 2) {
          var G__16649__i = 0, G__16649__a = new Array(arguments.length - 2);
          while (G__16649__i < G__16649__a.length) {
            G__16649__a[G__16649__i] = arguments[G__16649__i + 2];
            ++G__16649__i;
          }
          G__16648 = new cljs.core.IndexedSeq(G__16649__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__16648);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__16650 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__16650) : cljs.core.es6_iterator_seq.call(null, G__16650);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__16651 = n + 1;
      var G__16652 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__16653 = cljs.core.next(coll__$1);
      n = G__16651;
      hash_code = G__16652;
      coll__$1 = G__16653;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__16654 = n + 1;
      var G__16655 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__16656 = cljs.core.next(coll__$1);
      n = G__16654;
      hash_code = G__16655;
      coll__$1 = G__16656;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__16657 = o;
  return goog.getUid(G__16657);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__16659 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16659) : cljs.core.deref.call(null, G__16659);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__16666 = val;
            var G__16667 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16666, G__16667) : f.call(null, G__16666, G__16667);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__16672 = nval;
            var G__16673 = n + 1;
            val = G__16672;
            n = G__16673;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__16668 = val__$1;
          var G__16669 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16668, G__16669) : f.call(null, G__16668, G__16669);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__16674 = nval;
          var G__16675 = n + 1;
          val__$1 = G__16674;
          n = G__16675;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__16670 = val__$1;
          var G__16671 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16670, G__16671) : f.call(null, G__16670, G__16671);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__16676 = nval;
          var G__16677 = n + 1;
          val__$1 = G__16676;
          n = G__16677;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__16684 = val;
            var G__16685 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16684, G__16685) : f.call(null, G__16684, G__16685);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__16690 = nval;
            var G__16691 = n + 1;
            val = G__16690;
            n = G__16691;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__16686 = val__$1;
          var G__16687 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16686, G__16687) : f.call(null, G__16686, G__16687);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__16692 = nval;
          var G__16693 = n + 1;
          val__$1 = G__16692;
          n = G__16693;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__16688 = val__$1;
          var G__16689 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16688, G__16689) : f.call(null, G__16688, G__16689);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__16694 = nval;
          var G__16695 = n + 1;
          val__$1 = G__16694;
          n = G__16695;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__16697 = x;
  if (G__16697) {
    var bit__4606__auto__ = G__16697.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4606__auto__ || G__16697.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__16697.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__16697);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__16697);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__16699 = x;
  if (G__16699) {
    var bit__4606__auto__ = G__16699.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4606__auto__ || G__16699.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__16699.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__16699);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__16699);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__16700 = coll__$1;
  var G__16701 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__16700, G__16701) : cljs.core.equiv_sequential.call(null, G__16700, G__16701);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__16702 = o;
  var G__16703 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__16702, G__16703) : cljs.core.cons.call(null, G__16702, G__16703);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__16706 = coll__$1;
  var G__16707 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__16706, G__16707) : cljs.core.equiv_sequential.call(null, G__16706, G__16707);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__16708 = cljs.core.List.EMPTY;
  var G__16709 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__16708, G__16709) : cljs.core.with_meta.call(null, G__16708, G__16709);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__16710 = f;
  var G__16711 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__16710, G__16711) : cljs.core.seq_reduce.call(null, G__16710, G__16711);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__16712 = f;
  var G__16713 = start;
  var G__16714 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__16712, G__16713, G__16714) : cljs.core.seq_reduce.call(null, G__16712, G__16713, G__16714);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__16715 = o;
  var G__16716 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__16715, G__16716) : cljs.core.cons.call(null, G__16715, G__16716);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__16717 = sn;
      s = G__16717;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__16722__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__16723 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__16724 = cljs.core.first(xs);
          var G__16725 = cljs.core.next(xs);
          coll = G__16723;
          x = G__16724;
          xs = G__16725;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__16722 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__16726__i = 0, G__16726__a = new Array(arguments.length - 2);
        while (G__16726__i < G__16726__a.length) {
          G__16726__a[G__16726__i] = arguments[G__16726__i + 2];
          ++G__16726__i;
        }
        xs = new cljs.core.IndexedSeq(G__16726__a, 0);
      }
      return G__16722__delegate.call(this, coll, x, xs);
    };
    G__16722.cljs$lang$maxFixedArity = 2;
    G__16722.cljs$lang$applyTo = function(arglist__16727) {
      var coll = cljs.core.first(arglist__16727);
      arglist__16727 = cljs.core.next(arglist__16727);
      var x = cljs.core.first(arglist__16727);
      var xs = cljs.core.rest(arglist__16727);
      return G__16722__delegate(coll, x, xs);
    };
    G__16722.cljs$core$IFn$_invoke$arity$variadic = G__16722__delegate;
    return G__16722;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__16728 = null;
        if (arguments.length > 2) {
          var G__16729__i = 0, G__16729__a = new Array(arguments.length - 2);
          while (G__16729__i < G__16729__a.length) {
            G__16729__a[G__16729__i] = arguments[G__16729__i + 2];
            ++G__16729__i;
          }
          G__16728 = new cljs.core.IndexedSeq(G__16729__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__16728);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__16730 = cljs.core.next(s);
      var G__16731 = acc + 1;
      s = G__16730;
      acc = G__16731;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__16733 = coll;
      if (G__16733) {
        var bit__4599__auto__ = G__16733.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4599__auto__ || G__16733.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__16734 = cljs.core.next(coll);
              var G__16735 = n - 1;
              coll = G__16734;
              n = G__16735;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__16736 = cljs.core.next(coll);
              var G__16737 = n - 1;
              var G__16738 = not_found;
              coll = G__16736;
              n = G__16737;
              not_found = G__16738;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__16743 = coll;
          if (G__16743) {
            var bit__4599__auto__ = G__16743.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4599__auto__ || G__16743.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__16744 = coll;
                  if (G__16744) {
                    var bit__4606__auto__ = G__16744.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4606__auto__ || G__16744.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__16744.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__16744);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__16744);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__16745 = coll;
          if (G__16745) {
            var bit__4599__auto__ = G__16745.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4599__auto__ || G__16745.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__16746 = coll;
                  if (G__16746) {
                    var bit__4606__auto__ = G__16746.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4606__auto__ || G__16746.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__16746.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__16746);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__16746);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__16747 = n__$1 - 1;
      var G__16748 = cljs.core.rest(xs);
      n__$1 = G__16747;
      xs = G__16748;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__16751 = o;
        if (G__16751) {
          var bit__4599__auto__ = G__16751.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4599__auto__ || G__16751.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__16752 = o;
        if (G__16752) {
          var bit__4599__auto__ = G__16752.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4599__auto__ || G__16752.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__16756__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__16757 = ret;
          var G__16758 = cljs.core.first(kvs);
          var G__16759 = cljs.core.second(kvs);
          var G__16760 = cljs.core.nnext(kvs);
          coll = G__16757;
          k = G__16758;
          v = G__16759;
          kvs = G__16760;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__16756 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__16761__i = 0, G__16761__a = new Array(arguments.length - 3);
        while (G__16761__i < G__16761__a.length) {
          G__16761__a[G__16761__i] = arguments[G__16761__i + 3];
          ++G__16761__i;
        }
        kvs = new cljs.core.IndexedSeq(G__16761__a, 0);
      }
      return G__16756__delegate.call(this, coll, k, v, kvs);
    };
    G__16756.cljs$lang$maxFixedArity = 3;
    G__16756.cljs$lang$applyTo = function(arglist__16762) {
      var coll = cljs.core.first(arglist__16762);
      arglist__16762 = cljs.core.next(arglist__16762);
      var k = cljs.core.first(arglist__16762);
      arglist__16762 = cljs.core.next(arglist__16762);
      var v = cljs.core.first(arglist__16762);
      var kvs = cljs.core.rest(arglist__16762);
      return G__16756__delegate(coll, k, v, kvs);
    };
    G__16756.cljs$core$IFn$_invoke$arity$variadic = G__16756__delegate;
    return G__16756;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__16763 = null;
        if (arguments.length > 3) {
          var G__16764__i = 0, G__16764__a = new Array(arguments.length - 3);
          while (G__16764__i < G__16764__a.length) {
            G__16764__a[G__16764__i] = arguments[G__16764__i + 3];
            ++G__16764__i;
          }
          G__16763 = new cljs.core.IndexedSeq(G__16764__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__16763);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__16767__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__16768 = ret;
            var G__16769 = cljs.core.first(ks);
            var G__16770 = cljs.core.next(ks);
            coll = G__16768;
            k = G__16769;
            ks = G__16770;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__16767 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__16771__i = 0, G__16771__a = new Array(arguments.length - 2);
        while (G__16771__i < G__16771__a.length) {
          G__16771__a[G__16771__i] = arguments[G__16771__i + 2];
          ++G__16771__i;
        }
        ks = new cljs.core.IndexedSeq(G__16771__a, 0);
      }
      return G__16767__delegate.call(this, coll, k, ks);
    };
    G__16767.cljs$lang$maxFixedArity = 2;
    G__16767.cljs$lang$applyTo = function(arglist__16772) {
      var coll = cljs.core.first(arglist__16772);
      arglist__16772 = cljs.core.next(arglist__16772);
      var k = cljs.core.first(arglist__16772);
      var ks = cljs.core.rest(arglist__16772);
      return G__16767__delegate(coll, k, ks);
    };
    G__16767.cljs$core$IFn$_invoke$arity$variadic = G__16767__delegate;
    return G__16767;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__16773 = null;
        if (arguments.length > 2) {
          var G__16774__i = 0, G__16774__a = new Array(arguments.length - 2);
          while (G__16774__i < G__16774__a.length) {
            G__16774__a[G__16774__i] = arguments[G__16774__i + 2];
            ++G__16774__i;
          }
          G__16773 = new cljs.core.IndexedSeq(G__16774__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__16773);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3925__auto__ = function() {
    var G__16779 = f;
    return goog.isFunction(G__16779);
  }();
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    var G__16780 = f;
    if (G__16780) {
      var bit__4606__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3925__auto____$1 = bit__4606__auto__;
        if (cljs.core.truth_(or__3925__auto____$1)) {
          return or__3925__auto____$1;
        } else {
          return G__16780.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__16780.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__16780);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__16780);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__17246 = null;
  var G__17246__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__17246__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16782 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__16782) : self__.afn.call(null, G__16782);
  };
  var G__17246__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16783 = a;
    var G__16784 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__16783, G__16784) : self__.afn.call(null, G__16783, G__16784);
  };
  var G__17246__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16785 = a;
    var G__16786 = b;
    var G__16787 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__16785, G__16786, G__16787) : self__.afn.call(null, G__16785, G__16786, G__16787);
  };
  var G__17246__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16788 = a;
    var G__16789 = b;
    var G__16790 = c;
    var G__16791 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__16788, G__16789, G__16790, G__16791) : self__.afn.call(null, G__16788, G__16789, G__16790, G__16791);
  };
  var G__17246__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16792 = a;
    var G__16793 = b;
    var G__16794 = c;
    var G__16795 = d;
    var G__16796 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__16792, G__16793, G__16794, G__16795, G__16796) : self__.afn.call(null, G__16792, G__16793, G__16794, G__16795, G__16796);
  };
  var G__17246__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16797 = a;
    var G__16798 = b;
    var G__16799 = c;
    var G__16800 = d;
    var G__16801 = e;
    var G__16802 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__16797, G__16798, G__16799, G__16800, G__16801, G__16802) : self__.afn.call(null, G__16797, G__16798, G__16799, G__16800, G__16801, G__16802);
  };
  var G__17246__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16803 = a;
    var G__16804 = b;
    var G__16805 = c;
    var G__16806 = d;
    var G__16807 = e;
    var G__16808 = f;
    var G__16809 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__16803, G__16804, G__16805, G__16806, G__16807, G__16808, G__16809) : self__.afn.call(null, G__16803, G__16804, G__16805, G__16806, G__16807, G__16808, G__16809);
  };
  var G__17246__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16810 = a;
    var G__16811 = b;
    var G__16812 = c;
    var G__16813 = d;
    var G__16814 = e;
    var G__16815 = f;
    var G__16816 = g;
    var G__16817 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__16810, G__16811, G__16812, G__16813, G__16814, G__16815, G__16816, G__16817) : self__.afn.call(null, G__16810, G__16811, G__16812, G__16813, G__16814, G__16815, G__16816, G__16817);
  };
  var G__17246__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16818 = a;
    var G__16819 = b;
    var G__16820 = c;
    var G__16821 = d;
    var G__16822 = e;
    var G__16823 = f;
    var G__16824 = g;
    var G__16825 = h;
    var G__16826 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__16818, G__16819, G__16820, G__16821, G__16822, G__16823, G__16824, G__16825, G__16826) : self__.afn.call(null, G__16818, G__16819, G__16820, G__16821, G__16822, G__16823, G__16824, G__16825, G__16826);
  };
  var G__17246__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16827 = a;
    var G__16828 = b;
    var G__16829 = c;
    var G__16830 = d;
    var G__16831 = e;
    var G__16832 = f;
    var G__16833 = g;
    var G__16834 = h;
    var G__16835 = i;
    var G__16836 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__16827, G__16828, G__16829, G__16830, G__16831, G__16832, G__16833, G__16834, G__16835, G__16836) : self__.afn.call(null, G__16827, G__16828, G__16829, G__16830, G__16831, G__16832, G__16833, G__16834, G__16835, G__16836);
  };
  var G__17246__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16837 = a;
    var G__16838 = b;
    var G__16839 = c;
    var G__16840 = d;
    var G__16841 = e;
    var G__16842 = f;
    var G__16843 = g;
    var G__16844 = h;
    var G__16845 = i;
    var G__16846 = j;
    var G__16847 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__16837, G__16838, G__16839, G__16840, G__16841, G__16842, G__16843, G__16844, G__16845, G__16846, G__16847) : self__.afn.call(null, G__16837, G__16838, G__16839, G__16840, G__16841, G__16842, G__16843, G__16844, G__16845, G__16846, G__16847);
  };
  var G__17246__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16848 = a;
    var G__16849 = b;
    var G__16850 = c;
    var G__16851 = d;
    var G__16852 = e;
    var G__16853 = f;
    var G__16854 = g;
    var G__16855 = h;
    var G__16856 = i;
    var G__16857 = j;
    var G__16858 = k;
    var G__16859 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__16848, G__16849, G__16850, G__16851, G__16852, G__16853, G__16854, G__16855, G__16856, G__16857, G__16858, G__16859) : self__.afn.call(null, G__16848, G__16849, G__16850, G__16851, G__16852, G__16853, G__16854, G__16855, G__16856, G__16857, G__16858, G__16859);
  };
  var G__17246__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16860 = a;
    var G__16861 = b;
    var G__16862 = c;
    var G__16863 = d;
    var G__16864 = e;
    var G__16865 = f;
    var G__16866 = g;
    var G__16867 = h;
    var G__16868 = i;
    var G__16869 = j;
    var G__16870 = k;
    var G__16871 = l;
    var G__16872 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__16860, G__16861, G__16862, G__16863, G__16864, G__16865, G__16866, G__16867, G__16868, G__16869, G__16870, G__16871, G__16872) : self__.afn.call(null, G__16860, G__16861, G__16862, G__16863, G__16864, G__16865, G__16866, G__16867, G__16868, G__16869, G__16870, G__16871, G__16872);
  };
  var G__17246__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16873 = a;
    var G__16874 = b;
    var G__16875 = c;
    var G__16876 = d;
    var G__16877 = e;
    var G__16878 = f;
    var G__16879 = g;
    var G__16880 = h;
    var G__16881 = i;
    var G__16882 = j;
    var G__16883 = k;
    var G__16884 = l;
    var G__16885 = m;
    var G__16886 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__16873, G__16874, G__16875, G__16876, G__16877, G__16878, G__16879, G__16880, G__16881, G__16882, G__16883, G__16884, G__16885, G__16886) : self__.afn.call(null, G__16873, G__16874, G__16875, G__16876, G__16877, G__16878, G__16879, G__16880, G__16881, G__16882, G__16883, G__16884, G__16885, G__16886);
  };
  var G__17246__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16887 = a;
    var G__16888 = b;
    var G__16889 = c;
    var G__16890 = d;
    var G__16891 = e;
    var G__16892 = f;
    var G__16893 = g;
    var G__16894 = h;
    var G__16895 = i;
    var G__16896 = j;
    var G__16897 = k;
    var G__16898 = l;
    var G__16899 = m;
    var G__16900 = n;
    var G__16901 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__16887, G__16888, G__16889, G__16890, G__16891, G__16892, G__16893, G__16894, G__16895, G__16896, G__16897, G__16898, G__16899, G__16900, G__16901) : self__.afn.call(null, G__16887, G__16888, G__16889, G__16890, G__16891, G__16892, G__16893, G__16894, G__16895, G__16896, G__16897, G__16898, G__16899, G__16900, G__16901);
  };
  var G__17246__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16902 = a;
    var G__16903 = b;
    var G__16904 = c;
    var G__16905 = d;
    var G__16906 = e;
    var G__16907 = f;
    var G__16908 = g;
    var G__16909 = h;
    var G__16910 = i;
    var G__16911 = j;
    var G__16912 = k;
    var G__16913 = l;
    var G__16914 = m;
    var G__16915 = n;
    var G__16916 = o;
    var G__16917 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__16902, G__16903, G__16904, G__16905, G__16906, G__16907, G__16908, G__16909, G__16910, G__16911, G__16912, G__16913, G__16914, G__16915, G__16916, G__16917) : self__.afn.call(null, G__16902, G__16903, G__16904, G__16905, G__16906, G__16907, G__16908, G__16909, G__16910, G__16911, G__16912, G__16913, G__16914, G__16915, G__16916, G__16917);
  };
  var G__17246__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16918 = a;
    var G__16919 = b;
    var G__16920 = c;
    var G__16921 = d;
    var G__16922 = e;
    var G__16923 = f;
    var G__16924 = g;
    var G__16925 = h;
    var G__16926 = i;
    var G__16927 = j;
    var G__16928 = k;
    var G__16929 = l;
    var G__16930 = m;
    var G__16931 = n;
    var G__16932 = o;
    var G__16933 = p;
    var G__16934 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__16918, G__16919, G__16920, G__16921, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927, G__16928, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934) : self__.afn.call(null, G__16918, G__16919, G__16920, G__16921, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927, G__16928, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934);
  };
  var G__17246__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16935 = a;
    var G__16936 = b;
    var G__16937 = c;
    var G__16938 = d;
    var G__16939 = e;
    var G__16940 = f;
    var G__16941 = g;
    var G__16942 = h;
    var G__16943 = i;
    var G__16944 = j;
    var G__16945 = k;
    var G__16946 = l;
    var G__16947 = m;
    var G__16948 = n;
    var G__16949 = o;
    var G__16950 = p;
    var G__16951 = q;
    var G__16952 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__16935, G__16936, G__16937, G__16938, G__16939, G__16940, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949, G__16950, G__16951, G__16952) : self__.afn.call(null, G__16935, G__16936, G__16937, G__16938, G__16939, G__16940, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949, G__16950, G__16951, G__16952);
  };
  var G__17246__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16953 = a;
    var G__16954 = b;
    var G__16955 = c;
    var G__16956 = d;
    var G__16957 = e;
    var G__16958 = f;
    var G__16959 = g;
    var G__16960 = h;
    var G__16961 = i;
    var G__16962 = j;
    var G__16963 = k;
    var G__16964 = l;
    var G__16965 = m;
    var G__16966 = n;
    var G__16967 = o;
    var G__16968 = p;
    var G__16969 = q;
    var G__16970 = r;
    var G__16971 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__16953, G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960, G__16961, G__16962, G__16963, G__16964, G__16965, G__16966, G__16967, G__16968, G__16969, G__16970, G__16971) : self__.afn.call(null, G__16953, G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960, G__16961, G__16962, G__16963, G__16964, G__16965, G__16966, G__16967, G__16968, G__16969, G__16970, G__16971);
  };
  var G__17246__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16972 = a;
    var G__16973 = b;
    var G__16974 = c;
    var G__16975 = d;
    var G__16976 = e;
    var G__16977 = f;
    var G__16978 = g;
    var G__16979 = h;
    var G__16980 = i;
    var G__16981 = j;
    var G__16982 = k;
    var G__16983 = l;
    var G__16984 = m;
    var G__16985 = n;
    var G__16986 = o;
    var G__16987 = p;
    var G__16988 = q;
    var G__16989 = r;
    var G__16990 = s;
    var G__16991 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__16972, G__16973, G__16974, G__16975, G__16976, G__16977, G__16978, G__16979, G__16980, G__16981, G__16982, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, G__16989, G__16990, G__16991) : self__.afn.call(null, G__16972, G__16973, G__16974, G__16975, G__16976, G__16977, G__16978, G__16979, G__16980, G__16981, G__16982, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, G__16989, 
    G__16990, G__16991);
  };
  var G__17246__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16992 = self__.afn;
    var G__16993 = a;
    var G__16994 = b;
    var G__16995 = c;
    var G__16996 = d;
    var G__16997 = e;
    var G__16998 = f;
    var G__16999 = g;
    var G__17000 = h;
    var G__17001 = i;
    var G__17002 = j;
    var G__17003 = k;
    var G__17004 = l;
    var G__17005 = m;
    var G__17006 = n;
    var G__17007 = o;
    var G__17008 = p;
    var G__17009 = q;
    var G__17010 = r;
    var G__17011 = s;
    var G__17012 = t;
    var G__17013 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__16992, G__16993, G__16994, G__16995, G__16996, G__16997, G__16998, G__16999, G__17000, G__17001, G__17002, G__17003, G__17004, G__17005, G__17006, G__17007, G__17008, G__17009, G__17010, G__17011, G__17012, G__17013) : cljs.core.apply.call(null, G__16992, G__16993, G__16994, G__16995, G__16996, G__16997, G__16998, G__16999, G__17000, G__17001, G__17002, G__17003, G__17004, G__17005, G__17006, 
    G__17007, G__17008, G__17009, G__17010, G__17011, G__17012, G__17013);
  };
  G__17246 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__17246__1.call(this, self__);
      case 2:
        return G__17246__2.call(this, self__, a);
      case 3:
        return G__17246__3.call(this, self__, a, b);
      case 4:
        return G__17246__4.call(this, self__, a, b, c);
      case 5:
        return G__17246__5.call(this, self__, a, b, c, d);
      case 6:
        return G__17246__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__17246__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__17246__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__17246__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__17246__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__17246__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__17246__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__17246__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__17246__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__17246__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__17246__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__17246__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__17246__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__17246__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__17246__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__17246__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__17246__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17246.cljs$core$IFn$_invoke$arity$1 = G__17246__1;
  G__17246.cljs$core$IFn$_invoke$arity$2 = G__17246__2;
  G__17246.cljs$core$IFn$_invoke$arity$3 = G__17246__3;
  G__17246.cljs$core$IFn$_invoke$arity$4 = G__17246__4;
  G__17246.cljs$core$IFn$_invoke$arity$5 = G__17246__5;
  G__17246.cljs$core$IFn$_invoke$arity$6 = G__17246__6;
  G__17246.cljs$core$IFn$_invoke$arity$7 = G__17246__7;
  G__17246.cljs$core$IFn$_invoke$arity$8 = G__17246__8;
  G__17246.cljs$core$IFn$_invoke$arity$9 = G__17246__9;
  G__17246.cljs$core$IFn$_invoke$arity$10 = G__17246__10;
  G__17246.cljs$core$IFn$_invoke$arity$11 = G__17246__11;
  G__17246.cljs$core$IFn$_invoke$arity$12 = G__17246__12;
  G__17246.cljs$core$IFn$_invoke$arity$13 = G__17246__13;
  G__17246.cljs$core$IFn$_invoke$arity$14 = G__17246__14;
  G__17246.cljs$core$IFn$_invoke$arity$15 = G__17246__15;
  G__17246.cljs$core$IFn$_invoke$arity$16 = G__17246__16;
  G__17246.cljs$core$IFn$_invoke$arity$17 = G__17246__17;
  G__17246.cljs$core$IFn$_invoke$arity$18 = G__17246__18;
  G__17246.cljs$core$IFn$_invoke$arity$19 = G__17246__19;
  G__17246.cljs$core$IFn$_invoke$arity$20 = G__17246__20;
  G__17246.cljs$core$IFn$_invoke$arity$21 = G__17246__21;
  G__17246.cljs$core$IFn$_invoke$arity$22 = G__17246__22;
  return G__17246;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args16781) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16781)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__17014 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__17014) : self__.afn.call(null, G__17014);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__17015 = a;
  var G__17016 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__17015, G__17016) : self__.afn.call(null, G__17015, G__17016);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__17017 = a;
  var G__17018 = b;
  var G__17019 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__17017, G__17018, G__17019) : self__.afn.call(null, G__17017, G__17018, G__17019);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__17020 = a;
  var G__17021 = b;
  var G__17022 = c;
  var G__17023 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__17020, G__17021, G__17022, G__17023) : self__.afn.call(null, G__17020, G__17021, G__17022, G__17023);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__17024 = a;
  var G__17025 = b;
  var G__17026 = c;
  var G__17027 = d;
  var G__17028 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__17024, G__17025, G__17026, G__17027, G__17028) : self__.afn.call(null, G__17024, G__17025, G__17026, G__17027, G__17028);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__17029 = a;
  var G__17030 = b;
  var G__17031 = c;
  var G__17032 = d;
  var G__17033 = e;
  var G__17034 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__17029, G__17030, G__17031, G__17032, G__17033, G__17034) : self__.afn.call(null, G__17029, G__17030, G__17031, G__17032, G__17033, G__17034);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__17035 = a;
  var G__17036 = b;
  var G__17037 = c;
  var G__17038 = d;
  var G__17039 = e;
  var G__17040 = f;
  var G__17041 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__17035, G__17036, G__17037, G__17038, G__17039, G__17040, G__17041) : self__.afn.call(null, G__17035, G__17036, G__17037, G__17038, G__17039, G__17040, G__17041);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__17042 = a;
  var G__17043 = b;
  var G__17044 = c;
  var G__17045 = d;
  var G__17046 = e;
  var G__17047 = f;
  var G__17048 = g;
  var G__17049 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__17042, G__17043, G__17044, G__17045, G__17046, G__17047, G__17048, G__17049) : self__.afn.call(null, G__17042, G__17043, G__17044, G__17045, G__17046, G__17047, G__17048, G__17049);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__17050 = a;
  var G__17051 = b;
  var G__17052 = c;
  var G__17053 = d;
  var G__17054 = e;
  var G__17055 = f;
  var G__17056 = g;
  var G__17057 = h;
  var G__17058 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__17050, G__17051, G__17052, G__17053, G__17054, G__17055, G__17056, G__17057, G__17058) : self__.afn.call(null, G__17050, G__17051, G__17052, G__17053, G__17054, G__17055, G__17056, G__17057, G__17058);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__17059 = a;
  var G__17060 = b;
  var G__17061 = c;
  var G__17062 = d;
  var G__17063 = e;
  var G__17064 = f;
  var G__17065 = g;
  var G__17066 = h;
  var G__17067 = i;
  var G__17068 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__17059, G__17060, G__17061, G__17062, G__17063, G__17064, G__17065, G__17066, G__17067, G__17068) : self__.afn.call(null, G__17059, G__17060, G__17061, G__17062, G__17063, G__17064, G__17065, G__17066, G__17067, G__17068);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__17069 = a;
  var G__17070 = b;
  var G__17071 = c;
  var G__17072 = d;
  var G__17073 = e;
  var G__17074 = f;
  var G__17075 = g;
  var G__17076 = h;
  var G__17077 = i;
  var G__17078 = j;
  var G__17079 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__17069, G__17070, G__17071, G__17072, G__17073, G__17074, G__17075, G__17076, G__17077, G__17078, G__17079) : self__.afn.call(null, G__17069, G__17070, G__17071, G__17072, G__17073, G__17074, G__17075, G__17076, G__17077, G__17078, G__17079);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__17080 = a;
  var G__17081 = b;
  var G__17082 = c;
  var G__17083 = d;
  var G__17084 = e;
  var G__17085 = f;
  var G__17086 = g;
  var G__17087 = h;
  var G__17088 = i;
  var G__17089 = j;
  var G__17090 = k;
  var G__17091 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__17080, G__17081, G__17082, G__17083, G__17084, G__17085, G__17086, G__17087, G__17088, G__17089, G__17090, G__17091) : self__.afn.call(null, G__17080, G__17081, G__17082, G__17083, G__17084, G__17085, G__17086, G__17087, G__17088, G__17089, G__17090, G__17091);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__17092 = a;
  var G__17093 = b;
  var G__17094 = c;
  var G__17095 = d;
  var G__17096 = e;
  var G__17097 = f;
  var G__17098 = g;
  var G__17099 = h;
  var G__17100 = i;
  var G__17101 = j;
  var G__17102 = k;
  var G__17103 = l;
  var G__17104 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__17092, G__17093, G__17094, G__17095, G__17096, G__17097, G__17098, G__17099, G__17100, G__17101, G__17102, G__17103, G__17104) : self__.afn.call(null, G__17092, G__17093, G__17094, G__17095, G__17096, G__17097, G__17098, G__17099, G__17100, G__17101, G__17102, G__17103, G__17104);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__17105 = a;
  var G__17106 = b;
  var G__17107 = c;
  var G__17108 = d;
  var G__17109 = e;
  var G__17110 = f;
  var G__17111 = g;
  var G__17112 = h;
  var G__17113 = i;
  var G__17114 = j;
  var G__17115 = k;
  var G__17116 = l;
  var G__17117 = m;
  var G__17118 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__17105, G__17106, G__17107, G__17108, G__17109, G__17110, G__17111, G__17112, G__17113, G__17114, G__17115, G__17116, G__17117, G__17118) : self__.afn.call(null, G__17105, G__17106, G__17107, G__17108, G__17109, G__17110, G__17111, G__17112, G__17113, G__17114, G__17115, G__17116, G__17117, G__17118);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__17119 = a;
  var G__17120 = b;
  var G__17121 = c;
  var G__17122 = d;
  var G__17123 = e;
  var G__17124 = f;
  var G__17125 = g;
  var G__17126 = h;
  var G__17127 = i;
  var G__17128 = j;
  var G__17129 = k;
  var G__17130 = l;
  var G__17131 = m;
  var G__17132 = n;
  var G__17133 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__17119, G__17120, G__17121, G__17122, G__17123, G__17124, G__17125, G__17126, G__17127, G__17128, G__17129, G__17130, G__17131, G__17132, G__17133) : self__.afn.call(null, G__17119, G__17120, G__17121, G__17122, G__17123, G__17124, G__17125, G__17126, G__17127, G__17128, G__17129, G__17130, G__17131, G__17132, G__17133);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__17134 = a;
  var G__17135 = b;
  var G__17136 = c;
  var G__17137 = d;
  var G__17138 = e;
  var G__17139 = f;
  var G__17140 = g;
  var G__17141 = h;
  var G__17142 = i;
  var G__17143 = j;
  var G__17144 = k;
  var G__17145 = l;
  var G__17146 = m;
  var G__17147 = n;
  var G__17148 = o;
  var G__17149 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__17134, G__17135, G__17136, G__17137, G__17138, G__17139, G__17140, G__17141, G__17142, G__17143, G__17144, G__17145, G__17146, G__17147, G__17148, G__17149) : self__.afn.call(null, G__17134, G__17135, G__17136, G__17137, G__17138, G__17139, G__17140, G__17141, G__17142, G__17143, G__17144, G__17145, G__17146, G__17147, G__17148, G__17149);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__17150 = a;
  var G__17151 = b;
  var G__17152 = c;
  var G__17153 = d;
  var G__17154 = e;
  var G__17155 = f;
  var G__17156 = g;
  var G__17157 = h;
  var G__17158 = i;
  var G__17159 = j;
  var G__17160 = k;
  var G__17161 = l;
  var G__17162 = m;
  var G__17163 = n;
  var G__17164 = o;
  var G__17165 = p;
  var G__17166 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__17150, G__17151, G__17152, G__17153, G__17154, G__17155, G__17156, G__17157, G__17158, G__17159, G__17160, G__17161, G__17162, G__17163, G__17164, G__17165, G__17166) : self__.afn.call(null, G__17150, G__17151, G__17152, G__17153, G__17154, G__17155, G__17156, G__17157, G__17158, G__17159, G__17160, G__17161, G__17162, G__17163, G__17164, G__17165, G__17166);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__17167 = a;
  var G__17168 = b;
  var G__17169 = c;
  var G__17170 = d;
  var G__17171 = e;
  var G__17172 = f;
  var G__17173 = g;
  var G__17174 = h;
  var G__17175 = i;
  var G__17176 = j;
  var G__17177 = k;
  var G__17178 = l;
  var G__17179 = m;
  var G__17180 = n;
  var G__17181 = o;
  var G__17182 = p;
  var G__17183 = q;
  var G__17184 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__17167, G__17168, G__17169, G__17170, G__17171, G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178, G__17179, G__17180, G__17181, G__17182, G__17183, G__17184) : self__.afn.call(null, G__17167, G__17168, G__17169, G__17170, G__17171, G__17172, G__17173, G__17174, G__17175, G__17176, G__17177, G__17178, G__17179, G__17180, G__17181, G__17182, G__17183, G__17184);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__17185 = a;
  var G__17186 = b;
  var G__17187 = c;
  var G__17188 = d;
  var G__17189 = e;
  var G__17190 = f;
  var G__17191 = g;
  var G__17192 = h;
  var G__17193 = i;
  var G__17194 = j;
  var G__17195 = k;
  var G__17196 = l;
  var G__17197 = m;
  var G__17198 = n;
  var G__17199 = o;
  var G__17200 = p;
  var G__17201 = q;
  var G__17202 = r;
  var G__17203 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__17185, G__17186, G__17187, G__17188, G__17189, G__17190, G__17191, G__17192, G__17193, G__17194, G__17195, G__17196, G__17197, G__17198, G__17199, G__17200, G__17201, G__17202, G__17203) : self__.afn.call(null, G__17185, G__17186, G__17187, G__17188, G__17189, G__17190, G__17191, G__17192, G__17193, G__17194, G__17195, G__17196, G__17197, G__17198, G__17199, G__17200, G__17201, G__17202, G__17203);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__17204 = a;
  var G__17205 = b;
  var G__17206 = c;
  var G__17207 = d;
  var G__17208 = e;
  var G__17209 = f;
  var G__17210 = g;
  var G__17211 = h;
  var G__17212 = i;
  var G__17213 = j;
  var G__17214 = k;
  var G__17215 = l;
  var G__17216 = m;
  var G__17217 = n;
  var G__17218 = o;
  var G__17219 = p;
  var G__17220 = q;
  var G__17221 = r;
  var G__17222 = s;
  var G__17223 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__17204, G__17205, G__17206, G__17207, G__17208, G__17209, G__17210, G__17211, G__17212, G__17213, G__17214, G__17215, G__17216, G__17217, G__17218, G__17219, G__17220, G__17221, G__17222, G__17223) : self__.afn.call(null, G__17204, G__17205, G__17206, G__17207, G__17208, G__17209, G__17210, G__17211, G__17212, G__17213, G__17214, G__17215, G__17216, G__17217, G__17218, G__17219, G__17220, G__17221, G__17222, 
  G__17223);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__17224 = self__.afn;
  var G__17225 = a;
  var G__17226 = b;
  var G__17227 = c;
  var G__17228 = d;
  var G__17229 = e;
  var G__17230 = f;
  var G__17231 = g;
  var G__17232 = h;
  var G__17233 = i;
  var G__17234 = j;
  var G__17235 = k;
  var G__17236 = l;
  var G__17237 = m;
  var G__17238 = n;
  var G__17239 = o;
  var G__17240 = p;
  var G__17241 = q;
  var G__17242 = r;
  var G__17243 = s;
  var G__17244 = t;
  var G__17245 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__17224, G__17225, G__17226, G__17227, G__17228, G__17229, G__17230, G__17231, G__17232, G__17233, G__17234, G__17235, G__17236, G__17237, G__17238, G__17239, G__17240, G__17241, G__17242, G__17243, G__17244, G__17245) : cljs.core.apply.call(null, G__17224, G__17225, G__17226, G__17227, G__17228, G__17229, G__17230, G__17231, G__17232, G__17233, G__17234, G__17235, G__17236, G__17237, G__17238, 
  G__17239, G__17240, G__17241, G__17242, G__17243, G__17244, G__17245);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__17250 = o;
    if (G__17250) {
      var bit__4606__auto__ = G__17250.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4606__auto__ || G__17250.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__17250.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__17250);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__17250);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3913__auto__ = !(o == null);
    if (and__3913__auto__) {
      var G__17254 = o;
      if (G__17254) {
        var bit__4606__auto__ = G__17254.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4606__auto__ || G__17254.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__17254.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__17254);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__17254);
      }
    } else {
      return and__3913__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__17257__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__17258 = ret;
            var G__17259 = cljs.core.first(ks);
            var G__17260 = cljs.core.next(ks);
            coll = G__17258;
            k = G__17259;
            ks = G__17260;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__17257 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__17261__i = 0, G__17261__a = new Array(arguments.length - 2);
        while (G__17261__i < G__17261__a.length) {
          G__17261__a[G__17261__i] = arguments[G__17261__i + 2];
          ++G__17261__i;
        }
        ks = new cljs.core.IndexedSeq(G__17261__a, 0);
      }
      return G__17257__delegate.call(this, coll, k, ks);
    };
    G__17257.cljs$lang$maxFixedArity = 2;
    G__17257.cljs$lang$applyTo = function(arglist__17262) {
      var coll = cljs.core.first(arglist__17262);
      arglist__17262 = cljs.core.next(arglist__17262);
      var k = cljs.core.first(arglist__17262);
      var ks = cljs.core.rest(arglist__17262);
      return G__17257__delegate(coll, k, ks);
    };
    G__17257.cljs$core$IFn$_invoke$arity$variadic = G__17257__delegate;
    return G__17257;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__17263 = null;
        if (arguments.length > 2) {
          var G__17264__i = 0, G__17264__a = new Array(arguments.length - 2);
          while (G__17264__i < G__17264__a.length) {
            G__17264__a[G__17264__i] = arguments[G__17264__i + 2];
            ++G__17264__i;
          }
          G__17263 = new cljs.core.IndexedSeq(G__17264__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__17263);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17266 = x;
    if (G__17266) {
      var bit__4606__auto__ = G__17266.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4606__auto__ || G__17266.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__17266.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__17266);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__17266);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17268 = x;
    if (G__17268) {
      var bit__4606__auto__ = G__17268.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4606__auto__ || G__17268.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__17268.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__17268);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__17268);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__17270 = x;
  if (G__17270) {
    var bit__4606__auto__ = G__17270.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4606__auto__ || G__17270.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__17270.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__17270);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__17270);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__17272 = x;
  if (G__17272) {
    var bit__4606__auto__ = G__17272.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4606__auto__ || G__17272.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__17272.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__17272);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__17272);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__17274 = x;
  if (G__17274) {
    var bit__4606__auto__ = G__17274.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4606__auto__ || G__17274.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__17274.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__17274);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__17274);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__17276 = x;
  if (G__17276) {
    var bit__4606__auto__ = G__17276.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4606__auto__ || G__17276.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__17276.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__17276);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__17276);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17278 = x;
    if (G__17278) {
      var bit__4606__auto__ = G__17278.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4606__auto__ || G__17278.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__17278.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__17278);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__17278);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__17280 = x;
  if (G__17280) {
    var bit__4606__auto__ = G__17280.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4606__auto__ || G__17280.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__17280.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__17280);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__17280);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__17282 = x;
  if (G__17282) {
    var bit__4599__auto__ = G__17282.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4599__auto__ || G__17282.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj17288 = {};
    return obj17288;
  };
  var js_obj__1 = function() {
    var G__17291__delegate = function(keyvals) {
      var G__17289 = goog.object.create;
      var G__17290 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__17289, G__17290) : cljs.core.apply.call(null, G__17289, G__17290);
    };
    var G__17291 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__17292__i = 0, G__17292__a = new Array(arguments.length - 0);
        while (G__17292__i < G__17292__a.length) {
          G__17292__a[G__17292__i] = arguments[G__17292__i + 0];
          ++G__17292__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__17292__a, 0);
      }
      return G__17291__delegate.call(this, keyvals);
    };
    G__17291.cljs$lang$maxFixedArity = 0;
    G__17291.cljs$lang$applyTo = function(arglist__17293) {
      var keyvals = cljs.core.seq(arglist__17293);
      return G__17291__delegate(keyvals);
    };
    G__17291.cljs$core$IFn$_invoke$arity$variadic = G__17291__delegate;
    return G__17291;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__17294 = null;
        if (arguments.length > 0) {
          var G__17295__i = 0, G__17295__a = new Array(arguments.length - 0);
          while (G__17295__i < G__17295__a.length) {
            G__17295__a[G__17295__i] = arguments[G__17295__i + 0];
            ++G__17295__i;
          }
          G__17294 = new cljs.core.IndexedSeq(G__17295__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__17294);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__17298_17300 = obj;
  var G__17299_17301 = function(G__17298_17300, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__17298_17300, keys);
  goog.object.forEach(G__17298_17300, G__17299_17301);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__17302 = i__$1 + 1;
      var G__17303 = j__$1 + 1;
      var G__17304 = len__$1 - 1;
      i__$1 = G__17302;
      j__$1 = G__17303;
      len__$1 = G__17304;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__17305 = i__$1 - 1;
      var G__17306 = j__$1 - 1;
      var G__17307 = len__$1 - 1;
      i__$1 = G__17305;
      j__$1 = G__17306;
      len__$1 = G__17307;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj17309 = {};
  return obj17309;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__17311 = s;
    if (G__17311) {
      var bit__4606__auto__ = G__17311.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4606__auto__ || G__17311.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__17311.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17311);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17311);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__17313 = s;
  if (G__17313) {
    var bit__4606__auto__ = G__17313.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4606__auto__ || G__17313.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__17313.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__17313);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__17313);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3925__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3925__auto__) {
    return or__3925__auto__;
  } else {
    var G__17317 = f;
    if (G__17317) {
      var bit__4606__auto__ = G__17317.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4606__auto__ || G__17317.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__17317.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__17317);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__17317);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__17330 = n;
    return isNaN(G__17330);
  }()) && !(n === Infinity) && function() {
    var G__17331 = n;
    return parseFloat(G__17331);
  }() === function() {
    var G__17332 = n;
    var G__17333 = 10;
    return parseInt(G__17332, G__17333);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__17334__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__17335 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__17336 = etc;
              s = G__17335;
              xs = G__17336;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__17334 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17337__i = 0, G__17337__a = new Array(arguments.length - 2);
        while (G__17337__i < G__17337__a.length) {
          G__17337__a[G__17337__i] = arguments[G__17337__i + 2];
          ++G__17337__i;
        }
        more = new cljs.core.IndexedSeq(G__17337__a, 0);
      }
      return G__17334__delegate.call(this, x, y, more);
    };
    G__17334.cljs$lang$maxFixedArity = 2;
    G__17334.cljs$lang$applyTo = function(arglist__17338) {
      var x = cljs.core.first(arglist__17338);
      arglist__17338 = cljs.core.next(arglist__17338);
      var y = cljs.core.first(arglist__17338);
      var more = cljs.core.rest(arglist__17338);
      return G__17334__delegate(x, y, more);
    };
    G__17334.cljs$core$IFn$_invoke$arity$variadic = G__17334__delegate;
    return G__17334;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__17339 = null;
        if (arguments.length > 2) {
          var G__17340__i = 0, G__17340__a = new Array(arguments.length - 2);
          while (G__17340__i < G__17340__a.length) {
            G__17340__a[G__17340__i] = arguments[G__17340__i + 2];
            ++G__17340__i;
          }
          G__17339 = new cljs.core.IndexedSeq(G__17340__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17339);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__17344 = x;
            if (G__17344) {
              var bit__4599__auto__ = G__17344.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4599__auto__ || G__17344.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__17345 = x;
            var G__17346 = y;
            return goog.array.defaultCompare(G__17345, G__17346);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__17351 = xs;
        var G__17352 = ys;
        var G__17353 = len;
        var G__17354 = n + 1;
        xs = G__17351;
        ys = G__17352;
        len = G__17353;
        n = G__17354;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__17359 = x;
        var G__17360 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17359, G__17360) : f.call(null, G__17359, G__17360);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__17361 = y;
            var G__17362 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17361, G__17362) : f.call(null, G__17361, G__17362);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__17368 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__17368) : cljs.core.to_array.call(null, G__17368);
      }();
      var G__17369_17371 = a;
      var G__17370_17372 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__17369_17371, G__17370_17372);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__17378 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17378) : keyfn.call(null, G__17378);
      }(), function() {
        var G__17379 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17379) : keyfn.call(null, G__17379);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__17385 = f;
      var G__17386 = cljs.core.first(s);
      var G__17387 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__17385, G__17386, G__17387) : cljs.core.reduce.call(null, G__17385, G__17386, G__17387);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__17388 = val__$1;
          var G__17389 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17388, G__17389) : f.call(null, G__17388, G__17389);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__17390 = nval;
          var G__17391 = cljs.core.next(coll__$1);
          val__$1 = G__17390;
          coll__$1 = G__17391;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__17395 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__17395) : cljs.core.to_array.call(null, G__17395);
  }();
  var G__17396_17398 = a;
  goog.array.shuffle(G__17396_17398);
  var G__17397 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__17397) : cljs.core.vec.call(null, G__17397);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__17401 = coll;
      if (G__17401) {
        var bit__4599__auto__ = G__17401.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4599__auto__ || G__17401.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__17402 = coll;
      if (G__17402) {
        var bit__4599__auto__ = G__17402.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4599__auto__ || G__17402.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__17411 = null;
      var G__17411__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__17411__1 = function(x) {
        var G__17408 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__17408) : cf.call(null, G__17408);
      };
      var G__17411__2 = function(x, y) {
        var G__17409 = x;
        var G__17410 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17409, G__17410) : f.call(null, G__17409, G__17410);
      };
      G__17411 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__17411__0.call(this);
          case 1:
            return G__17411__1.call(this, x);
          case 2:
            return G__17411__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17411.cljs$core$IFn$_invoke$arity$0 = G__17411__0;
      G__17411.cljs$core$IFn$_invoke$arity$1 = G__17411__1;
      G__17411.cljs$core$IFn$_invoke$arity$2 = G__17411__2;
      return G__17411;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__17418 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__17418) : xform.call(null, G__17418);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__17419 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__17419) : f__$1.call(null, G__17419);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__17420__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__17420 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17421__i = 0, G__17421__a = new Array(arguments.length - 2);
        while (G__17421__i < G__17421__a.length) {
          G__17421__a[G__17421__i] = arguments[G__17421__i + 2];
          ++G__17421__i;
        }
        more = new cljs.core.IndexedSeq(G__17421__a, 0);
      }
      return G__17420__delegate.call(this, x, y, more);
    };
    G__17420.cljs$lang$maxFixedArity = 2;
    G__17420.cljs$lang$applyTo = function(arglist__17422) {
      var x = cljs.core.first(arglist__17422);
      arglist__17422 = cljs.core.next(arglist__17422);
      var y = cljs.core.first(arglist__17422);
      var more = cljs.core.rest(arglist__17422);
      return G__17420__delegate(x, y, more);
    };
    G__17420.cljs$core$IFn$_invoke$arity$variadic = G__17420__delegate;
    return G__17420;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__17423 = null;
        if (arguments.length > 2) {
          var G__17424__i = 0, G__17424__a = new Array(arguments.length - 2);
          while (G__17424__i < G__17424__a.length) {
            G__17424__a[G__17424__i] = arguments[G__17424__i + 2];
            ++G__17424__i;
          }
          G__17423 = new cljs.core.IndexedSeq(G__17424__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17423);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__17425__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__17425 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17426__i = 0, G__17426__a = new Array(arguments.length - 2);
        while (G__17426__i < G__17426__a.length) {
          G__17426__a[G__17426__i] = arguments[G__17426__i + 2];
          ++G__17426__i;
        }
        more = new cljs.core.IndexedSeq(G__17426__a, 0);
      }
      return G__17425__delegate.call(this, x, y, more);
    };
    G__17425.cljs$lang$maxFixedArity = 2;
    G__17425.cljs$lang$applyTo = function(arglist__17427) {
      var x = cljs.core.first(arglist__17427);
      arglist__17427 = cljs.core.next(arglist__17427);
      var y = cljs.core.first(arglist__17427);
      var more = cljs.core.rest(arglist__17427);
      return G__17425__delegate(x, y, more);
    };
    G__17425.cljs$core$IFn$_invoke$arity$variadic = G__17425__delegate;
    return G__17425;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__17428 = null;
        if (arguments.length > 2) {
          var G__17429__i = 0, G__17429__a = new Array(arguments.length - 2);
          while (G__17429__i < G__17429__a.length) {
            G__17429__a[G__17429__i] = arguments[G__17429__i + 2];
            ++G__17429__i;
          }
          G__17428 = new cljs.core.IndexedSeq(G__17429__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17428);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__17430__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__17430 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17431__i = 0, G__17431__a = new Array(arguments.length - 2);
        while (G__17431__i < G__17431__a.length) {
          G__17431__a[G__17431__i] = arguments[G__17431__i + 2];
          ++G__17431__i;
        }
        more = new cljs.core.IndexedSeq(G__17431__a, 0);
      }
      return G__17430__delegate.call(this, x, y, more);
    };
    G__17430.cljs$lang$maxFixedArity = 2;
    G__17430.cljs$lang$applyTo = function(arglist__17432) {
      var x = cljs.core.first(arglist__17432);
      arglist__17432 = cljs.core.next(arglist__17432);
      var y = cljs.core.first(arglist__17432);
      var more = cljs.core.rest(arglist__17432);
      return G__17430__delegate(x, y, more);
    };
    G__17430.cljs$core$IFn$_invoke$arity$variadic = G__17430__delegate;
    return G__17430;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__17433 = null;
        if (arguments.length > 2) {
          var G__17434__i = 0, G__17434__a = new Array(arguments.length - 2);
          while (G__17434__i < G__17434__a.length) {
            G__17434__a[G__17434__i] = arguments[G__17434__i + 2];
            ++G__17434__i;
          }
          G__17433 = new cljs.core.IndexedSeq(G__17434__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17433);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__17439__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__17439 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17440__i = 0, G__17440__a = new Array(arguments.length - 2);
        while (G__17440__i < G__17440__a.length) {
          G__17440__a[G__17440__i] = arguments[G__17440__i + 2];
          ++G__17440__i;
        }
        more = new cljs.core.IndexedSeq(G__17440__a, 0);
      }
      return G__17439__delegate.call(this, x, y, more);
    };
    G__17439.cljs$lang$maxFixedArity = 2;
    G__17439.cljs$lang$applyTo = function(arglist__17441) {
      var x = cljs.core.first(arglist__17441);
      arglist__17441 = cljs.core.next(arglist__17441);
      var y = cljs.core.first(arglist__17441);
      var more = cljs.core.rest(arglist__17441);
      return G__17439__delegate(x, y, more);
    };
    G__17439.cljs$core$IFn$_invoke$arity$variadic = G__17439__delegate;
    return G__17439;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__17442 = null;
        if (arguments.length > 2) {
          var G__17443__i = 0, G__17443__a = new Array(arguments.length - 2);
          while (G__17443__i < G__17443__a.length) {
            G__17443__a[G__17443__i] = arguments[G__17443__i + 2];
            ++G__17443__i;
          }
          G__17442 = new cljs.core.IndexedSeq(G__17443__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17442);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__17444__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__17445 = y;
            var G__17446 = cljs.core.first(more);
            var G__17447 = cljs.core.next(more);
            x = G__17445;
            y = G__17446;
            more = G__17447;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17444 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17448__i = 0, G__17448__a = new Array(arguments.length - 2);
        while (G__17448__i < G__17448__a.length) {
          G__17448__a[G__17448__i] = arguments[G__17448__i + 2];
          ++G__17448__i;
        }
        more = new cljs.core.IndexedSeq(G__17448__a, 0);
      }
      return G__17444__delegate.call(this, x, y, more);
    };
    G__17444.cljs$lang$maxFixedArity = 2;
    G__17444.cljs$lang$applyTo = function(arglist__17449) {
      var x = cljs.core.first(arglist__17449);
      arglist__17449 = cljs.core.next(arglist__17449);
      var y = cljs.core.first(arglist__17449);
      var more = cljs.core.rest(arglist__17449);
      return G__17444__delegate(x, y, more);
    };
    G__17444.cljs$core$IFn$_invoke$arity$variadic = G__17444__delegate;
    return G__17444;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__17450 = null;
        if (arguments.length > 2) {
          var G__17451__i = 0, G__17451__a = new Array(arguments.length - 2);
          while (G__17451__i < G__17451__a.length) {
            G__17451__a[G__17451__i] = arguments[G__17451__i + 2];
            ++G__17451__i;
          }
          G__17450 = new cljs.core.IndexedSeq(G__17451__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17450);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__17452__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__17453 = y;
            var G__17454 = cljs.core.first(more);
            var G__17455 = cljs.core.next(more);
            x = G__17453;
            y = G__17454;
            more = G__17455;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17452 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17456__i = 0, G__17456__a = new Array(arguments.length - 2);
        while (G__17456__i < G__17456__a.length) {
          G__17456__a[G__17456__i] = arguments[G__17456__i + 2];
          ++G__17456__i;
        }
        more = new cljs.core.IndexedSeq(G__17456__a, 0);
      }
      return G__17452__delegate.call(this, x, y, more);
    };
    G__17452.cljs$lang$maxFixedArity = 2;
    G__17452.cljs$lang$applyTo = function(arglist__17457) {
      var x = cljs.core.first(arglist__17457);
      arglist__17457 = cljs.core.next(arglist__17457);
      var y = cljs.core.first(arglist__17457);
      var more = cljs.core.rest(arglist__17457);
      return G__17452__delegate(x, y, more);
    };
    G__17452.cljs$core$IFn$_invoke$arity$variadic = G__17452__delegate;
    return G__17452;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__17458 = null;
        if (arguments.length > 2) {
          var G__17459__i = 0, G__17459__a = new Array(arguments.length - 2);
          while (G__17459__i < G__17459__a.length) {
            G__17459__a[G__17459__i] = arguments[G__17459__i + 2];
            ++G__17459__i;
          }
          G__17458 = new cljs.core.IndexedSeq(G__17459__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17458);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__17460__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__17461 = y;
            var G__17462 = cljs.core.first(more);
            var G__17463 = cljs.core.next(more);
            x = G__17461;
            y = G__17462;
            more = G__17463;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17460 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17464__i = 0, G__17464__a = new Array(arguments.length - 2);
        while (G__17464__i < G__17464__a.length) {
          G__17464__a[G__17464__i] = arguments[G__17464__i + 2];
          ++G__17464__i;
        }
        more = new cljs.core.IndexedSeq(G__17464__a, 0);
      }
      return G__17460__delegate.call(this, x, y, more);
    };
    G__17460.cljs$lang$maxFixedArity = 2;
    G__17460.cljs$lang$applyTo = function(arglist__17465) {
      var x = cljs.core.first(arglist__17465);
      arglist__17465 = cljs.core.next(arglist__17465);
      var y = cljs.core.first(arglist__17465);
      var more = cljs.core.rest(arglist__17465);
      return G__17460__delegate(x, y, more);
    };
    G__17460.cljs$core$IFn$_invoke$arity$variadic = G__17460__delegate;
    return G__17460;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__17466 = null;
        if (arguments.length > 2) {
          var G__17467__i = 0, G__17467__a = new Array(arguments.length - 2);
          while (G__17467__i < G__17467__a.length) {
            G__17467__a[G__17467__i] = arguments[G__17467__i + 2];
            ++G__17467__i;
          }
          G__17466 = new cljs.core.IndexedSeq(G__17467__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17466);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__17468__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__17469 = y;
            var G__17470 = cljs.core.first(more);
            var G__17471 = cljs.core.next(more);
            x = G__17469;
            y = G__17470;
            more = G__17471;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17468 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17472__i = 0, G__17472__a = new Array(arguments.length - 2);
        while (G__17472__i < G__17472__a.length) {
          G__17472__a[G__17472__i] = arguments[G__17472__i + 2];
          ++G__17472__i;
        }
        more = new cljs.core.IndexedSeq(G__17472__a, 0);
      }
      return G__17468__delegate.call(this, x, y, more);
    };
    G__17468.cljs$lang$maxFixedArity = 2;
    G__17468.cljs$lang$applyTo = function(arglist__17473) {
      var x = cljs.core.first(arglist__17473);
      arglist__17473 = cljs.core.next(arglist__17473);
      var y = cljs.core.first(arglist__17473);
      var more = cljs.core.rest(arglist__17473);
      return G__17468__delegate(x, y, more);
    };
    G__17468.cljs$core$IFn$_invoke$arity$variadic = G__17468__delegate;
    return G__17468;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__17474 = null;
        if (arguments.length > 2) {
          var G__17475__i = 0, G__17475__a = new Array(arguments.length - 2);
          while (G__17475__i < G__17475__a.length) {
            G__17475__a[G__17475__i] = arguments[G__17475__i + 2];
            ++G__17475__i;
          }
          G__17474 = new cljs.core.IndexedSeq(G__17475__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17474);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4242__auto__ = x;
    var y__4243__auto__ = y;
    return x__4242__auto__ > y__4243__auto__ ? x__4242__auto__ : y__4243__auto__;
  };
  var max__3 = function() {
    var G__17476__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__4242__auto__ = x;
        var y__4243__auto__ = y;
        return x__4242__auto__ > y__4243__auto__ ? x__4242__auto__ : y__4243__auto__;
      }(), more);
    };
    var G__17476 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17477__i = 0, G__17477__a = new Array(arguments.length - 2);
        while (G__17477__i < G__17477__a.length) {
          G__17477__a[G__17477__i] = arguments[G__17477__i + 2];
          ++G__17477__i;
        }
        more = new cljs.core.IndexedSeq(G__17477__a, 0);
      }
      return G__17476__delegate.call(this, x, y, more);
    };
    G__17476.cljs$lang$maxFixedArity = 2;
    G__17476.cljs$lang$applyTo = function(arglist__17478) {
      var x = cljs.core.first(arglist__17478);
      arglist__17478 = cljs.core.next(arglist__17478);
      var y = cljs.core.first(arglist__17478);
      var more = cljs.core.rest(arglist__17478);
      return G__17476__delegate(x, y, more);
    };
    G__17476.cljs$core$IFn$_invoke$arity$variadic = G__17476__delegate;
    return G__17476;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__17479 = null;
        if (arguments.length > 2) {
          var G__17480__i = 0, G__17480__a = new Array(arguments.length - 2);
          while (G__17480__i < G__17480__a.length) {
            G__17480__a[G__17480__i] = arguments[G__17480__i + 2];
            ++G__17480__i;
          }
          G__17479 = new cljs.core.IndexedSeq(G__17480__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17479);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4249__auto__ = x;
    var y__4250__auto__ = y;
    return x__4249__auto__ < y__4250__auto__ ? x__4249__auto__ : y__4250__auto__;
  };
  var min__3 = function() {
    var G__17481__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__4249__auto__ = x;
        var y__4250__auto__ = y;
        return x__4249__auto__ < y__4250__auto__ ? x__4249__auto__ : y__4250__auto__;
      }(), more);
    };
    var G__17481 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17482__i = 0, G__17482__a = new Array(arguments.length - 2);
        while (G__17482__i < G__17482__a.length) {
          G__17482__a[G__17482__i] = arguments[G__17482__i + 2];
          ++G__17482__i;
        }
        more = new cljs.core.IndexedSeq(G__17482__a, 0);
      }
      return G__17481__delegate.call(this, x, y, more);
    };
    G__17481.cljs$lang$maxFixedArity = 2;
    G__17481.cljs$lang$applyTo = function(arglist__17483) {
      var x = cljs.core.first(arglist__17483);
      arglist__17483 = cljs.core.next(arglist__17483);
      var y = cljs.core.first(arglist__17483);
      var more = cljs.core.rest(arglist__17483);
      return G__17481__delegate(x, y, more);
    };
    G__17481.cljs$core$IFn$_invoke$arity$variadic = G__17481__delegate;
    return G__17481;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__17484 = null;
        if (arguments.length > 2) {
          var G__17485__i = 0, G__17485__a = new Array(arguments.length - 2);
          while (G__17485__i < G__17485__a.length) {
            G__17485__a[G__17485__i] = arguments[G__17485__i + 2];
            ++G__17485__i;
          }
          G__17484 = new cljs.core.IndexedSeq(G__17485__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17484);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__17486__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__17486 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17487__i = 0, G__17487__a = new Array(arguments.length - 2);
        while (G__17487__i < G__17487__a.length) {
          G__17487__a[G__17487__i] = arguments[G__17487__i + 2];
          ++G__17487__i;
        }
        more = new cljs.core.IndexedSeq(G__17487__a, 0);
      }
      return G__17486__delegate.call(this, x, y, more);
    };
    G__17486.cljs$lang$maxFixedArity = 2;
    G__17486.cljs$lang$applyTo = function(arglist__17488) {
      var x = cljs.core.first(arglist__17488);
      arglist__17488 = cljs.core.next(arglist__17488);
      var y = cljs.core.first(arglist__17488);
      var more = cljs.core.rest(arglist__17488);
      return G__17486__delegate(x, y, more);
    };
    G__17486.cljs$core$IFn$_invoke$arity$variadic = G__17486__delegate;
    return G__17486;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__17489 = null;
        if (arguments.length > 2) {
          var G__17490__i = 0, G__17490__a = new Array(arguments.length - 2);
          while (G__17490__i < G__17490__a.length) {
            G__17490__a[G__17490__i] = arguments[G__17490__i + 2];
            ++G__17490__i;
          }
          G__17489 = new cljs.core.IndexedSeq(G__17490__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17489);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__17491__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__17491 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17492__i = 0, G__17492__a = new Array(arguments.length - 2);
        while (G__17492__i < G__17492__a.length) {
          G__17492__a[G__17492__i] = arguments[G__17492__i + 2];
          ++G__17492__i;
        }
        more = new cljs.core.IndexedSeq(G__17492__a, 0);
      }
      return G__17491__delegate.call(this, x, y, more);
    };
    G__17491.cljs$lang$maxFixedArity = 2;
    G__17491.cljs$lang$applyTo = function(arglist__17493) {
      var x = cljs.core.first(arglist__17493);
      arglist__17493 = cljs.core.next(arglist__17493);
      var y = cljs.core.first(arglist__17493);
      var more = cljs.core.rest(arglist__17493);
      return G__17491__delegate(x, y, more);
    };
    G__17491.cljs$core$IFn$_invoke$arity$variadic = G__17491__delegate;
    return G__17491;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__17494 = null;
        if (arguments.length > 2) {
          var G__17495__i = 0, G__17495__a = new Array(arguments.length - 2);
          while (G__17495__i < G__17495__a.length) {
            G__17495__a[G__17495__i] = arguments[G__17495__i + 2];
            ++G__17495__i;
          }
          G__17494 = new cljs.core.IndexedSeq(G__17495__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17494);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__17500__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__17500 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17501__i = 0, G__17501__a = new Array(arguments.length - 2);
        while (G__17501__i < G__17501__a.length) {
          G__17501__a[G__17501__i] = arguments[G__17501__i + 2];
          ++G__17501__i;
        }
        more = new cljs.core.IndexedSeq(G__17501__a, 0);
      }
      return G__17500__delegate.call(this, x, y, more);
    };
    G__17500.cljs$lang$maxFixedArity = 2;
    G__17500.cljs$lang$applyTo = function(arglist__17502) {
      var x = cljs.core.first(arglist__17502);
      arglist__17502 = cljs.core.next(arglist__17502);
      var y = cljs.core.first(arglist__17502);
      var more = cljs.core.rest(arglist__17502);
      return G__17500__delegate(x, y, more);
    };
    G__17500.cljs$core$IFn$_invoke$arity$variadic = G__17500__delegate;
    return G__17500;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__17503 = null;
        if (arguments.length > 2) {
          var G__17504__i = 0, G__17504__a = new Array(arguments.length - 2);
          while (G__17504__i < G__17504__a.length) {
            G__17504__a[G__17504__i] = arguments[G__17504__i + 2];
            ++G__17504__i;
          }
          G__17503 = new cljs.core.IndexedSeq(G__17504__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17503);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__17505__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__17505 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17506__i = 0, G__17506__a = new Array(arguments.length - 2);
        while (G__17506__i < G__17506__a.length) {
          G__17506__a[G__17506__i] = arguments[G__17506__i + 2];
          ++G__17506__i;
        }
        more = new cljs.core.IndexedSeq(G__17506__a, 0);
      }
      return G__17505__delegate.call(this, x, y, more);
    };
    G__17505.cljs$lang$maxFixedArity = 2;
    G__17505.cljs$lang$applyTo = function(arglist__17507) {
      var x = cljs.core.first(arglist__17507);
      arglist__17507 = cljs.core.next(arglist__17507);
      var y = cljs.core.first(arglist__17507);
      var more = cljs.core.rest(arglist__17507);
      return G__17505__delegate(x, y, more);
    };
    G__17505.cljs$core$IFn$_invoke$arity$variadic = G__17505__delegate;
    return G__17505;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__17508 = null;
        if (arguments.length > 2) {
          var G__17509__i = 0, G__17509__a = new Array(arguments.length - 2);
          while (G__17509__i < G__17509__a.length) {
            G__17509__a[G__17509__i] = arguments[G__17509__i + 2];
            ++G__17509__i;
          }
          G__17508 = new cljs.core.IndexedSeq(G__17509__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17508);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__17510__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__17510 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17511__i = 0, G__17511__a = new Array(arguments.length - 2);
        while (G__17511__i < G__17511__a.length) {
          G__17511__a[G__17511__i] = arguments[G__17511__i + 2];
          ++G__17511__i;
        }
        more = new cljs.core.IndexedSeq(G__17511__a, 0);
      }
      return G__17510__delegate.call(this, x, y, more);
    };
    G__17510.cljs$lang$maxFixedArity = 2;
    G__17510.cljs$lang$applyTo = function(arglist__17512) {
      var x = cljs.core.first(arglist__17512);
      arglist__17512 = cljs.core.next(arglist__17512);
      var y = cljs.core.first(arglist__17512);
      var more = cljs.core.rest(arglist__17512);
      return G__17510__delegate(x, y, more);
    };
    G__17510.cljs$core$IFn$_invoke$arity$variadic = G__17510__delegate;
    return G__17510;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__17513 = null;
        if (arguments.length > 2) {
          var G__17514__i = 0, G__17514__a = new Array(arguments.length - 2);
          while (G__17514__i < G__17514__a.length) {
            G__17514__a[G__17514__i] = arguments[G__17514__i + 2];
            ++G__17514__i;
          }
          G__17513 = new cljs.core.IndexedSeq(G__17514__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17513);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__17517 = x;
  var G__17518 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__17517, G__17518) : cljs.core.mod.call(null, G__17517, G__17518);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__17519__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__17519 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17520__i = 0, G__17520__a = new Array(arguments.length - 2);
        while (G__17520__i < G__17520__a.length) {
          G__17520__a[G__17520__i] = arguments[G__17520__i + 2];
          ++G__17520__i;
        }
        more = new cljs.core.IndexedSeq(G__17520__a, 0);
      }
      return G__17519__delegate.call(this, x, y, more);
    };
    G__17519.cljs$lang$maxFixedArity = 2;
    G__17519.cljs$lang$applyTo = function(arglist__17521) {
      var x = cljs.core.first(arglist__17521);
      arglist__17521 = cljs.core.next(arglist__17521);
      var y = cljs.core.first(arglist__17521);
      var more = cljs.core.rest(arglist__17521);
      return G__17519__delegate(x, y, more);
    };
    G__17519.cljs$core$IFn$_invoke$arity$variadic = G__17519__delegate;
    return G__17519;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__17522 = null;
        if (arguments.length > 2) {
          var G__17523__i = 0, G__17523__a = new Array(arguments.length - 2);
          while (G__17523__i < G__17523__a.length) {
            G__17523__a[G__17523__i] = arguments[G__17523__i + 2];
            ++G__17523__i;
          }
          G__17522 = new cljs.core.IndexedSeq(G__17523__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17522);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__17524__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__17524 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17525__i = 0, G__17525__a = new Array(arguments.length - 2);
        while (G__17525__i < G__17525__a.length) {
          G__17525__a[G__17525__i] = arguments[G__17525__i + 2];
          ++G__17525__i;
        }
        more = new cljs.core.IndexedSeq(G__17525__a, 0);
      }
      return G__17524__delegate.call(this, x, y, more);
    };
    G__17524.cljs$lang$maxFixedArity = 2;
    G__17524.cljs$lang$applyTo = function(arglist__17526) {
      var x = cljs.core.first(arglist__17526);
      arglist__17526 = cljs.core.next(arglist__17526);
      var y = cljs.core.first(arglist__17526);
      var more = cljs.core.rest(arglist__17526);
      return G__17524__delegate(x, y, more);
    };
    G__17524.cljs$core$IFn$_invoke$arity$variadic = G__17524__delegate;
    return G__17524;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__17527 = null;
        if (arguments.length > 2) {
          var G__17528__i = 0, G__17528__a = new Array(arguments.length - 2);
          while (G__17528__i < G__17528__a.length) {
            G__17528__a[G__17528__i] = arguments[G__17528__i + 2];
            ++G__17528__i;
          }
          G__17527 = new cljs.core.IndexedSeq(G__17528__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17527);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__17531 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__17531) : Math.floor.call(null, G__17531);
  } else {
    var G__17532 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__17532) : Math.ceil.call(null, G__17532);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__17533__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__17533 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17534__i = 0, G__17534__a = new Array(arguments.length - 2);
        while (G__17534__i < G__17534__a.length) {
          G__17534__a[G__17534__i] = arguments[G__17534__i + 2];
          ++G__17534__i;
        }
        more = new cljs.core.IndexedSeq(G__17534__a, 0);
      }
      return G__17533__delegate.call(this, x, y, more);
    };
    G__17533.cljs$lang$maxFixedArity = 2;
    G__17533.cljs$lang$applyTo = function(arglist__17535) {
      var x = cljs.core.first(arglist__17535);
      arglist__17535 = cljs.core.next(arglist__17535);
      var y = cljs.core.first(arglist__17535);
      var more = cljs.core.rest(arglist__17535);
      return G__17533__delegate(x, y, more);
    };
    G__17533.cljs$core$IFn$_invoke$arity$variadic = G__17533__delegate;
    return G__17533;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__17536 = null;
        if (arguments.length > 2) {
          var G__17537__i = 0, G__17537__a = new Array(arguments.length - 2);
          while (G__17537__i < G__17537__a.length) {
            G__17537__a[G__17537__i] = arguments[G__17537__i + 2];
            ++G__17537__i;
          }
          G__17536 = new cljs.core.IndexedSeq(G__17537__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17536);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__17538__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__17538 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17539__i = 0, G__17539__a = new Array(arguments.length - 2);
        while (G__17539__i < G__17539__a.length) {
          G__17539__a[G__17539__i] = arguments[G__17539__i + 2];
          ++G__17539__i;
        }
        more = new cljs.core.IndexedSeq(G__17539__a, 0);
      }
      return G__17538__delegate.call(this, x, y, more);
    };
    G__17538.cljs$lang$maxFixedArity = 2;
    G__17538.cljs$lang$applyTo = function(arglist__17540) {
      var x = cljs.core.first(arglist__17540);
      arglist__17540 = cljs.core.next(arglist__17540);
      var y = cljs.core.first(arglist__17540);
      var more = cljs.core.rest(arglist__17540);
      return G__17538__delegate(x, y, more);
    };
    G__17538.cljs$core$IFn$_invoke$arity$variadic = G__17538__delegate;
    return G__17538;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__17541 = null;
        if (arguments.length > 2) {
          var G__17542__i = 0, G__17542__a = new Array(arguments.length - 2);
          while (G__17542__i < G__17542__a.length) {
            G__17542__a[G__17542__i] = arguments[G__17542__i + 2];
            ++G__17542__i;
          }
          G__17541 = new cljs.core.IndexedSeq(G__17542__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17541);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__17543__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__17543 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17544__i = 0, G__17544__a = new Array(arguments.length - 2);
        while (G__17544__i < G__17544__a.length) {
          G__17544__a[G__17544__i] = arguments[G__17544__i + 2];
          ++G__17544__i;
        }
        more = new cljs.core.IndexedSeq(G__17544__a, 0);
      }
      return G__17543__delegate.call(this, x, y, more);
    };
    G__17543.cljs$lang$maxFixedArity = 2;
    G__17543.cljs$lang$applyTo = function(arglist__17545) {
      var x = cljs.core.first(arglist__17545);
      arglist__17545 = cljs.core.next(arglist__17545);
      var y = cljs.core.first(arglist__17545);
      var more = cljs.core.rest(arglist__17545);
      return G__17543__delegate(x, y, more);
    };
    G__17543.cljs$core$IFn$_invoke$arity$variadic = G__17543__delegate;
    return G__17543;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__17546 = null;
        if (arguments.length > 2) {
          var G__17547__i = 0, G__17547__a = new Array(arguments.length - 2);
          while (G__17547__i < G__17547__a.length) {
            G__17547__a[G__17547__i] = arguments[G__17547__i + 2];
            ++G__17547__i;
          }
          G__17546 = new cljs.core.IndexedSeq(G__17547__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17546);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__17548__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__17548 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17549__i = 0, G__17549__a = new Array(arguments.length - 2);
        while (G__17549__i < G__17549__a.length) {
          G__17549__a[G__17549__i] = arguments[G__17549__i + 2];
          ++G__17549__i;
        }
        more = new cljs.core.IndexedSeq(G__17549__a, 0);
      }
      return G__17548__delegate.call(this, x, y, more);
    };
    G__17548.cljs$lang$maxFixedArity = 2;
    G__17548.cljs$lang$applyTo = function(arglist__17550) {
      var x = cljs.core.first(arglist__17550);
      arglist__17550 = cljs.core.next(arglist__17550);
      var y = cljs.core.first(arglist__17550);
      var more = cljs.core.rest(arglist__17550);
      return G__17548__delegate(x, y, more);
    };
    G__17548.cljs$core$IFn$_invoke$arity$variadic = G__17548__delegate;
    return G__17548;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__17551 = null;
        if (arguments.length > 2) {
          var G__17552__i = 0, G__17552__a = new Array(arguments.length - 2);
          while (G__17552__i < G__17552__a.length) {
            G__17552__a[G__17552__i] = arguments[G__17552__i + 2];
            ++G__17552__i;
          }
          G__17551 = new cljs.core.IndexedSeq(G__17552__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17551);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__17557__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__17558 = y;
            var G__17559 = cljs.core.first(more);
            var G__17560 = cljs.core.next(more);
            x = G__17558;
            y = G__17559;
            more = G__17560;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17557 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17561__i = 0, G__17561__a = new Array(arguments.length - 2);
        while (G__17561__i < G__17561__a.length) {
          G__17561__a[G__17561__i] = arguments[G__17561__i + 2];
          ++G__17561__i;
        }
        more = new cljs.core.IndexedSeq(G__17561__a, 0);
      }
      return G__17557__delegate.call(this, x, y, more);
    };
    G__17557.cljs$lang$maxFixedArity = 2;
    G__17557.cljs$lang$applyTo = function(arglist__17562) {
      var x = cljs.core.first(arglist__17562);
      arglist__17562 = cljs.core.next(arglist__17562);
      var y = cljs.core.first(arglist__17562);
      var more = cljs.core.rest(arglist__17562);
      return G__17557__delegate(x, y, more);
    };
    G__17557.cljs$core$IFn$_invoke$arity$variadic = G__17557__delegate;
    return G__17557;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__17563 = null;
        if (arguments.length > 2) {
          var G__17564__i = 0, G__17564__a = new Array(arguments.length - 2);
          while (G__17564__i < G__17564__a.length) {
            G__17564__a[G__17564__i] = arguments[G__17564__i + 2];
            ++G__17564__i;
          }
          G__17563 = new cljs.core.IndexedSeq(G__17564__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17563);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__17565 = n__$1 - 1;
      var G__17566 = cljs.core.next(xs);
      n__$1 = G__17565;
      xs = G__17566;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__17570 = x;
      return goog.string.buildString(G__17570);
    }
  };
  var str__2 = function() {
    var G__17571__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__17572 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__17573 = cljs.core.next(more);
          sb = G__17572;
          more = G__17573;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__17571 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__17574__i = 0, G__17574__a = new Array(arguments.length - 1);
        while (G__17574__i < G__17574__a.length) {
          G__17574__a[G__17574__i] = arguments[G__17574__i + 1];
          ++G__17574__i;
        }
        ys = new cljs.core.IndexedSeq(G__17574__a, 0);
      }
      return G__17571__delegate.call(this, x, ys);
    };
    G__17571.cljs$lang$maxFixedArity = 1;
    G__17571.cljs$lang$applyTo = function(arglist__17575) {
      var x = cljs.core.first(arglist__17575);
      var ys = cljs.core.rest(arglist__17575);
      return G__17571__delegate(x, ys);
    };
    G__17571.cljs$core$IFn$_invoke$arity$variadic = G__17571__delegate;
    return G__17571;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__17576 = null;
        if (arguments.length > 1) {
          var G__17577__i = 0, G__17577__a = new Array(arguments.length - 1);
          while (G__17577__i < G__17577__a.length) {
            G__17577__a[G__17577__i] = arguments[G__17577__i + 1];
            ++G__17577__i;
          }
          G__17576 = new cljs.core.IndexedSeq(G__17577__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__17576);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__17578 = cljs.core.next(xs);
            var G__17579 = cljs.core.next(ys);
            xs = G__17578;
            ys = G__17579;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__17580 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__17581 = cljs.core.next(s);
        res = G__17580;
        s = G__17581;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__17586 = (h + (cljs.core.hash(function() {
        var G__17584 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17584) : cljs.core.key.call(null, G__17584);
      }()) ^ cljs.core.hash(function() {
        var G__17585 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17585) : cljs.core.val.call(null, G__17585);
      }()))) % 4503599627370496;
      var G__17587 = cljs.core.next(s);
      h = G__17586;
      s = G__17587;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__17588 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__17589 = cljs.core.next(s__$1);
      h = G__17588;
      s__$1 = G__17589;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__17600_17610 = cljs.core.seq(fn_map);
  var chunk__17601_17611 = null;
  var count__17602_17612 = 0;
  var i__17603_17613 = 0;
  while (true) {
    if (i__17603_17613 < count__17602_17612) {
      var vec__17604_17614 = chunk__17601_17611.cljs$core$IIndexed$_nth$arity$2(null, i__17603_17613);
      var key_name_17615 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17604_17614, 0, null);
      var f_17616 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17604_17614, 1, null);
      var str_name_17617 = function() {
        var G__17605 = key_name_17615;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__17605) : cljs.core.name.call(null, G__17605);
      }();
      obj[str_name_17617] = f_17616;
      var G__17618 = seq__17600_17610;
      var G__17619 = chunk__17601_17611;
      var G__17620 = count__17602_17612;
      var G__17621 = i__17603_17613 + 1;
      seq__17600_17610 = G__17618;
      chunk__17601_17611 = G__17619;
      count__17602_17612 = G__17620;
      i__17603_17613 = G__17621;
      continue;
    } else {
      var temp__4126__auto___17622 = cljs.core.seq(seq__17600_17610);
      if (temp__4126__auto___17622) {
        var seq__17600_17623__$1 = temp__4126__auto___17622;
        if (cljs.core.chunked_seq_QMARK_(seq__17600_17623__$1)) {
          var c__4712__auto___17624 = function() {
            var G__17606 = seq__17600_17623__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__17606) : cljs.core.chunk_first.call(null, G__17606);
          }();
          var G__17625 = function() {
            var G__17607 = seq__17600_17623__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__17607) : cljs.core.chunk_rest.call(null, G__17607);
          }();
          var G__17626 = c__4712__auto___17624;
          var G__17627 = cljs.core.count(c__4712__auto___17624);
          var G__17628 = 0;
          seq__17600_17610 = G__17625;
          chunk__17601_17611 = G__17626;
          count__17602_17612 = G__17627;
          i__17603_17613 = G__17628;
          continue;
        } else {
          var vec__17608_17629 = cljs.core.first(seq__17600_17623__$1);
          var key_name_17630 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17608_17629, 0, null);
          var f_17631 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17608_17629, 1, null);
          var str_name_17632 = function() {
            var G__17609 = key_name_17630;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__17609) : cljs.core.name.call(null, G__17609);
          }();
          obj[str_name_17632] = f_17631;
          var G__17633 = cljs.core.next(seq__17600_17623__$1);
          var G__17634 = null;
          var G__17635 = 0;
          var G__17636 = 0;
          seq__17600_17610 = G__17633;
          chunk__17601_17611 = G__17634;
          count__17602_17612 = G__17635;
          i__17603_17613 = G__17636;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__17638 = coll;
  if (G__17638) {
    var bit__4606__auto__ = G__17638.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4606__auto__ || G__17638.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__17638.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__17638);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__17638);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__17639 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__17639;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__17640 = i - 1;
        var G__17641 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__17640;
        r = G__17641;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__17642__i = 0, G__17642__a = new Array(arguments.length - 0);
      while (G__17642__i < G__17642__a.length) {
        G__17642__a[G__17642__i] = arguments[G__17642__i + 0];
        ++G__17642__i;
      }
      xs = new cljs.core.IndexedSeq(G__17642__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__17643) {
    var xs = cljs.core.seq(arglist__17643);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3925__auto__ = coll == null;
    if (or__3925__auto__) {
      return or__3925__auto__;
    } else {
      var G__17647 = coll;
      if (G__17647) {
        var bit__4599__auto__ = G__17647.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4599__auto__ || G__17647.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__17649 = x;
  if (G__17649) {
    var bit__4606__auto__ = G__17649.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4606__auto__ || G__17649.cljs$core$IList$) {
      return true;
    } else {
      if (!G__17649.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__17649);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__17649);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = cljs.core.not(a.ns);
      if (and__3913__auto__) {
        return b.ns;
      } else {
        return and__3913__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__17656 = a.ns;
            var G__17657 = b.ns;
            return goog.array.defaultCompare(G__17656, G__17657);
          }();
          if (0 === nsc) {
            var G__17658 = a.name;
            var G__17659 = b.name;
            return goog.array.defaultCompare(G__17658, G__17659);
          } else {
            return nsc;
          }
        }
      } else {
        var G__17660 = a.name;
        var G__17661 = b.name;
        return goog.array.defaultCompare(G__17660, G__17661);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4346__auto__ = self__._hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__17663 = null;
  var G__17663__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__17663__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__17663 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17663__2.call(this, self__, coll);
      case 3:
        return G__17663__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17663.cljs$core$IFn$_invoke$arity$2 = G__17663__2;
  G__17663.cljs$core$IFn$_invoke$arity$3 = G__17663__3;
  return G__17663;
}();
cljs.core.Keyword.prototype.apply = function(self__, args17662) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17662)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__17665 = x;
    if (G__17665) {
      var bit__4599__auto__ = G__17665.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4599__auto__ || G__17665.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__17667 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__17667) : cljs.core.name.call(null, G__17667);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__17668 = ls.sval();
        ls = G__17668;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__17670 = s;
    if (G__17670) {
      var bit__4599__auto__ = G__17670.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4599__auto__ || G__17670.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__17671 = cljs.core.next(s__$1);
      s__$1 = G__17671;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_17672 = 0;
  var xs_17673 = cljs.core.seq(coll);
  while (true) {
    if (xs_17673) {
      ret[i_17672] = cljs.core.to_array(cljs.core.first(xs_17673));
      var G__17674 = i_17672 + 1;
      var G__17675 = cljs.core.next(xs_17673);
      i_17672 = G__17674;
      xs_17673 = G__17675;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__17678 = i + 1;
          var G__17679 = cljs.core.next(s__$1);
          i = G__17678;
          s__$1 = G__17679;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4812__auto___17680 = size;
      var i_17681 = 0;
      while (true) {
        if (i_17681 < n__4812__auto___17680) {
          a[i_17681] = init_val_or_seq;
          var G__17682 = i_17681 + 1;
          i_17681 = G__17682;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__17685 = i + 1;
          var G__17686 = cljs.core.next(s__$1);
          i = G__17685;
          s__$1 = G__17686;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4812__auto___17687 = size;
      var i_17688 = 0;
      while (true) {
        if (i_17688 < n__4812__auto___17687) {
          a[i_17688] = init_val_or_seq;
          var G__17689 = i_17688 + 1;
          i_17688 = G__17689;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__17692 = i + 1;
          var G__17693 = cljs.core.next(s__$1);
          i = G__17692;
          s__$1 = G__17693;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4812__auto___17694 = size;
      var i_17695 = 0;
      while (true) {
        if (i_17695 < n__4812__auto___17694) {
          a[i_17695] = init_val_or_seq;
          var G__17696 = i_17695 + 1;
          i_17695 = G__17696;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__17699 = i + 1;
          var G__17700 = cljs.core.next(s__$1);
          i = G__17699;
          s__$1 = G__17700;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4812__auto___17701 = size;
      var i_17702 = 0;
      while (true) {
        if (i_17702 < n__4812__auto___17701) {
          a[i_17702] = init_val_or_seq;
          var G__17703 = i_17702 + 1;
          i_17702 = G__17703;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__17704 = cljs.core.next(s__$1);
        var G__17705 = i - 1;
        var G__17706 = sum + 1;
        s__$1 = G__17704;
        i = G__17705;
        sum = G__17706;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__17726__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__17726 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__17727__i = 0, G__17727__a = new Array(arguments.length - 2);
        while (G__17727__i < G__17727__a.length) {
          G__17727__a[G__17727__i] = arguments[G__17727__i + 2];
          ++G__17727__i;
        }
        zs = new cljs.core.IndexedSeq(G__17727__a, 0);
      }
      return G__17726__delegate.call(this, x, y, zs);
    };
    G__17726.cljs$lang$maxFixedArity = 2;
    G__17726.cljs$lang$applyTo = function(arglist__17728) {
      var x = cljs.core.first(arglist__17728);
      arglist__17728 = cljs.core.next(arglist__17728);
      var y = cljs.core.first(arglist__17728);
      var zs = cljs.core.rest(arglist__17728);
      return G__17726__delegate(x, y, zs);
    };
    G__17726.cljs$core$IFn$_invoke$arity$variadic = G__17726__delegate;
    return G__17726;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__17729 = null;
        if (arguments.length > 2) {
          var G__17730__i = 0, G__17730__a = new Array(arguments.length - 2);
          while (G__17730__i < G__17730__a.length) {
            G__17730__a[G__17730__i] = arguments[G__17730__i + 2];
            ++G__17730__i;
          }
          G__17729 = new cljs.core.IndexedSeq(G__17730__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17729);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__17731__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__17731 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__17732__i = 0, G__17732__a = new Array(arguments.length - 4);
        while (G__17732__i < G__17732__a.length) {
          G__17732__a[G__17732__i] = arguments[G__17732__i + 4];
          ++G__17732__i;
        }
        more = new cljs.core.IndexedSeq(G__17732__a, 0);
      }
      return G__17731__delegate.call(this, a, b, c, d, more);
    };
    G__17731.cljs$lang$maxFixedArity = 4;
    G__17731.cljs$lang$applyTo = function(arglist__17733) {
      var a = cljs.core.first(arglist__17733);
      arglist__17733 = cljs.core.next(arglist__17733);
      var b = cljs.core.first(arglist__17733);
      arglist__17733 = cljs.core.next(arglist__17733);
      var c = cljs.core.first(arglist__17733);
      arglist__17733 = cljs.core.next(arglist__17733);
      var d = cljs.core.first(arglist__17733);
      var more = cljs.core.rest(arglist__17733);
      return G__17731__delegate(a, b, c, d, more);
    };
    G__17731.cljs$core$IFn$_invoke$arity$variadic = G__17731__delegate;
    return G__17731;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__17734 = null;
        if (arguments.length > 4) {
          var G__17735__i = 0, G__17735__a = new Array(arguments.length - 4);
          while (G__17735__i < G__17735__a.length) {
            G__17735__a[G__17735__i] = arguments[G__17735__i + 4];
            ++G__17735__i;
          }
          G__17734 = new cljs.core.IndexedSeq(G__17735__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__17734);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__17736__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__17737 = ntcoll;
          var G__17738 = cljs.core.first(vals);
          var G__17739 = cljs.core.next(vals);
          tcoll = G__17737;
          val = G__17738;
          vals = G__17739;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17736 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__17740__i = 0, G__17740__a = new Array(arguments.length - 2);
        while (G__17740__i < G__17740__a.length) {
          G__17740__a[G__17740__i] = arguments[G__17740__i + 2];
          ++G__17740__i;
        }
        vals = new cljs.core.IndexedSeq(G__17740__a, 0);
      }
      return G__17736__delegate.call(this, tcoll, val, vals);
    };
    G__17736.cljs$lang$maxFixedArity = 2;
    G__17736.cljs$lang$applyTo = function(arglist__17741) {
      var tcoll = cljs.core.first(arglist__17741);
      arglist__17741 = cljs.core.next(arglist__17741);
      var val = cljs.core.first(arglist__17741);
      var vals = cljs.core.rest(arglist__17741);
      return G__17736__delegate(tcoll, val, vals);
    };
    G__17736.cljs$core$IFn$_invoke$arity$variadic = G__17736__delegate;
    return G__17736;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__17742 = null;
        if (arguments.length > 2) {
          var G__17743__i = 0, G__17743__a = new Array(arguments.length - 2);
          while (G__17743__i < G__17743__a.length) {
            G__17743__a[G__17743__i] = arguments[G__17743__i + 2];
            ++G__17743__i;
          }
          G__17742 = new cljs.core.IndexedSeq(G__17743__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__17742);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__17744__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__17745 = ntcoll;
          var G__17746 = cljs.core.first(kvs);
          var G__17747 = cljs.core.second(kvs);
          var G__17748 = cljs.core.nnext(kvs);
          tcoll = G__17745;
          key = G__17746;
          val = G__17747;
          kvs = G__17748;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17744 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__17749__i = 0, G__17749__a = new Array(arguments.length - 3);
        while (G__17749__i < G__17749__a.length) {
          G__17749__a[G__17749__i] = arguments[G__17749__i + 3];
          ++G__17749__i;
        }
        kvs = new cljs.core.IndexedSeq(G__17749__a, 0);
      }
      return G__17744__delegate.call(this, tcoll, key, val, kvs);
    };
    G__17744.cljs$lang$maxFixedArity = 3;
    G__17744.cljs$lang$applyTo = function(arglist__17750) {
      var tcoll = cljs.core.first(arglist__17750);
      arglist__17750 = cljs.core.next(arglist__17750);
      var key = cljs.core.first(arglist__17750);
      arglist__17750 = cljs.core.next(arglist__17750);
      var val = cljs.core.first(arglist__17750);
      var kvs = cljs.core.rest(arglist__17750);
      return G__17744__delegate(tcoll, key, val, kvs);
    };
    G__17744.cljs$core$IFn$_invoke$arity$variadic = G__17744__delegate;
    return G__17744;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__17751 = null;
        if (arguments.length > 3) {
          var G__17752__i = 0, G__17752__a = new Array(arguments.length - 3);
          while (G__17752__i < G__17752__a.length) {
            G__17752__a[G__17752__i] = arguments[G__17752__i + 3];
            ++G__17752__i;
          }
          G__17751 = new cljs.core.IndexedSeq(G__17752__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__17751);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__17753__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__17754 = ntcoll;
          var G__17755 = cljs.core.first(ks);
          var G__17756 = cljs.core.next(ks);
          tcoll = G__17754;
          key = G__17755;
          ks = G__17756;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17753 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__17757__i = 0, G__17757__a = new Array(arguments.length - 2);
        while (G__17757__i < G__17757__a.length) {
          G__17757__a[G__17757__i] = arguments[G__17757__i + 2];
          ++G__17757__i;
        }
        ks = new cljs.core.IndexedSeq(G__17757__a, 0);
      }
      return G__17753__delegate.call(this, tcoll, key, ks);
    };
    G__17753.cljs$lang$maxFixedArity = 2;
    G__17753.cljs$lang$applyTo = function(arglist__17758) {
      var tcoll = cljs.core.first(arglist__17758);
      arglist__17758 = cljs.core.next(arglist__17758);
      var key = cljs.core.first(arglist__17758);
      var ks = cljs.core.rest(arglist__17758);
      return G__17753__delegate(tcoll, key, ks);
    };
    G__17753.cljs$core$IFn$_invoke$arity$variadic = G__17753__delegate;
    return G__17753;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__17759 = null;
        if (arguments.length > 2) {
          var G__17760__i = 0, G__17760__a = new Array(arguments.length - 2);
          while (G__17760__i < G__17760__a.length) {
            G__17760__a[G__17760__i] = arguments[G__17760__i + 2];
            ++G__17760__i;
          }
          G__17759 = new cljs.core.IndexedSeq(G__17760__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__17759);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__17761__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__17762 = ntcoll;
          var G__17763 = cljs.core.first(vals);
          var G__17764 = cljs.core.next(vals);
          tcoll = G__17762;
          val = G__17763;
          vals = G__17764;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17761 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__17765__i = 0, G__17765__a = new Array(arguments.length - 2);
        while (G__17765__i < G__17765__a.length) {
          G__17765__a[G__17765__i] = arguments[G__17765__i + 2];
          ++G__17765__i;
        }
        vals = new cljs.core.IndexedSeq(G__17765__a, 0);
      }
      return G__17761__delegate.call(this, tcoll, val, vals);
    };
    G__17761.cljs$lang$maxFixedArity = 2;
    G__17761.cljs$lang$applyTo = function(arglist__17766) {
      var tcoll = cljs.core.first(arglist__17766);
      arglist__17766 = cljs.core.next(arglist__17766);
      var val = cljs.core.first(arglist__17766);
      var vals = cljs.core.rest(arglist__17766);
      return G__17761__delegate(tcoll, val, vals);
    };
    G__17761.cljs$core$IFn$_invoke$arity$variadic = G__17761__delegate;
    return G__17761;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__17767 = null;
        if (arguments.length > 2) {
          var G__17768__i = 0, G__17768__a = new Array(arguments.length - 2);
          while (G__17768__i < G__17768__a.length) {
            G__17768__a[G__17768__i] = arguments[G__17768__i + 2];
            ++G__17768__i;
          }
          G__17767 = new cljs.core.IndexedSeq(G__17768__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__17767);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4856 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4856);
      } else {
        var G__17979 = a4856;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17979) : f.call(null, G__17979);
      }
    } else {
      var b4857 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4856, b4857);
        } else {
          var G__17980 = a4856;
          var G__17981 = b4857;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17980, G__17981) : f.call(null, G__17980, G__17981);
        }
      } else {
        var c4858 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4856, b4857, c4858);
          } else {
            var G__17982 = a4856;
            var G__17983 = b4857;
            var G__17984 = c4858;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17982, G__17983, G__17984) : f.call(null, G__17982, G__17983, G__17984);
          }
        } else {
          var d4859 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4856, b4857, c4858, d4859);
            } else {
              var G__17985 = a4856;
              var G__17986 = b4857;
              var G__17987 = c4858;
              var G__17988 = d4859;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17985, G__17986, G__17987, G__17988) : f.call(null, G__17985, G__17986, G__17987, G__17988);
            }
          } else {
            var e4860 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4856, b4857, c4858, d4859, e4860);
              } else {
                var G__17989 = a4856;
                var G__17990 = b4857;
                var G__17991 = c4858;
                var G__17992 = d4859;
                var G__17993 = e4860;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__17989, G__17990, G__17991, G__17992, G__17993) : f.call(null, G__17989, G__17990, G__17991, G__17992, G__17993);
              }
            } else {
              var f4861 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4856, b4857, c4858, d4859, e4860, f4861);
                } else {
                  var G__17994 = a4856;
                  var G__17995 = b4857;
                  var G__17996 = c4858;
                  var G__17997 = d4859;
                  var G__17998 = e4860;
                  var G__17999 = f4861;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__17994, G__17995, G__17996, G__17997, G__17998, G__17999) : f.call(null, G__17994, G__17995, G__17996, G__17997, G__17998, G__17999);
                }
              } else {
                var g4862 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4856, b4857, c4858, d4859, e4860, f4861, g4862);
                  } else {
                    var G__18000 = a4856;
                    var G__18001 = b4857;
                    var G__18002 = c4858;
                    var G__18003 = d4859;
                    var G__18004 = e4860;
                    var G__18005 = f4861;
                    var G__18006 = g4862;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__18000, G__18001, G__18002, G__18003, G__18004, G__18005, G__18006) : f.call(null, G__18000, G__18001, G__18002, G__18003, G__18004, G__18005, G__18006);
                  }
                } else {
                  var h4863 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863);
                    } else {
                      var G__18007 = a4856;
                      var G__18008 = b4857;
                      var G__18009 = c4858;
                      var G__18010 = d4859;
                      var G__18011 = e4860;
                      var G__18012 = f4861;
                      var G__18013 = g4862;
                      var G__18014 = h4863;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__18007, G__18008, G__18009, G__18010, G__18011, G__18012, G__18013, G__18014) : f.call(null, G__18007, G__18008, G__18009, G__18010, G__18011, G__18012, G__18013, G__18014);
                    }
                  } else {
                    var i4864 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864);
                      } else {
                        var G__18015 = a4856;
                        var G__18016 = b4857;
                        var G__18017 = c4858;
                        var G__18018 = d4859;
                        var G__18019 = e4860;
                        var G__18020 = f4861;
                        var G__18021 = g4862;
                        var G__18022 = h4863;
                        var G__18023 = i4864;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__18015, G__18016, G__18017, G__18018, G__18019, G__18020, G__18021, G__18022, G__18023) : f.call(null, G__18015, G__18016, G__18017, G__18018, G__18019, G__18020, G__18021, G__18022, G__18023);
                      }
                    } else {
                      var j4865 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865);
                        } else {
                          var G__18024 = a4856;
                          var G__18025 = b4857;
                          var G__18026 = c4858;
                          var G__18027 = d4859;
                          var G__18028 = e4860;
                          var G__18029 = f4861;
                          var G__18030 = g4862;
                          var G__18031 = h4863;
                          var G__18032 = i4864;
                          var G__18033 = j4865;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__18024, G__18025, G__18026, G__18027, G__18028, G__18029, G__18030, G__18031, G__18032, G__18033) : f.call(null, G__18024, G__18025, G__18026, G__18027, G__18028, G__18029, G__18030, G__18031, G__18032, G__18033);
                        }
                      } else {
                        var k4866 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866);
                          } else {
                            var G__18034 = a4856;
                            var G__18035 = b4857;
                            var G__18036 = c4858;
                            var G__18037 = d4859;
                            var G__18038 = e4860;
                            var G__18039 = f4861;
                            var G__18040 = g4862;
                            var G__18041 = h4863;
                            var G__18042 = i4864;
                            var G__18043 = j4865;
                            var G__18044 = k4866;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__18034, G__18035, G__18036, G__18037, G__18038, G__18039, G__18040, G__18041, G__18042, G__18043, G__18044) : f.call(null, G__18034, G__18035, G__18036, G__18037, G__18038, G__18039, G__18040, G__18041, G__18042, G__18043, G__18044);
                          }
                        } else {
                          var l4867 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867);
                            } else {
                              var G__18045 = a4856;
                              var G__18046 = b4857;
                              var G__18047 = c4858;
                              var G__18048 = d4859;
                              var G__18049 = e4860;
                              var G__18050 = f4861;
                              var G__18051 = g4862;
                              var G__18052 = h4863;
                              var G__18053 = i4864;
                              var G__18054 = j4865;
                              var G__18055 = k4866;
                              var G__18056 = l4867;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__18045, G__18046, G__18047, G__18048, G__18049, G__18050, G__18051, G__18052, G__18053, G__18054, G__18055, G__18056) : f.call(null, G__18045, G__18046, G__18047, G__18048, G__18049, G__18050, G__18051, G__18052, G__18053, G__18054, G__18055, G__18056);
                            }
                          } else {
                            var m4868 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868);
                              } else {
                                var G__18057 = a4856;
                                var G__18058 = b4857;
                                var G__18059 = c4858;
                                var G__18060 = d4859;
                                var G__18061 = e4860;
                                var G__18062 = f4861;
                                var G__18063 = g4862;
                                var G__18064 = h4863;
                                var G__18065 = i4864;
                                var G__18066 = j4865;
                                var G__18067 = k4866;
                                var G__18068 = l4867;
                                var G__18069 = m4868;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__18057, G__18058, G__18059, G__18060, G__18061, G__18062, G__18063, G__18064, G__18065, G__18066, G__18067, G__18068, G__18069) : f.call(null, G__18057, G__18058, G__18059, G__18060, G__18061, G__18062, G__18063, G__18064, G__18065, G__18066, G__18067, G__18068, G__18069);
                              }
                            } else {
                              var n4869 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869);
                                } else {
                                  var G__18070 = a4856;
                                  var G__18071 = b4857;
                                  var G__18072 = c4858;
                                  var G__18073 = d4859;
                                  var G__18074 = e4860;
                                  var G__18075 = f4861;
                                  var G__18076 = g4862;
                                  var G__18077 = h4863;
                                  var G__18078 = i4864;
                                  var G__18079 = j4865;
                                  var G__18080 = k4866;
                                  var G__18081 = l4867;
                                  var G__18082 = m4868;
                                  var G__18083 = n4869;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__18070, G__18071, G__18072, G__18073, G__18074, G__18075, G__18076, G__18077, G__18078, G__18079, G__18080, G__18081, G__18082, G__18083) : f.call(null, G__18070, G__18071, G__18072, G__18073, G__18074, G__18075, G__18076, G__18077, G__18078, G__18079, G__18080, G__18081, G__18082, G__18083);
                                }
                              } else {
                                var o4870 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870);
                                  } else {
                                    var G__18084 = a4856;
                                    var G__18085 = b4857;
                                    var G__18086 = c4858;
                                    var G__18087 = d4859;
                                    var G__18088 = e4860;
                                    var G__18089 = f4861;
                                    var G__18090 = g4862;
                                    var G__18091 = h4863;
                                    var G__18092 = i4864;
                                    var G__18093 = j4865;
                                    var G__18094 = k4866;
                                    var G__18095 = l4867;
                                    var G__18096 = m4868;
                                    var G__18097 = n4869;
                                    var G__18098 = o4870;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__18084, G__18085, G__18086, G__18087, G__18088, G__18089, G__18090, G__18091, G__18092, G__18093, G__18094, G__18095, G__18096, G__18097, G__18098) : f.call(null, G__18084, G__18085, G__18086, G__18087, G__18088, G__18089, G__18090, G__18091, G__18092, G__18093, G__18094, G__18095, G__18096, G__18097, G__18098);
                                  }
                                } else {
                                  var p4871 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871);
                                    } else {
                                      var G__18099 = a4856;
                                      var G__18100 = b4857;
                                      var G__18101 = c4858;
                                      var G__18102 = d4859;
                                      var G__18103 = e4860;
                                      var G__18104 = f4861;
                                      var G__18105 = g4862;
                                      var G__18106 = h4863;
                                      var G__18107 = i4864;
                                      var G__18108 = j4865;
                                      var G__18109 = k4866;
                                      var G__18110 = l4867;
                                      var G__18111 = m4868;
                                      var G__18112 = n4869;
                                      var G__18113 = o4870;
                                      var G__18114 = p4871;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__18099, G__18100, G__18101, G__18102, G__18103, G__18104, G__18105, G__18106, G__18107, G__18108, G__18109, G__18110, G__18111, G__18112, G__18113, G__18114) : f.call(null, G__18099, G__18100, G__18101, G__18102, G__18103, G__18104, G__18105, G__18106, G__18107, G__18108, G__18109, G__18110, G__18111, G__18112, G__18113, G__18114);
                                    }
                                  } else {
                                    var q4872 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871, q4872);
                                      } else {
                                        var G__18115 = a4856;
                                        var G__18116 = b4857;
                                        var G__18117 = c4858;
                                        var G__18118 = d4859;
                                        var G__18119 = e4860;
                                        var G__18120 = f4861;
                                        var G__18121 = g4862;
                                        var G__18122 = h4863;
                                        var G__18123 = i4864;
                                        var G__18124 = j4865;
                                        var G__18125 = k4866;
                                        var G__18126 = l4867;
                                        var G__18127 = m4868;
                                        var G__18128 = n4869;
                                        var G__18129 = o4870;
                                        var G__18130 = p4871;
                                        var G__18131 = q4872;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__18115, G__18116, G__18117, G__18118, G__18119, G__18120, G__18121, G__18122, G__18123, G__18124, G__18125, G__18126, G__18127, G__18128, G__18129, G__18130, G__18131) : f.call(null, G__18115, G__18116, G__18117, G__18118, G__18119, G__18120, G__18121, G__18122, G__18123, G__18124, G__18125, G__18126, G__18127, G__18128, G__18129, G__18130, G__18131);
                                      }
                                    } else {
                                      var r4873 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871, q4872, r4873);
                                        } else {
                                          var G__18132 = a4856;
                                          var G__18133 = b4857;
                                          var G__18134 = c4858;
                                          var G__18135 = d4859;
                                          var G__18136 = e4860;
                                          var G__18137 = f4861;
                                          var G__18138 = g4862;
                                          var G__18139 = h4863;
                                          var G__18140 = i4864;
                                          var G__18141 = j4865;
                                          var G__18142 = k4866;
                                          var G__18143 = l4867;
                                          var G__18144 = m4868;
                                          var G__18145 = n4869;
                                          var G__18146 = o4870;
                                          var G__18147 = p4871;
                                          var G__18148 = q4872;
                                          var G__18149 = r4873;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__18132, G__18133, G__18134, G__18135, G__18136, G__18137, G__18138, G__18139, G__18140, G__18141, G__18142, G__18143, G__18144, G__18145, G__18146, G__18147, G__18148, G__18149) : f.call(null, G__18132, G__18133, G__18134, G__18135, G__18136, G__18137, G__18138, G__18139, G__18140, G__18141, G__18142, G__18143, G__18144, G__18145, G__18146, G__18147, G__18148, G__18149);
                                        }
                                      } else {
                                        var s4874 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871, q4872, r4873, s4874);
                                          } else {
                                            var G__18150 = a4856;
                                            var G__18151 = b4857;
                                            var G__18152 = c4858;
                                            var G__18153 = d4859;
                                            var G__18154 = e4860;
                                            var G__18155 = f4861;
                                            var G__18156 = g4862;
                                            var G__18157 = h4863;
                                            var G__18158 = i4864;
                                            var G__18159 = j4865;
                                            var G__18160 = k4866;
                                            var G__18161 = l4867;
                                            var G__18162 = m4868;
                                            var G__18163 = n4869;
                                            var G__18164 = o4870;
                                            var G__18165 = p4871;
                                            var G__18166 = q4872;
                                            var G__18167 = r4873;
                                            var G__18168 = s4874;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__18150, G__18151, G__18152, G__18153, G__18154, G__18155, G__18156, G__18157, G__18158, G__18159, G__18160, G__18161, G__18162, G__18163, G__18164, G__18165, G__18166, G__18167, G__18168) : f.call(null, G__18150, G__18151, G__18152, G__18153, G__18154, G__18155, G__18156, G__18157, G__18158, G__18159, G__18160, G__18161, G__18162, G__18163, G__18164, G__18165, G__18166, G__18167, 
                                            G__18168);
                                          }
                                        } else {
                                          var t4875 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871, q4872, r4873, s4874, t4875);
                                            } else {
                                              var G__18169 = a4856;
                                              var G__18170 = b4857;
                                              var G__18171 = c4858;
                                              var G__18172 = d4859;
                                              var G__18173 = e4860;
                                              var G__18174 = f4861;
                                              var G__18175 = g4862;
                                              var G__18176 = h4863;
                                              var G__18177 = i4864;
                                              var G__18178 = j4865;
                                              var G__18179 = k4866;
                                              var G__18180 = l4867;
                                              var G__18181 = m4868;
                                              var G__18182 = n4869;
                                              var G__18183 = o4870;
                                              var G__18184 = p4871;
                                              var G__18185 = q4872;
                                              var G__18186 = r4873;
                                              var G__18187 = s4874;
                                              var G__18188 = t4875;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__18169, G__18170, G__18171, G__18172, G__18173, G__18174, G__18175, G__18176, G__18177, G__18178, G__18179, G__18180, G__18181, G__18182, G__18183, G__18184, G__18185, G__18186, G__18187, G__18188) : f.call(null, G__18169, G__18170, G__18171, G__18172, G__18173, G__18174, G__18175, G__18176, G__18177, G__18178, G__18179, G__18180, G__18181, G__18182, G__18183, G__18184, G__18185, 
                                              G__18186, G__18187, G__18188);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__18189__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__18189 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__18190__i = 0, G__18190__a = new Array(arguments.length - 5);
        while (G__18190__i < G__18190__a.length) {
          G__18190__a[G__18190__i] = arguments[G__18190__i + 5];
          ++G__18190__i;
        }
        args = new cljs.core.IndexedSeq(G__18190__a, 0);
      }
      return G__18189__delegate.call(this, f, a, b, c, d, args);
    };
    G__18189.cljs$lang$maxFixedArity = 5;
    G__18189.cljs$lang$applyTo = function(arglist__18191) {
      var f = cljs.core.first(arglist__18191);
      arglist__18191 = cljs.core.next(arglist__18191);
      var a = cljs.core.first(arglist__18191);
      arglist__18191 = cljs.core.next(arglist__18191);
      var b = cljs.core.first(arglist__18191);
      arglist__18191 = cljs.core.next(arglist__18191);
      var c = cljs.core.first(arglist__18191);
      arglist__18191 = cljs.core.next(arglist__18191);
      var d = cljs.core.first(arglist__18191);
      var args = cljs.core.rest(arglist__18191);
      return G__18189__delegate(f, a, b, c, d, args);
    };
    G__18189.cljs$core$IFn$_invoke$arity$variadic = G__18189__delegate;
    return G__18189;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__18192 = null;
        if (arguments.length > 5) {
          var G__18193__i = 0, G__18193__a = new Array(arguments.length - 5);
          while (G__18193__i < G__18193__a.length) {
            G__18193__a[G__18193__i] = arguments[G__18193__i + 5];
            ++G__18193__i;
          }
          G__18192 = new cljs.core.IndexedSeq(G__18193__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__18192);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__18209 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18209) : f.call(null, G__18209);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__18210 = cljs.core.meta(obj);
      var G__18211 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18210, G__18211) : f.call(null, G__18210, G__18211);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__18212 = cljs.core.meta(obj);
      var G__18213 = a;
      var G__18214 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18212, G__18213, G__18214) : f.call(null, G__18212, G__18213, G__18214);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__18215 = cljs.core.meta(obj);
      var G__18216 = a;
      var G__18217 = b;
      var G__18218 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18215, G__18216, G__18217, G__18218) : f.call(null, G__18215, G__18216, G__18217, G__18218);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__18219 = cljs.core.meta(obj);
      var G__18220 = a;
      var G__18221 = b;
      var G__18222 = c;
      var G__18223 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18219, G__18220, G__18221, G__18222, G__18223) : f.call(null, G__18219, G__18220, G__18221, G__18222, G__18223);
    }());
  };
  var vary_meta__7 = function() {
    var G__18224__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__18224 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__18225__i = 0, G__18225__a = new Array(arguments.length - 6);
        while (G__18225__i < G__18225__a.length) {
          G__18225__a[G__18225__i] = arguments[G__18225__i + 6];
          ++G__18225__i;
        }
        args = new cljs.core.IndexedSeq(G__18225__a, 0);
      }
      return G__18224__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__18224.cljs$lang$maxFixedArity = 6;
    G__18224.cljs$lang$applyTo = function(arglist__18226) {
      var obj = cljs.core.first(arglist__18226);
      arglist__18226 = cljs.core.next(arglist__18226);
      var f = cljs.core.first(arglist__18226);
      arglist__18226 = cljs.core.next(arglist__18226);
      var a = cljs.core.first(arglist__18226);
      arglist__18226 = cljs.core.next(arglist__18226);
      var b = cljs.core.first(arglist__18226);
      arglist__18226 = cljs.core.next(arglist__18226);
      var c = cljs.core.first(arglist__18226);
      arglist__18226 = cljs.core.next(arglist__18226);
      var d = cljs.core.first(arglist__18226);
      var args = cljs.core.rest(arglist__18226);
      return G__18224__delegate(obj, f, a, b, c, d, args);
    };
    G__18224.cljs$core$IFn$_invoke$arity$variadic = G__18224__delegate;
    return G__18224;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__18227 = null;
        if (arguments.length > 6) {
          var G__18228__i = 0, G__18228__a = new Array(arguments.length - 6);
          while (G__18228__i < G__18228__a.length) {
            G__18228__a[G__18228__i] = arguments[G__18228__i + 6];
            ++G__18228__i;
          }
          G__18227 = new cljs.core.IndexedSeq(G__18228__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__18227);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__18229__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__18229 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__18230__i = 0, G__18230__a = new Array(arguments.length - 2);
        while (G__18230__i < G__18230__a.length) {
          G__18230__a[G__18230__i] = arguments[G__18230__i + 2];
          ++G__18230__i;
        }
        more = new cljs.core.IndexedSeq(G__18230__a, 0);
      }
      return G__18229__delegate.call(this, x, y, more);
    };
    G__18229.cljs$lang$maxFixedArity = 2;
    G__18229.cljs$lang$applyTo = function(arglist__18231) {
      var x = cljs.core.first(arglist__18231);
      arglist__18231 = cljs.core.next(arglist__18231);
      var y = cljs.core.first(arglist__18231);
      var more = cljs.core.rest(arglist__18231);
      return G__18229__delegate(x, y, more);
    };
    G__18229.cljs$core$IFn$_invoke$arity$variadic = G__18229__delegate;
    return G__18229;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__18232 = null;
        if (arguments.length > 2) {
          var G__18233__i = 0, G__18233__a = new Array(arguments.length - 2);
          while (G__18233__i < G__18233__a.length) {
            G__18233__a[G__18233__i] = arguments[G__18233__i + 2];
            ++G__18233__i;
          }
          G__18232 = new cljs.core.IndexedSeq(G__18233__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18232);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t18237 !== "undefined") {
  } else {
    cljs.core.t18237 = function(nil_iter, meta18238) {
      this.nil_iter = nil_iter;
      this.meta18238 = meta18238;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t18237.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t18237.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t18237.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t18237.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18239) {
      var self__ = this;
      var _18239__$1 = this;
      return self__.meta18238;
    };
    cljs.core.t18237.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18239, meta18238__$1) {
      var self__ = this;
      var _18239__$1 = this;
      return new cljs.core.t18237(self__.nil_iter, meta18238__$1);
    };
    cljs.core.t18237.cljs$lang$type = true;
    cljs.core.t18237.cljs$lang$ctorStr = "cljs.core/t18237";
    cljs.core.t18237.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write(writer__4513__auto__, "cljs.core/t18237");
    };
    cljs.core.__GT_t18237 = function __GT_t18237(nil_iter__$1, meta18238) {
      return new cljs.core.t18237(nil_iter__$1, meta18238);
    };
  }
  return new cljs.core.t18237(nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = !(lt.stepper == null);
      if (and__3913__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3913__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__18240 = lt;
        var G__18241 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__18240, G__18241) : self__.xform.call(null, G__18240, G__18241);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__18242 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__18242) : self__.xform.call(null, G__18242);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__18244 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18244) : xform.call(null, G__18244);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__18246 = cljs.core.next(iters__$1);
        iters__$1 = G__18246;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4812__auto___18247 = self__.iters.length;
  var i_18248 = 0;
  while (true) {
    if (i_18248 < n__4812__auto___18247) {
      self__.nexts[i_18248] = self__.iters[i_18248].next();
      var G__18249 = i_18248 + 1;
      i_18248 = G__18249;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = !(lt.stepper == null);
      if (and__3913__auto__) {
        return this$.hasNext();
      } else {
        return and__3913__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__18245 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__18245) : self__.xform.call(null, G__18245);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__18254 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18254) : xform.call(null, G__18254);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__18255_18259 = cljs.core.seq(colls);
  var chunk__18256_18260 = null;
  var count__18257_18261 = 0;
  var i__18258_18262 = 0;
  while (true) {
    if (i__18258_18262 < count__18257_18261) {
      var coll_18263 = chunk__18256_18260.cljs$core$IIndexed$_nth$arity$2(null, i__18258_18262);
      iters.push(cljs.core.iter(coll_18263));
      var G__18264 = seq__18255_18259;
      var G__18265 = chunk__18256_18260;
      var G__18266 = count__18257_18261;
      var G__18267 = i__18258_18262 + 1;
      seq__18255_18259 = G__18264;
      chunk__18256_18260 = G__18265;
      count__18257_18261 = G__18266;
      i__18258_18262 = G__18267;
      continue;
    } else {
      var temp__4126__auto___18268 = cljs.core.seq(seq__18255_18259);
      if (temp__4126__auto___18268) {
        var seq__18255_18269__$1 = temp__4126__auto___18268;
        if (cljs.core.chunked_seq_QMARK_(seq__18255_18269__$1)) {
          var c__4712__auto___18270 = cljs.core.chunk_first(seq__18255_18269__$1);
          var G__18271 = cljs.core.chunk_rest(seq__18255_18269__$1);
          var G__18272 = c__4712__auto___18270;
          var G__18273 = cljs.core.count(c__4712__auto___18270);
          var G__18274 = 0;
          seq__18255_18259 = G__18271;
          chunk__18256_18260 = G__18272;
          count__18257_18261 = G__18273;
          i__18258_18262 = G__18274;
          continue;
        } else {
          var coll_18275 = cljs.core.first(seq__18255_18269__$1);
          iters.push(cljs.core.iter(coll_18275));
          var G__18276 = cljs.core.next(seq__18255_18269__$1);
          var G__18277 = null;
          var G__18278 = 0;
          var G__18279 = 0;
          seq__18255_18259 = G__18276;
          chunk__18256_18260 = G__18277;
          count__18257_18261 = G__18278;
          i__18258_18262 = G__18279;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3925__auto__ = cljs.core.seq(coll);
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__18280__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__18280 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__18281__i = 0, G__18281__a = new Array(arguments.length - 2);
        while (G__18281__i < G__18281__a.length) {
          G__18281__a[G__18281__i] = arguments[G__18281__i + 2];
          ++G__18281__i;
        }
        colls = new cljs.core.IndexedSeq(G__18281__a, 0);
      }
      return G__18280__delegate.call(this, xform, coll, colls);
    };
    G__18280.cljs$lang$maxFixedArity = 2;
    G__18280.cljs$lang$applyTo = function(arglist__18282) {
      var xform = cljs.core.first(arglist__18282);
      arglist__18282 = cljs.core.next(arglist__18282);
      var coll = cljs.core.first(arglist__18282);
      var colls = cljs.core.rest(arglist__18282);
      return G__18280__delegate(xform, coll, colls);
    };
    G__18280.cljs$core$IFn$_invoke$arity$variadic = G__18280__delegate;
    return G__18280;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__18283 = null;
        if (arguments.length > 2) {
          var G__18284__i = 0, G__18284__a = new Array(arguments.length - 2);
          while (G__18284__i < G__18284__a.length) {
            G__18284__a[G__18284__i] = arguments[G__18284__i + 2];
            ++G__18284__i;
          }
          G__18283 = new cljs.core.IndexedSeq(G__18284__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__18283);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__18286 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18286) : pred.call(null, G__18286);
      }())) {
        var G__18287 = pred;
        var G__18288 = cljs.core.next(coll);
        pred = G__18287;
        coll = G__18288;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3925__auto__ = function() {
        var G__18292 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18292) : pred.call(null, G__18292);
      }();
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        var G__18293 = pred;
        var G__18294 = cljs.core.next(coll);
        pred = G__18293;
        coll = G__18294;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__18301 = null;
    var G__18301__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__18301__1 = function(x) {
      return cljs.core.not(function() {
        var G__18298 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18298) : f.call(null, G__18298);
      }());
    };
    var G__18301__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__18299 = x;
        var G__18300 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18299, G__18300) : f.call(null, G__18299, G__18300);
      }());
    };
    var G__18301__3 = function() {
      var G__18302__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__18302 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__18303__i = 0, G__18303__a = new Array(arguments.length - 2);
          while (G__18303__i < G__18303__a.length) {
            G__18303__a[G__18303__i] = arguments[G__18303__i + 2];
            ++G__18303__i;
          }
          zs = new cljs.core.IndexedSeq(G__18303__a, 0);
        }
        return G__18302__delegate.call(this, x, y, zs);
      };
      G__18302.cljs$lang$maxFixedArity = 2;
      G__18302.cljs$lang$applyTo = function(arglist__18304) {
        var x = cljs.core.first(arglist__18304);
        arglist__18304 = cljs.core.next(arglist__18304);
        var y = cljs.core.first(arglist__18304);
        var zs = cljs.core.rest(arglist__18304);
        return G__18302__delegate(x, y, zs);
      };
      G__18302.cljs$core$IFn$_invoke$arity$variadic = G__18302__delegate;
      return G__18302;
    }();
    G__18301 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__18301__0.call(this);
        case 1:
          return G__18301__1.call(this, x);
        case 2:
          return G__18301__2.call(this, x, y);
        default:
          var G__18305 = null;
          if (arguments.length > 2) {
            var G__18306__i = 0, G__18306__a = new Array(arguments.length - 2);
            while (G__18306__i < G__18306__a.length) {
              G__18306__a[G__18306__i] = arguments[G__18306__i + 2];
              ++G__18306__i;
            }
            G__18305 = new cljs.core.IndexedSeq(G__18306__a, 0);
          }
          return G__18301__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18305);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18301.cljs$lang$maxFixedArity = 2;
    G__18301.cljs$lang$applyTo = G__18301__3.cljs$lang$applyTo;
    G__18301.cljs$core$IFn$_invoke$arity$0 = G__18301__0;
    G__18301.cljs$core$IFn$_invoke$arity$1 = G__18301__1;
    G__18301.cljs$core$IFn$_invoke$arity$2 = G__18301__2;
    G__18301.cljs$core$IFn$_invoke$arity$variadic = G__18301__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__18301;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__18307__delegate = function(args) {
      return x;
    };
    var G__18307 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__18308__i = 0, G__18308__a = new Array(arguments.length - 0);
        while (G__18308__i < G__18308__a.length) {
          G__18308__a[G__18308__i] = arguments[G__18308__i + 0];
          ++G__18308__i;
        }
        args = new cljs.core.IndexedSeq(G__18308__a, 0);
      }
      return G__18307__delegate.call(this, args);
    };
    G__18307.cljs$lang$maxFixedArity = 0;
    G__18307.cljs$lang$applyTo = function(arglist__18309) {
      var args = cljs.core.seq(arglist__18309);
      return G__18307__delegate(args);
    };
    G__18307.cljs$core$IFn$_invoke$arity$variadic = G__18307__delegate;
    return G__18307;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__18364 = null;
      var G__18364__0 = function() {
        var G__18337 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18337) : f.call(null, G__18337);
      };
      var G__18364__1 = function(x) {
        var G__18338 = function() {
          var G__18339 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18339) : g.call(null, G__18339);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18338) : f.call(null, G__18338);
      };
      var G__18364__2 = function(x, y) {
        var G__18340 = function() {
          var G__18341 = x;
          var G__18342 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__18341, G__18342) : g.call(null, G__18341, G__18342);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18340) : f.call(null, G__18340);
      };
      var G__18364__3 = function(x, y, z) {
        var G__18343 = function() {
          var G__18344 = x;
          var G__18345 = y;
          var G__18346 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__18344, G__18345, G__18346) : g.call(null, G__18344, G__18345, G__18346);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18343) : f.call(null, G__18343);
      };
      var G__18364__4 = function() {
        var G__18365__delegate = function(x, y, z, args) {
          var G__18347 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18347) : f.call(null, G__18347);
        };
        var G__18365 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18366__i = 0, G__18366__a = new Array(arguments.length - 3);
            while (G__18366__i < G__18366__a.length) {
              G__18366__a[G__18366__i] = arguments[G__18366__i + 3];
              ++G__18366__i;
            }
            args = new cljs.core.IndexedSeq(G__18366__a, 0);
          }
          return G__18365__delegate.call(this, x, y, z, args);
        };
        G__18365.cljs$lang$maxFixedArity = 3;
        G__18365.cljs$lang$applyTo = function(arglist__18367) {
          var x = cljs.core.first(arglist__18367);
          arglist__18367 = cljs.core.next(arglist__18367);
          var y = cljs.core.first(arglist__18367);
          arglist__18367 = cljs.core.next(arglist__18367);
          var z = cljs.core.first(arglist__18367);
          var args = cljs.core.rest(arglist__18367);
          return G__18365__delegate(x, y, z, args);
        };
        G__18365.cljs$core$IFn$_invoke$arity$variadic = G__18365__delegate;
        return G__18365;
      }();
      G__18364 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18364__0.call(this);
          case 1:
            return G__18364__1.call(this, x);
          case 2:
            return G__18364__2.call(this, x, y);
          case 3:
            return G__18364__3.call(this, x, y, z);
          default:
            var G__18368 = null;
            if (arguments.length > 3) {
              var G__18369__i = 0, G__18369__a = new Array(arguments.length - 3);
              while (G__18369__i < G__18369__a.length) {
                G__18369__a[G__18369__i] = arguments[G__18369__i + 3];
                ++G__18369__i;
              }
              G__18368 = new cljs.core.IndexedSeq(G__18369__a, 0);
            }
            return G__18364__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18368);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18364.cljs$lang$maxFixedArity = 3;
      G__18364.cljs$lang$applyTo = G__18364__4.cljs$lang$applyTo;
      G__18364.cljs$core$IFn$_invoke$arity$0 = G__18364__0;
      G__18364.cljs$core$IFn$_invoke$arity$1 = G__18364__1;
      G__18364.cljs$core$IFn$_invoke$arity$2 = G__18364__2;
      G__18364.cljs$core$IFn$_invoke$arity$3 = G__18364__3;
      G__18364.cljs$core$IFn$_invoke$arity$variadic = G__18364__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18364;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__18370 = null;
      var G__18370__0 = function() {
        var G__18348 = function() {
          var G__18349 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18349) : g.call(null, G__18349);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18348) : f.call(null, G__18348);
      };
      var G__18370__1 = function(x) {
        var G__18350 = function() {
          var G__18351 = function() {
            var G__18352 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__18352) : h.call(null, G__18352);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18351) : g.call(null, G__18351);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18350) : f.call(null, G__18350);
      };
      var G__18370__2 = function(x, y) {
        var G__18353 = function() {
          var G__18354 = function() {
            var G__18355 = x;
            var G__18356 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__18355, G__18356) : h.call(null, G__18355, G__18356);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18354) : g.call(null, G__18354);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18353) : f.call(null, G__18353);
      };
      var G__18370__3 = function(x, y, z) {
        var G__18357 = function() {
          var G__18358 = function() {
            var G__18359 = x;
            var G__18360 = y;
            var G__18361 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__18359, G__18360, G__18361) : h.call(null, G__18359, G__18360, G__18361);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18358) : g.call(null, G__18358);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18357) : f.call(null, G__18357);
      };
      var G__18370__4 = function() {
        var G__18371__delegate = function(x, y, z, args) {
          var G__18362 = function() {
            var G__18363 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18363) : g.call(null, G__18363);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18362) : f.call(null, G__18362);
        };
        var G__18371 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18372__i = 0, G__18372__a = new Array(arguments.length - 3);
            while (G__18372__i < G__18372__a.length) {
              G__18372__a[G__18372__i] = arguments[G__18372__i + 3];
              ++G__18372__i;
            }
            args = new cljs.core.IndexedSeq(G__18372__a, 0);
          }
          return G__18371__delegate.call(this, x, y, z, args);
        };
        G__18371.cljs$lang$maxFixedArity = 3;
        G__18371.cljs$lang$applyTo = function(arglist__18373) {
          var x = cljs.core.first(arglist__18373);
          arglist__18373 = cljs.core.next(arglist__18373);
          var y = cljs.core.first(arglist__18373);
          arglist__18373 = cljs.core.next(arglist__18373);
          var z = cljs.core.first(arglist__18373);
          var args = cljs.core.rest(arglist__18373);
          return G__18371__delegate(x, y, z, args);
        };
        G__18371.cljs$core$IFn$_invoke$arity$variadic = G__18371__delegate;
        return G__18371;
      }();
      G__18370 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18370__0.call(this);
          case 1:
            return G__18370__1.call(this, x);
          case 2:
            return G__18370__2.call(this, x, y);
          case 3:
            return G__18370__3.call(this, x, y, z);
          default:
            var G__18374 = null;
            if (arguments.length > 3) {
              var G__18375__i = 0, G__18375__a = new Array(arguments.length - 3);
              while (G__18375__i < G__18375__a.length) {
                G__18375__a[G__18375__i] = arguments[G__18375__i + 3];
                ++G__18375__i;
              }
              G__18374 = new cljs.core.IndexedSeq(G__18375__a, 0);
            }
            return G__18370__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18374);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18370.cljs$lang$maxFixedArity = 3;
      G__18370.cljs$lang$applyTo = G__18370__4.cljs$lang$applyTo;
      G__18370.cljs$core$IFn$_invoke$arity$0 = G__18370__0;
      G__18370.cljs$core$IFn$_invoke$arity$1 = G__18370__1;
      G__18370.cljs$core$IFn$_invoke$arity$2 = G__18370__2;
      G__18370.cljs$core$IFn$_invoke$arity$3 = G__18370__3;
      G__18370.cljs$core$IFn$_invoke$arity$variadic = G__18370__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18370;
    }();
  };
  var comp__4 = function() {
    var G__18376__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__18377__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__18378 = cljs.core.first(fs__$2).call(null, ret);
                var G__18379 = cljs.core.next(fs__$2);
                ret = G__18378;
                fs__$2 = G__18379;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__18377 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__18380__i = 0, G__18380__a = new Array(arguments.length - 0);
              while (G__18380__i < G__18380__a.length) {
                G__18380__a[G__18380__i] = arguments[G__18380__i + 0];
                ++G__18380__i;
              }
              args = new cljs.core.IndexedSeq(G__18380__a, 0);
            }
            return G__18377__delegate.call(this, args);
          };
          G__18377.cljs$lang$maxFixedArity = 0;
          G__18377.cljs$lang$applyTo = function(arglist__18381) {
            var args = cljs.core.seq(arglist__18381);
            return G__18377__delegate(args);
          };
          G__18377.cljs$core$IFn$_invoke$arity$variadic = G__18377__delegate;
          return G__18377;
        }();
      }(fs__$1);
    };
    var G__18376 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__18382__i = 0, G__18382__a = new Array(arguments.length - 3);
        while (G__18382__i < G__18382__a.length) {
          G__18382__a[G__18382__i] = arguments[G__18382__i + 3];
          ++G__18382__i;
        }
        fs = new cljs.core.IndexedSeq(G__18382__a, 0);
      }
      return G__18376__delegate.call(this, f1, f2, f3, fs);
    };
    G__18376.cljs$lang$maxFixedArity = 3;
    G__18376.cljs$lang$applyTo = function(arglist__18383) {
      var f1 = cljs.core.first(arglist__18383);
      arglist__18383 = cljs.core.next(arglist__18383);
      var f2 = cljs.core.first(arglist__18383);
      arglist__18383 = cljs.core.next(arglist__18383);
      var f3 = cljs.core.first(arglist__18383);
      var fs = cljs.core.rest(arglist__18383);
      return G__18376__delegate(f1, f2, f3, fs);
    };
    G__18376.cljs$core$IFn$_invoke$arity$variadic = G__18376__delegate;
    return G__18376;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__18384 = null;
        if (arguments.length > 3) {
          var G__18385__i = 0, G__18385__a = new Array(arguments.length - 3);
          while (G__18385__i < G__18385__a.length) {
            G__18385__a[G__18385__i] = arguments[G__18385__i + 3];
            ++G__18385__i;
          }
          G__18384 = new cljs.core.IndexedSeq(G__18385__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__18384);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__18470 = null;
      var G__18470__0 = function() {
        var G__18428 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18428) : f.call(null, G__18428);
      };
      var G__18470__1 = function(x) {
        var G__18429 = arg1;
        var G__18430 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18429, G__18430) : f.call(null, G__18429, G__18430);
      };
      var G__18470__2 = function(x, y) {
        var G__18431 = arg1;
        var G__18432 = x;
        var G__18433 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18431, G__18432, G__18433) : f.call(null, G__18431, G__18432, G__18433);
      };
      var G__18470__3 = function(x, y, z) {
        var G__18434 = arg1;
        var G__18435 = x;
        var G__18436 = y;
        var G__18437 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18434, G__18435, G__18436, G__18437) : f.call(null, G__18434, G__18435, G__18436, G__18437);
      };
      var G__18470__4 = function() {
        var G__18471__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__18471 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18472__i = 0, G__18472__a = new Array(arguments.length - 3);
            while (G__18472__i < G__18472__a.length) {
              G__18472__a[G__18472__i] = arguments[G__18472__i + 3];
              ++G__18472__i;
            }
            args = new cljs.core.IndexedSeq(G__18472__a, 0);
          }
          return G__18471__delegate.call(this, x, y, z, args);
        };
        G__18471.cljs$lang$maxFixedArity = 3;
        G__18471.cljs$lang$applyTo = function(arglist__18473) {
          var x = cljs.core.first(arglist__18473);
          arglist__18473 = cljs.core.next(arglist__18473);
          var y = cljs.core.first(arglist__18473);
          arglist__18473 = cljs.core.next(arglist__18473);
          var z = cljs.core.first(arglist__18473);
          var args = cljs.core.rest(arglist__18473);
          return G__18471__delegate(x, y, z, args);
        };
        G__18471.cljs$core$IFn$_invoke$arity$variadic = G__18471__delegate;
        return G__18471;
      }();
      G__18470 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18470__0.call(this);
          case 1:
            return G__18470__1.call(this, x);
          case 2:
            return G__18470__2.call(this, x, y);
          case 3:
            return G__18470__3.call(this, x, y, z);
          default:
            var G__18474 = null;
            if (arguments.length > 3) {
              var G__18475__i = 0, G__18475__a = new Array(arguments.length - 3);
              while (G__18475__i < G__18475__a.length) {
                G__18475__a[G__18475__i] = arguments[G__18475__i + 3];
                ++G__18475__i;
              }
              G__18474 = new cljs.core.IndexedSeq(G__18475__a, 0);
            }
            return G__18470__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18474);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18470.cljs$lang$maxFixedArity = 3;
      G__18470.cljs$lang$applyTo = G__18470__4.cljs$lang$applyTo;
      G__18470.cljs$core$IFn$_invoke$arity$0 = G__18470__0;
      G__18470.cljs$core$IFn$_invoke$arity$1 = G__18470__1;
      G__18470.cljs$core$IFn$_invoke$arity$2 = G__18470__2;
      G__18470.cljs$core$IFn$_invoke$arity$3 = G__18470__3;
      G__18470.cljs$core$IFn$_invoke$arity$variadic = G__18470__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18470;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__18476 = null;
      var G__18476__0 = function() {
        var G__18438 = arg1;
        var G__18439 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18438, G__18439) : f.call(null, G__18438, G__18439);
      };
      var G__18476__1 = function(x) {
        var G__18440 = arg1;
        var G__18441 = arg2;
        var G__18442 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18440, G__18441, G__18442) : f.call(null, G__18440, G__18441, G__18442);
      };
      var G__18476__2 = function(x, y) {
        var G__18443 = arg1;
        var G__18444 = arg2;
        var G__18445 = x;
        var G__18446 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18443, G__18444, G__18445, G__18446) : f.call(null, G__18443, G__18444, G__18445, G__18446);
      };
      var G__18476__3 = function(x, y, z) {
        var G__18447 = arg1;
        var G__18448 = arg2;
        var G__18449 = x;
        var G__18450 = y;
        var G__18451 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18447, G__18448, G__18449, G__18450, G__18451) : f.call(null, G__18447, G__18448, G__18449, G__18450, G__18451);
      };
      var G__18476__4 = function() {
        var G__18477__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__18477 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18478__i = 0, G__18478__a = new Array(arguments.length - 3);
            while (G__18478__i < G__18478__a.length) {
              G__18478__a[G__18478__i] = arguments[G__18478__i + 3];
              ++G__18478__i;
            }
            args = new cljs.core.IndexedSeq(G__18478__a, 0);
          }
          return G__18477__delegate.call(this, x, y, z, args);
        };
        G__18477.cljs$lang$maxFixedArity = 3;
        G__18477.cljs$lang$applyTo = function(arglist__18479) {
          var x = cljs.core.first(arglist__18479);
          arglist__18479 = cljs.core.next(arglist__18479);
          var y = cljs.core.first(arglist__18479);
          arglist__18479 = cljs.core.next(arglist__18479);
          var z = cljs.core.first(arglist__18479);
          var args = cljs.core.rest(arglist__18479);
          return G__18477__delegate(x, y, z, args);
        };
        G__18477.cljs$core$IFn$_invoke$arity$variadic = G__18477__delegate;
        return G__18477;
      }();
      G__18476 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18476__0.call(this);
          case 1:
            return G__18476__1.call(this, x);
          case 2:
            return G__18476__2.call(this, x, y);
          case 3:
            return G__18476__3.call(this, x, y, z);
          default:
            var G__18480 = null;
            if (arguments.length > 3) {
              var G__18481__i = 0, G__18481__a = new Array(arguments.length - 3);
              while (G__18481__i < G__18481__a.length) {
                G__18481__a[G__18481__i] = arguments[G__18481__i + 3];
                ++G__18481__i;
              }
              G__18480 = new cljs.core.IndexedSeq(G__18481__a, 0);
            }
            return G__18476__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18480);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18476.cljs$lang$maxFixedArity = 3;
      G__18476.cljs$lang$applyTo = G__18476__4.cljs$lang$applyTo;
      G__18476.cljs$core$IFn$_invoke$arity$0 = G__18476__0;
      G__18476.cljs$core$IFn$_invoke$arity$1 = G__18476__1;
      G__18476.cljs$core$IFn$_invoke$arity$2 = G__18476__2;
      G__18476.cljs$core$IFn$_invoke$arity$3 = G__18476__3;
      G__18476.cljs$core$IFn$_invoke$arity$variadic = G__18476__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18476;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__18482 = null;
      var G__18482__0 = function() {
        var G__18452 = arg1;
        var G__18453 = arg2;
        var G__18454 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18452, G__18453, G__18454) : f.call(null, G__18452, G__18453, G__18454);
      };
      var G__18482__1 = function(x) {
        var G__18455 = arg1;
        var G__18456 = arg2;
        var G__18457 = arg3;
        var G__18458 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18455, G__18456, G__18457, G__18458) : f.call(null, G__18455, G__18456, G__18457, G__18458);
      };
      var G__18482__2 = function(x, y) {
        var G__18459 = arg1;
        var G__18460 = arg2;
        var G__18461 = arg3;
        var G__18462 = x;
        var G__18463 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18459, G__18460, G__18461, G__18462, G__18463) : f.call(null, G__18459, G__18460, G__18461, G__18462, G__18463);
      };
      var G__18482__3 = function(x, y, z) {
        var G__18464 = arg1;
        var G__18465 = arg2;
        var G__18466 = arg3;
        var G__18467 = x;
        var G__18468 = y;
        var G__18469 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__18464, G__18465, G__18466, G__18467, G__18468, G__18469) : f.call(null, G__18464, G__18465, G__18466, G__18467, G__18468, G__18469);
      };
      var G__18482__4 = function() {
        var G__18483__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__18483 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18484__i = 0, G__18484__a = new Array(arguments.length - 3);
            while (G__18484__i < G__18484__a.length) {
              G__18484__a[G__18484__i] = arguments[G__18484__i + 3];
              ++G__18484__i;
            }
            args = new cljs.core.IndexedSeq(G__18484__a, 0);
          }
          return G__18483__delegate.call(this, x, y, z, args);
        };
        G__18483.cljs$lang$maxFixedArity = 3;
        G__18483.cljs$lang$applyTo = function(arglist__18485) {
          var x = cljs.core.first(arglist__18485);
          arglist__18485 = cljs.core.next(arglist__18485);
          var y = cljs.core.first(arglist__18485);
          arglist__18485 = cljs.core.next(arglist__18485);
          var z = cljs.core.first(arglist__18485);
          var args = cljs.core.rest(arglist__18485);
          return G__18483__delegate(x, y, z, args);
        };
        G__18483.cljs$core$IFn$_invoke$arity$variadic = G__18483__delegate;
        return G__18483;
      }();
      G__18482 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18482__0.call(this);
          case 1:
            return G__18482__1.call(this, x);
          case 2:
            return G__18482__2.call(this, x, y);
          case 3:
            return G__18482__3.call(this, x, y, z);
          default:
            var G__18486 = null;
            if (arguments.length > 3) {
              var G__18487__i = 0, G__18487__a = new Array(arguments.length - 3);
              while (G__18487__i < G__18487__a.length) {
                G__18487__a[G__18487__i] = arguments[G__18487__i + 3];
                ++G__18487__i;
              }
              G__18486 = new cljs.core.IndexedSeq(G__18487__a, 0);
            }
            return G__18482__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18486);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18482.cljs$lang$maxFixedArity = 3;
      G__18482.cljs$lang$applyTo = G__18482__4.cljs$lang$applyTo;
      G__18482.cljs$core$IFn$_invoke$arity$0 = G__18482__0;
      G__18482.cljs$core$IFn$_invoke$arity$1 = G__18482__1;
      G__18482.cljs$core$IFn$_invoke$arity$2 = G__18482__2;
      G__18482.cljs$core$IFn$_invoke$arity$3 = G__18482__3;
      G__18482.cljs$core$IFn$_invoke$arity$variadic = G__18482__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18482;
    }();
  };
  var partial__5 = function() {
    var G__18488__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__18489__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__18489 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__18490__i = 0, G__18490__a = new Array(arguments.length - 0);
            while (G__18490__i < G__18490__a.length) {
              G__18490__a[G__18490__i] = arguments[G__18490__i + 0];
              ++G__18490__i;
            }
            args = new cljs.core.IndexedSeq(G__18490__a, 0);
          }
          return G__18489__delegate.call(this, args);
        };
        G__18489.cljs$lang$maxFixedArity = 0;
        G__18489.cljs$lang$applyTo = function(arglist__18491) {
          var args = cljs.core.seq(arglist__18491);
          return G__18489__delegate(args);
        };
        G__18489.cljs$core$IFn$_invoke$arity$variadic = G__18489__delegate;
        return G__18489;
      }();
    };
    var G__18488 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__18492__i = 0, G__18492__a = new Array(arguments.length - 4);
        while (G__18492__i < G__18492__a.length) {
          G__18492__a[G__18492__i] = arguments[G__18492__i + 4];
          ++G__18492__i;
        }
        more = new cljs.core.IndexedSeq(G__18492__a, 0);
      }
      return G__18488__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__18488.cljs$lang$maxFixedArity = 4;
    G__18488.cljs$lang$applyTo = function(arglist__18493) {
      var f = cljs.core.first(arglist__18493);
      arglist__18493 = cljs.core.next(arglist__18493);
      var arg1 = cljs.core.first(arglist__18493);
      arglist__18493 = cljs.core.next(arglist__18493);
      var arg2 = cljs.core.first(arglist__18493);
      arglist__18493 = cljs.core.next(arglist__18493);
      var arg3 = cljs.core.first(arglist__18493);
      var more = cljs.core.rest(arglist__18493);
      return G__18488__delegate(f, arg1, arg2, arg3, more);
    };
    G__18488.cljs$core$IFn$_invoke$arity$variadic = G__18488__delegate;
    return G__18488;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__18494 = null;
        if (arguments.length > 4) {
          var G__18495__i = 0, G__18495__a = new Array(arguments.length - 4);
          while (G__18495__i < G__18495__a.length) {
            G__18495__a[G__18495__i] = arguments[G__18495__i + 4];
            ++G__18495__i;
          }
          G__18494 = new cljs.core.IndexedSeq(G__18495__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__18494);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__18528 = null;
      var G__18528__1 = function(a) {
        var G__18512 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18512) : f.call(null, G__18512);
      };
      var G__18528__2 = function(a, b) {
        var G__18513 = a == null ? x : a;
        var G__18514 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18513, G__18514) : f.call(null, G__18513, G__18514);
      };
      var G__18528__3 = function(a, b, c) {
        var G__18515 = a == null ? x : a;
        var G__18516 = b;
        var G__18517 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18515, G__18516, G__18517) : f.call(null, G__18515, G__18516, G__18517);
      };
      var G__18528__4 = function() {
        var G__18529__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__18529 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__18530__i = 0, G__18530__a = new Array(arguments.length - 3);
            while (G__18530__i < G__18530__a.length) {
              G__18530__a[G__18530__i] = arguments[G__18530__i + 3];
              ++G__18530__i;
            }
            ds = new cljs.core.IndexedSeq(G__18530__a, 0);
          }
          return G__18529__delegate.call(this, a, b, c, ds);
        };
        G__18529.cljs$lang$maxFixedArity = 3;
        G__18529.cljs$lang$applyTo = function(arglist__18531) {
          var a = cljs.core.first(arglist__18531);
          arglist__18531 = cljs.core.next(arglist__18531);
          var b = cljs.core.first(arglist__18531);
          arglist__18531 = cljs.core.next(arglist__18531);
          var c = cljs.core.first(arglist__18531);
          var ds = cljs.core.rest(arglist__18531);
          return G__18529__delegate(a, b, c, ds);
        };
        G__18529.cljs$core$IFn$_invoke$arity$variadic = G__18529__delegate;
        return G__18529;
      }();
      G__18528 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__18528__1.call(this, a);
          case 2:
            return G__18528__2.call(this, a, b);
          case 3:
            return G__18528__3.call(this, a, b, c);
          default:
            var G__18532 = null;
            if (arguments.length > 3) {
              var G__18533__i = 0, G__18533__a = new Array(arguments.length - 3);
              while (G__18533__i < G__18533__a.length) {
                G__18533__a[G__18533__i] = arguments[G__18533__i + 3];
                ++G__18533__i;
              }
              G__18532 = new cljs.core.IndexedSeq(G__18533__a, 0);
            }
            return G__18528__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__18532);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18528.cljs$lang$maxFixedArity = 3;
      G__18528.cljs$lang$applyTo = G__18528__4.cljs$lang$applyTo;
      G__18528.cljs$core$IFn$_invoke$arity$1 = G__18528__1;
      G__18528.cljs$core$IFn$_invoke$arity$2 = G__18528__2;
      G__18528.cljs$core$IFn$_invoke$arity$3 = G__18528__3;
      G__18528.cljs$core$IFn$_invoke$arity$variadic = G__18528__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18528;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__18534 = null;
      var G__18534__2 = function(a, b) {
        var G__18518 = a == null ? x : a;
        var G__18519 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18518, G__18519) : f.call(null, G__18518, G__18519);
      };
      var G__18534__3 = function(a, b, c) {
        var G__18520 = a == null ? x : a;
        var G__18521 = b == null ? y : b;
        var G__18522 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18520, G__18521, G__18522) : f.call(null, G__18520, G__18521, G__18522);
      };
      var G__18534__4 = function() {
        var G__18535__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__18535 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__18536__i = 0, G__18536__a = new Array(arguments.length - 3);
            while (G__18536__i < G__18536__a.length) {
              G__18536__a[G__18536__i] = arguments[G__18536__i + 3];
              ++G__18536__i;
            }
            ds = new cljs.core.IndexedSeq(G__18536__a, 0);
          }
          return G__18535__delegate.call(this, a, b, c, ds);
        };
        G__18535.cljs$lang$maxFixedArity = 3;
        G__18535.cljs$lang$applyTo = function(arglist__18537) {
          var a = cljs.core.first(arglist__18537);
          arglist__18537 = cljs.core.next(arglist__18537);
          var b = cljs.core.first(arglist__18537);
          arglist__18537 = cljs.core.next(arglist__18537);
          var c = cljs.core.first(arglist__18537);
          var ds = cljs.core.rest(arglist__18537);
          return G__18535__delegate(a, b, c, ds);
        };
        G__18535.cljs$core$IFn$_invoke$arity$variadic = G__18535__delegate;
        return G__18535;
      }();
      G__18534 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__18534__2.call(this, a, b);
          case 3:
            return G__18534__3.call(this, a, b, c);
          default:
            var G__18538 = null;
            if (arguments.length > 3) {
              var G__18539__i = 0, G__18539__a = new Array(arguments.length - 3);
              while (G__18539__i < G__18539__a.length) {
                G__18539__a[G__18539__i] = arguments[G__18539__i + 3];
                ++G__18539__i;
              }
              G__18538 = new cljs.core.IndexedSeq(G__18539__a, 0);
            }
            return G__18534__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__18538);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18534.cljs$lang$maxFixedArity = 3;
      G__18534.cljs$lang$applyTo = G__18534__4.cljs$lang$applyTo;
      G__18534.cljs$core$IFn$_invoke$arity$2 = G__18534__2;
      G__18534.cljs$core$IFn$_invoke$arity$3 = G__18534__3;
      G__18534.cljs$core$IFn$_invoke$arity$variadic = G__18534__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18534;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__18540 = null;
      var G__18540__2 = function(a, b) {
        var G__18523 = a == null ? x : a;
        var G__18524 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18523, G__18524) : f.call(null, G__18523, G__18524);
      };
      var G__18540__3 = function(a, b, c) {
        var G__18525 = a == null ? x : a;
        var G__18526 = b == null ? y : b;
        var G__18527 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18525, G__18526, G__18527) : f.call(null, G__18525, G__18526, G__18527);
      };
      var G__18540__4 = function() {
        var G__18541__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__18541 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__18542__i = 0, G__18542__a = new Array(arguments.length - 3);
            while (G__18542__i < G__18542__a.length) {
              G__18542__a[G__18542__i] = arguments[G__18542__i + 3];
              ++G__18542__i;
            }
            ds = new cljs.core.IndexedSeq(G__18542__a, 0);
          }
          return G__18541__delegate.call(this, a, b, c, ds);
        };
        G__18541.cljs$lang$maxFixedArity = 3;
        G__18541.cljs$lang$applyTo = function(arglist__18543) {
          var a = cljs.core.first(arglist__18543);
          arglist__18543 = cljs.core.next(arglist__18543);
          var b = cljs.core.first(arglist__18543);
          arglist__18543 = cljs.core.next(arglist__18543);
          var c = cljs.core.first(arglist__18543);
          var ds = cljs.core.rest(arglist__18543);
          return G__18541__delegate(a, b, c, ds);
        };
        G__18541.cljs$core$IFn$_invoke$arity$variadic = G__18541__delegate;
        return G__18541;
      }();
      G__18540 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__18540__2.call(this, a, b);
          case 3:
            return G__18540__3.call(this, a, b, c);
          default:
            var G__18544 = null;
            if (arguments.length > 3) {
              var G__18545__i = 0, G__18545__a = new Array(arguments.length - 3);
              while (G__18545__i < G__18545__a.length) {
                G__18545__a[G__18545__i] = arguments[G__18545__i + 3];
                ++G__18545__i;
              }
              G__18544 = new cljs.core.IndexedSeq(G__18545__a, 0);
            }
            return G__18540__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__18544);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18540.cljs$lang$maxFixedArity = 3;
      G__18540.cljs$lang$applyTo = G__18540__4.cljs$lang$applyTo;
      G__18540.cljs$core$IFn$_invoke$arity$2 = G__18540__2;
      G__18540.cljs$core$IFn$_invoke$arity$3 = G__18540__3;
      G__18540.cljs$core$IFn$_invoke$arity$variadic = G__18540__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18540;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__18576 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__18576) : cljs.core.volatile_BANG_.call(null, G__18576);
      }();
      return function(i) {
        return function() {
          var G__18606 = null;
          var G__18606__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__18606__1 = function(result) {
            var G__18577 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18577) : rf.call(null, G__18577);
          };
          var G__18606__2 = function(result, input) {
            var G__18578 = result;
            var G__18579 = function() {
              var G__18580 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__18581 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18580, G__18581) : f.call(null, G__18580, G__18581);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18578, G__18579) : rf.call(null, G__18578, G__18579);
          };
          G__18606 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18606__0.call(this);
              case 1:
                return G__18606__1.call(this, result);
              case 2:
                return G__18606__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18606.cljs$core$IFn$_invoke$arity$0 = G__18606__0;
          G__18606.cljs$core$IFn$_invoke$arity$1 = G__18606__1;
          G__18606.cljs$core$IFn$_invoke$arity$2 = G__18606__2;
          return G__18606;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4812__auto___18607 = size;
            var i_18608 = 0;
            while (true) {
              if (i_18608 < n__4812__auto___18607) {
                cljs.core.chunk_append(b, function() {
                  var G__18602 = idx + i_18608;
                  var G__18603 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_18608);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18602, G__18603) : f.call(null, G__18602, G__18603);
                }());
                var G__18609 = i_18608 + 1;
                i_18608 = G__18609;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__18604 = idx;
              var G__18605 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18604, G__18605) : f.call(null, G__18604, G__18605);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__18628 = null;
        var G__18628__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__18628__1 = function(result) {
          var G__18622 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18622) : rf.call(null, G__18622);
        };
        var G__18628__2 = function(result, input) {
          var v = function() {
            var G__18623 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18623) : f.call(null, G__18623);
          }();
          if (v == null) {
            return result;
          } else {
            var G__18624 = result;
            var G__18625 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18624, G__18625) : rf.call(null, G__18624, G__18625);
          }
        };
        G__18628 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__18628__0.call(this);
            case 1:
              return G__18628__1.call(this, result);
            case 2:
              return G__18628__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__18628.cljs$core$IFn$_invoke$arity$0 = G__18628__0;
        G__18628.cljs$core$IFn$_invoke$arity$1 = G__18628__1;
        G__18628.cljs$core$IFn$_invoke$arity$2 = G__18628__2;
        return G__18628;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4812__auto___18629 = size;
          var i_18630 = 0;
          while (true) {
            if (i_18630 < n__4812__auto___18629) {
              var x_18631 = function() {
                var G__18626 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_18630);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18626) : f.call(null, G__18626);
              }();
              if (x_18631 == null) {
              } else {
                cljs.core.chunk_append(b, x_18631);
              }
              var G__18632 = i_18630 + 1;
              i_18630 = G__18632;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__18627 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18627) : f.call(null, G__18627);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__18633 = this$__$1;
  return goog.getUid(G__18633);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__18634 = cljs.core.seq(self__.watches);
  var chunk__18635 = null;
  var count__18636 = 0;
  var i__18637 = 0;
  while (true) {
    if (i__18637 < count__18636) {
      var vec__18638 = chunk__18635.cljs$core$IIndexed$_nth$arity$2(null, i__18637);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18638, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18638, 1, null);
      var G__18639_18648 = key;
      var G__18640_18649 = this$__$1;
      var G__18641_18650 = oldval;
      var G__18642_18651 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18639_18648, G__18640_18649, G__18641_18650, G__18642_18651) : f.call(null, G__18639_18648, G__18640_18649, G__18641_18650, G__18642_18651);
      var G__18652 = seq__18634;
      var G__18653 = chunk__18635;
      var G__18654 = count__18636;
      var G__18655 = i__18637 + 1;
      seq__18634 = G__18652;
      chunk__18635 = G__18653;
      count__18636 = G__18654;
      i__18637 = G__18655;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__18634);
      if (temp__4126__auto__) {
        var seq__18634__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__18634__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__18634__$1);
          var G__18656 = cljs.core.chunk_rest(seq__18634__$1);
          var G__18657 = c__4712__auto__;
          var G__18658 = cljs.core.count(c__4712__auto__);
          var G__18659 = 0;
          seq__18634 = G__18656;
          chunk__18635 = G__18657;
          count__18636 = G__18658;
          i__18637 = G__18659;
          continue;
        } else {
          var vec__18643 = cljs.core.first(seq__18634__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18643, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18643, 1, null);
          var G__18644_18660 = key;
          var G__18645_18661 = this$__$1;
          var G__18646_18662 = oldval;
          var G__18647_18663 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18644_18660, G__18645_18661, G__18646_18662, G__18647_18663) : f.call(null, G__18644_18660, G__18645_18661, G__18646_18662, G__18647_18663);
          var G__18664 = cljs.core.next(seq__18634__$1);
          var G__18665 = null;
          var G__18666 = 0;
          var G__18667 = 0;
          seq__18634 = G__18664;
          chunk__18635 = G__18665;
          count__18636 = G__18666;
          i__18637 = G__18667;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__18671__delegate = function(x, p__18668) {
      var map__18670 = p__18668;
      var map__18670__$1 = cljs.core.seq_QMARK_(map__18670) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__18670) : map__18670;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__18670__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__18670__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__18671 = function(x, var_args) {
      var p__18668 = null;
      if (arguments.length > 1) {
        var G__18672__i = 0, G__18672__a = new Array(arguments.length - 1);
        while (G__18672__i < G__18672__a.length) {
          G__18672__a[G__18672__i] = arguments[G__18672__i + 1];
          ++G__18672__i;
        }
        p__18668 = new cljs.core.IndexedSeq(G__18672__a, 0);
      }
      return G__18671__delegate.call(this, x, p__18668);
    };
    G__18671.cljs$lang$maxFixedArity = 1;
    G__18671.cljs$lang$applyTo = function(arglist__18673) {
      var x = cljs.core.first(arglist__18673);
      var p__18668 = cljs.core.rest(arglist__18673);
      return G__18671__delegate(x, p__18668);
    };
    G__18671.cljs$core$IFn$_invoke$arity$variadic = G__18671__delegate;
    return G__18671;
  }();
  atom = function(x, var_args) {
    var p__18668 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__18674 = null;
        if (arguments.length > 1) {
          var G__18675__i = 0, G__18675__a = new Array(arguments.length - 1);
          while (G__18675__i < G__18675__a.length) {
            G__18675__a[G__18675__i] = arguments[G__18675__i + 1];
            ++G__18675__i;
          }
          G__18674 = new cljs.core.IndexedSeq(G__18675__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__18674);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__18678 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__18678) : validate.call(null, G__18678);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__18679 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__18679) : cljs.core.pr_str.call(null, G__18679);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__18686 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18686) : f.call(null, G__18686);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__18687 = a.state;
        var G__18688 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18687, G__18688) : f.call(null, G__18687, G__18688);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__18689 = a.state;
        var G__18690 = x;
        var G__18691 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18689, G__18690, G__18691) : f.call(null, G__18689, G__18690, G__18691);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__18692__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__18692 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__18693__i = 0, G__18693__a = new Array(arguments.length - 4);
        while (G__18693__i < G__18693__a.length) {
          G__18693__a[G__18693__i] = arguments[G__18693__i + 4];
          ++G__18693__i;
        }
        more = new cljs.core.IndexedSeq(G__18693__a, 0);
      }
      return G__18692__delegate.call(this, a, f, x, y, more);
    };
    G__18692.cljs$lang$maxFixedArity = 4;
    G__18692.cljs$lang$applyTo = function(arglist__18694) {
      var a = cljs.core.first(arglist__18694);
      arglist__18694 = cljs.core.next(arglist__18694);
      var f = cljs.core.first(arglist__18694);
      arglist__18694 = cljs.core.next(arglist__18694);
      var x = cljs.core.first(arglist__18694);
      arglist__18694 = cljs.core.next(arglist__18694);
      var y = cljs.core.first(arglist__18694);
      var more = cljs.core.rest(arglist__18694);
      return G__18692__delegate(a, f, x, y, more);
    };
    G__18692.cljs$core$IFn$_invoke$arity$variadic = G__18692__delegate;
    return G__18692;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__18695 = null;
        if (arguments.length > 4) {
          var G__18696__i = 0, G__18696__a = new Array(arguments.length - 4);
          while (G__18696__i < G__18696__a.length) {
            G__18696__a[G__18696__i] = arguments[G__18696__i + 4];
            ++G__18696__i;
          }
          G__18695 = new cljs.core.IndexedSeq(G__18696__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__18695);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__18763 = null;
          var G__18763__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__18763__1 = function(result) {
            var G__18730 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18730) : rf.call(null, G__18730);
          };
          var G__18763__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__18731 = i;
              var G__18732 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18731, G__18732) : f.call(null, G__18731, G__18732);
            }();
            if (v == null) {
              return result;
            } else {
              var G__18733 = result;
              var G__18734 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18733, G__18734) : rf.call(null, G__18733, G__18734);
            }
          };
          G__18763 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18763__0.call(this);
              case 1:
                return G__18763__1.call(this, result);
              case 2:
                return G__18763__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18763.cljs$core$IFn$_invoke$arity$0 = G__18763__0;
          G__18763.cljs$core$IFn$_invoke$arity$1 = G__18763__1;
          G__18763.cljs$core$IFn$_invoke$arity$2 = G__18763__2;
          return G__18763;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4812__auto___18764 = size;
            var i_18765 = 0;
            while (true) {
              if (i_18765 < n__4812__auto___18764) {
                var x_18766 = function() {
                  var G__18759 = idx + i_18765;
                  var G__18760 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_18765);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18759, G__18760) : f.call(null, G__18759, G__18760);
                }();
                if (x_18766 == null) {
                } else {
                  cljs.core.chunk_append(b, x_18766);
                }
                var G__18767 = i_18765 + 1;
                i_18765 = G__18767;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__18761 = idx;
              var G__18762 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18761, G__18762) : f.call(null, G__18761, G__18762);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__18981 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18981) : p.call(null, G__18981);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__18983 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18983) : p.call(null, G__18983);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var G__18984 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18984) : p.call(null, G__18984);
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__18986 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18986) : p.call(null, G__18986);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__18988 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18988) : p.call(null, G__18988);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var G__18989 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18989) : p.call(null, G__18989);
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__19158__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__19158 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19159__i = 0, G__19159__a = new Array(arguments.length - 3);
            while (G__19159__i < G__19159__a.length) {
              G__19159__a[G__19159__i] = arguments[G__19159__i + 3];
              ++G__19159__i;
            }
            args = new cljs.core.IndexedSeq(G__19159__a, 0);
          }
          return G__19158__delegate.call(this, x, y, z, args);
        };
        G__19158.cljs$lang$maxFixedArity = 3;
        G__19158.cljs$lang$applyTo = function(arglist__19160) {
          var x = cljs.core.first(arglist__19160);
          arglist__19160 = cljs.core.next(arglist__19160);
          var y = cljs.core.first(arglist__19160);
          arglist__19160 = cljs.core.next(arglist__19160);
          var z = cljs.core.first(arglist__19160);
          var args = cljs.core.rest(arglist__19160);
          return G__19158__delegate(x, y, z, args);
        };
        G__19158.cljs$core$IFn$_invoke$arity$variadic = G__19158__delegate;
        return G__19158;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__19161 = null;
            if (arguments.length > 3) {
              var G__19162__i = 0, G__19162__a = new Array(arguments.length - 3);
              while (G__19162__i < G__19162__a.length) {
                G__19162__a[G__19162__i] = arguments[G__19162__i + 3];
                ++G__19162__i;
              }
              G__19161 = new cljs.core.IndexedSeq(G__19162__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19161);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__19021 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19021) : p1.call(null, G__19021);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var G__19022 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19022) : p2.call(null, G__19022);
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__19024 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19024) : p1.call(null, G__19024);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__19026 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19026) : p1.call(null, G__19026);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var and__3913__auto____$2 = function() {
                var G__19028 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19028) : p2.call(null, G__19028);
              }();
              if (cljs.core.truth_(and__3913__auto____$2)) {
                var G__19029 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19029) : p2.call(null, G__19029);
              } else {
                return and__3913__auto____$2;
              }
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__19031 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19031) : p1.call(null, G__19031);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__19033 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19033) : p1.call(null, G__19033);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var and__3913__auto____$2 = function() {
                var G__19035 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19035) : p1.call(null, G__19035);
              }();
              if (cljs.core.truth_(and__3913__auto____$2)) {
                var and__3913__auto____$3 = function() {
                  var G__19037 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19037) : p2.call(null, G__19037);
                }();
                if (cljs.core.truth_(and__3913__auto____$3)) {
                  var and__3913__auto____$4 = function() {
                    var G__19039 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19039) : p2.call(null, G__19039);
                  }();
                  if (cljs.core.truth_(and__3913__auto____$4)) {
                    var G__19040 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19040) : p2.call(null, G__19040);
                  } else {
                    return and__3913__auto____$4;
                  }
                } else {
                  return and__3913__auto____$3;
                }
              } else {
                return and__3913__auto____$2;
              }
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__19163__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__18768_SHARP_) {
            var and__3913__auto__ = function() {
              var G__19045 = p1__18768_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19045) : p1.call(null, G__19045);
            }();
            if (cljs.core.truth_(and__3913__auto__)) {
              var G__19046 = p1__18768_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19046) : p2.call(null, G__19046);
            } else {
              return and__3913__auto__;
            }
          }, args));
        };
        var G__19163 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19164__i = 0, G__19164__a = new Array(arguments.length - 3);
            while (G__19164__i < G__19164__a.length) {
              G__19164__a[G__19164__i] = arguments[G__19164__i + 3];
              ++G__19164__i;
            }
            args = new cljs.core.IndexedSeq(G__19164__a, 0);
          }
          return G__19163__delegate.call(this, x, y, z, args);
        };
        G__19163.cljs$lang$maxFixedArity = 3;
        G__19163.cljs$lang$applyTo = function(arglist__19165) {
          var x = cljs.core.first(arglist__19165);
          arglist__19165 = cljs.core.next(arglist__19165);
          var y = cljs.core.first(arglist__19165);
          arglist__19165 = cljs.core.next(arglist__19165);
          var z = cljs.core.first(arglist__19165);
          var args = cljs.core.rest(arglist__19165);
          return G__19163__delegate(x, y, z, args);
        };
        G__19163.cljs$core$IFn$_invoke$arity$variadic = G__19163__delegate;
        return G__19163;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__19166 = null;
            if (arguments.length > 3) {
              var G__19167__i = 0, G__19167__a = new Array(arguments.length - 3);
              while (G__19167__i < G__19167__a.length) {
                G__19167__a[G__19167__i] = arguments[G__19167__i + 3];
                ++G__19167__i;
              }
              G__19166 = new cljs.core.IndexedSeq(G__19167__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19166);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__19092 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19092) : p1.call(null, G__19092);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__19094 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19094) : p2.call(null, G__19094);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var G__19095 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19095) : p3.call(null, G__19095);
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__19097 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19097) : p1.call(null, G__19097);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__19099 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19099) : p2.call(null, G__19099);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var and__3913__auto____$2 = function() {
                var G__19101 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19101) : p3.call(null, G__19101);
              }();
              if (cljs.core.truth_(and__3913__auto____$2)) {
                var and__3913__auto____$3 = function() {
                  var G__19103 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19103) : p1.call(null, G__19103);
                }();
                if (cljs.core.truth_(and__3913__auto____$3)) {
                  var and__3913__auto____$4 = function() {
                    var G__19105 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19105) : p2.call(null, G__19105);
                  }();
                  if (cljs.core.truth_(and__3913__auto____$4)) {
                    var G__19106 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19106) : p3.call(null, G__19106);
                  } else {
                    return and__3913__auto____$4;
                  }
                } else {
                  return and__3913__auto____$3;
                }
              } else {
                return and__3913__auto____$2;
              }
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__19108 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19108) : p1.call(null, G__19108);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__19110 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19110) : p2.call(null, G__19110);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var and__3913__auto____$2 = function() {
                var G__19112 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19112) : p3.call(null, G__19112);
              }();
              if (cljs.core.truth_(and__3913__auto____$2)) {
                var and__3913__auto____$3 = function() {
                  var G__19114 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19114) : p1.call(null, G__19114);
                }();
                if (cljs.core.truth_(and__3913__auto____$3)) {
                  var and__3913__auto____$4 = function() {
                    var G__19116 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19116) : p2.call(null, G__19116);
                  }();
                  if (cljs.core.truth_(and__3913__auto____$4)) {
                    var and__3913__auto____$5 = function() {
                      var G__19118 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19118) : p3.call(null, G__19118);
                    }();
                    if (cljs.core.truth_(and__3913__auto____$5)) {
                      var and__3913__auto____$6 = function() {
                        var G__19120 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19120) : p1.call(null, G__19120);
                      }();
                      if (cljs.core.truth_(and__3913__auto____$6)) {
                        var and__3913__auto____$7 = function() {
                          var G__19122 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19122) : p2.call(null, G__19122);
                        }();
                        if (cljs.core.truth_(and__3913__auto____$7)) {
                          var G__19123 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19123) : p3.call(null, G__19123);
                        } else {
                          return and__3913__auto____$7;
                        }
                      } else {
                        return and__3913__auto____$6;
                      }
                    } else {
                      return and__3913__auto____$5;
                    }
                  } else {
                    return and__3913__auto____$4;
                  }
                } else {
                  return and__3913__auto____$3;
                }
              } else {
                return and__3913__auto____$2;
              }
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__19168__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__18769_SHARP_) {
            var and__3913__auto__ = function() {
              var G__19130 = p1__18769_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19130) : p1.call(null, G__19130);
            }();
            if (cljs.core.truth_(and__3913__auto__)) {
              var and__3913__auto____$1 = function() {
                var G__19132 = p1__18769_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19132) : p2.call(null, G__19132);
              }();
              if (cljs.core.truth_(and__3913__auto____$1)) {
                var G__19133 = p1__18769_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19133) : p3.call(null, G__19133);
              } else {
                return and__3913__auto____$1;
              }
            } else {
              return and__3913__auto__;
            }
          }, args));
        };
        var G__19168 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19169__i = 0, G__19169__a = new Array(arguments.length - 3);
            while (G__19169__i < G__19169__a.length) {
              G__19169__a[G__19169__i] = arguments[G__19169__i + 3];
              ++G__19169__i;
            }
            args = new cljs.core.IndexedSeq(G__19169__a, 0);
          }
          return G__19168__delegate.call(this, x, y, z, args);
        };
        G__19168.cljs$lang$maxFixedArity = 3;
        G__19168.cljs$lang$applyTo = function(arglist__19170) {
          var x = cljs.core.first(arglist__19170);
          arglist__19170 = cljs.core.next(arglist__19170);
          var y = cljs.core.first(arglist__19170);
          arglist__19170 = cljs.core.next(arglist__19170);
          var z = cljs.core.first(arglist__19170);
          var args = cljs.core.rest(arglist__19170);
          return G__19168__delegate(x, y, z, args);
        };
        G__19168.cljs$core$IFn$_invoke$arity$variadic = G__19168__delegate;
        return G__19168;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__19171 = null;
            if (arguments.length > 3) {
              var G__19172__i = 0, G__19172__a = new Array(arguments.length - 3);
              while (G__19172__i < G__19172__a.length) {
                G__19172__a[G__19172__i] = arguments[G__19172__i + 3];
                ++G__19172__i;
              }
              G__19171 = new cljs.core.IndexedSeq(G__19172__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19171);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__19173__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__18770_SHARP_) {
                var G__19149 = x;
                return p1__18770_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18770_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19149) : p1__18770_SHARP_.call(null, G__19149);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__18771_SHARP_) {
                var and__3913__auto__ = function() {
                  var G__19151 = x;
                  return p1__18771_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18771_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19151) : p1__18771_SHARP_.call(null, G__19151);
                }();
                if (cljs.core.truth_(and__3913__auto__)) {
                  var G__19152 = y;
                  return p1__18771_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18771_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19152) : p1__18771_SHARP_.call(null, G__19152);
                } else {
                  return and__3913__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__18772_SHARP_) {
                var and__3913__auto__ = function() {
                  var G__19154 = x;
                  return p1__18772_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18772_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19154) : p1__18772_SHARP_.call(null, G__19154);
                }();
                if (cljs.core.truth_(and__3913__auto__)) {
                  var and__3913__auto____$1 = function() {
                    var G__19156 = y;
                    return p1__18772_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18772_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19156) : p1__18772_SHARP_.call(null, G__19156);
                  }();
                  if (cljs.core.truth_(and__3913__auto____$1)) {
                    var G__19157 = z;
                    return p1__18772_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18772_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19157) : p1__18772_SHARP_.call(null, G__19157);
                  } else {
                    return and__3913__auto____$1;
                  }
                } else {
                  return and__3913__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__19174__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__18773_SHARP_) {
                  return cljs.core.every_QMARK_(p1__18773_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__19174 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__19175__i = 0, G__19175__a = new Array(arguments.length - 3);
                while (G__19175__i < G__19175__a.length) {
                  G__19175__a[G__19175__i] = arguments[G__19175__i + 3];
                  ++G__19175__i;
                }
                args = new cljs.core.IndexedSeq(G__19175__a, 0);
              }
              return G__19174__delegate.call(this, x, y, z, args);
            };
            G__19174.cljs$lang$maxFixedArity = 3;
            G__19174.cljs$lang$applyTo = function(arglist__19176) {
              var x = cljs.core.first(arglist__19176);
              arglist__19176 = cljs.core.next(arglist__19176);
              var y = cljs.core.first(arglist__19176);
              arglist__19176 = cljs.core.next(arglist__19176);
              var z = cljs.core.first(arglist__19176);
              var args = cljs.core.rest(arglist__19176);
              return G__19174__delegate(x, y, z, args);
            };
            G__19174.cljs$core$IFn$_invoke$arity$variadic = G__19174__delegate;
            return G__19174;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__19177 = null;
                if (arguments.length > 3) {
                  var G__19178__i = 0, G__19178__a = new Array(arguments.length - 3);
                  while (G__19178__i < G__19178__a.length) {
                    G__19178__a[G__19178__i] = arguments[G__19178__i + 3];
                    ++G__19178__i;
                  }
                  G__19177 = new cljs.core.IndexedSeq(G__19178__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19177);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__19173 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__19179__i = 0, G__19179__a = new Array(arguments.length - 3);
        while (G__19179__i < G__19179__a.length) {
          G__19179__a[G__19179__i] = arguments[G__19179__i + 3];
          ++G__19179__i;
        }
        ps = new cljs.core.IndexedSeq(G__19179__a, 0);
      }
      return G__19173__delegate.call(this, p1, p2, p3, ps);
    };
    G__19173.cljs$lang$maxFixedArity = 3;
    G__19173.cljs$lang$applyTo = function(arglist__19180) {
      var p1 = cljs.core.first(arglist__19180);
      arglist__19180 = cljs.core.next(arglist__19180);
      var p2 = cljs.core.first(arglist__19180);
      arglist__19180 = cljs.core.next(arglist__19180);
      var p3 = cljs.core.first(arglist__19180);
      var ps = cljs.core.rest(arglist__19180);
      return G__19173__delegate(p1, p2, p3, ps);
    };
    G__19173.cljs$core$IFn$_invoke$arity$variadic = G__19173__delegate;
    return G__19173;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__19181 = null;
        if (arguments.length > 3) {
          var G__19182__i = 0, G__19182__a = new Array(arguments.length - 3);
          while (G__19182__i < G__19182__a.length) {
            G__19182__a[G__19182__i] = arguments[G__19182__i + 3];
            ++G__19182__i;
          }
          G__19181 = new cljs.core.IndexedSeq(G__19182__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__19181);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__19388 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19388) : p.call(null, G__19388);
      };
      var sp1__2 = function(x, y) {
        var or__3925__auto__ = function() {
          var G__19390 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19390) : p.call(null, G__19390);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var G__19391 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19391) : p.call(null, G__19391);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3925__auto__ = function() {
          var G__19393 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19393) : p.call(null, G__19393);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__19395 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19395) : p.call(null, G__19395);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var G__19396 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19396) : p.call(null, G__19396);
          }
        }
      };
      var sp1__4 = function() {
        var G__19557__delegate = function(x, y, z, args) {
          var or__3925__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__19557 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19558__i = 0, G__19558__a = new Array(arguments.length - 3);
            while (G__19558__i < G__19558__a.length) {
              G__19558__a[G__19558__i] = arguments[G__19558__i + 3];
              ++G__19558__i;
            }
            args = new cljs.core.IndexedSeq(G__19558__a, 0);
          }
          return G__19557__delegate.call(this, x, y, z, args);
        };
        G__19557.cljs$lang$maxFixedArity = 3;
        G__19557.cljs$lang$applyTo = function(arglist__19559) {
          var x = cljs.core.first(arglist__19559);
          arglist__19559 = cljs.core.next(arglist__19559);
          var y = cljs.core.first(arglist__19559);
          arglist__19559 = cljs.core.next(arglist__19559);
          var z = cljs.core.first(arglist__19559);
          var args = cljs.core.rest(arglist__19559);
          return G__19557__delegate(x, y, z, args);
        };
        G__19557.cljs$core$IFn$_invoke$arity$variadic = G__19557__delegate;
        return G__19557;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__19560 = null;
            if (arguments.length > 3) {
              var G__19561__i = 0, G__19561__a = new Array(arguments.length - 3);
              while (G__19561__i < G__19561__a.length) {
                G__19561__a[G__19561__i] = arguments[G__19561__i + 3];
                ++G__19561__i;
              }
              G__19560 = new cljs.core.IndexedSeq(G__19561__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19560);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3925__auto__ = function() {
          var G__19428 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19428) : p1.call(null, G__19428);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var G__19429 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19429) : p2.call(null, G__19429);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3925__auto__ = function() {
          var G__19431 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19431) : p1.call(null, G__19431);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__19433 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19433) : p1.call(null, G__19433);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var or__3925__auto____$2 = function() {
              var G__19435 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19435) : p2.call(null, G__19435);
            }();
            if (cljs.core.truth_(or__3925__auto____$2)) {
              return or__3925__auto____$2;
            } else {
              var G__19436 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19436) : p2.call(null, G__19436);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3925__auto__ = function() {
          var G__19438 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19438) : p1.call(null, G__19438);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__19440 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19440) : p1.call(null, G__19440);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var or__3925__auto____$2 = function() {
              var G__19442 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19442) : p1.call(null, G__19442);
            }();
            if (cljs.core.truth_(or__3925__auto____$2)) {
              return or__3925__auto____$2;
            } else {
              var or__3925__auto____$3 = function() {
                var G__19444 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19444) : p2.call(null, G__19444);
              }();
              if (cljs.core.truth_(or__3925__auto____$3)) {
                return or__3925__auto____$3;
              } else {
                var or__3925__auto____$4 = function() {
                  var G__19446 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19446) : p2.call(null, G__19446);
                }();
                if (cljs.core.truth_(or__3925__auto____$4)) {
                  return or__3925__auto____$4;
                } else {
                  var G__19447 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19447) : p2.call(null, G__19447);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__19562__delegate = function(x, y, z, args) {
          var or__3925__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return cljs.core.some(function(or__3925__auto__) {
              return function(p1__19183_SHARP_) {
                var or__3925__auto____$1 = function() {
                  var G__19449 = p1__19183_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19449) : p1.call(null, G__19449);
                }();
                if (cljs.core.truth_(or__3925__auto____$1)) {
                  return or__3925__auto____$1;
                } else {
                  var G__19450 = p1__19183_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19450) : p2.call(null, G__19450);
                }
              };
            }(or__3925__auto__), args);
          }
        };
        var G__19562 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19563__i = 0, G__19563__a = new Array(arguments.length - 3);
            while (G__19563__i < G__19563__a.length) {
              G__19563__a[G__19563__i] = arguments[G__19563__i + 3];
              ++G__19563__i;
            }
            args = new cljs.core.IndexedSeq(G__19563__a, 0);
          }
          return G__19562__delegate.call(this, x, y, z, args);
        };
        G__19562.cljs$lang$maxFixedArity = 3;
        G__19562.cljs$lang$applyTo = function(arglist__19564) {
          var x = cljs.core.first(arglist__19564);
          arglist__19564 = cljs.core.next(arglist__19564);
          var y = cljs.core.first(arglist__19564);
          arglist__19564 = cljs.core.next(arglist__19564);
          var z = cljs.core.first(arglist__19564);
          var args = cljs.core.rest(arglist__19564);
          return G__19562__delegate(x, y, z, args);
        };
        G__19562.cljs$core$IFn$_invoke$arity$variadic = G__19562__delegate;
        return G__19562;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__19565 = null;
            if (arguments.length > 3) {
              var G__19566__i = 0, G__19566__a = new Array(arguments.length - 3);
              while (G__19566__i < G__19566__a.length) {
                G__19566__a[G__19566__i] = arguments[G__19566__i + 3];
                ++G__19566__i;
              }
              G__19565 = new cljs.core.IndexedSeq(G__19566__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19565);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3925__auto__ = function() {
          var G__19496 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19496) : p1.call(null, G__19496);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__19498 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19498) : p2.call(null, G__19498);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var G__19499 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19499) : p3.call(null, G__19499);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3925__auto__ = function() {
          var G__19501 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19501) : p1.call(null, G__19501);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__19503 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19503) : p2.call(null, G__19503);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var or__3925__auto____$2 = function() {
              var G__19505 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19505) : p3.call(null, G__19505);
            }();
            if (cljs.core.truth_(or__3925__auto____$2)) {
              return or__3925__auto____$2;
            } else {
              var or__3925__auto____$3 = function() {
                var G__19507 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19507) : p1.call(null, G__19507);
              }();
              if (cljs.core.truth_(or__3925__auto____$3)) {
                return or__3925__auto____$3;
              } else {
                var or__3925__auto____$4 = function() {
                  var G__19509 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19509) : p2.call(null, G__19509);
                }();
                if (cljs.core.truth_(or__3925__auto____$4)) {
                  return or__3925__auto____$4;
                } else {
                  var G__19510 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19510) : p3.call(null, G__19510);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3925__auto__ = function() {
          var G__19512 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19512) : p1.call(null, G__19512);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__19514 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19514) : p2.call(null, G__19514);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var or__3925__auto____$2 = function() {
              var G__19516 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19516) : p3.call(null, G__19516);
            }();
            if (cljs.core.truth_(or__3925__auto____$2)) {
              return or__3925__auto____$2;
            } else {
              var or__3925__auto____$3 = function() {
                var G__19518 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19518) : p1.call(null, G__19518);
              }();
              if (cljs.core.truth_(or__3925__auto____$3)) {
                return or__3925__auto____$3;
              } else {
                var or__3925__auto____$4 = function() {
                  var G__19520 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19520) : p2.call(null, G__19520);
                }();
                if (cljs.core.truth_(or__3925__auto____$4)) {
                  return or__3925__auto____$4;
                } else {
                  var or__3925__auto____$5 = function() {
                    var G__19522 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19522) : p3.call(null, G__19522);
                  }();
                  if (cljs.core.truth_(or__3925__auto____$5)) {
                    return or__3925__auto____$5;
                  } else {
                    var or__3925__auto____$6 = function() {
                      var G__19524 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19524) : p1.call(null, G__19524);
                    }();
                    if (cljs.core.truth_(or__3925__auto____$6)) {
                      return or__3925__auto____$6;
                    } else {
                      var or__3925__auto____$7 = function() {
                        var G__19526 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19526) : p2.call(null, G__19526);
                      }();
                      if (cljs.core.truth_(or__3925__auto____$7)) {
                        return or__3925__auto____$7;
                      } else {
                        var G__19527 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19527) : p3.call(null, G__19527);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__19567__delegate = function(x, y, z, args) {
          var or__3925__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return cljs.core.some(function(or__3925__auto__) {
              return function(p1__19184_SHARP_) {
                var or__3925__auto____$1 = function() {
                  var G__19529 = p1__19184_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19529) : p1.call(null, G__19529);
                }();
                if (cljs.core.truth_(or__3925__auto____$1)) {
                  return or__3925__auto____$1;
                } else {
                  var or__3925__auto____$2 = function() {
                    var G__19531 = p1__19184_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19531) : p2.call(null, G__19531);
                  }();
                  if (cljs.core.truth_(or__3925__auto____$2)) {
                    return or__3925__auto____$2;
                  } else {
                    var G__19532 = p1__19184_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19532) : p3.call(null, G__19532);
                  }
                }
              };
            }(or__3925__auto__), args);
          }
        };
        var G__19567 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19568__i = 0, G__19568__a = new Array(arguments.length - 3);
            while (G__19568__i < G__19568__a.length) {
              G__19568__a[G__19568__i] = arguments[G__19568__i + 3];
              ++G__19568__i;
            }
            args = new cljs.core.IndexedSeq(G__19568__a, 0);
          }
          return G__19567__delegate.call(this, x, y, z, args);
        };
        G__19567.cljs$lang$maxFixedArity = 3;
        G__19567.cljs$lang$applyTo = function(arglist__19569) {
          var x = cljs.core.first(arglist__19569);
          arglist__19569 = cljs.core.next(arglist__19569);
          var y = cljs.core.first(arglist__19569);
          arglist__19569 = cljs.core.next(arglist__19569);
          var z = cljs.core.first(arglist__19569);
          var args = cljs.core.rest(arglist__19569);
          return G__19567__delegate(x, y, z, args);
        };
        G__19567.cljs$core$IFn$_invoke$arity$variadic = G__19567__delegate;
        return G__19567;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__19570 = null;
            if (arguments.length > 3) {
              var G__19571__i = 0, G__19571__a = new Array(arguments.length - 3);
              while (G__19571__i < G__19571__a.length) {
                G__19571__a[G__19571__i] = arguments[G__19571__i + 3];
                ++G__19571__i;
              }
              G__19570 = new cljs.core.IndexedSeq(G__19571__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19570);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__19572__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__19185_SHARP_) {
                var G__19548 = x;
                return p1__19185_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19185_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19548) : p1__19185_SHARP_.call(null, G__19548);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__19186_SHARP_) {
                var or__3925__auto__ = function() {
                  var G__19550 = x;
                  return p1__19186_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19186_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19550) : p1__19186_SHARP_.call(null, G__19550);
                }();
                if (cljs.core.truth_(or__3925__auto__)) {
                  return or__3925__auto__;
                } else {
                  var G__19551 = y;
                  return p1__19186_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19186_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19551) : p1__19186_SHARP_.call(null, G__19551);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__19187_SHARP_) {
                var or__3925__auto__ = function() {
                  var G__19553 = x;
                  return p1__19187_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19187_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19553) : p1__19187_SHARP_.call(null, G__19553);
                }();
                if (cljs.core.truth_(or__3925__auto__)) {
                  return or__3925__auto__;
                } else {
                  var or__3925__auto____$1 = function() {
                    var G__19555 = y;
                    return p1__19187_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19187_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19555) : p1__19187_SHARP_.call(null, G__19555);
                  }();
                  if (cljs.core.truth_(or__3925__auto____$1)) {
                    return or__3925__auto____$1;
                  } else {
                    var G__19556 = z;
                    return p1__19187_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__19187_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19556) : p1__19187_SHARP_.call(null, G__19556);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__19573__delegate = function(x, y, z, args) {
              var or__3925__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3925__auto__)) {
                return or__3925__auto__;
              } else {
                return cljs.core.some(function(or__3925__auto__, ps__$1) {
                  return function(p1__19188_SHARP_) {
                    return cljs.core.some(p1__19188_SHARP_, args);
                  };
                }(or__3925__auto__, ps__$1), ps__$1);
              }
            };
            var G__19573 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__19574__i = 0, G__19574__a = new Array(arguments.length - 3);
                while (G__19574__i < G__19574__a.length) {
                  G__19574__a[G__19574__i] = arguments[G__19574__i + 3];
                  ++G__19574__i;
                }
                args = new cljs.core.IndexedSeq(G__19574__a, 0);
              }
              return G__19573__delegate.call(this, x, y, z, args);
            };
            G__19573.cljs$lang$maxFixedArity = 3;
            G__19573.cljs$lang$applyTo = function(arglist__19575) {
              var x = cljs.core.first(arglist__19575);
              arglist__19575 = cljs.core.next(arglist__19575);
              var y = cljs.core.first(arglist__19575);
              arglist__19575 = cljs.core.next(arglist__19575);
              var z = cljs.core.first(arglist__19575);
              var args = cljs.core.rest(arglist__19575);
              return G__19573__delegate(x, y, z, args);
            };
            G__19573.cljs$core$IFn$_invoke$arity$variadic = G__19573__delegate;
            return G__19573;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__19576 = null;
                if (arguments.length > 3) {
                  var G__19577__i = 0, G__19577__a = new Array(arguments.length - 3);
                  while (G__19577__i < G__19577__a.length) {
                    G__19577__a[G__19577__i] = arguments[G__19577__i + 3];
                    ++G__19577__i;
                  }
                  G__19576 = new cljs.core.IndexedSeq(G__19577__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19576);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__19572 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__19578__i = 0, G__19578__a = new Array(arguments.length - 3);
        while (G__19578__i < G__19578__a.length) {
          G__19578__a[G__19578__i] = arguments[G__19578__i + 3];
          ++G__19578__i;
        }
        ps = new cljs.core.IndexedSeq(G__19578__a, 0);
      }
      return G__19572__delegate.call(this, p1, p2, p3, ps);
    };
    G__19572.cljs$lang$maxFixedArity = 3;
    G__19572.cljs$lang$applyTo = function(arglist__19579) {
      var p1 = cljs.core.first(arglist__19579);
      arglist__19579 = cljs.core.next(arglist__19579);
      var p2 = cljs.core.first(arglist__19579);
      arglist__19579 = cljs.core.next(arglist__19579);
      var p3 = cljs.core.first(arglist__19579);
      var ps = cljs.core.rest(arglist__19579);
      return G__19572__delegate(p1, p2, p3, ps);
    };
    G__19572.cljs$core$IFn$_invoke$arity$variadic = G__19572__delegate;
    return G__19572;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__19580 = null;
        if (arguments.length > 3) {
          var G__19581__i = 0, G__19581__a = new Array(arguments.length - 3);
          while (G__19581__i < G__19581__a.length) {
            G__19581__a[G__19581__i] = arguments[G__19581__i + 3];
            ++G__19581__i;
          }
          G__19580 = new cljs.core.IndexedSeq(G__19581__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__19580);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__19636 = null;
        var G__19636__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19636__1 = function(result) {
          var G__19622 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19622) : rf.call(null, G__19622);
        };
        var G__19636__2 = function(result, input) {
          var G__19623 = result;
          var G__19624 = function() {
            var G__19625 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19625) : f.call(null, G__19625);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19623, G__19624) : rf.call(null, G__19623, G__19624);
        };
        var G__19636__3 = function() {
          var G__19637__delegate = function(result, input, inputs) {
            var G__19626 = result;
            var G__19627 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19626, G__19627) : rf.call(null, G__19626, G__19627);
          };
          var G__19637 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__19638__i = 0, G__19638__a = new Array(arguments.length - 2);
              while (G__19638__i < G__19638__a.length) {
                G__19638__a[G__19638__i] = arguments[G__19638__i + 2];
                ++G__19638__i;
              }
              inputs = new cljs.core.IndexedSeq(G__19638__a, 0);
            }
            return G__19637__delegate.call(this, result, input, inputs);
          };
          G__19637.cljs$lang$maxFixedArity = 2;
          G__19637.cljs$lang$applyTo = function(arglist__19639) {
            var result = cljs.core.first(arglist__19639);
            arglist__19639 = cljs.core.next(arglist__19639);
            var input = cljs.core.first(arglist__19639);
            var inputs = cljs.core.rest(arglist__19639);
            return G__19637__delegate(result, input, inputs);
          };
          G__19637.cljs$core$IFn$_invoke$arity$variadic = G__19637__delegate;
          return G__19637;
        }();
        G__19636 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__19636__0.call(this);
            case 1:
              return G__19636__1.call(this, result);
            case 2:
              return G__19636__2.call(this, result, input);
            default:
              var G__19640 = null;
              if (arguments.length > 2) {
                var G__19641__i = 0, G__19641__a = new Array(arguments.length - 2);
                while (G__19641__i < G__19641__a.length) {
                  G__19641__a[G__19641__i] = arguments[G__19641__i + 2];
                  ++G__19641__i;
                }
                G__19640 = new cljs.core.IndexedSeq(G__19641__a, 0);
              }
              return G__19636__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__19640);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19636.cljs$lang$maxFixedArity = 2;
        G__19636.cljs$lang$applyTo = G__19636__3.cljs$lang$applyTo;
        G__19636.cljs$core$IFn$_invoke$arity$0 = G__19636__0;
        G__19636.cljs$core$IFn$_invoke$arity$1 = G__19636__1;
        G__19636.cljs$core$IFn$_invoke$arity$2 = G__19636__2;
        G__19636.cljs$core$IFn$_invoke$arity$variadic = G__19636__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__19636;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4812__auto___19642 = size;
          var i_19643 = 0;
          while (true) {
            if (i_19643 < n__4812__auto___19642) {
              cljs.core.chunk_append(b, function() {
                var G__19628 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19643);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19628) : f.call(null, G__19628);
              }());
              var G__19644 = i_19643 + 1;
              i_19643 = G__19644;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__19629 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19629) : f.call(null, G__19629);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__19630 = cljs.core.first(s1);
          var G__19631 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19630, G__19631) : f.call(null, G__19630, G__19631);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__19632 = cljs.core.first(s1);
          var G__19633 = cljs.core.first(s2);
          var G__19634 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19632, G__19633, G__19634) : f.call(null, G__19632, G__19633, G__19634);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__19645__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__19582_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__19582_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__19645 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__19646__i = 0, G__19646__a = new Array(arguments.length - 4);
        while (G__19646__i < G__19646__a.length) {
          G__19646__a[G__19646__i] = arguments[G__19646__i + 4];
          ++G__19646__i;
        }
        colls = new cljs.core.IndexedSeq(G__19646__a, 0);
      }
      return G__19645__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__19645.cljs$lang$maxFixedArity = 4;
    G__19645.cljs$lang$applyTo = function(arglist__19647) {
      var f = cljs.core.first(arglist__19647);
      arglist__19647 = cljs.core.next(arglist__19647);
      var c1 = cljs.core.first(arglist__19647);
      arglist__19647 = cljs.core.next(arglist__19647);
      var c2 = cljs.core.first(arglist__19647);
      arglist__19647 = cljs.core.next(arglist__19647);
      var c3 = cljs.core.first(arglist__19647);
      var colls = cljs.core.rest(arglist__19647);
      return G__19645__delegate(f, c1, c2, c3, colls);
    };
    G__19645.cljs$core$IFn$_invoke$arity$variadic = G__19645__delegate;
    return G__19645;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__19648 = null;
        if (arguments.length > 4) {
          var G__19649__i = 0, G__19649__a = new Array(arguments.length - 4);
          while (G__19649__i < G__19649__a.length) {
            G__19649__a[G__19649__i] = arguments[G__19649__i + 4];
            ++G__19649__i;
          }
          G__19648 = new cljs.core.IndexedSeq(G__19649__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__19648);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__19658 = null;
          var G__19658__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__19658__1 = function(result) {
            var G__19655 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19655) : rf.call(null, G__19655);
          };
          var G__19658__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__19656 = result;
              var G__19657 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19656, G__19657) : rf.call(null, G__19656, G__19657);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__19658 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19658__0.call(this);
              case 1:
                return G__19658__1.call(this, result);
              case 2:
                return G__19658__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19658.cljs$core$IFn$_invoke$arity$0 = G__19658__0;
          G__19658.cljs$core$IFn$_invoke$arity$1 = G__19658__1;
          G__19658.cljs$core$IFn$_invoke$arity$2 = G__19658__2;
          return G__19658;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__19665 = null;
          var G__19665__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__19665__1 = function(result) {
            var G__19662 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19662) : rf.call(null, G__19662);
          };
          var G__19665__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__19663 = result;
              var G__19664 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19663, G__19664) : rf.call(null, G__19663, G__19664);
            }
          };
          G__19665 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19665__0.call(this);
              case 1:
                return G__19665__1.call(this, result);
              case 2:
                return G__19665__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19665.cljs$core$IFn$_invoke$arity$0 = G__19665__0;
          G__19665.cljs$core$IFn$_invoke$arity$1 = G__19665__1;
          G__19665.cljs$core$IFn$_invoke$arity$2 = G__19665__2;
          return G__19665;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__19666 = n__$1 - 1;
          var G__19667 = cljs.core.rest(s);
          n__$1 = G__19666;
          coll__$1 = G__19667;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__19670 = cljs.core.next(s);
      var G__19671 = cljs.core.next(lead);
      s = G__19670;
      lead = G__19671;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__19684 = null;
          var G__19684__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__19684__1 = function(result) {
            var G__19678 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19678) : rf.call(null, G__19678);
          };
          var G__19684__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3913__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3913__auto__)) {
                var G__19679 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19679) : pred.call(null, G__19679);
              } else {
                return and__3913__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__19680 = result;
              var G__19681 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19680, G__19681) : rf.call(null, G__19680, G__19681);
            }
          };
          G__19684 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19684__0.call(this);
              case 1:
                return G__19684__1.call(this, result);
              case 2:
                return G__19684__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19684.cljs$core$IFn$_invoke$arity$0 = G__19684__0;
          G__19684.cljs$core$IFn$_invoke$arity$1 = G__19684__1;
          G__19684.cljs$core$IFn$_invoke$arity$2 = G__19684__2;
          return G__19684;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3913__auto__ = s;
          if (and__3913__auto__) {
            var G__19683 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__19683) : pred__$1.call(null, G__19683);
          } else {
            return and__3913__auto__;
          }
        }())) {
          var G__19685 = pred__$1;
          var G__19686 = cljs.core.rest(s);
          pred__$1 = G__19685;
          coll__$1 = G__19686;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__19695 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19695) : f.call(null, G__19695);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__19698__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__19698 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__19699__i = 0, G__19699__a = new Array(arguments.length - 2);
        while (G__19699__i < G__19699__a.length) {
          G__19699__a[G__19699__i] = arguments[G__19699__i + 2];
          ++G__19699__i;
        }
        colls = new cljs.core.IndexedSeq(G__19699__a, 0);
      }
      return G__19698__delegate.call(this, c1, c2, colls);
    };
    G__19698.cljs$lang$maxFixedArity = 2;
    G__19698.cljs$lang$applyTo = function(arglist__19700) {
      var c1 = cljs.core.first(arglist__19700);
      arglist__19700 = cljs.core.next(arglist__19700);
      var c2 = cljs.core.first(arglist__19700);
      var colls = cljs.core.rest(arglist__19700);
      return G__19698__delegate(c1, c2, colls);
    };
    G__19698.cljs$core$IFn$_invoke$arity$variadic = G__19698__delegate;
    return G__19698;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__19701 = null;
        if (arguments.length > 2) {
          var G__19702__i = 0, G__19702__a = new Array(arguments.length - 2);
          while (G__19702__i < G__19702__a.length) {
            G__19702__a[G__19702__i] = arguments[G__19702__i + 2];
            ++G__19702__i;
          }
          G__19701 = new cljs.core.IndexedSeq(G__19702__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__19701);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__19717 = null;
          var G__19717__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__19717__1 = function(result) {
            var G__19710 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19710) : rf.call(null, G__19710);
          };
          var G__19717__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__19711 = result;
                var G__19712 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19711, G__19712) : rf.call(null, G__19711, G__19712);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__19713 = sepr;
                var G__19714 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19713, G__19714) : rf.call(null, G__19713, G__19714);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__19715 = result;
              var G__19716 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19715, G__19716) : rf.call(null, G__19715, G__19716);
            }
          };
          G__19717 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19717__0.call(this);
              case 1:
                return G__19717__1.call(this, result);
              case 2:
                return G__19717__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19717.cljs$core$IFn$_invoke$arity$0 = G__19717__0;
          G__19717.cljs$core$IFn$_invoke$arity$1 = G__19717__1;
          G__19717.cljs$core$IFn$_invoke$arity$2 = G__19717__2;
          return G__19717;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__19726__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__19726 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__19727__i = 0, G__19727__a = new Array(arguments.length - 1);
        while (G__19727__i < G__19727__a.length) {
          G__19727__a[G__19727__i] = arguments[G__19727__i + 1];
          ++G__19727__i;
        }
        colls = new cljs.core.IndexedSeq(G__19727__a, 0);
      }
      return G__19726__delegate.call(this, f, colls);
    };
    G__19726.cljs$lang$maxFixedArity = 1;
    G__19726.cljs$lang$applyTo = function(arglist__19728) {
      var f = cljs.core.first(arglist__19728);
      var colls = cljs.core.rest(arglist__19728);
      return G__19726__delegate(f, colls);
    };
    G__19726.cljs$core$IFn$_invoke$arity$variadic = G__19726__delegate;
    return G__19726;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__19729 = null;
        if (arguments.length > 1) {
          var G__19730__i = 0, G__19730__a = new Array(arguments.length - 1);
          while (G__19730__i < G__19730__a.length) {
            G__19730__a[G__19730__i] = arguments[G__19730__i + 1];
            ++G__19730__i;
          }
          G__19729 = new cljs.core.IndexedSeq(G__19730__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__19729);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__19749 = null;
        var G__19749__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19749__1 = function(result) {
          var G__19743 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19743) : rf.call(null, G__19743);
        };
        var G__19749__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__19744 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19744) : pred.call(null, G__19744);
          }())) {
            var G__19745 = result;
            var G__19746 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19745, G__19746) : rf.call(null, G__19745, G__19746);
          } else {
            return result;
          }
        };
        G__19749 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19749__0.call(this);
            case 1:
              return G__19749__1.call(this, result);
            case 2:
              return G__19749__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19749.cljs$core$IFn$_invoke$arity$0 = G__19749__0;
        G__19749.cljs$core$IFn$_invoke$arity$1 = G__19749__1;
        G__19749.cljs$core$IFn$_invoke$arity$2 = G__19749__2;
        return G__19749;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4812__auto___19750 = size;
          var i_19751 = 0;
          while (true) {
            if (i_19751 < n__4812__auto___19750) {
              if (cljs.core.truth_(function() {
                var G__19747 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19751);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19747) : pred.call(null, G__19747);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19751));
              } else {
              }
              var G__19752 = i_19751 + 1;
              i_19751 = G__19752;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__19748 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19748) : pred.call(null, G__19748);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__19759 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__19759) : branch_QMARK_.call(null, G__19759);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__19760 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__19760) : children.call(null, G__19760);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__19761_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__19761_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__19764 = to;
        if (G__19764) {
          var bit__4599__auto__ = G__19764.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4599__auto__ || G__19764.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__19765 = to;
      if (G__19765) {
        var bit__4599__auto__ = G__19765.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4599__auto__ || G__19765.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__19767 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19767) : f.call(null, G__19767);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__19768__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__19768 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__19769__i = 0, G__19769__a = new Array(arguments.length - 4);
        while (G__19769__i < G__19769__a.length) {
          G__19769__a[G__19769__i] = arguments[G__19769__i + 4];
          ++G__19769__i;
        }
        colls = new cljs.core.IndexedSeq(G__19769__a, 0);
      }
      return G__19768__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__19768.cljs$lang$maxFixedArity = 4;
    G__19768.cljs$lang$applyTo = function(arglist__19770) {
      var f = cljs.core.first(arglist__19770);
      arglist__19770 = cljs.core.next(arglist__19770);
      var c1 = cljs.core.first(arglist__19770);
      arglist__19770 = cljs.core.next(arglist__19770);
      var c2 = cljs.core.first(arglist__19770);
      arglist__19770 = cljs.core.next(arglist__19770);
      var c3 = cljs.core.first(arglist__19770);
      var colls = cljs.core.rest(arglist__19770);
      return G__19768__delegate(f, c1, c2, c3, colls);
    };
    G__19768.cljs$core$IFn$_invoke$arity$variadic = G__19768__delegate;
    return G__19768;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__19771 = null;
        if (arguments.length > 4) {
          var G__19772__i = 0, G__19772__a = new Array(arguments.length - 4);
          while (G__19772__i < G__19772__a.length) {
            G__19772__a[G__19772__i] = arguments[G__19772__i + 4];
            ++G__19772__i;
          }
          G__19771 = new cljs.core.IndexedSeq(G__19772__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__19771);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__19774 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19774) : pred.call(null, G__19774);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__19789 = m__$1;
          if (G__19789) {
            var bit__4606__auto__ = G__19789.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4606__auto__ || G__19789.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__19789.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__19789);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__19789);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__19790 = sentinel;
            var G__19791 = m__$2;
            var G__19792 = cljs.core.next(ks__$1);
            sentinel = G__19790;
            m__$1 = G__19791;
            ks__$1 = G__19792;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__19793, v) {
  var vec__19798 = p__19793;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19798, 0, null);
  var ks = cljs.core.nthnext(vec__19798, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__19799, f) {
    var vec__19837 = p__19799;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19837, 0, null);
    var ks = cljs.core.nthnext(vec__19837, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__19838 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19838) : f.call(null, G__19838);
      }());
    }
  };
  var update_in__4 = function(m, p__19800, f, a) {
    var vec__19839 = p__19800;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19839, 0, null);
    var ks = cljs.core.nthnext(vec__19839, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__19840 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__19841 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19840, G__19841) : f.call(null, G__19840, G__19841);
      }());
    }
  };
  var update_in__5 = function(m, p__19801, f, a, b) {
    var vec__19842 = p__19801;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19842, 0, null);
    var ks = cljs.core.nthnext(vec__19842, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__19843 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__19844 = a;
        var G__19845 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19843, G__19844, G__19845) : f.call(null, G__19843, G__19844, G__19845);
      }());
    }
  };
  var update_in__6 = function(m, p__19802, f, a, b, c) {
    var vec__19846 = p__19802;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19846, 0, null);
    var ks = cljs.core.nthnext(vec__19846, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__19847 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__19848 = a;
        var G__19849 = b;
        var G__19850 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19847, G__19848, G__19849, G__19850) : f.call(null, G__19847, G__19848, G__19849, G__19850);
      }());
    }
  };
  var update_in__7 = function() {
    var G__19852__delegate = function(m, p__19803, f, a, b, c, args) {
      var vec__19851 = p__19803;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19851, 0, null);
      var ks = cljs.core.nthnext(vec__19851, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__19852 = function(m, p__19803, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__19853__i = 0, G__19853__a = new Array(arguments.length - 6);
        while (G__19853__i < G__19853__a.length) {
          G__19853__a[G__19853__i] = arguments[G__19853__i + 6];
          ++G__19853__i;
        }
        args = new cljs.core.IndexedSeq(G__19853__a, 0);
      }
      return G__19852__delegate.call(this, m, p__19803, f, a, b, c, args);
    };
    G__19852.cljs$lang$maxFixedArity = 6;
    G__19852.cljs$lang$applyTo = function(arglist__19854) {
      var m = cljs.core.first(arglist__19854);
      arglist__19854 = cljs.core.next(arglist__19854);
      var p__19803 = cljs.core.first(arglist__19854);
      arglist__19854 = cljs.core.next(arglist__19854);
      var f = cljs.core.first(arglist__19854);
      arglist__19854 = cljs.core.next(arglist__19854);
      var a = cljs.core.first(arglist__19854);
      arglist__19854 = cljs.core.next(arglist__19854);
      var b = cljs.core.first(arglist__19854);
      arglist__19854 = cljs.core.next(arglist__19854);
      var c = cljs.core.first(arglist__19854);
      var args = cljs.core.rest(arglist__19854);
      return G__19852__delegate(m, p__19803, f, a, b, c, args);
    };
    G__19852.cljs$core$IFn$_invoke$arity$variadic = G__19852__delegate;
    return G__19852;
  }();
  update_in = function(m, p__19803, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__19803, f);
      case 4:
        return update_in__4.call(this, m, p__19803, f, a);
      case 5:
        return update_in__5.call(this, m, p__19803, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__19803, f, a, b, c);
      default:
        var G__19855 = null;
        if (arguments.length > 6) {
          var G__19856__i = 0, G__19856__a = new Array(arguments.length - 6);
          while (G__19856__i < G__19856__a.length) {
            G__19856__a[G__19856__i] = arguments[G__19856__i + 6];
            ++G__19856__i;
          }
          G__19855 = new cljs.core.IndexedSeq(G__19856__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__19803, f, a, b, c, G__19855);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19867 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19867) : f.call(null, G__19867);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19868 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19869 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19868, G__19869) : f.call(null, G__19868, G__19869);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19870 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19871 = x;
      var G__19872 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19870, G__19871, G__19872) : f.call(null, G__19870, G__19871, G__19872);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19873 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19874 = x;
      var G__19875 = y;
      var G__19876 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19873, G__19874, G__19875, G__19876) : f.call(null, G__19873, G__19874, G__19875, G__19876);
    }());
  };
  var update__7 = function() {
    var G__19877__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__19877 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__19878__i = 0, G__19878__a = new Array(arguments.length - 6);
        while (G__19878__i < G__19878__a.length) {
          G__19878__a[G__19878__i] = arguments[G__19878__i + 6];
          ++G__19878__i;
        }
        more = new cljs.core.IndexedSeq(G__19878__a, 0);
      }
      return G__19877__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__19877.cljs$lang$maxFixedArity = 6;
    G__19877.cljs$lang$applyTo = function(arglist__19879) {
      var m = cljs.core.first(arglist__19879);
      arglist__19879 = cljs.core.next(arglist__19879);
      var k = cljs.core.first(arglist__19879);
      arglist__19879 = cljs.core.next(arglist__19879);
      var f = cljs.core.first(arglist__19879);
      arglist__19879 = cljs.core.next(arglist__19879);
      var x = cljs.core.first(arglist__19879);
      arglist__19879 = cljs.core.next(arglist__19879);
      var y = cljs.core.first(arglist__19879);
      arglist__19879 = cljs.core.next(arglist__19879);
      var z = cljs.core.first(arglist__19879);
      var more = cljs.core.rest(arglist__19879);
      return G__19877__delegate(m, k, f, x, y, z, more);
    };
    G__19877.cljs$core$IFn$_invoke$arity$variadic = G__19877__delegate;
    return G__19877;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__19880 = null;
        if (arguments.length > 6) {
          var G__19881__i = 0, G__19881__a = new Array(arguments.length - 6);
          while (G__19881__i < G__19881__a.length) {
            G__19881__a[G__19881__i] = arguments[G__19881__i + 6];
            ++G__19881__i;
          }
          G__19880 = new cljs.core.IndexedSeq(G__19881__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__19880);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__19882 = ll - 5;
      var G__19883 = r;
      ll = G__19882;
      ret = G__19883;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__19888 = cljs.core.pv_aget(node, 0);
      var G__19889 = level - 5;
      node = G__19888;
      level = G__19889;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__19890 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__19891 = level - 5;
        node = G__19890;
        level = G__19891;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__19901 = init__$2;
              var G__19902 = j + i;
              var G__19903 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19901, G__19902, G__19903) : f.call(null, G__19901, G__19902, G__19903);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__19914 = j + 1;
              var G__19915 = init__$3;
              j = G__19914;
              init__$2 = G__19915;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19904 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19904) : cljs.core.deref.call(null, G__19904);
      } else {
        var G__19916 = i + len;
        var G__19917 = init__$2;
        i = G__19916;
        init__$1 = G__19917;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__19905 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__19905) : cljs.core.tv_editable_root.call(null, G__19905);
  }(), function() {
    var G__19906 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__19906) : cljs.core.tv_editable_tail.call(null, G__19906);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__19907 = init__$2;
              var G__19908 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19907, G__19908) : f.call(null, G__19907, G__19908);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__19918 = j + 1;
              var G__19919 = init__$3;
              j = G__19918;
              init__$2 = G__19919;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19909 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19909) : cljs.core.deref.call(null, G__19909);
      } else {
        var G__19920 = i + len;
        var G__19921 = init__$2;
        i = G__19920;
        init__$1 = G__19921;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__19910 = coll__$1;
      var G__19911 = cljs.core.first_array_for_longvec(coll__$1);
      var G__19912 = 0;
      var G__19913 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19910, G__19911, G__19912, G__19913) : cljs.core.chunked_seq.call(null, G__19910, G__19911, G__19912, G__19913);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4812__auto___19922 = len;
    var i_19923 = 0;
    while (true) {
      if (i_19923 < n__4812__auto___19922) {
        new_tail[i_19923] = self__.tail[i_19923];
        var G__19924 = i_19923 + 1;
        i_19923 = G__19924;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__19925 = null;
  var G__19925__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__19925__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__19925 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19925__2.call(this, self__, k);
      case 3:
        return G__19925__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19925.cljs$core$IFn$_invoke$arity$2 = G__19925__2;
  G__19925.cljs$core$IFn$_invoke$arity$3 = G__19925__3;
  return G__19925;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args19900) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19900)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__19926 = i + 1;
        var G__19927 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__19926;
        out = G__19927;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__19928__i = 0, G__19928__a = new Array(arguments.length - 0);
      while (G__19928__i < G__19928__a.length) {
        G__19928__a[G__19928__i] = arguments[G__19928__i + 0];
        ++G__19928__i;
      }
      args = new cljs.core.IndexedSeq(G__19928__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__19929) {
    var args = cljs.core.seq(arglist__19929);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__19930 = self__.vec;
      var G__19931 = self__.node;
      var G__19932 = self__.i;
      var G__19933 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19930, G__19931, G__19932, G__19933) : cljs.core.chunked_seq.call(null, G__19930, G__19931, G__19932, G__19933);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__19934 = self__.vec;
    var G__19935 = self__.i + self__.off;
    var G__19936 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__19934, G__19935, G__19936) : cljs.core.subvec.call(null, G__19934, G__19935, G__19936);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__19937 = self__.vec;
    var G__19938 = self__.i + self__.off;
    var G__19939 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__19937, G__19938, G__19939) : cljs.core.subvec.call(null, G__19937, G__19938, G__19939);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__19940 = self__.vec;
      var G__19941 = self__.node;
      var G__19942 = self__.i;
      var G__19943 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19940, G__19941, G__19942, G__19943) : cljs.core.chunked_seq.call(null, G__19940, G__19941, G__19942, G__19943);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__19944 = self__.vec;
    var G__19945 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__19946 = end;
    var G__19947 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19944, G__19945, G__19946, G__19947) : cljs.core.chunked_seq.call(null, G__19944, G__19945, G__19946, G__19947);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__19948 = self__.vec;
  var G__19949 = self__.node;
  var G__19950 = self__.i;
  var G__19951 = self__.off;
  var G__19952 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__19948, G__19949, G__19950, G__19951, G__19952) : cljs.core.chunked_seq.call(null, G__19948, G__19949, G__19950, G__19951, G__19952);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__19953 = self__.vec;
    var G__19954 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__19955 = end;
    var G__19956 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19953, G__19954, G__19955, G__19956) : cljs.core.chunked_seq.call(null, G__19953, G__19954, G__19955, G__19956);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__19958 = self__.meta;
  var G__19959 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__19960 = self__.start;
  var G__19961 = function() {
    var x__4242__auto__ = self__.end;
    var y__4243__auto__ = v_pos + 1;
    return x__4242__auto__ > y__4243__auto__ ? x__4242__auto__ : y__4243__auto__;
  }();
  var G__19962 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19958, G__19959, G__19960, G__19961, G__19962) : cljs.core.build_subvec.call(null, G__19958, G__19959, G__19960, G__19961, G__19962);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__19963 = self__.meta;
    var G__19964 = self__.v;
    var G__19965 = self__.start;
    var G__19966 = self__.end - 1;
    var G__19967 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19963, G__19964, G__19965, G__19966, G__19967) : cljs.core.build_subvec.call(null, G__19963, G__19964, G__19965, G__19966, G__19967);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__19969 = meta__$1;
  var G__19970 = self__.v;
  var G__19971 = self__.start;
  var G__19972 = self__.end;
  var G__19973 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19969, G__19970, G__19971, G__19972, G__19973) : cljs.core.build_subvec.call(null, G__19969, G__19970, G__19971, G__19972, G__19973);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__19974 = self__.meta;
  var G__19975 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__19976 = self__.start;
  var G__19977 = self__.end + 1;
  var G__19978 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19974, G__19975, G__19976, G__19977, G__19978) : cljs.core.build_subvec.call(null, G__19974, G__19975, G__19976, G__19977, G__19978);
};
cljs.core.Subvec.prototype.call = function() {
  var G__19979 = null;
  var G__19979__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__19979__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__19979 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19979__2.call(this, self__, k);
      case 3:
        return G__19979__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19979.cljs$core$IFn$_invoke$arity$2 = G__19979__2;
  G__19979.cljs$core$IFn$_invoke$arity$3 = G__19979__3;
  return G__19979;
}();
cljs.core.Subvec.prototype.apply = function(self__, args19957) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19957)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__19980 = meta;
      var G__19981 = v.v;
      var G__19982 = v.start + start;
      var G__19983 = v.start + end;
      var G__19984 = __hash;
      meta = G__19980;
      v = G__19981;
      start = G__19982;
      end = G__19983;
      __hash = G__19984;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj19991 = {};
    return obj19991;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__19999 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__20000 = level - 5;
        node = G__19999;
        level = G__20000;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__20004 = null;
  var G__20004__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20004__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20004 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20004__2.call(this, self__, k);
      case 3:
        return G__20004__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20004.cljs$core$IFn$_invoke$arity$2 = G__20004__2;
  G__20004.cljs$core$IFn$_invoke$arity$3 = G__20004__3;
  return G__20004;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args20001) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20001)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3925__auto__ = self__.front;
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3925__auto__ = self__.rear;
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__20005 = i + incr;
        i = G__20005;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__20006 = i + 1;
      var G__20007 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__20006;
      out = G__20007;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj20011 = {};
    return obj20011;
  }();
  var l = ks.length;
  var i_20012 = 0;
  while (true) {
    if (i_20012 < l) {
      var k_20013 = ks[i_20012];
      new_obj[k_20013] = obj[k_20013];
      var G__20014 = i_20012 + 1;
      i_20012 = G__20014;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = function() {
      var G__20018 = k;
      return goog.isString(G__20018);
    }();
    if (cljs.core.truth_(and__3913__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3913__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__20019 = init__$1;
        var G__20020 = k;
        var G__20021 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20019, G__20020, G__20021) : f.call(null, G__20019, G__20020, G__20021);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20022 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20022) : cljs.core.deref.call(null, G__20022);
      } else {
        var G__20028 = cljs.core.rest(keys__$1);
        var G__20029 = init__$2;
        keys__$1 = G__20028;
        init__$1 = G__20029;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = function() {
      var G__20024 = k;
      return goog.isString(G__20024);
    }();
    if (cljs.core.truth_(and__3913__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3913__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__20025 = k;
    return goog.isString(G__20025);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = function() {
      var G__20027 = k;
      return goog.isString(G__20027);
    }();
    if (cljs.core.truth_(and__3913__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3913__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__20015_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20015_SHARP_, self__.strobj[p1__20015_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__20030 = null;
  var G__20030__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20030__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20030 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20030__2.call(this, self__, k);
      case 3:
        return G__20030__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20030.cljs$core$IFn$_invoke$arity$2 = G__20030__2;
  G__20030.cljs$core$IFn$_invoke$arity$3 = G__20030__3;
  return G__20030;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args20016) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20016)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj20032 = {};
  return obj20032;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__20033 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20033, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20033, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__20034 = i + 2;
        i = G__20034;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__20035 = i + 2;
        i = G__20035;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__20036 = i + 2;
        i = G__20036;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__20037 = i + 2;
        i = G__20037;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__20038 = i + 2;
        i = G__20038;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3925__auto__ = function() {
        var G__20042 = k;
        return goog.isString(G__20042);
      }();
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_20043 = 0;
  while (true) {
    if (i_20043 < l) {
      narr[i_20043] = arr[i_20043];
      var G__20044 = i_20043 + 1;
      i_20043 = G__20044;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20046 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20046) : cljs.core.keys.call(null, G__20046);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20047 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20047) : cljs.core.vals.call(null, G__20047);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20048 = cljs.core.seq(coll);
  var chunk__20049 = null;
  var count__20050 = 0;
  var i__20051 = 0;
  while (true) {
    if (i__20051 < count__20050) {
      var vec__20052 = chunk__20049.cljs$core$IIndexed$_nth$arity$2(null, i__20051);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20052, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20052, 1, null);
      var G__20053_20066 = v;
      var G__20054_20067 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20053_20066, G__20054_20067) : f.call(null, G__20053_20066, G__20054_20067);
      var G__20068 = seq__20048;
      var G__20069 = chunk__20049;
      var G__20070 = count__20050;
      var G__20071 = i__20051 + 1;
      seq__20048 = G__20068;
      chunk__20049 = G__20069;
      count__20050 = G__20070;
      i__20051 = G__20071;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20048);
      if (temp__4126__auto__) {
        var seq__20048__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20048__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__20048__$1);
          var G__20072 = cljs.core.chunk_rest(seq__20048__$1);
          var G__20073 = c__4712__auto__;
          var G__20074 = cljs.core.count(c__4712__auto__);
          var G__20075 = 0;
          seq__20048 = G__20072;
          chunk__20049 = G__20073;
          count__20050 = G__20074;
          i__20051 = G__20075;
          continue;
        } else {
          var vec__20055 = cljs.core.first(seq__20048__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20055, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20055, 1, null);
          var G__20056_20076 = v;
          var G__20057_20077 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20056_20076, G__20057_20077) : f.call(null, G__20056_20076, G__20057_20077);
          var G__20078 = cljs.core.next(seq__20048__$1);
          var G__20079 = null;
          var G__20080 = 0;
          var G__20081 = 0;
          seq__20048 = G__20078;
          chunk__20049 = G__20079;
          count__20050 = G__20080;
          i__20051 = G__20081;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__20058 = init__$1;
        var G__20059 = self__.arr[i];
        var G__20060 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20058, G__20059, G__20060) : f.call(null, G__20058, G__20059, G__20060);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20061 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20061) : cljs.core.deref.call(null, G__20061);
      } else {
        var G__20082 = i + 2;
        var G__20083 = init__$2;
        i = G__20082;
        init__$1 = G__20083;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__20062 = other;
    if (G__20062) {
      var bit__4599__auto__ = G__20062.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4599__auto__ || G__20062.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__20084 = i + 2;
              i = G__20084;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj20064 = {};
    return obj20064;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__20085 = s + 2;
            var G__20086 = d;
            s = G__20085;
            d = G__20086;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__20087 = s + 2;
            var G__20088 = d + 2;
            s = G__20087;
            d = G__20088;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__20065 = cljs.core.aclone(self__.arr);
        G__20065[idx + 1] = v;
        return G__20065;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20089 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20090 = cljs.core.next(es);
          ret = G__20089;
          es = G__20090;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__20091 = null;
  var G__20091__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20091__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20091 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20091__2.call(this, self__, k);
      case 3:
        return G__20091__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20091.cljs$core$IFn$_invoke$arity$2 = G__20091__2;
  G__20091.cljs$core$IFn$_invoke$arity$3 = G__20091__3;
  return G__20091;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args20045) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20045)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__20092 = i + 2;
        var G__20093 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__20092;
        ret = G__20093;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__20094_20102 = self__.arr;
      G__20094_20102.pop();
      G__20094_20102.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__20095 = self__.len;
          var G__20096 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__20095, G__20096) : cljs.core.array__GT_transient_hash_map.call(null, G__20095, G__20096);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__20097 = o;
      if (G__20097) {
        var bit__4606__auto__ = G__20097.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4606__auto__ || G__20097.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__20097.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20097);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20097);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__20098 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20098) : cljs.core.key.call(null, G__20098);
      }(), function() {
        var G__20099 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20099) : cljs.core.val.call(null, G__20099);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__20103 = cljs.core.next(es);
          var G__20104 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__20100 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20100) : cljs.core.key.call(null, G__20100);
          }(), function() {
            var G__20101 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20101) : cljs.core.val.call(null, G__20101);
          }());
          es = G__20103;
          tcoll__$2 = G__20104;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__20105 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__20106 = i + 2;
      out = G__20105;
      i = G__20106;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__20109 = cljs.core.aclone(arr);
    G__20109[i] = a;
    return G__20109;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__20110 = cljs.core.aclone(arr);
    G__20110[i] = a;
    G__20110[j] = b;
    return G__20110;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__20115 = init__$1;
          var G__20116 = k;
          var G__20117 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20115, G__20116, G__20117) : f.call(null, G__20115, G__20116, G__20117);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__20118 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20118) : cljs.core.deref.call(null, G__20118);
      } else {
        var G__20119 = i + 2;
        var G__20120 = init__$2;
        i = G__20119;
        init__$1 = G__20120;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__20121 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__20121) : cljs.core.create_inode_seq.call(null, G__20121);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_20135 = 0;
        var j_20136 = 0;
        while (true) {
          if (i_20135 < 32) {
            if ((self__.bitmap >>> i_20135 & 1) === 0) {
              var G__20137 = i_20135 + 1;
              var G__20138 = j_20136;
              i_20135 = G__20137;
              j_20136 = G__20138;
              continue;
            } else {
              nodes[i_20135] = !(self__.arr[j_20136] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_20136]), self__.arr[j_20136], self__.arr[j_20136 + 1], added_leaf_QMARK_) : self__.arr[j_20136 + 1];
              var G__20139 = i_20135 + 1;
              var G__20140 = j_20136 + 2;
              i_20135 = G__20139;
              j_20136 = G__20140;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__20122 = edit__$1;
          var G__20123 = shift + 5;
          var G__20124 = key_or_nil;
          var G__20125 = val_or_node;
          var G__20126 = hash;
          var G__20127 = key;
          var G__20128 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__20122, G__20123, G__20124, G__20125, G__20126, G__20127, G__20128) : cljs.core.create_node.call(null, G__20122, G__20123, G__20124, G__20125, G__20126, G__20127, G__20128);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_20141 = 0;
      var j_20142 = 0;
      while (true) {
        if (i_20141 < 32) {
          if ((self__.bitmap >>> i_20141 & 1) === 0) {
            var G__20143 = i_20141 + 1;
            var G__20144 = j_20142;
            i_20141 = G__20143;
            j_20142 = G__20144;
            continue;
          } else {
            nodes[i_20141] = !(self__.arr[j_20142] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_20142]), self__.arr[j_20142], self__.arr[j_20142 + 1], added_leaf_QMARK_) : self__.arr[j_20142 + 1];
            var G__20145 = i_20141 + 1;
            var G__20146 = j_20142 + 2;
            i_20141 = G__20145;
            j_20142 = G__20146;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__20129 = shift + 5;
          var G__20130 = key_or_nil;
          var G__20131 = val_or_node;
          var G__20132 = hash;
          var G__20133 = key;
          var G__20134 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__20129, G__20130, G__20131, G__20132, G__20133, G__20134) : cljs.core.create_node.call(null, G__20129, G__20130, G__20131, G__20132, G__20133, G__20134);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__20147 = i + 1;
        var G__20148 = j + 2;
        var G__20149 = bitmap | 1 << i;
        i = G__20147;
        j = G__20148;
        bitmap = G__20149;
        continue;
      } else {
        var G__20150 = i + 1;
        var G__20151 = j;
        var G__20152 = bitmap;
        i = G__20150;
        j = G__20151;
        bitmap = G__20152;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__20153 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__20153) : cljs.core.create_array_node_seq.call(null, G__20153);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__20154 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20154) : cljs.core.deref.call(null, G__20154);
        } else {
          var G__20155 = i + 1;
          var G__20156 = init__$2;
          i = G__20155;
          init__$1 = G__20156;
          continue;
        }
      } else {
        var G__20157 = i + 1;
        var G__20158 = init__$1;
        i = G__20157;
        init__$1 = G__20158;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__20159 = i + 2;
        i = G__20159;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__20160 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__20160) : cljs.core.create_inode_seq.call(null, G__20160);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__20161 = self__.nodes;
    var G__20162 = self__.i + 2;
    var G__20163 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__20161, G__20162, G__20163) : cljs.core.create_inode_seq.call(null, G__20161, G__20162, G__20163);
  } else {
    var G__20164 = self__.nodes;
    var G__20165 = self__.i;
    var G__20166 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__20164, G__20165, G__20166) : cljs.core.create_inode_seq.call(null, G__20164, G__20165, G__20166);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__20170 = j + 2;
                j = G__20170;
                continue;
              }
            } else {
              var G__20171 = j + 2;
              j = G__20171;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__20172 = null;
  var G__20173 = self__.nodes;
  var G__20174 = self__.i;
  var G__20175 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__20172, G__20173, G__20174, G__20175) : cljs.core.create_array_node_seq.call(null, G__20172, G__20173, G__20174, G__20175);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__20180 = j + 1;
              j = G__20180;
              continue;
            }
          } else {
            var G__20181 = j + 1;
            j = G__20181;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20183 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20183) : cljs.core.keys.call(null, G__20183);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20184 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20184) : cljs.core.vals.call(null, G__20184);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20185 = cljs.core.seq(coll);
  var chunk__20186 = null;
  var count__20187 = 0;
  var i__20188 = 0;
  while (true) {
    if (i__20188 < count__20187) {
      var vec__20189 = chunk__20186.cljs$core$IIndexed$_nth$arity$2(null, i__20188);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20189, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20189, 1, null);
      var G__20190_20201 = v;
      var G__20191_20202 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20190_20201, G__20191_20202) : f.call(null, G__20190_20201, G__20191_20202);
      var G__20203 = seq__20185;
      var G__20204 = chunk__20186;
      var G__20205 = count__20187;
      var G__20206 = i__20188 + 1;
      seq__20185 = G__20203;
      chunk__20186 = G__20204;
      count__20187 = G__20205;
      i__20188 = G__20206;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20185);
      if (temp__4126__auto__) {
        var seq__20185__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20185__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__20185__$1);
          var G__20207 = cljs.core.chunk_rest(seq__20185__$1);
          var G__20208 = c__4712__auto__;
          var G__20209 = cljs.core.count(c__4712__auto__);
          var G__20210 = 0;
          seq__20185 = G__20207;
          chunk__20186 = G__20208;
          count__20187 = G__20209;
          i__20188 = G__20210;
          continue;
        } else {
          var vec__20192 = cljs.core.first(seq__20185__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20192, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20192, 1, null);
          var G__20193_20211 = v;
          var G__20194_20212 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20193_20211, G__20194_20212) : f.call(null, G__20193_20211, G__20194_20212);
          var G__20213 = cljs.core.next(seq__20185__$1);
          var G__20214 = null;
          var G__20215 = 0;
          var G__20216 = 0;
          seq__20185 = G__20213;
          chunk__20186 = G__20214;
          count__20187 = G__20215;
          i__20188 = G__20216;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__20195 = init;
    var G__20196 = null;
    var G__20197 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20195, G__20196, G__20197) : f.call(null, G__20195, G__20196, G__20197);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__20198 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20198) : cljs.core.deref.call(null, G__20198);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj20200 = {};
    return obj20200;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20217 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20218 = cljs.core.next(es);
          ret = G__20217;
          es = G__20218;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__20219 = null;
  var G__20219__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20219__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20219 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20219__2.call(this, self__, k);
      case 3:
        return G__20219__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20219.cljs$core$IFn$_invoke$arity$2 = G__20219__2;
  G__20219.cljs$core$IFn$_invoke$arity$3 = G__20219__3;
  return G__20219;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args20182) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20182)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__20220 = i + 2;
      var G__20221 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__20220;
      ret = G__20221;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__20222 = i + 1;
      var G__20223 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__20222;
      out = G__20223;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__20224 = o;
      if (G__20224) {
        var bit__4606__auto__ = G__20224.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4606__auto__ || G__20224.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__20224.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20224);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__20224);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__20225 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20225) : cljs.core.key.call(null, G__20225);
      }(), function() {
        var G__20226 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20226) : cljs.core.val.call(null, G__20226);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__20229 = cljs.core.next(es);
          var G__20230 = tcoll__$1.assoc_BANG_(function() {
            var G__20227 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20227) : cljs.core.key.call(null, G__20227);
          }(), function() {
            var G__20228 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__20228) : cljs.core.val.call(null, G__20228);
          }());
          es = G__20229;
          tcoll__$1 = G__20230;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__20231 = ascending_QMARK_ ? t.left : t.right;
      var G__20232 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__20231;
      stack__$1 = G__20232;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__20245 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20245) : cljs.core.deref.call(null, G__20245);
  } else {
    var init__$2 = function() {
      var G__20246 = init__$1;
      var G__20247 = node.key;
      var G__20248 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20246, G__20247, G__20248) : f.call(null, G__20246, G__20247, G__20248);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__20249 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20249) : cljs.core.deref.call(null, G__20249);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__20250 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20250) : cljs.core.deref.call(null, G__20250);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__20252 = null;
  var G__20252__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20252__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20252 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20252__2.call(this, self__, k);
      case 3:
        return G__20252__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20252.cljs$core$IFn$_invoke$arity$2 = G__20252__2;
  G__20252.cljs$core$IFn$_invoke$arity$3 = G__20252__3;
  return G__20252;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args20251) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20251)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__20254 = null;
  var G__20254__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20254__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20254 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20254__2.call(this, self__, k);
      case 3:
        return G__20254__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20254.cljs$core$IFn$_invoke$arity$2 = G__20254__2;
  G__20254.cljs$core$IFn$_invoke$arity$3 = G__20254__3;
  return G__20254;
}();
cljs.core.RedNode.prototype.apply = function(self__, args20253) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20253)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__20267 = k;
      var G__20268 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20267, G__20268) : comp.call(null, G__20267, G__20268);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app__$1 = tree_map_append(left.right, right.left);
          if (app__$1 instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app__$1.key, app__$1.val, new cljs.core.RedNode(left.key, left.val, left.left, app__$1.left, null), new cljs.core.RedNode(right.key, right.val, app__$1.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__$1, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app__$1 = tree_map_append(left.right, right.left);
          if (app__$1 instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app__$1.key, app__$1.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__$1.left, null), new cljs.core.BlackNode(right.key, right.val, app__$1.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__$1, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__20287 = k;
      var G__20288 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20287, G__20288) : comp.call(null, G__20287, G__20288);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__20299 = k;
    var G__20300 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20299, G__20300) : comp.call(null, G__20299, G__20300);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20302 = cljs.core.seq(coll);
  var chunk__20303 = null;
  var count__20304 = 0;
  var i__20305 = 0;
  while (true) {
    if (i__20305 < count__20304) {
      var vec__20306 = chunk__20303.cljs$core$IIndexed$_nth$arity$2(null, i__20305);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20306, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20306, 1, null);
      var G__20307_20319 = v;
      var G__20308_20320 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20307_20319, G__20308_20320) : f.call(null, G__20307_20319, G__20308_20320);
      var G__20321 = seq__20302;
      var G__20322 = chunk__20303;
      var G__20323 = count__20304;
      var G__20324 = i__20305 + 1;
      seq__20302 = G__20321;
      chunk__20303 = G__20322;
      count__20304 = G__20323;
      i__20305 = G__20324;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20302);
      if (temp__4126__auto__) {
        var seq__20302__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20302__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__20302__$1);
          var G__20325 = cljs.core.chunk_rest(seq__20302__$1);
          var G__20326 = c__4712__auto__;
          var G__20327 = cljs.core.count(c__4712__auto__);
          var G__20328 = 0;
          seq__20302 = G__20325;
          chunk__20303 = G__20326;
          count__20304 = G__20327;
          i__20305 = G__20328;
          continue;
        } else {
          var vec__20309 = cljs.core.first(seq__20302__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20309, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20309, 1, null);
          var G__20310_20329 = v;
          var G__20311_20330 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20310_20329, G__20311_20330) : f.call(null, G__20310_20329, G__20311_20330);
          var G__20331 = cljs.core.next(seq__20302__$1);
          var G__20332 = null;
          var G__20333 = 0;
          var G__20334 = 0;
          seq__20302 = G__20331;
          chunk__20303 = G__20332;
          count__20304 = G__20333;
          i__20305 = G__20334;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20312 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20312) : cljs.core.keys.call(null, G__20312);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20313 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20313) : cljs.core.vals.call(null, G__20313);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__20314 = k;
        var G__20315 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__20314, G__20315) : self__.comp.call(null, G__20314, G__20315);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__20335 = t.left;
          t = G__20335;
          continue;
        } else {
          var G__20336 = t.right;
          t = G__20336;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20337 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20338 = cljs.core.next(es);
          ret = G__20337;
          es = G__20338;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__20339 = null;
  var G__20339__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20339__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20339 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20339__2.call(this, self__, k);
      case 3:
        return G__20339__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20339.cljs$core$IFn$_invoke$arity$2 = G__20339__2;
  G__20339.cljs$core$IFn$_invoke$arity$3 = G__20339__3;
  return G__20339;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args20301) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20301)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__20316 = k;
          var G__20317 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__20316, G__20317) : self__.comp.call(null, G__20316, G__20317);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__20340 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__20341 = t.left;
              stack = G__20340;
              t = G__20341;
              continue;
            } else {
              var G__20342 = stack;
              var G__20343 = t.right;
              stack = G__20342;
              t = G__20343;
              continue;
            }
          } else {
            if (c > 0) {
              var G__20344 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__20345 = t.right;
              stack = G__20344;
              t = G__20345;
              continue;
            } else {
              var G__20346 = stack;
              var G__20347 = t.left;
              stack = G__20346;
              t = G__20347;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__20318 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20318) : cljs.core.key.call(null, G__20318);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__20348 = cljs.core.nnext(in$);
        var G__20349 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__20348;
        out = G__20349;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__20350__i = 0, G__20350__a = new Array(arguments.length - 0);
      while (G__20350__i < G__20350__a.length) {
        G__20350__a[G__20350__i] = arguments[G__20350__i + 0];
        ++G__20350__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20350__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__20351) {
    var keyvals = cljs.core.seq(arglist__20351);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__20352__i = 0, G__20352__a = new Array(arguments.length - 0);
      while (G__20352__i < G__20352__a.length) {
        G__20352__a[G__20352__i] = arguments[G__20352__i + 0];
        ++G__20352__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20352__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__20353) {
    var keyvals = cljs.core.seq(arglist__20353);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj20357 = {};
      return obj20357;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__20358 = cljs.core.nnext(kvs);
        kvs = G__20358;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__20359__i = 0, G__20359__a = new Array(arguments.length - 0);
      while (G__20359__i < G__20359__a.length) {
        G__20359__a[G__20359__i] = arguments[G__20359__i + 0];
        ++G__20359__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20359__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__20360) {
    var keyvals = cljs.core.seq(arglist__20360);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__20361 = cljs.core.nnext(in$);
        var G__20362 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__20361;
        out = G__20362;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__20363__i = 0, G__20363__a = new Array(arguments.length - 0);
      while (G__20363__i < G__20363__a.length) {
        G__20363__a[G__20363__i] = arguments[G__20363__i + 0];
        ++G__20363__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20363__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__20364) {
    var keyvals = cljs.core.seq(arglist__20364);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__20365 = cljs.core.nnext(in$);
        var G__20366 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__20365;
        out = G__20366;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__20367__i = 0, G__20367__a = new Array(arguments.length - 1);
      while (G__20367__i < G__20367__a.length) {
        G__20367__a[G__20367__i] = arguments[G__20367__i + 1];
        ++G__20367__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20367__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__20368) {
    var comparator = cljs.core.first(arglist__20368);
    var keyvals = cljs.core.rest(arglist__20368);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20369 = self__.mseq;
    if (G__20369) {
      var bit__4606__auto__ = G__20369.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4606__auto__ || G__20369.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20369.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20369);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20369);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20370 = self__.mseq;
    if (G__20370) {
      var bit__4606__auto__ = G__20370.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4606__auto__ || G__20370.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20370.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20370);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20370);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20371 = self__.mseq;
    if (G__20371) {
      var bit__4606__auto__ = G__20371.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4606__auto__ || G__20371.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20371.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20371);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20371);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20372 = self__.mseq;
    if (G__20372) {
      var bit__4606__auto__ = G__20372.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4606__auto__ || G__20372.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20372.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20372);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20372);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__20373_SHARP_, p2__20374_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3925__auto__ = p1__20373_SHARP_;
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__20374_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__20375__i = 0, G__20375__a = new Array(arguments.length - 0);
      while (G__20375__i < G__20375__a.length) {
        G__20375__a[G__20375__i] = arguments[G__20375__i + 0];
        ++G__20375__i;
      }
      maps = new cljs.core.IndexedSeq(G__20375__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__20376) {
    var maps = cljs.core.seq(arglist__20376);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__20379 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__20380 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20379, G__20380) : f.call(null, G__20379, G__20380);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3925__auto__ = m1;
            if (cljs.core.truth_(or__3925__auto__)) {
              return or__3925__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__20381__i = 0, G__20381__a = new Array(arguments.length - 1);
      while (G__20381__i < G__20381__a.length) {
        G__20381__a[G__20381__i] = arguments[G__20381__i + 1];
        ++G__20381__i;
      }
      maps = new cljs.core.IndexedSeq(G__20381__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__20382) {
    var f = cljs.core.first(arglist__20382);
    var maps = cljs.core.rest(arglist__20382);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__20383 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__20384 = cljs.core.next(keys);
      ret = G__20383;
      keys = G__20384;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20387 = cljs.core.seq(coll);
  var chunk__20388 = null;
  var count__20389 = 0;
  var i__20390 = 0;
  while (true) {
    if (i__20390 < count__20389) {
      var vec__20391 = chunk__20388.cljs$core$IIndexed$_nth$arity$2(null, i__20390);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20391, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20391, 1, null);
      var G__20392_20397 = v;
      var G__20393_20398 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20392_20397, G__20393_20398) : f.call(null, G__20392_20397, G__20393_20398);
      var G__20399 = seq__20387;
      var G__20400 = chunk__20388;
      var G__20401 = count__20389;
      var G__20402 = i__20390 + 1;
      seq__20387 = G__20399;
      chunk__20388 = G__20400;
      count__20389 = G__20401;
      i__20390 = G__20402;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20387);
      if (temp__4126__auto__) {
        var seq__20387__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20387__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__20387__$1);
          var G__20403 = cljs.core.chunk_rest(seq__20387__$1);
          var G__20404 = c__4712__auto__;
          var G__20405 = cljs.core.count(c__4712__auto__);
          var G__20406 = 0;
          seq__20387 = G__20403;
          chunk__20388 = G__20404;
          count__20389 = G__20405;
          i__20390 = G__20406;
          continue;
        } else {
          var vec__20394 = cljs.core.first(seq__20387__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20394, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20394, 1, null);
          var G__20395_20407 = v;
          var G__20396_20408 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20395_20407, G__20396_20408) : f.call(null, G__20395_20407, G__20396_20408);
          var G__20409 = cljs.core.next(seq__20387__$1);
          var G__20410 = null;
          var G__20411 = 0;
          var G__20412 = 0;
          seq__20387 = G__20409;
          chunk__20388 = G__20410;
          count__20389 = G__20411;
          i__20390 = G__20412;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__20385_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__20385_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__20413 = null;
  var G__20413__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20413__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20413 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20413__2.call(this, self__, k);
      case 3:
        return G__20413__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20413.cljs$core$IFn$_invoke$arity$2 = G__20413__2;
  G__20413.cljs$core$IFn$_invoke$arity$3 = G__20413__3;
  return G__20413;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args20386) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20386)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__20414 = i + 1;
        var G__20415 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__20414;
        out = G__20415;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__20416 = i + 1;
        var G__20417 = cljs.core._conj_BANG_(out, items[i]);
        i = G__20416;
        out = G__20417;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__20419 = null;
  var G__20419__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__20419__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__20419 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20419__2.call(this, self__, k);
      case 3:
        return G__20419__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20419.cljs$core$IFn$_invoke$arity$2 = G__20419__2;
  G__20419.cljs$core$IFn$_invoke$arity$3 = G__20419__3;
  return G__20419;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args20418) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20418)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20422 = cljs.core.seq(coll);
  var chunk__20423 = null;
  var count__20424 = 0;
  var i__20425 = 0;
  while (true) {
    if (i__20425 < count__20424) {
      var vec__20426 = chunk__20423.cljs$core$IIndexed$_nth$arity$2(null, i__20425);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20426, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20426, 1, null);
      var G__20427_20432 = v;
      var G__20428_20433 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20427_20432, G__20428_20433) : f.call(null, G__20427_20432, G__20428_20433);
      var G__20434 = seq__20422;
      var G__20435 = chunk__20423;
      var G__20436 = count__20424;
      var G__20437 = i__20425 + 1;
      seq__20422 = G__20434;
      chunk__20423 = G__20435;
      count__20424 = G__20436;
      i__20425 = G__20437;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20422);
      if (temp__4126__auto__) {
        var seq__20422__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20422__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__20422__$1);
          var G__20438 = cljs.core.chunk_rest(seq__20422__$1);
          var G__20439 = c__4712__auto__;
          var G__20440 = cljs.core.count(c__4712__auto__);
          var G__20441 = 0;
          seq__20422 = G__20438;
          chunk__20423 = G__20439;
          count__20424 = G__20440;
          i__20425 = G__20441;
          continue;
        } else {
          var vec__20429 = cljs.core.first(seq__20422__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20429, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20429, 1, null);
          var G__20430_20442 = v;
          var G__20431_20443 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20430_20442, G__20431_20443) : f.call(null, G__20430_20442, G__20431_20443);
          var G__20444 = cljs.core.next(seq__20422__$1);
          var G__20445 = null;
          var G__20446 = 0;
          var G__20447 = 0;
          seq__20422 = G__20444;
          chunk__20423 = G__20445;
          count__20424 = G__20446;
          i__20425 = G__20447;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__20420_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__20420_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__20448 = null;
  var G__20448__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20448__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20448 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20448__2.call(this, self__, k);
      case 3:
        return G__20448__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20448.cljs$core$IFn$_invoke$arity$2 = G__20448__2;
  G__20448.cljs$core$IFn$_invoke$arity$3 = G__20448__3;
  return G__20448;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args20421) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20421)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4806__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4806__auto__.length) {
        var G__20449 = i + 1;
        var G__20450 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__20449;
        res = G__20450;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__20451 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__20452 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__20451;
          out = G__20452;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__20453__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__20453 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__20454__i = 0, G__20454__a = new Array(arguments.length - 0);
        while (G__20454__i < G__20454__a.length) {
          G__20454__a[G__20454__i] = arguments[G__20454__i + 0];
          ++G__20454__i;
        }
        keys = new cljs.core.IndexedSeq(G__20454__a, 0);
      }
      return G__20453__delegate.call(this, keys);
    };
    G__20453.cljs$lang$maxFixedArity = 0;
    G__20453.cljs$lang$applyTo = function(arglist__20455) {
      var keys = cljs.core.seq(arglist__20455);
      return G__20453__delegate(keys);
    };
    G__20453.cljs$core$IFn$_invoke$arity$variadic = G__20453__delegate;
    return G__20453;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__20456 = null;
        if (arguments.length > 0) {
          var G__20457__i = 0, G__20457__a = new Array(arguments.length - 0);
          while (G__20457__i < G__20457__a.length) {
            G__20457__a[G__20457__i] = arguments[G__20457__i + 0];
            ++G__20457__i;
          }
          G__20456 = new cljs.core.IndexedSeq(G__20457__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__20456);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__20458__i = 0, G__20458__a = new Array(arguments.length - 0);
      while (G__20458__i < G__20458__a.length) {
        G__20458__a[G__20458__i] = arguments[G__20458__i + 0];
        ++G__20458__i;
      }
      keys = new cljs.core.IndexedSeq(G__20458__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__20459) {
    var keys = cljs.core.seq(arglist__20459);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__20460__i = 0, G__20460__a = new Array(arguments.length - 1);
      while (G__20460__i < G__20460__a.length) {
        G__20460__a[G__20460__i] = arguments[G__20460__i + 1];
        ++G__20460__i;
      }
      keys = new cljs.core.IndexedSeq(G__20460__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__20461) {
    var comparator = cljs.core.first(arglist__20461);
    var keys = cljs.core.rest(arglist__20461);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__20462_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__20462_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__20462_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__20463_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__20463_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__20463_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__20484 = null;
          var G__20484__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20484__1 = function(result) {
            var G__20474 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20474) : rf.call(null, G__20474);
          };
          var G__20484__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__20475 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20475) : cljs.core.deref.call(null, G__20475);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__20476 = result;
              var G__20477 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20476, G__20477) : rf.call(null, G__20476, G__20477);
            }
          };
          G__20484 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20484__0.call(this);
              case 1:
                return G__20484__1.call(this, result);
              case 2:
                return G__20484__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20484.cljs$core$IFn$_invoke$arity$0 = G__20484__0;
          G__20484.cljs$core$IFn$_invoke$arity$1 = G__20484__1;
          G__20484.cljs$core$IFn$_invoke$arity$2 = G__20484__2;
          return G__20484;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__20482, seen__$1) {
          while (true) {
            var vec__20483 = p__20482;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20483, 0, null);
            var xs__$1 = vec__20483;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__20485 = cljs.core.rest(s);
                var G__20486 = seen__$1;
                p__20482 = G__20485;
                seen__$1 = G__20486;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__20487 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__20488 = cljs.core.next(s__$1);
      ret = G__20487;
      s__$1 = G__20488;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__20490 = x;
    if (G__20490) {
      var bit__4599__auto__ = G__20490.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4599__auto__ || G__20490.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__20491 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__20492 = cljs.core.next(ks);
      var G__20493 = cljs.core.next(vs);
      map = G__20491;
      ks = G__20492;
      vs = G__20493;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__20504 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20504) : k.call(null, G__20504);
    }() > function() {
      var G__20505 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20505) : k.call(null, G__20505);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__20506__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20494_SHARP_, p2__20495_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__20494_SHARP_, p2__20495_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__20506 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__20507__i = 0, G__20507__a = new Array(arguments.length - 3);
        while (G__20507__i < G__20507__a.length) {
          G__20507__a[G__20507__i] = arguments[G__20507__i + 3];
          ++G__20507__i;
        }
        more = new cljs.core.IndexedSeq(G__20507__a, 0);
      }
      return G__20506__delegate.call(this, k, x, y, more);
    };
    G__20506.cljs$lang$maxFixedArity = 3;
    G__20506.cljs$lang$applyTo = function(arglist__20508) {
      var k = cljs.core.first(arglist__20508);
      arglist__20508 = cljs.core.next(arglist__20508);
      var x = cljs.core.first(arglist__20508);
      arglist__20508 = cljs.core.next(arglist__20508);
      var y = cljs.core.first(arglist__20508);
      var more = cljs.core.rest(arglist__20508);
      return G__20506__delegate(k, x, y, more);
    };
    G__20506.cljs$core$IFn$_invoke$arity$variadic = G__20506__delegate;
    return G__20506;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__20509 = null;
        if (arguments.length > 3) {
          var G__20510__i = 0, G__20510__a = new Array(arguments.length - 3);
          while (G__20510__i < G__20510__a.length) {
            G__20510__a[G__20510__i] = arguments[G__20510__i + 3];
            ++G__20510__i;
          }
          G__20509 = new cljs.core.IndexedSeq(G__20510__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__20509);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__20521 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20521) : k.call(null, G__20521);
    }() < function() {
      var G__20522 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20522) : k.call(null, G__20522);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__20523__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20511_SHARP_, p2__20512_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__20511_SHARP_, p2__20512_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__20523 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__20524__i = 0, G__20524__a = new Array(arguments.length - 3);
        while (G__20524__i < G__20524__a.length) {
          G__20524__a[G__20524__i] = arguments[G__20524__i + 3];
          ++G__20524__i;
        }
        more = new cljs.core.IndexedSeq(G__20524__a, 0);
      }
      return G__20523__delegate.call(this, k, x, y, more);
    };
    G__20523.cljs$lang$maxFixedArity = 3;
    G__20523.cljs$lang$applyTo = function(arglist__20525) {
      var k = cljs.core.first(arglist__20525);
      arglist__20525 = cljs.core.next(arglist__20525);
      var x = cljs.core.first(arglist__20525);
      arglist__20525 = cljs.core.next(arglist__20525);
      var y = cljs.core.first(arglist__20525);
      var more = cljs.core.rest(arglist__20525);
      return G__20523__delegate(k, x, y, more);
    };
    G__20523.cljs$core$IFn$_invoke$arity$variadic = G__20523__delegate;
    return G__20523;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__20526 = null;
        if (arguments.length > 3) {
          var G__20527__i = 0, G__20527__a = new Array(arguments.length - 3);
          while (G__20527__i < G__20527__a.length) {
            G__20527__a[G__20527__i] = arguments[G__20527__i + 3];
            ++G__20527__i;
          }
          G__20526 = new cljs.core.IndexedSeq(G__20527__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__20526);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__20544 = null;
          var G__20544__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20544__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__20539 = result;
                var G__20540 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20539, G__20540) : rf.call(null, G__20539, G__20540);
              }());
            }();
            var G__20541 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20541) : rf.call(null, G__20541);
          };
          var G__20544__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__20542 = result;
              var G__20543 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20542, G__20543) : rf.call(null, G__20542, G__20543);
            } else {
              return result;
            }
          };
          G__20544 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20544__0.call(this);
              case 1:
                return G__20544__1.call(this, result);
              case 2:
                return G__20544__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20544.cljs$core$IFn$_invoke$arity$0 = G__20544__0;
          G__20544.cljs$core$IFn$_invoke$arity$1 = G__20544__1;
          G__20544.cljs$core$IFn$_invoke$arity$2 = G__20544__2;
          return G__20544;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__20557 = null;
        var G__20557__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20557__1 = function(result) {
          var G__20552 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20552) : rf.call(null, G__20552);
        };
        var G__20557__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__20553 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20553) : pred.call(null, G__20553);
          }())) {
            var G__20554 = result;
            var G__20555 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20554, G__20555) : rf.call(null, G__20554, G__20555);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__20557 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20557__0.call(this);
            case 1:
              return G__20557__1.call(this, result);
            case 2:
              return G__20557__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20557.cljs$core$IFn$_invoke$arity$0 = G__20557__0;
        G__20557.cljs$core$IFn$_invoke$arity$1 = G__20557__1;
        G__20557.cljs$core$IFn$_invoke$arity$2 = G__20557__2;
        return G__20557;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__20556 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20556) : pred.call(null, G__20556);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__20562 = function() {
      var G__20564 = cljs.core._entry_key(sc, e);
      var G__20565 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20564, G__20565) : comp.call(null, G__20564, G__20565);
    }();
    var G__20563 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__20562, G__20563) : test.call(null, G__20562, G__20563);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__20569 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20569, 0, null);
        var s = vec__20569;
        if (cljs.core.truth_(function() {
          var G__20570 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__20570) : include.call(null, G__20570);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__20571 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20571, 0, null);
      var s = vec__20571;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__20575 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20575, 0, null);
        var s = vec__20575;
        if (cljs.core.truth_(function() {
          var G__20576 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__20576) : include.call(null, G__20576);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__20577 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20577, 0, null);
      var s = vec__20577;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__20578 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__20578) : Math.ceil.call(null, G__20578);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__20579 = ret;
        var G__20580 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20579, G__20580) : f.call(null, G__20579, G__20580);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__20581 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20581) : cljs.core.deref.call(null, G__20581);
      } else {
        var G__20582 = i + self__.step;
        var G__20583 = ret__$1;
        i = G__20582;
        ret = G__20583;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__20601 = null;
          var G__20601__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20601__1 = function(result) {
            var G__20598 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20598) : rf.call(null, G__20598);
          };
          var G__20601__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__20599 = result;
              var G__20600 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20599, G__20600) : rf.call(null, G__20599, G__20600);
            } else {
              return result;
            }
          };
          G__20601 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20601__0.call(this);
              case 1:
                return G__20601__1.call(this, result);
              case 2:
                return G__20601__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20601.cljs$core$IFn$_invoke$arity$0 = G__20601__0;
          G__20601.cljs$core$IFn$_invoke$arity$1 = G__20601__1;
          G__20601.cljs$core$IFn$_invoke$arity$2 = G__20601__2;
          return G__20601;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__20623 = null;
          var G__20623__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20623__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__20614 = result;
                var G__20615 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20614, G__20615) : rf.call(null, G__20614, G__20615);
              }());
            }();
            var G__20616 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20616) : rf.call(null, G__20616);
          };
          var G__20623__2 = function(result, input) {
            var pval = function() {
              var G__20617 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20617) : cljs.core.deref.call(null, G__20617);
            }();
            var val = function() {
              var G__20618 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20618) : f.call(null, G__20618);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__20619 = result;
                var G__20620 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20619, G__20620) : rf.call(null, G__20619, G__20620);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__20623 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20623__0.call(this);
              case 1:
                return G__20623__1.call(this, result);
              case 2:
                return G__20623__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20623.cljs$core$IFn$_invoke$arity$0 = G__20623__0;
          G__20623.cljs$core$IFn$_invoke$arity$1 = G__20623__1;
          G__20623.cljs$core$IFn$_invoke$arity$2 = G__20623__2;
          return G__20623;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__20621 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20621) : f.call(null, G__20621);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__20602_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__20622 = p1__20602_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20622) : f.call(null, G__20622);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__20632 = init;
          var G__20633 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20632, G__20633) : f.call(null, G__20632, G__20633);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__20728 = null;
      var G__20728__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__20728__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20686 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20686) : f.call(null, G__20686);
        }()], null);
      };
      var G__20728__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20687 = x;
          var G__20688 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20687, G__20688) : f.call(null, G__20687, G__20688);
        }()], null);
      };
      var G__20728__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20689 = x;
          var G__20690 = y;
          var G__20691 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20689, G__20690, G__20691) : f.call(null, G__20689, G__20690, G__20691);
        }()], null);
      };
      var G__20728__4 = function() {
        var G__20729__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__20729 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20730__i = 0, G__20730__a = new Array(arguments.length - 3);
            while (G__20730__i < G__20730__a.length) {
              G__20730__a[G__20730__i] = arguments[G__20730__i + 3];
              ++G__20730__i;
            }
            args = new cljs.core.IndexedSeq(G__20730__a, 0);
          }
          return G__20729__delegate.call(this, x, y, z, args);
        };
        G__20729.cljs$lang$maxFixedArity = 3;
        G__20729.cljs$lang$applyTo = function(arglist__20731) {
          var x = cljs.core.first(arglist__20731);
          arglist__20731 = cljs.core.next(arglist__20731);
          var y = cljs.core.first(arglist__20731);
          arglist__20731 = cljs.core.next(arglist__20731);
          var z = cljs.core.first(arglist__20731);
          var args = cljs.core.rest(arglist__20731);
          return G__20729__delegate(x, y, z, args);
        };
        G__20729.cljs$core$IFn$_invoke$arity$variadic = G__20729__delegate;
        return G__20729;
      }();
      G__20728 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20728__0.call(this);
          case 1:
            return G__20728__1.call(this, x);
          case 2:
            return G__20728__2.call(this, x, y);
          case 3:
            return G__20728__3.call(this, x, y, z);
          default:
            var G__20732 = null;
            if (arguments.length > 3) {
              var G__20733__i = 0, G__20733__a = new Array(arguments.length - 3);
              while (G__20733__i < G__20733__a.length) {
                G__20733__a[G__20733__i] = arguments[G__20733__i + 3];
                ++G__20733__i;
              }
              G__20732 = new cljs.core.IndexedSeq(G__20733__a, 0);
            }
            return G__20728__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20732);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20728.cljs$lang$maxFixedArity = 3;
      G__20728.cljs$lang$applyTo = G__20728__4.cljs$lang$applyTo;
      G__20728.cljs$core$IFn$_invoke$arity$0 = G__20728__0;
      G__20728.cljs$core$IFn$_invoke$arity$1 = G__20728__1;
      G__20728.cljs$core$IFn$_invoke$arity$2 = G__20728__2;
      G__20728.cljs$core$IFn$_invoke$arity$3 = G__20728__3;
      G__20728.cljs$core$IFn$_invoke$arity$variadic = G__20728__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20728;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__20734 = null;
      var G__20734__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__20734__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20692 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20692) : f.call(null, G__20692);
        }(), function() {
          var G__20693 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20693) : g.call(null, G__20693);
        }()], null);
      };
      var G__20734__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20694 = x;
          var G__20695 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20694, G__20695) : f.call(null, G__20694, G__20695);
        }(), function() {
          var G__20696 = x;
          var G__20697 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20696, G__20697) : g.call(null, G__20696, G__20697);
        }()], null);
      };
      var G__20734__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20698 = x;
          var G__20699 = y;
          var G__20700 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20698, G__20699, G__20700) : f.call(null, G__20698, G__20699, G__20700);
        }(), function() {
          var G__20701 = x;
          var G__20702 = y;
          var G__20703 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20701, G__20702, G__20703) : g.call(null, G__20701, G__20702, G__20703);
        }()], null);
      };
      var G__20734__4 = function() {
        var G__20735__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__20735 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20736__i = 0, G__20736__a = new Array(arguments.length - 3);
            while (G__20736__i < G__20736__a.length) {
              G__20736__a[G__20736__i] = arguments[G__20736__i + 3];
              ++G__20736__i;
            }
            args = new cljs.core.IndexedSeq(G__20736__a, 0);
          }
          return G__20735__delegate.call(this, x, y, z, args);
        };
        G__20735.cljs$lang$maxFixedArity = 3;
        G__20735.cljs$lang$applyTo = function(arglist__20737) {
          var x = cljs.core.first(arglist__20737);
          arglist__20737 = cljs.core.next(arglist__20737);
          var y = cljs.core.first(arglist__20737);
          arglist__20737 = cljs.core.next(arglist__20737);
          var z = cljs.core.first(arglist__20737);
          var args = cljs.core.rest(arglist__20737);
          return G__20735__delegate(x, y, z, args);
        };
        G__20735.cljs$core$IFn$_invoke$arity$variadic = G__20735__delegate;
        return G__20735;
      }();
      G__20734 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20734__0.call(this);
          case 1:
            return G__20734__1.call(this, x);
          case 2:
            return G__20734__2.call(this, x, y);
          case 3:
            return G__20734__3.call(this, x, y, z);
          default:
            var G__20738 = null;
            if (arguments.length > 3) {
              var G__20739__i = 0, G__20739__a = new Array(arguments.length - 3);
              while (G__20739__i < G__20739__a.length) {
                G__20739__a[G__20739__i] = arguments[G__20739__i + 3];
                ++G__20739__i;
              }
              G__20738 = new cljs.core.IndexedSeq(G__20739__a, 0);
            }
            return G__20734__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20738);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20734.cljs$lang$maxFixedArity = 3;
      G__20734.cljs$lang$applyTo = G__20734__4.cljs$lang$applyTo;
      G__20734.cljs$core$IFn$_invoke$arity$0 = G__20734__0;
      G__20734.cljs$core$IFn$_invoke$arity$1 = G__20734__1;
      G__20734.cljs$core$IFn$_invoke$arity$2 = G__20734__2;
      G__20734.cljs$core$IFn$_invoke$arity$3 = G__20734__3;
      G__20734.cljs$core$IFn$_invoke$arity$variadic = G__20734__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20734;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__20740 = null;
      var G__20740__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__20740__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20704 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20704) : f.call(null, G__20704);
        }(), function() {
          var G__20705 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20705) : g.call(null, G__20705);
        }(), function() {
          var G__20706 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__20706) : h.call(null, G__20706);
        }()], null);
      };
      var G__20740__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20707 = x;
          var G__20708 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20707, G__20708) : f.call(null, G__20707, G__20708);
        }(), function() {
          var G__20709 = x;
          var G__20710 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20709, G__20710) : g.call(null, G__20709, G__20710);
        }(), function() {
          var G__20711 = x;
          var G__20712 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__20711, G__20712) : h.call(null, G__20711, G__20712);
        }()], null);
      };
      var G__20740__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20713 = x;
          var G__20714 = y;
          var G__20715 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20713, G__20714, G__20715) : f.call(null, G__20713, G__20714, G__20715);
        }(), function() {
          var G__20716 = x;
          var G__20717 = y;
          var G__20718 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20716, G__20717, G__20718) : g.call(null, G__20716, G__20717, G__20718);
        }(), function() {
          var G__20719 = x;
          var G__20720 = y;
          var G__20721 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__20719, G__20720, G__20721) : h.call(null, G__20719, G__20720, G__20721);
        }()], null);
      };
      var G__20740__4 = function() {
        var G__20741__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__20741 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20742__i = 0, G__20742__a = new Array(arguments.length - 3);
            while (G__20742__i < G__20742__a.length) {
              G__20742__a[G__20742__i] = arguments[G__20742__i + 3];
              ++G__20742__i;
            }
            args = new cljs.core.IndexedSeq(G__20742__a, 0);
          }
          return G__20741__delegate.call(this, x, y, z, args);
        };
        G__20741.cljs$lang$maxFixedArity = 3;
        G__20741.cljs$lang$applyTo = function(arglist__20743) {
          var x = cljs.core.first(arglist__20743);
          arglist__20743 = cljs.core.next(arglist__20743);
          var y = cljs.core.first(arglist__20743);
          arglist__20743 = cljs.core.next(arglist__20743);
          var z = cljs.core.first(arglist__20743);
          var args = cljs.core.rest(arglist__20743);
          return G__20741__delegate(x, y, z, args);
        };
        G__20741.cljs$core$IFn$_invoke$arity$variadic = G__20741__delegate;
        return G__20741;
      }();
      G__20740 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20740__0.call(this);
          case 1:
            return G__20740__1.call(this, x);
          case 2:
            return G__20740__2.call(this, x, y);
          case 3:
            return G__20740__3.call(this, x, y, z);
          default:
            var G__20744 = null;
            if (arguments.length > 3) {
              var G__20745__i = 0, G__20745__a = new Array(arguments.length - 3);
              while (G__20745__i < G__20745__a.length) {
                G__20745__a[G__20745__i] = arguments[G__20745__i + 3];
                ++G__20745__i;
              }
              G__20744 = new cljs.core.IndexedSeq(G__20745__a, 0);
            }
            return G__20740__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20744);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20740.cljs$lang$maxFixedArity = 3;
      G__20740.cljs$lang$applyTo = G__20740__4.cljs$lang$applyTo;
      G__20740.cljs$core$IFn$_invoke$arity$0 = G__20740__0;
      G__20740.cljs$core$IFn$_invoke$arity$1 = G__20740__1;
      G__20740.cljs$core$IFn$_invoke$arity$2 = G__20740__2;
      G__20740.cljs$core$IFn$_invoke$arity$3 = G__20740__3;
      G__20740.cljs$core$IFn$_invoke$arity$variadic = G__20740__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20740;
    }();
  };
  var juxt__4 = function() {
    var G__20746__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__20747 = null;
          var G__20747__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__20634_SHARP_, p2__20635_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20634_SHARP_, function() {
                  return p2__20635_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__20635_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__20635_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20747__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__20636_SHARP_, p2__20637_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20636_SHARP_, function() {
                  var G__20722 = x;
                  return p2__20637_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__20637_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20722) : p2__20637_SHARP_.call(null, G__20722);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20747__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__20638_SHARP_, p2__20639_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20638_SHARP_, function() {
                  var G__20723 = x;
                  var G__20724 = y;
                  return p2__20639_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__20639_SHARP_.cljs$core$IFn$_invoke$arity$2(G__20723, G__20724) : p2__20639_SHARP_.call(null, G__20723, G__20724);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20747__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__20640_SHARP_, p2__20641_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20640_SHARP_, function() {
                  var G__20725 = x;
                  var G__20726 = y;
                  var G__20727 = z;
                  return p2__20641_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__20641_SHARP_.cljs$core$IFn$_invoke$arity$3(G__20725, G__20726, G__20727) : p2__20641_SHARP_.call(null, G__20725, G__20726, G__20727);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20747__4 = function() {
            var G__20748__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__20642_SHARP_, p2__20643_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20642_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__20643_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__20748 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__20749__i = 0, G__20749__a = new Array(arguments.length - 3);
                while (G__20749__i < G__20749__a.length) {
                  G__20749__a[G__20749__i] = arguments[G__20749__i + 3];
                  ++G__20749__i;
                }
                args = new cljs.core.IndexedSeq(G__20749__a, 0);
              }
              return G__20748__delegate.call(this, x, y, z, args);
            };
            G__20748.cljs$lang$maxFixedArity = 3;
            G__20748.cljs$lang$applyTo = function(arglist__20750) {
              var x = cljs.core.first(arglist__20750);
              arglist__20750 = cljs.core.next(arglist__20750);
              var y = cljs.core.first(arglist__20750);
              arglist__20750 = cljs.core.next(arglist__20750);
              var z = cljs.core.first(arglist__20750);
              var args = cljs.core.rest(arglist__20750);
              return G__20748__delegate(x, y, z, args);
            };
            G__20748.cljs$core$IFn$_invoke$arity$variadic = G__20748__delegate;
            return G__20748;
          }();
          G__20747 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__20747__0.call(this);
              case 1:
                return G__20747__1.call(this, x);
              case 2:
                return G__20747__2.call(this, x, y);
              case 3:
                return G__20747__3.call(this, x, y, z);
              default:
                var G__20751 = null;
                if (arguments.length > 3) {
                  var G__20752__i = 0, G__20752__a = new Array(arguments.length - 3);
                  while (G__20752__i < G__20752__a.length) {
                    G__20752__a[G__20752__i] = arguments[G__20752__i + 3];
                    ++G__20752__i;
                  }
                  G__20751 = new cljs.core.IndexedSeq(G__20752__a, 0);
                }
                return G__20747__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20751);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20747.cljs$lang$maxFixedArity = 3;
          G__20747.cljs$lang$applyTo = G__20747__4.cljs$lang$applyTo;
          G__20747.cljs$core$IFn$_invoke$arity$0 = G__20747__0;
          G__20747.cljs$core$IFn$_invoke$arity$1 = G__20747__1;
          G__20747.cljs$core$IFn$_invoke$arity$2 = G__20747__2;
          G__20747.cljs$core$IFn$_invoke$arity$3 = G__20747__3;
          G__20747.cljs$core$IFn$_invoke$arity$variadic = G__20747__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__20747;
        }();
      }(fs__$1);
    };
    var G__20746 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__20753__i = 0, G__20753__a = new Array(arguments.length - 3);
        while (G__20753__i < G__20753__a.length) {
          G__20753__a[G__20753__i] = arguments[G__20753__i + 3];
          ++G__20753__i;
        }
        fs = new cljs.core.IndexedSeq(G__20753__a, 0);
      }
      return G__20746__delegate.call(this, f, g, h, fs);
    };
    G__20746.cljs$lang$maxFixedArity = 3;
    G__20746.cljs$lang$applyTo = function(arglist__20754) {
      var f = cljs.core.first(arglist__20754);
      arglist__20754 = cljs.core.next(arglist__20754);
      var g = cljs.core.first(arglist__20754);
      arglist__20754 = cljs.core.next(arglist__20754);
      var h = cljs.core.first(arglist__20754);
      var fs = cljs.core.rest(arglist__20754);
      return G__20746__delegate(f, g, h, fs);
    };
    G__20746.cljs$core$IFn$_invoke$arity$variadic = G__20746__delegate;
    return G__20746;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__20755 = null;
        if (arguments.length > 3) {
          var G__20756__i = 0, G__20756__a = new Array(arguments.length - 3);
          while (G__20756__i < G__20756__a.length) {
            G__20756__a[G__20756__i] = arguments[G__20756__i + 3];
            ++G__20756__i;
          }
          G__20755 = new cljs.core.IndexedSeq(G__20756__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__20755);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__20757 = cljs.core.next(coll);
        coll = G__20757;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__20758 = n - 1;
        var G__20759 = cljs.core.next(coll);
        n = G__20758;
        coll = G__20759;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__20763 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20763, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20763, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20763, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_20771 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__3925__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__3925__auto__)) {
              return or__3925__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__20772_20778 = cljs.core.first(coll);
          var G__20773_20779 = writer;
          var G__20774_20780 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20772_20778, G__20773_20779, G__20774_20780) : print_one.call(null, G__20772_20778, G__20773_20779, G__20774_20780);
        } else {
        }
        var coll_20781__$1 = cljs.core.next(coll);
        var n_20782 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_20781__$1 && (n_20782 == null || !(n_20782 === 0))) {
            cljs.core._write(writer, sep);
            var G__20775_20783 = cljs.core.first(coll_20781__$1);
            var G__20776_20784 = writer;
            var G__20777_20785 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20775_20783, G__20776_20784, G__20777_20785) : print_one.call(null, G__20775_20783, G__20776_20784, G__20777_20785);
            var G__20786 = cljs.core.next(coll_20781__$1);
            var G__20787 = n_20782 - 1;
            coll_20781__$1 = G__20786;
            n_20782 = G__20787;
            continue;
          } else {
            if (cljs.core.seq(coll_20781__$1) && n_20782 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__3925__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__3925__auto__)) {
                  return or__3925__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_20771;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__20792 = cljs.core.seq(ss);
    var chunk__20793 = null;
    var count__20794 = 0;
    var i__20795 = 0;
    while (true) {
      if (i__20795 < count__20794) {
        var s = chunk__20793.cljs$core$IIndexed$_nth$arity$2(null, i__20795);
        cljs.core._write(writer, s);
        var G__20796 = seq__20792;
        var G__20797 = chunk__20793;
        var G__20798 = count__20794;
        var G__20799 = i__20795 + 1;
        seq__20792 = G__20796;
        chunk__20793 = G__20797;
        count__20794 = G__20798;
        i__20795 = G__20799;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__20792);
        if (temp__4126__auto__) {
          var seq__20792__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__20792__$1)) {
            var c__4712__auto__ = cljs.core.chunk_first(seq__20792__$1);
            var G__20800 = cljs.core.chunk_rest(seq__20792__$1);
            var G__20801 = c__4712__auto__;
            var G__20802 = cljs.core.count(c__4712__auto__);
            var G__20803 = 0;
            seq__20792 = G__20800;
            chunk__20793 = G__20801;
            count__20794 = G__20802;
            i__20795 = G__20803;
            continue;
          } else {
            var s = cljs.core.first(seq__20792__$1);
            cljs.core._write(writer, s);
            var G__20804 = cljs.core.next(seq__20792__$1);
            var G__20805 = null;
            var G__20806 = 0;
            var G__20807 = 0;
            seq__20792 = G__20804;
            chunk__20793 = G__20805;
            count__20794 = G__20806;
            i__20795 = G__20807;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__20808__i = 0, G__20808__a = new Array(arguments.length - 1);
      while (G__20808__i < G__20808__a.length) {
        G__20808__a[G__20808__i] = arguments[G__20808__i + 1];
        ++G__20808__i;
      }
      ss = new cljs.core.IndexedSeq(G__20808__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__20809) {
    var writer = cljs.core.first(arglist__20809);
    var ss = cljs.core.rest(arglist__20809);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj20811 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj20811;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__20814 = '[\\\\"\b\f\n\r\t]';
    var G__20815 = "g";
    return RegExp(G__20814, G__20815);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3913__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3913__auto__)) {
          var and__3913__auto____$1 = function() {
            var G__20829 = obj;
            if (G__20829) {
              var bit__4606__auto__ = G__20829.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4606__auto__ || G__20829.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__20829.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__20829);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__20829);
            }
          }();
          if (and__3913__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3913__auto____$1;
          }
        } else {
          return and__3913__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__20830_20840 = cljs.core.meta(obj);
        var G__20831_20841 = writer;
        var G__20832_20842 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__20830_20840, G__20831_20841, G__20832_20842) : cljs.core.pr_writer.call(null, G__20830_20840, G__20831_20841, G__20832_20842);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__20833 = obj;
            if (G__20833) {
              var bit__4599__auto__ = G__20833.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4599__auto__ || G__20833.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__20834 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__20835 = cljs.core.pr_writer;
                var G__20836 = writer;
                var G__20837 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__20834, G__20835, G__20836, G__20837) : cljs.core.print_map.call(null, G__20834, G__20835, G__20836, G__20837);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__20838 = obj;
                    return goog.isString(G__20838);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__20843 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__20843;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__20839 = obj;
                            if (G__20839) {
                              var bit__4606__auto__ = G__20839.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4606__auto__ || G__20839.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__20839.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__20839);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__20839);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  var temp__4124__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var alt_impl = temp__4124__auto__;
    var G__20847 = obj;
    var G__20848 = writer;
    var G__20849 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__20847, G__20848, G__20849) : alt_impl.call(null, G__20847, G__20848, G__20849);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__20854 = cljs.core.seq(cljs.core.next(objs));
  var chunk__20855 = null;
  var count__20856 = 0;
  var i__20857 = 0;
  while (true) {
    if (i__20857 < count__20856) {
      var obj = chunk__20855.cljs$core$IIndexed$_nth$arity$2(null, i__20857);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__20858 = seq__20854;
      var G__20859 = chunk__20855;
      var G__20860 = count__20856;
      var G__20861 = i__20857 + 1;
      seq__20854 = G__20858;
      chunk__20855 = G__20859;
      count__20856 = G__20860;
      i__20857 = G__20861;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20854);
      if (temp__4126__auto__) {
        var seq__20854__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20854__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__20854__$1);
          var G__20862 = cljs.core.chunk_rest(seq__20854__$1);
          var G__20863 = c__4712__auto__;
          var G__20864 = cljs.core.count(c__4712__auto__);
          var G__20865 = 0;
          seq__20854 = G__20862;
          chunk__20855 = G__20863;
          count__20856 = G__20864;
          i__20857 = G__20865;
          continue;
        } else {
          var obj = cljs.core.first(seq__20854__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__20866 = cljs.core.next(seq__20854__$1);
          var G__20867 = null;
          var G__20868 = 0;
          var G__20869 = 0;
          seq__20854 = G__20866;
          chunk__20855 = G__20867;
          count__20856 = G__20868;
          i__20857 = G__20869;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20870__i = 0, G__20870__a = new Array(arguments.length - 0);
      while (G__20870__i < G__20870__a.length) {
        G__20870__a[G__20870__i] = arguments[G__20870__i + 0];
        ++G__20870__i;
      }
      objs = new cljs.core.IndexedSeq(G__20870__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__20871) {
    var objs = cljs.core.seq(arglist__20871);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20872__i = 0, G__20872__a = new Array(arguments.length - 0);
      while (G__20872__i < G__20872__a.length) {
        G__20872__a[G__20872__i] = arguments[G__20872__i + 0];
        ++G__20872__i;
      }
      objs = new cljs.core.IndexedSeq(G__20872__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__20873) {
    var objs = cljs.core.seq(arglist__20873);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20874__i = 0, G__20874__a = new Array(arguments.length - 0);
      while (G__20874__i < G__20874__a.length) {
        G__20874__a[G__20874__i] = arguments[G__20874__i + 0];
        ++G__20874__i;
      }
      objs = new cljs.core.IndexedSeq(G__20874__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__20875) {
    var objs = cljs.core.seq(arglist__20875);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20876__i = 0, G__20876__a = new Array(arguments.length - 0);
      while (G__20876__i < G__20876__a.length) {
        G__20876__a[G__20876__i] = arguments[G__20876__i + 0];
        ++G__20876__i;
      }
      objs = new cljs.core.IndexedSeq(G__20876__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__20877) {
    var objs = cljs.core.seq(arglist__20877);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20878__i = 0, G__20878__a = new Array(arguments.length - 0);
      while (G__20878__i < G__20878__a.length) {
        G__20878__a[G__20878__i] = arguments[G__20878__i + 0];
        ++G__20878__i;
      }
      objs = new cljs.core.IndexedSeq(G__20878__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__20879) {
    var objs = cljs.core.seq(arglist__20879);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20880__i = 0, G__20880__a = new Array(arguments.length - 0);
      while (G__20880__i < G__20880__a.length) {
        G__20880__a[G__20880__i] = arguments[G__20880__i + 0];
        ++G__20880__i;
      }
      objs = new cljs.core.IndexedSeq(G__20880__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__20881) {
    var objs = cljs.core.seq(arglist__20881);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20882__i = 0, G__20882__a = new Array(arguments.length - 0);
      while (G__20882__i < G__20882__a.length) {
        G__20882__a[G__20882__i] = arguments[G__20882__i + 0];
        ++G__20882__i;
      }
      objs = new cljs.core.IndexedSeq(G__20882__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__20883) {
    var objs = cljs.core.seq(arglist__20883);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20884__i = 0, G__20884__a = new Array(arguments.length - 0);
      while (G__20884__i < G__20884__a.length) {
        G__20884__a[G__20884__i] = arguments[G__20884__i + 0];
        ++G__20884__i;
      }
      objs = new cljs.core.IndexedSeq(G__20884__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__20885) {
    var objs = cljs.core.seq(arglist__20885);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__20892_20898 = cljs.core.key(e);
    var G__20893_20899 = w;
    var G__20894_20900 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20892_20898, G__20893_20899, G__20894_20900) : print_one.call(null, G__20892_20898, G__20893_20899, G__20894_20900);
    cljs.core._write(w, " ");
    var G__20895 = cljs.core.val(e);
    var G__20896 = w;
    var G__20897 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20895, G__20896, G__20897) : print_one.call(null, G__20895, G__20896, G__20897);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__20901__i = 0, G__20901__a = new Array(arguments.length - 2);
      while (G__20901__i < G__20901__a.length) {
        G__20901__a[G__20901__i] = arguments[G__20901__i + 2];
        ++G__20901__i;
      }
      args = new cljs.core.IndexedSeq(G__20901__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__20902) {
    var iref = cljs.core.first(arglist__20902);
    arglist__20902 = cljs.core.next(arglist__20902);
    var f = cljs.core.first(arglist__20902);
    var args = cljs.core.rest(arglist__20902);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__20905 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20905) : cljs.core.atom.call(null, G__20905);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__20907 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20907) : cljs.core.deref.call(null, G__20907);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__20908_SHARP_, p2__20909_SHARP_) {
    var ret = function() {
      var G__20912 = p1__20908_SHARP_;
      var G__20913 = p2__20909_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20912, G__20913) : rf.call(null, G__20912, G__20913);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__20916 = null;
      var G__20916__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__20916__1 = function(result) {
        var G__20915 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20915) : rf.call(null, G__20915);
      };
      var G__20916__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__20916 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__20916__0.call(this);
          case 1:
            return G__20916__1.call(this, result);
          case 2:
            return G__20916__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20916.cljs$core$IFn$_invoke$arity$0 = G__20916__0;
      G__20916.cljs$core$IFn$_invoke$arity$1 = G__20916__1;
      G__20916.cljs$core$IFn$_invoke$arity$2 = G__20916__2;
      return G__20916;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__20925 = null;
          var G__20925__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20925__1 = function(result) {
            var G__20921 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20921) : rf.call(null, G__20921);
          };
          var G__20925__2 = function(result, input) {
            var prior = function() {
              var G__20922 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20922) : cljs.core.deref.call(null, G__20922);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__20923 = result;
              var G__20924 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20923, G__20924) : rf.call(null, G__20923, G__20924);
            }
          };
          G__20925 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20925__0.call(this);
              case 1:
                return G__20925__1.call(this, result);
              case 2:
                return G__20925__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20925.cljs$core$IFn$_invoke$arity$0 = G__20925__0;
          G__20925.cljs$core$IFn$_invoke$arity$1 = G__20925__1;
          G__20925.cljs$core$IFn$_invoke$arity$2 = G__20925__2;
          return G__20925;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20927_SHARP_, p2__20926_SHARP_) {
    var G__20929 = p2__20926_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__20929) : proc.call(null, G__20929);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj20931 = {};
  return obj20931;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._clj__GT_js[function() {
        var G__20935 = x__4569__auto__;
        return goog.typeOf(G__20935);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._key__GT_js[function() {
        var G__20939 = x__4569__auto__;
        return goog.typeOf(G__20939);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__20942 = k;
    if (G__20942) {
      var bit__4606__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3925__auto__ = bit__4606__auto__;
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          return G__20942.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__20942.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__20942);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__20942);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__20943 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__20943) : cljs.core.clj__GT_js.call(null, G__20943);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__20959 = x;
      if (G__20959) {
        var bit__4606__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3925__auto__ = bit__4606__auto__;
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return G__20959.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__20959.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__20959);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__20959);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj20961 = {};
              return obj20961;
            }();
            var seq__20962_20972 = cljs.core.seq(x);
            var chunk__20963_20973 = null;
            var count__20964_20974 = 0;
            var i__20965_20975 = 0;
            while (true) {
              if (i__20965_20975 < count__20964_20974) {
                var vec__20966_20976 = chunk__20963_20973.cljs$core$IIndexed$_nth$arity$2(null, i__20965_20975);
                var k_20977 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20966_20976, 0, null);
                var v_20978 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20966_20976, 1, null);
                m[cljs.core.key__GT_js(k_20977)] = clj__GT_js(v_20978);
                var G__20979 = seq__20962_20972;
                var G__20980 = chunk__20963_20973;
                var G__20981 = count__20964_20974;
                var G__20982 = i__20965_20975 + 1;
                seq__20962_20972 = G__20979;
                chunk__20963_20973 = G__20980;
                count__20964_20974 = G__20981;
                i__20965_20975 = G__20982;
                continue;
              } else {
                var temp__4126__auto___20983 = cljs.core.seq(seq__20962_20972);
                if (temp__4126__auto___20983) {
                  var seq__20962_20984__$1 = temp__4126__auto___20983;
                  if (cljs.core.chunked_seq_QMARK_(seq__20962_20984__$1)) {
                    var c__4712__auto___20985 = cljs.core.chunk_first(seq__20962_20984__$1);
                    var G__20986 = cljs.core.chunk_rest(seq__20962_20984__$1);
                    var G__20987 = c__4712__auto___20985;
                    var G__20988 = cljs.core.count(c__4712__auto___20985);
                    var G__20989 = 0;
                    seq__20962_20972 = G__20986;
                    chunk__20963_20973 = G__20987;
                    count__20964_20974 = G__20988;
                    i__20965_20975 = G__20989;
                    continue;
                  } else {
                    var vec__20967_20990 = cljs.core.first(seq__20962_20984__$1);
                    var k_20991 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20967_20990, 0, null);
                    var v_20992 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20967_20990, 1, null);
                    m[cljs.core.key__GT_js(k_20991)] = clj__GT_js(v_20992);
                    var G__20993 = cljs.core.next(seq__20962_20984__$1);
                    var G__20994 = null;
                    var G__20995 = 0;
                    var G__20996 = 0;
                    seq__20962_20972 = G__20993;
                    chunk__20963_20973 = G__20994;
                    count__20964_20974 = G__20995;
                    i__20965_20975 = G__20996;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__20968_20997 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__20969_20998 = null;
              var count__20970_20999 = 0;
              var i__20971_21000 = 0;
              while (true) {
                if (i__20971_21000 < count__20970_20999) {
                  var x_21001__$1 = chunk__20969_20998.cljs$core$IIndexed$_nth$arity$2(null, i__20971_21000);
                  arr.push(x_21001__$1);
                  var G__21002 = seq__20968_20997;
                  var G__21003 = chunk__20969_20998;
                  var G__21004 = count__20970_20999;
                  var G__21005 = i__20971_21000 + 1;
                  seq__20968_20997 = G__21002;
                  chunk__20969_20998 = G__21003;
                  count__20970_20999 = G__21004;
                  i__20971_21000 = G__21005;
                  continue;
                } else {
                  var temp__4126__auto___21006 = cljs.core.seq(seq__20968_20997);
                  if (temp__4126__auto___21006) {
                    var seq__20968_21007__$1 = temp__4126__auto___21006;
                    if (cljs.core.chunked_seq_QMARK_(seq__20968_21007__$1)) {
                      var c__4712__auto___21008 = cljs.core.chunk_first(seq__20968_21007__$1);
                      var G__21009 = cljs.core.chunk_rest(seq__20968_21007__$1);
                      var G__21010 = c__4712__auto___21008;
                      var G__21011 = cljs.core.count(c__4712__auto___21008);
                      var G__21012 = 0;
                      seq__20968_20997 = G__21009;
                      chunk__20969_20998 = G__21010;
                      count__20970_20999 = G__21011;
                      i__20971_21000 = G__21012;
                      continue;
                    } else {
                      var x_21013__$1 = cljs.core.first(seq__20968_21007__$1);
                      arr.push(x_21013__$1);
                      var G__21014 = cljs.core.next(seq__20968_21007__$1);
                      var G__21015 = null;
                      var G__21016 = 0;
                      var G__21017 = 0;
                      seq__20968_20997 = G__21014;
                      chunk__20969_20998 = G__21015;
                      count__20970_20999 = G__21016;
                      i__20971_21000 = G__21017;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj21019 = {};
  return obj21019;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._js__GT_clj[function() {
        var G__21023 = x__4569__auto__;
        return goog.typeOf(G__21023);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__21080__delegate = function(x, opts) {
      var map__21053 = opts;
      var map__21053__$1 = cljs.core.seq_QMARK_(map__21053) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__21053) : map__21053;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21053__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__21053, map__21053__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__21069 = x__$1;
            if (G__21069) {
              var bit__4606__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3925__auto__ = bit__4606__auto__;
                if (cljs.core.truth_(or__3925__auto__)) {
                  return or__3925__auto__;
                } else {
                  return G__21069.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__21069.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__21069);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__21069);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4681__auto__ = function(map__21053, map__21053__$1, keywordize_keys, keyfn) {
                        return function iter__21070(s__21071) {
                          return new cljs.core.LazySeq(null, function(map__21053, map__21053__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__21071__$1 = s__21071;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__21071__$1);
                                if (temp__4126__auto__) {
                                  var s__21071__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__21071__$2)) {
                                    var c__4679__auto__ = cljs.core.chunk_first(s__21071__$2);
                                    var size__4680__auto__ = cljs.core.count(c__4679__auto__);
                                    var b__21073 = cljs.core.chunk_buffer(size__4680__auto__);
                                    if (function() {
                                      var i__21072 = 0;
                                      while (true) {
                                        if (i__21072 < size__4680__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4679__auto__, i__21072);
                                          cljs.core.chunk_append(b__21073, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__21078 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21078) : keyfn.call(null, G__21078);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__21081 = i__21072 + 1;
                                          i__21072 = G__21081;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__21073), iter__21070(cljs.core.chunk_rest(s__21071__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__21073), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__21071__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__21079 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__21079) : keyfn.call(null, G__21079);
                                    }(), thisfn(x__$1[k])], null), iter__21070(cljs.core.rest(s__21071__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__21053, map__21053__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__21053, map__21053__$1, keywordize_keys, keyfn);
                      return iter__4681__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__21053, map__21053__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__21080 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__21082__i = 0, G__21082__a = new Array(arguments.length - 1);
        while (G__21082__i < G__21082__a.length) {
          G__21082__a[G__21082__i] = arguments[G__21082__i + 1];
          ++G__21082__i;
        }
        opts = new cljs.core.IndexedSeq(G__21082__a, 0);
      }
      return G__21080__delegate.call(this, x, opts);
    };
    G__21080.cljs$lang$maxFixedArity = 1;
    G__21080.cljs$lang$applyTo = function(arglist__21083) {
      var x = cljs.core.first(arglist__21083);
      var opts = cljs.core.rest(arglist__21083);
      return G__21080__delegate(x, opts);
    };
    G__21080.cljs$core$IFn$_invoke$arity$variadic = G__21080__delegate;
    return G__21080;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__21084 = null;
        if (arguments.length > 1) {
          var G__21085__i = 0, G__21085__a = new Array(arguments.length - 1);
          while (G__21085__i < G__21085__a.length) {
            G__21085__a[G__21085__i] = arguments[G__21085__i + 1];
            ++G__21085__i;
          }
          G__21084 = new cljs.core.IndexedSeq(G__21085__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__21084);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__21088 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21088) : cljs.core.atom.call(null, G__21088);
  }();
  return function(mem) {
    return function() {
      var G__21090__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__21089 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21089) : cljs.core.deref.call(null, G__21089);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__21090 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__21091__i = 0, G__21091__a = new Array(arguments.length - 0);
          while (G__21091__i < G__21091__a.length) {
            G__21091__a[G__21091__i] = arguments[G__21091__i + 0];
            ++G__21091__i;
          }
          args = new cljs.core.IndexedSeq(G__21091__a, 0);
        }
        return G__21090__delegate.call(this, args);
      };
      G__21090.cljs$lang$maxFixedArity = 0;
      G__21090.cljs$lang$applyTo = function(arglist__21092) {
        var args = cljs.core.seq(arglist__21092);
        return G__21090__delegate(args);
      };
      G__21090.cljs$core$IFn$_invoke$arity$variadic = G__21090__delegate;
      return G__21090;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__21094 = ret;
        f = G__21094;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__21095__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__21095 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__21096__i = 0, G__21096__a = new Array(arguments.length - 1);
        while (G__21096__i < G__21096__a.length) {
          G__21096__a[G__21096__i] = arguments[G__21096__i + 1];
          ++G__21096__i;
        }
        args = new cljs.core.IndexedSeq(G__21096__a, 0);
      }
      return G__21095__delegate.call(this, f, args);
    };
    G__21095.cljs$lang$maxFixedArity = 1;
    G__21095.cljs$lang$applyTo = function(arglist__21097) {
      var f = cljs.core.first(arglist__21097);
      var args = cljs.core.rest(arglist__21097);
      return G__21095__delegate(f, args);
    };
    G__21095.cljs$core$IFn$_invoke$arity$variadic = G__21095__delegate;
    return G__21095;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__21098 = null;
        if (arguments.length > 1) {
          var G__21099__i = 0, G__21099__a = new Array(arguments.length - 1);
          while (G__21099__i < G__21099__a.length) {
            G__21099__a[G__21099__i] = arguments[G__21099__i + 1];
            ++G__21099__i;
          }
          G__21098 = new cljs.core.IndexedSeq(G__21099__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__21098);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__21102 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__21102) : Math.floor.call(null, G__21102);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__21104 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21104) : f.call(null, G__21104);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__21106 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__21106) : cljs.core.atom.call(null, G__21106);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__21107__i = 0, G__21107__a = new Array(arguments.length - 1);
      while (G__21107__i < G__21107__a.length) {
        G__21107__a[G__21107__i] = arguments[G__21107__i + 1];
        ++G__21107__i;
      }
      args = new cljs.core.IndexedSeq(G__21107__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__21108) {
    var f = cljs.core.first(arglist__21108);
    var args = cljs.core.rest(arglist__21108);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__21173 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21173) : cljs.core.deref.call(null, G__21173);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3925__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3925__auto__) {
      return or__3925__auto__;
    } else {
      var or__3925__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3925__auto____$1) {
        return or__3925__auto____$1;
      } else {
        var and__3913__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3913__auto__) {
          var and__3913__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3913__auto____$1) {
            var and__3913__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3913__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__21198 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__21196 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__21196) : child.call(null, G__21196);
                  }(), function() {
                    var G__21197 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__21197) : parent.call(null, G__21197);
                  }());
                  var G__21199 = i + 1;
                  ret = G__21198;
                  i = G__21199;
                  continue;
                }
                break;
              }
            } else {
              return and__3913__auto____$2;
            }
          } else {
            return and__3913__auto____$1;
          }
        } else {
          return and__3913__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21203 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21203) : cljs.core.deref.call(null, G__21203);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21207 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21207) : cljs.core.deref.call(null, G__21207);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21211 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21211) : cljs.core.deref.call(null, G__21211);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__21220 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__21220) : targets.call(null, G__21220);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__21221 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__21221) : sources.call(null, G__21221);
        }()));
      };
    }(tp, td, ta);
    var or__3925__auto__ = cljs.core.contains_QMARK_(function() {
      var G__21225 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__21225) : tp.call(null, G__21225);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__21226 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__21226) : ta.call(null, G__21226);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__21227 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__21227) : ta.call(null, G__21227);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__21234 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__21234) : parentMap.call(null, G__21234);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21235 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__21235) : parentMap.call(null, G__21235);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__21228_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__21228_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__21228_SHARP_), cljs.core.second(p1__21228_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__21236 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__21236) : parentMap.call(null, G__21236);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__21229_SHARP_, p2__21230_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__21229_SHARP_, p2__21230_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__21239 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21239) : cljs.core.deref.call(null, G__21239);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__21240 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21240) : cljs.core.deref.call(null, G__21240);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__21256 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21256) : cljs.core.deref.call(null, G__21256);
  }().call(null, x);
  var or__3925__auto__ = cljs.core.truth_(function() {
    var and__3913__auto__ = xprefs;
    if (cljs.core.truth_(and__3913__auto__)) {
      var G__21258 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__21258) : xprefs.call(null, G__21258);
    } else {
      return and__3913__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    var or__3925__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__21259 = cljs.core.rest(ps);
          ps = G__21259;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3925__auto____$1)) {
      return or__3925__auto____$1;
    } else {
      var or__3925__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__21260 = cljs.core.rest(ps);
            ps = G__21260;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3925__auto____$2)) {
        return or__3925__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3925__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__21274) {
    var vec__21275 = p__21274;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21275, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21275, 1, null);
    var e = vec__21275;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__21276 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21276) : cljs.core.deref.call(null, G__21276);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3925__auto__ = be == null;
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__21277 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21277) : cljs.core.deref.call(null, G__21277);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21278 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21278) : cljs.core.deref.call(null, G__21278);
    }(), function() {
      var G__21279 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21279) : cljs.core.deref.call(null, G__21279);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj21281 = {};
  return obj21281;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._reset[function() {
        var G__21285 = x__4569__auto__;
        return goog.typeOf(G__21285);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._reset["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._add_method[function() {
        var G__21289 = x__4569__auto__;
        return goog.typeOf(G__21289);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._add_method["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._remove_method[function() {
        var G__21293 = x__4569__auto__;
        return goog.typeOf(G__21293);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._remove_method["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._prefer_method[function() {
        var G__21297 = x__4569__auto__;
        return goog.typeOf(G__21297);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._get_method[function() {
        var G__21301 = x__4569__auto__;
        return goog.typeOf(G__21301);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._get_method["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._methods[function() {
        var G__21305 = x__4569__auto__;
        return goog.typeOf(G__21305);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._methods["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._prefers[function() {
        var G__21309 = x__4569__auto__;
        return goog.typeOf(G__21309);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._prefers["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__21311 = this$__$1;
  return goog.getUid(G__21311);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21312 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21312) : cljs.core.deref.call(null, G__21312);
  }(), function() {
    var G__21313 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21313) : cljs.core.deref.call(null, G__21313);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__21314 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21314) : cljs.core.deref.call(null, G__21314);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__21315 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21315) : cljs.core.deref.call(null, G__21315);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__21316 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21316) : cljs.core.deref.call(null, G__21316);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__21317 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21317) : cljs.core.deref.call(null, G__21317);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__22158 = null;
  var G__22158__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__22158__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21318 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__21318) : self__.dispatch_fn.call(null, G__21318);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21319 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__21319) : target_fn.call(null, G__21319);
  };
  var G__22158__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21320 = a;
      var G__21321 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__21320, G__21321) : self__.dispatch_fn.call(null, G__21320, G__21321);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21322 = a;
    var G__21323 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__21322, G__21323) : target_fn.call(null, G__21322, G__21323);
  };
  var G__22158__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21324 = a;
      var G__21325 = b;
      var G__21326 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__21324, G__21325, G__21326) : self__.dispatch_fn.call(null, G__21324, G__21325, G__21326);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21327 = a;
    var G__21328 = b;
    var G__21329 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__21327, G__21328, G__21329) : target_fn.call(null, G__21327, G__21328, G__21329);
  };
  var G__22158__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21330 = a;
      var G__21331 = b;
      var G__21332 = c;
      var G__21333 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__21330, G__21331, G__21332, G__21333) : self__.dispatch_fn.call(null, G__21330, G__21331, G__21332, G__21333);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21334 = a;
    var G__21335 = b;
    var G__21336 = c;
    var G__21337 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__21334, G__21335, G__21336, G__21337) : target_fn.call(null, G__21334, G__21335, G__21336, G__21337);
  };
  var G__22158__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21338 = a;
      var G__21339 = b;
      var G__21340 = c;
      var G__21341 = d;
      var G__21342 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__21338, G__21339, G__21340, G__21341, G__21342) : self__.dispatch_fn.call(null, G__21338, G__21339, G__21340, G__21341, G__21342);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21343 = a;
    var G__21344 = b;
    var G__21345 = c;
    var G__21346 = d;
    var G__21347 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__21343, G__21344, G__21345, G__21346, G__21347) : target_fn.call(null, G__21343, G__21344, G__21345, G__21346, G__21347);
  };
  var G__22158__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21348 = a;
      var G__21349 = b;
      var G__21350 = c;
      var G__21351 = d;
      var G__21352 = e;
      var G__21353 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__21348, G__21349, G__21350, G__21351, G__21352, G__21353) : self__.dispatch_fn.call(null, G__21348, G__21349, G__21350, G__21351, G__21352, G__21353);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21354 = a;
    var G__21355 = b;
    var G__21356 = c;
    var G__21357 = d;
    var G__21358 = e;
    var G__21359 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__21354, G__21355, G__21356, G__21357, G__21358, G__21359) : target_fn.call(null, G__21354, G__21355, G__21356, G__21357, G__21358, G__21359);
  };
  var G__22158__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21360 = a;
      var G__21361 = b;
      var G__21362 = c;
      var G__21363 = d;
      var G__21364 = e;
      var G__21365 = f;
      var G__21366 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__21360, G__21361, G__21362, G__21363, G__21364, G__21365, G__21366) : self__.dispatch_fn.call(null, G__21360, G__21361, G__21362, G__21363, G__21364, G__21365, G__21366);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21367 = a;
    var G__21368 = b;
    var G__21369 = c;
    var G__21370 = d;
    var G__21371 = e;
    var G__21372 = f;
    var G__21373 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__21367, G__21368, G__21369, G__21370, G__21371, G__21372, G__21373) : target_fn.call(null, G__21367, G__21368, G__21369, G__21370, G__21371, G__21372, G__21373);
  };
  var G__22158__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21374 = a;
      var G__21375 = b;
      var G__21376 = c;
      var G__21377 = d;
      var G__21378 = e;
      var G__21379 = f;
      var G__21380 = g;
      var G__21381 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__21374, G__21375, G__21376, G__21377, G__21378, G__21379, G__21380, G__21381) : self__.dispatch_fn.call(null, G__21374, G__21375, G__21376, G__21377, G__21378, G__21379, G__21380, G__21381);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21382 = a;
    var G__21383 = b;
    var G__21384 = c;
    var G__21385 = d;
    var G__21386 = e;
    var G__21387 = f;
    var G__21388 = g;
    var G__21389 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__21382, G__21383, G__21384, G__21385, G__21386, G__21387, G__21388, G__21389) : target_fn.call(null, G__21382, G__21383, G__21384, G__21385, G__21386, G__21387, G__21388, G__21389);
  };
  var G__22158__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21390 = a;
      var G__21391 = b;
      var G__21392 = c;
      var G__21393 = d;
      var G__21394 = e;
      var G__21395 = f;
      var G__21396 = g;
      var G__21397 = h;
      var G__21398 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__21390, G__21391, G__21392, G__21393, G__21394, G__21395, G__21396, G__21397, G__21398) : self__.dispatch_fn.call(null, G__21390, G__21391, G__21392, G__21393, G__21394, G__21395, G__21396, G__21397, G__21398);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21399 = a;
    var G__21400 = b;
    var G__21401 = c;
    var G__21402 = d;
    var G__21403 = e;
    var G__21404 = f;
    var G__21405 = g;
    var G__21406 = h;
    var G__21407 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__21399, G__21400, G__21401, G__21402, G__21403, G__21404, G__21405, G__21406, G__21407) : target_fn.call(null, G__21399, G__21400, G__21401, G__21402, G__21403, G__21404, G__21405, G__21406, G__21407);
  };
  var G__22158__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21408 = a;
      var G__21409 = b;
      var G__21410 = c;
      var G__21411 = d;
      var G__21412 = e;
      var G__21413 = f;
      var G__21414 = g;
      var G__21415 = h;
      var G__21416 = i;
      var G__21417 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__21408, G__21409, G__21410, G__21411, G__21412, G__21413, G__21414, G__21415, G__21416, G__21417) : self__.dispatch_fn.call(null, G__21408, G__21409, G__21410, G__21411, G__21412, G__21413, G__21414, G__21415, G__21416, G__21417);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21418 = a;
    var G__21419 = b;
    var G__21420 = c;
    var G__21421 = d;
    var G__21422 = e;
    var G__21423 = f;
    var G__21424 = g;
    var G__21425 = h;
    var G__21426 = i;
    var G__21427 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__21418, G__21419, G__21420, G__21421, G__21422, G__21423, G__21424, G__21425, G__21426, G__21427) : target_fn.call(null, G__21418, G__21419, G__21420, G__21421, G__21422, G__21423, G__21424, G__21425, G__21426, G__21427);
  };
  var G__22158__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21428 = a;
      var G__21429 = b;
      var G__21430 = c;
      var G__21431 = d;
      var G__21432 = e;
      var G__21433 = f;
      var G__21434 = g;
      var G__21435 = h;
      var G__21436 = i;
      var G__21437 = j;
      var G__21438 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__21428, G__21429, G__21430, G__21431, G__21432, G__21433, G__21434, G__21435, G__21436, G__21437, G__21438) : self__.dispatch_fn.call(null, G__21428, G__21429, G__21430, G__21431, G__21432, G__21433, G__21434, G__21435, G__21436, G__21437, G__21438);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21439 = a;
    var G__21440 = b;
    var G__21441 = c;
    var G__21442 = d;
    var G__21443 = e;
    var G__21444 = f;
    var G__21445 = g;
    var G__21446 = h;
    var G__21447 = i;
    var G__21448 = j;
    var G__21449 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__21439, G__21440, G__21441, G__21442, G__21443, G__21444, G__21445, G__21446, G__21447, G__21448, G__21449) : target_fn.call(null, G__21439, G__21440, G__21441, G__21442, G__21443, G__21444, G__21445, G__21446, G__21447, G__21448, G__21449);
  };
  var G__22158__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21450 = a;
      var G__21451 = b;
      var G__21452 = c;
      var G__21453 = d;
      var G__21454 = e;
      var G__21455 = f;
      var G__21456 = g;
      var G__21457 = h;
      var G__21458 = i;
      var G__21459 = j;
      var G__21460 = k;
      var G__21461 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__21450, G__21451, G__21452, G__21453, G__21454, G__21455, G__21456, G__21457, G__21458, G__21459, G__21460, G__21461) : self__.dispatch_fn.call(null, G__21450, G__21451, G__21452, G__21453, G__21454, G__21455, G__21456, G__21457, G__21458, G__21459, G__21460, G__21461);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21462 = a;
    var G__21463 = b;
    var G__21464 = c;
    var G__21465 = d;
    var G__21466 = e;
    var G__21467 = f;
    var G__21468 = g;
    var G__21469 = h;
    var G__21470 = i;
    var G__21471 = j;
    var G__21472 = k;
    var G__21473 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__21462, G__21463, G__21464, G__21465, G__21466, G__21467, G__21468, G__21469, G__21470, G__21471, G__21472, G__21473) : target_fn.call(null, G__21462, G__21463, G__21464, G__21465, G__21466, G__21467, G__21468, G__21469, G__21470, G__21471, G__21472, G__21473);
  };
  var G__22158__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21474 = a;
      var G__21475 = b;
      var G__21476 = c;
      var G__21477 = d;
      var G__21478 = e;
      var G__21479 = f;
      var G__21480 = g;
      var G__21481 = h;
      var G__21482 = i;
      var G__21483 = j;
      var G__21484 = k;
      var G__21485 = l;
      var G__21486 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__21474, G__21475, G__21476, G__21477, G__21478, G__21479, G__21480, G__21481, G__21482, G__21483, G__21484, G__21485, G__21486) : self__.dispatch_fn.call(null, G__21474, G__21475, G__21476, G__21477, G__21478, G__21479, G__21480, G__21481, G__21482, G__21483, G__21484, G__21485, G__21486);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21487 = a;
    var G__21488 = b;
    var G__21489 = c;
    var G__21490 = d;
    var G__21491 = e;
    var G__21492 = f;
    var G__21493 = g;
    var G__21494 = h;
    var G__21495 = i;
    var G__21496 = j;
    var G__21497 = k;
    var G__21498 = l;
    var G__21499 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__21487, G__21488, G__21489, G__21490, G__21491, G__21492, G__21493, G__21494, G__21495, G__21496, G__21497, G__21498, G__21499) : target_fn.call(null, G__21487, G__21488, G__21489, G__21490, G__21491, G__21492, G__21493, G__21494, G__21495, G__21496, G__21497, G__21498, G__21499);
  };
  var G__22158__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21500 = a;
      var G__21501 = b;
      var G__21502 = c;
      var G__21503 = d;
      var G__21504 = e;
      var G__21505 = f;
      var G__21506 = g;
      var G__21507 = h;
      var G__21508 = i;
      var G__21509 = j;
      var G__21510 = k;
      var G__21511 = l;
      var G__21512 = m;
      var G__21513 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__21500, G__21501, G__21502, G__21503, G__21504, G__21505, G__21506, G__21507, G__21508, G__21509, G__21510, G__21511, G__21512, G__21513) : self__.dispatch_fn.call(null, G__21500, G__21501, G__21502, G__21503, G__21504, G__21505, G__21506, G__21507, G__21508, G__21509, G__21510, G__21511, G__21512, G__21513);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21514 = a;
    var G__21515 = b;
    var G__21516 = c;
    var G__21517 = d;
    var G__21518 = e;
    var G__21519 = f;
    var G__21520 = g;
    var G__21521 = h;
    var G__21522 = i;
    var G__21523 = j;
    var G__21524 = k;
    var G__21525 = l;
    var G__21526 = m;
    var G__21527 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__21514, G__21515, G__21516, G__21517, G__21518, G__21519, G__21520, G__21521, G__21522, G__21523, G__21524, G__21525, G__21526, G__21527) : target_fn.call(null, G__21514, G__21515, G__21516, G__21517, G__21518, G__21519, G__21520, G__21521, G__21522, G__21523, G__21524, G__21525, G__21526, G__21527);
  };
  var G__22158__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21528 = a;
      var G__21529 = b;
      var G__21530 = c;
      var G__21531 = d;
      var G__21532 = e;
      var G__21533 = f;
      var G__21534 = g;
      var G__21535 = h;
      var G__21536 = i;
      var G__21537 = j;
      var G__21538 = k;
      var G__21539 = l;
      var G__21540 = m;
      var G__21541 = n;
      var G__21542 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__21528, G__21529, G__21530, G__21531, G__21532, G__21533, G__21534, G__21535, G__21536, G__21537, G__21538, G__21539, G__21540, G__21541, G__21542) : self__.dispatch_fn.call(null, G__21528, G__21529, G__21530, G__21531, G__21532, G__21533, G__21534, G__21535, G__21536, G__21537, G__21538, G__21539, G__21540, G__21541, G__21542);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21543 = a;
    var G__21544 = b;
    var G__21545 = c;
    var G__21546 = d;
    var G__21547 = e;
    var G__21548 = f;
    var G__21549 = g;
    var G__21550 = h;
    var G__21551 = i;
    var G__21552 = j;
    var G__21553 = k;
    var G__21554 = l;
    var G__21555 = m;
    var G__21556 = n;
    var G__21557 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__21543, G__21544, G__21545, G__21546, G__21547, G__21548, G__21549, G__21550, G__21551, G__21552, G__21553, G__21554, G__21555, G__21556, G__21557) : target_fn.call(null, G__21543, G__21544, G__21545, G__21546, G__21547, G__21548, G__21549, G__21550, G__21551, G__21552, G__21553, G__21554, G__21555, G__21556, G__21557);
  };
  var G__22158__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21558 = a;
      var G__21559 = b;
      var G__21560 = c;
      var G__21561 = d;
      var G__21562 = e;
      var G__21563 = f;
      var G__21564 = g;
      var G__21565 = h;
      var G__21566 = i;
      var G__21567 = j;
      var G__21568 = k;
      var G__21569 = l;
      var G__21570 = m;
      var G__21571 = n;
      var G__21572 = o;
      var G__21573 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__21558, G__21559, G__21560, G__21561, G__21562, G__21563, G__21564, G__21565, G__21566, G__21567, G__21568, G__21569, G__21570, G__21571, G__21572, G__21573) : self__.dispatch_fn.call(null, G__21558, G__21559, G__21560, G__21561, G__21562, G__21563, G__21564, G__21565, G__21566, G__21567, G__21568, G__21569, G__21570, G__21571, G__21572, G__21573);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21574 = a;
    var G__21575 = b;
    var G__21576 = c;
    var G__21577 = d;
    var G__21578 = e;
    var G__21579 = f;
    var G__21580 = g;
    var G__21581 = h;
    var G__21582 = i;
    var G__21583 = j;
    var G__21584 = k;
    var G__21585 = l;
    var G__21586 = m;
    var G__21587 = n;
    var G__21588 = o;
    var G__21589 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__21574, G__21575, G__21576, G__21577, G__21578, G__21579, G__21580, G__21581, G__21582, G__21583, G__21584, G__21585, G__21586, G__21587, G__21588, G__21589) : target_fn.call(null, G__21574, G__21575, G__21576, G__21577, G__21578, G__21579, G__21580, G__21581, G__21582, G__21583, G__21584, G__21585, G__21586, G__21587, G__21588, G__21589);
  };
  var G__22158__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21590 = a;
      var G__21591 = b;
      var G__21592 = c;
      var G__21593 = d;
      var G__21594 = e;
      var G__21595 = f;
      var G__21596 = g;
      var G__21597 = h;
      var G__21598 = i;
      var G__21599 = j;
      var G__21600 = k;
      var G__21601 = l;
      var G__21602 = m;
      var G__21603 = n;
      var G__21604 = o;
      var G__21605 = p;
      var G__21606 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__21590, G__21591, G__21592, G__21593, G__21594, G__21595, G__21596, G__21597, G__21598, G__21599, G__21600, G__21601, G__21602, G__21603, G__21604, G__21605, G__21606) : self__.dispatch_fn.call(null, G__21590, G__21591, G__21592, G__21593, G__21594, G__21595, G__21596, G__21597, G__21598, G__21599, G__21600, G__21601, G__21602, G__21603, G__21604, G__21605, G__21606);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21607 = a;
    var G__21608 = b;
    var G__21609 = c;
    var G__21610 = d;
    var G__21611 = e;
    var G__21612 = f;
    var G__21613 = g;
    var G__21614 = h;
    var G__21615 = i;
    var G__21616 = j;
    var G__21617 = k;
    var G__21618 = l;
    var G__21619 = m;
    var G__21620 = n;
    var G__21621 = o;
    var G__21622 = p;
    var G__21623 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__21607, G__21608, G__21609, G__21610, G__21611, G__21612, G__21613, G__21614, G__21615, G__21616, G__21617, G__21618, G__21619, G__21620, G__21621, G__21622, G__21623) : target_fn.call(null, G__21607, G__21608, G__21609, G__21610, G__21611, G__21612, G__21613, G__21614, G__21615, G__21616, G__21617, G__21618, G__21619, G__21620, G__21621, G__21622, G__21623);
  };
  var G__22158__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21624 = a;
      var G__21625 = b;
      var G__21626 = c;
      var G__21627 = d;
      var G__21628 = e;
      var G__21629 = f;
      var G__21630 = g;
      var G__21631 = h;
      var G__21632 = i;
      var G__21633 = j;
      var G__21634 = k;
      var G__21635 = l;
      var G__21636 = m;
      var G__21637 = n;
      var G__21638 = o;
      var G__21639 = p;
      var G__21640 = q;
      var G__21641 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__21624, G__21625, G__21626, G__21627, G__21628, G__21629, G__21630, G__21631, G__21632, G__21633, G__21634, G__21635, G__21636, G__21637, G__21638, G__21639, G__21640, G__21641) : self__.dispatch_fn.call(null, G__21624, G__21625, G__21626, G__21627, G__21628, G__21629, G__21630, G__21631, G__21632, G__21633, G__21634, G__21635, G__21636, G__21637, G__21638, G__21639, G__21640, G__21641);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21642 = a;
    var G__21643 = b;
    var G__21644 = c;
    var G__21645 = d;
    var G__21646 = e;
    var G__21647 = f;
    var G__21648 = g;
    var G__21649 = h;
    var G__21650 = i;
    var G__21651 = j;
    var G__21652 = k;
    var G__21653 = l;
    var G__21654 = m;
    var G__21655 = n;
    var G__21656 = o;
    var G__21657 = p;
    var G__21658 = q;
    var G__21659 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__21642, G__21643, G__21644, G__21645, G__21646, G__21647, G__21648, G__21649, G__21650, G__21651, G__21652, G__21653, G__21654, G__21655, G__21656, G__21657, G__21658, G__21659) : target_fn.call(null, G__21642, G__21643, G__21644, G__21645, G__21646, G__21647, G__21648, G__21649, G__21650, G__21651, G__21652, G__21653, G__21654, G__21655, G__21656, G__21657, G__21658, G__21659);
  };
  var G__22158__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21660 = a;
      var G__21661 = b;
      var G__21662 = c;
      var G__21663 = d;
      var G__21664 = e;
      var G__21665 = f;
      var G__21666 = g;
      var G__21667 = h;
      var G__21668 = i;
      var G__21669 = j;
      var G__21670 = k;
      var G__21671 = l;
      var G__21672 = m;
      var G__21673 = n;
      var G__21674 = o;
      var G__21675 = p;
      var G__21676 = q;
      var G__21677 = r;
      var G__21678 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__21660, G__21661, G__21662, G__21663, G__21664, G__21665, G__21666, G__21667, G__21668, G__21669, G__21670, G__21671, G__21672, G__21673, G__21674, G__21675, G__21676, G__21677, G__21678) : self__.dispatch_fn.call(null, G__21660, G__21661, G__21662, G__21663, G__21664, G__21665, G__21666, G__21667, G__21668, G__21669, G__21670, G__21671, G__21672, G__21673, G__21674, G__21675, G__21676, 
      G__21677, G__21678);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21679 = a;
    var G__21680 = b;
    var G__21681 = c;
    var G__21682 = d;
    var G__21683 = e;
    var G__21684 = f;
    var G__21685 = g;
    var G__21686 = h;
    var G__21687 = i;
    var G__21688 = j;
    var G__21689 = k;
    var G__21690 = l;
    var G__21691 = m;
    var G__21692 = n;
    var G__21693 = o;
    var G__21694 = p;
    var G__21695 = q;
    var G__21696 = r;
    var G__21697 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__21679, G__21680, G__21681, G__21682, G__21683, G__21684, G__21685, G__21686, G__21687, G__21688, G__21689, G__21690, G__21691, G__21692, G__21693, G__21694, G__21695, G__21696, G__21697) : target_fn.call(null, G__21679, G__21680, G__21681, G__21682, G__21683, G__21684, G__21685, G__21686, G__21687, G__21688, G__21689, G__21690, G__21691, G__21692, G__21693, G__21694, G__21695, G__21696, G__21697);
  };
  var G__22158__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21698 = a;
      var G__21699 = b;
      var G__21700 = c;
      var G__21701 = d;
      var G__21702 = e;
      var G__21703 = f;
      var G__21704 = g;
      var G__21705 = h;
      var G__21706 = i;
      var G__21707 = j;
      var G__21708 = k;
      var G__21709 = l;
      var G__21710 = m;
      var G__21711 = n;
      var G__21712 = o;
      var G__21713 = p;
      var G__21714 = q;
      var G__21715 = r;
      var G__21716 = s;
      var G__21717 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__21698, G__21699, G__21700, G__21701, G__21702, G__21703, G__21704, G__21705, G__21706, G__21707, G__21708, G__21709, G__21710, G__21711, G__21712, G__21713, G__21714, G__21715, G__21716, G__21717) : self__.dispatch_fn.call(null, G__21698, G__21699, G__21700, G__21701, G__21702, G__21703, G__21704, G__21705, G__21706, G__21707, G__21708, G__21709, G__21710, G__21711, G__21712, G__21713, 
      G__21714, G__21715, G__21716, G__21717);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21718 = a;
    var G__21719 = b;
    var G__21720 = c;
    var G__21721 = d;
    var G__21722 = e;
    var G__21723 = f;
    var G__21724 = g;
    var G__21725 = h;
    var G__21726 = i;
    var G__21727 = j;
    var G__21728 = k;
    var G__21729 = l;
    var G__21730 = m;
    var G__21731 = n;
    var G__21732 = o;
    var G__21733 = p;
    var G__21734 = q;
    var G__21735 = r;
    var G__21736 = s;
    var G__21737 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__21718, G__21719, G__21720, G__21721, G__21722, G__21723, G__21724, G__21725, G__21726, G__21727, G__21728, G__21729, G__21730, G__21731, G__21732, G__21733, G__21734, G__21735, G__21736, G__21737) : target_fn.call(null, G__21718, G__21719, G__21720, G__21721, G__21722, G__21723, G__21724, G__21725, G__21726, G__21727, G__21728, G__21729, G__21730, G__21731, G__21732, G__21733, G__21734, G__21735, G__21736, 
    G__21737);
  };
  var G__22158__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__22158 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__22158__1.call(this, self__);
      case 2:
        return G__22158__2.call(this, self__, a);
      case 3:
        return G__22158__3.call(this, self__, a, b);
      case 4:
        return G__22158__4.call(this, self__, a, b, c);
      case 5:
        return G__22158__5.call(this, self__, a, b, c, d);
      case 6:
        return G__22158__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__22158__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__22158__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__22158__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__22158__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__22158__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__22158__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__22158__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__22158__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__22158__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__22158__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__22158__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__22158__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__22158__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__22158__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__22158__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__22158__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22158.cljs$core$IFn$_invoke$arity$1 = G__22158__1;
  G__22158.cljs$core$IFn$_invoke$arity$2 = G__22158__2;
  G__22158.cljs$core$IFn$_invoke$arity$3 = G__22158__3;
  G__22158.cljs$core$IFn$_invoke$arity$4 = G__22158__4;
  G__22158.cljs$core$IFn$_invoke$arity$5 = G__22158__5;
  G__22158.cljs$core$IFn$_invoke$arity$6 = G__22158__6;
  G__22158.cljs$core$IFn$_invoke$arity$7 = G__22158__7;
  G__22158.cljs$core$IFn$_invoke$arity$8 = G__22158__8;
  G__22158.cljs$core$IFn$_invoke$arity$9 = G__22158__9;
  G__22158.cljs$core$IFn$_invoke$arity$10 = G__22158__10;
  G__22158.cljs$core$IFn$_invoke$arity$11 = G__22158__11;
  G__22158.cljs$core$IFn$_invoke$arity$12 = G__22158__12;
  G__22158.cljs$core$IFn$_invoke$arity$13 = G__22158__13;
  G__22158.cljs$core$IFn$_invoke$arity$14 = G__22158__14;
  G__22158.cljs$core$IFn$_invoke$arity$15 = G__22158__15;
  G__22158.cljs$core$IFn$_invoke$arity$16 = G__22158__16;
  G__22158.cljs$core$IFn$_invoke$arity$17 = G__22158__17;
  G__22158.cljs$core$IFn$_invoke$arity$18 = G__22158__18;
  G__22158.cljs$core$IFn$_invoke$arity$19 = G__22158__19;
  G__22158.cljs$core$IFn$_invoke$arity$20 = G__22158__20;
  G__22158.cljs$core$IFn$_invoke$arity$21 = G__22158__21;
  G__22158.cljs$core$IFn$_invoke$arity$22 = G__22158__22;
  return G__22158;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args21310) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21310)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21738 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__21738) : self__.dispatch_fn.call(null, G__21738);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21739 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__21739) : target_fn.call(null, G__21739);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21740 = a;
    var G__21741 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__21740, G__21741) : self__.dispatch_fn.call(null, G__21740, G__21741);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21742 = a;
  var G__21743 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__21742, G__21743) : target_fn.call(null, G__21742, G__21743);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21744 = a;
    var G__21745 = b;
    var G__21746 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__21744, G__21745, G__21746) : self__.dispatch_fn.call(null, G__21744, G__21745, G__21746);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21747 = a;
  var G__21748 = b;
  var G__21749 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__21747, G__21748, G__21749) : target_fn.call(null, G__21747, G__21748, G__21749);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21750 = a;
    var G__21751 = b;
    var G__21752 = c;
    var G__21753 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__21750, G__21751, G__21752, G__21753) : self__.dispatch_fn.call(null, G__21750, G__21751, G__21752, G__21753);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21754 = a;
  var G__21755 = b;
  var G__21756 = c;
  var G__21757 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__21754, G__21755, G__21756, G__21757) : target_fn.call(null, G__21754, G__21755, G__21756, G__21757);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21758 = a;
    var G__21759 = b;
    var G__21760 = c;
    var G__21761 = d;
    var G__21762 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__21758, G__21759, G__21760, G__21761, G__21762) : self__.dispatch_fn.call(null, G__21758, G__21759, G__21760, G__21761, G__21762);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21763 = a;
  var G__21764 = b;
  var G__21765 = c;
  var G__21766 = d;
  var G__21767 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__21763, G__21764, G__21765, G__21766, G__21767) : target_fn.call(null, G__21763, G__21764, G__21765, G__21766, G__21767);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21768 = a;
    var G__21769 = b;
    var G__21770 = c;
    var G__21771 = d;
    var G__21772 = e;
    var G__21773 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__21768, G__21769, G__21770, G__21771, G__21772, G__21773) : self__.dispatch_fn.call(null, G__21768, G__21769, G__21770, G__21771, G__21772, G__21773);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21774 = a;
  var G__21775 = b;
  var G__21776 = c;
  var G__21777 = d;
  var G__21778 = e;
  var G__21779 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__21774, G__21775, G__21776, G__21777, G__21778, G__21779) : target_fn.call(null, G__21774, G__21775, G__21776, G__21777, G__21778, G__21779);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21780 = a;
    var G__21781 = b;
    var G__21782 = c;
    var G__21783 = d;
    var G__21784 = e;
    var G__21785 = f;
    var G__21786 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__21780, G__21781, G__21782, G__21783, G__21784, G__21785, G__21786) : self__.dispatch_fn.call(null, G__21780, G__21781, G__21782, G__21783, G__21784, G__21785, G__21786);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21787 = a;
  var G__21788 = b;
  var G__21789 = c;
  var G__21790 = d;
  var G__21791 = e;
  var G__21792 = f;
  var G__21793 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__21787, G__21788, G__21789, G__21790, G__21791, G__21792, G__21793) : target_fn.call(null, G__21787, G__21788, G__21789, G__21790, G__21791, G__21792, G__21793);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21794 = a;
    var G__21795 = b;
    var G__21796 = c;
    var G__21797 = d;
    var G__21798 = e;
    var G__21799 = f;
    var G__21800 = g;
    var G__21801 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__21794, G__21795, G__21796, G__21797, G__21798, G__21799, G__21800, G__21801) : self__.dispatch_fn.call(null, G__21794, G__21795, G__21796, G__21797, G__21798, G__21799, G__21800, G__21801);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21802 = a;
  var G__21803 = b;
  var G__21804 = c;
  var G__21805 = d;
  var G__21806 = e;
  var G__21807 = f;
  var G__21808 = g;
  var G__21809 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__21802, G__21803, G__21804, G__21805, G__21806, G__21807, G__21808, G__21809) : target_fn.call(null, G__21802, G__21803, G__21804, G__21805, G__21806, G__21807, G__21808, G__21809);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21810 = a;
    var G__21811 = b;
    var G__21812 = c;
    var G__21813 = d;
    var G__21814 = e;
    var G__21815 = f;
    var G__21816 = g;
    var G__21817 = h;
    var G__21818 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__21810, G__21811, G__21812, G__21813, G__21814, G__21815, G__21816, G__21817, G__21818) : self__.dispatch_fn.call(null, G__21810, G__21811, G__21812, G__21813, G__21814, G__21815, G__21816, G__21817, G__21818);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21819 = a;
  var G__21820 = b;
  var G__21821 = c;
  var G__21822 = d;
  var G__21823 = e;
  var G__21824 = f;
  var G__21825 = g;
  var G__21826 = h;
  var G__21827 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__21819, G__21820, G__21821, G__21822, G__21823, G__21824, G__21825, G__21826, G__21827) : target_fn.call(null, G__21819, G__21820, G__21821, G__21822, G__21823, G__21824, G__21825, G__21826, G__21827);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21828 = a;
    var G__21829 = b;
    var G__21830 = c;
    var G__21831 = d;
    var G__21832 = e;
    var G__21833 = f;
    var G__21834 = g;
    var G__21835 = h;
    var G__21836 = i;
    var G__21837 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__21828, G__21829, G__21830, G__21831, G__21832, G__21833, G__21834, G__21835, G__21836, G__21837) : self__.dispatch_fn.call(null, G__21828, G__21829, G__21830, G__21831, G__21832, G__21833, G__21834, G__21835, G__21836, G__21837);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21838 = a;
  var G__21839 = b;
  var G__21840 = c;
  var G__21841 = d;
  var G__21842 = e;
  var G__21843 = f;
  var G__21844 = g;
  var G__21845 = h;
  var G__21846 = i;
  var G__21847 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__21838, G__21839, G__21840, G__21841, G__21842, G__21843, G__21844, G__21845, G__21846, G__21847) : target_fn.call(null, G__21838, G__21839, G__21840, G__21841, G__21842, G__21843, G__21844, G__21845, G__21846, G__21847);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21848 = a;
    var G__21849 = b;
    var G__21850 = c;
    var G__21851 = d;
    var G__21852 = e;
    var G__21853 = f;
    var G__21854 = g;
    var G__21855 = h;
    var G__21856 = i;
    var G__21857 = j;
    var G__21858 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__21848, G__21849, G__21850, G__21851, G__21852, G__21853, G__21854, G__21855, G__21856, G__21857, G__21858) : self__.dispatch_fn.call(null, G__21848, G__21849, G__21850, G__21851, G__21852, G__21853, G__21854, G__21855, G__21856, G__21857, G__21858);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21859 = a;
  var G__21860 = b;
  var G__21861 = c;
  var G__21862 = d;
  var G__21863 = e;
  var G__21864 = f;
  var G__21865 = g;
  var G__21866 = h;
  var G__21867 = i;
  var G__21868 = j;
  var G__21869 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__21859, G__21860, G__21861, G__21862, G__21863, G__21864, G__21865, G__21866, G__21867, G__21868, G__21869) : target_fn.call(null, G__21859, G__21860, G__21861, G__21862, G__21863, G__21864, G__21865, G__21866, G__21867, G__21868, G__21869);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21870 = a;
    var G__21871 = b;
    var G__21872 = c;
    var G__21873 = d;
    var G__21874 = e;
    var G__21875 = f;
    var G__21876 = g;
    var G__21877 = h;
    var G__21878 = i;
    var G__21879 = j;
    var G__21880 = k;
    var G__21881 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__21870, G__21871, G__21872, G__21873, G__21874, G__21875, G__21876, G__21877, G__21878, G__21879, G__21880, G__21881) : self__.dispatch_fn.call(null, G__21870, G__21871, G__21872, G__21873, G__21874, G__21875, G__21876, G__21877, G__21878, G__21879, G__21880, G__21881);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21882 = a;
  var G__21883 = b;
  var G__21884 = c;
  var G__21885 = d;
  var G__21886 = e;
  var G__21887 = f;
  var G__21888 = g;
  var G__21889 = h;
  var G__21890 = i;
  var G__21891 = j;
  var G__21892 = k;
  var G__21893 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__21882, G__21883, G__21884, G__21885, G__21886, G__21887, G__21888, G__21889, G__21890, G__21891, G__21892, G__21893) : target_fn.call(null, G__21882, G__21883, G__21884, G__21885, G__21886, G__21887, G__21888, G__21889, G__21890, G__21891, G__21892, G__21893);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21894 = a;
    var G__21895 = b;
    var G__21896 = c;
    var G__21897 = d;
    var G__21898 = e;
    var G__21899 = f;
    var G__21900 = g;
    var G__21901 = h;
    var G__21902 = i;
    var G__21903 = j;
    var G__21904 = k;
    var G__21905 = l;
    var G__21906 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__21894, G__21895, G__21896, G__21897, G__21898, G__21899, G__21900, G__21901, G__21902, G__21903, G__21904, G__21905, G__21906) : self__.dispatch_fn.call(null, G__21894, G__21895, G__21896, G__21897, G__21898, G__21899, G__21900, G__21901, G__21902, G__21903, G__21904, G__21905, G__21906);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21907 = a;
  var G__21908 = b;
  var G__21909 = c;
  var G__21910 = d;
  var G__21911 = e;
  var G__21912 = f;
  var G__21913 = g;
  var G__21914 = h;
  var G__21915 = i;
  var G__21916 = j;
  var G__21917 = k;
  var G__21918 = l;
  var G__21919 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__21907, G__21908, G__21909, G__21910, G__21911, G__21912, G__21913, G__21914, G__21915, G__21916, G__21917, G__21918, G__21919) : target_fn.call(null, G__21907, G__21908, G__21909, G__21910, G__21911, G__21912, G__21913, G__21914, G__21915, G__21916, G__21917, G__21918, G__21919);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21920 = a;
    var G__21921 = b;
    var G__21922 = c;
    var G__21923 = d;
    var G__21924 = e;
    var G__21925 = f;
    var G__21926 = g;
    var G__21927 = h;
    var G__21928 = i;
    var G__21929 = j;
    var G__21930 = k;
    var G__21931 = l;
    var G__21932 = m;
    var G__21933 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__21920, G__21921, G__21922, G__21923, G__21924, G__21925, G__21926, G__21927, G__21928, G__21929, G__21930, G__21931, G__21932, G__21933) : self__.dispatch_fn.call(null, G__21920, G__21921, G__21922, G__21923, G__21924, G__21925, G__21926, G__21927, G__21928, G__21929, G__21930, G__21931, G__21932, G__21933);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21934 = a;
  var G__21935 = b;
  var G__21936 = c;
  var G__21937 = d;
  var G__21938 = e;
  var G__21939 = f;
  var G__21940 = g;
  var G__21941 = h;
  var G__21942 = i;
  var G__21943 = j;
  var G__21944 = k;
  var G__21945 = l;
  var G__21946 = m;
  var G__21947 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__21934, G__21935, G__21936, G__21937, G__21938, G__21939, G__21940, G__21941, G__21942, G__21943, G__21944, G__21945, G__21946, G__21947) : target_fn.call(null, G__21934, G__21935, G__21936, G__21937, G__21938, G__21939, G__21940, G__21941, G__21942, G__21943, G__21944, G__21945, G__21946, G__21947);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21948 = a;
    var G__21949 = b;
    var G__21950 = c;
    var G__21951 = d;
    var G__21952 = e;
    var G__21953 = f;
    var G__21954 = g;
    var G__21955 = h;
    var G__21956 = i;
    var G__21957 = j;
    var G__21958 = k;
    var G__21959 = l;
    var G__21960 = m;
    var G__21961 = n;
    var G__21962 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__21948, G__21949, G__21950, G__21951, G__21952, G__21953, G__21954, G__21955, G__21956, G__21957, G__21958, G__21959, G__21960, G__21961, G__21962) : self__.dispatch_fn.call(null, G__21948, G__21949, G__21950, G__21951, G__21952, G__21953, G__21954, G__21955, G__21956, G__21957, G__21958, G__21959, G__21960, G__21961, G__21962);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21963 = a;
  var G__21964 = b;
  var G__21965 = c;
  var G__21966 = d;
  var G__21967 = e;
  var G__21968 = f;
  var G__21969 = g;
  var G__21970 = h;
  var G__21971 = i;
  var G__21972 = j;
  var G__21973 = k;
  var G__21974 = l;
  var G__21975 = m;
  var G__21976 = n;
  var G__21977 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__21963, G__21964, G__21965, G__21966, G__21967, G__21968, G__21969, G__21970, G__21971, G__21972, G__21973, G__21974, G__21975, G__21976, G__21977) : target_fn.call(null, G__21963, G__21964, G__21965, G__21966, G__21967, G__21968, G__21969, G__21970, G__21971, G__21972, G__21973, G__21974, G__21975, G__21976, G__21977);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21978 = a;
    var G__21979 = b;
    var G__21980 = c;
    var G__21981 = d;
    var G__21982 = e;
    var G__21983 = f;
    var G__21984 = g;
    var G__21985 = h;
    var G__21986 = i;
    var G__21987 = j;
    var G__21988 = k;
    var G__21989 = l;
    var G__21990 = m;
    var G__21991 = n;
    var G__21992 = o;
    var G__21993 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__21978, G__21979, G__21980, G__21981, G__21982, G__21983, G__21984, G__21985, G__21986, G__21987, G__21988, G__21989, G__21990, G__21991, G__21992, G__21993) : self__.dispatch_fn.call(null, G__21978, G__21979, G__21980, G__21981, G__21982, G__21983, G__21984, G__21985, G__21986, G__21987, G__21988, G__21989, G__21990, G__21991, G__21992, G__21993);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21994 = a;
  var G__21995 = b;
  var G__21996 = c;
  var G__21997 = d;
  var G__21998 = e;
  var G__21999 = f;
  var G__22000 = g;
  var G__22001 = h;
  var G__22002 = i;
  var G__22003 = j;
  var G__22004 = k;
  var G__22005 = l;
  var G__22006 = m;
  var G__22007 = n;
  var G__22008 = o;
  var G__22009 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__21994, G__21995, G__21996, G__21997, G__21998, G__21999, G__22000, G__22001, G__22002, G__22003, G__22004, G__22005, G__22006, G__22007, G__22008, G__22009) : target_fn.call(null, G__21994, G__21995, G__21996, G__21997, G__21998, G__21999, G__22000, G__22001, G__22002, G__22003, G__22004, G__22005, G__22006, G__22007, G__22008, G__22009);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22010 = a;
    var G__22011 = b;
    var G__22012 = c;
    var G__22013 = d;
    var G__22014 = e;
    var G__22015 = f;
    var G__22016 = g;
    var G__22017 = h;
    var G__22018 = i;
    var G__22019 = j;
    var G__22020 = k;
    var G__22021 = l;
    var G__22022 = m;
    var G__22023 = n;
    var G__22024 = o;
    var G__22025 = p;
    var G__22026 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__22010, G__22011, G__22012, G__22013, G__22014, G__22015, G__22016, G__22017, G__22018, G__22019, G__22020, G__22021, G__22022, G__22023, G__22024, G__22025, G__22026) : self__.dispatch_fn.call(null, G__22010, G__22011, G__22012, G__22013, G__22014, G__22015, G__22016, G__22017, G__22018, G__22019, G__22020, G__22021, G__22022, G__22023, G__22024, G__22025, G__22026);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22027 = a;
  var G__22028 = b;
  var G__22029 = c;
  var G__22030 = d;
  var G__22031 = e;
  var G__22032 = f;
  var G__22033 = g;
  var G__22034 = h;
  var G__22035 = i;
  var G__22036 = j;
  var G__22037 = k;
  var G__22038 = l;
  var G__22039 = m;
  var G__22040 = n;
  var G__22041 = o;
  var G__22042 = p;
  var G__22043 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__22027, G__22028, G__22029, G__22030, G__22031, G__22032, G__22033, G__22034, G__22035, G__22036, G__22037, G__22038, G__22039, G__22040, G__22041, G__22042, G__22043) : target_fn.call(null, G__22027, G__22028, G__22029, G__22030, G__22031, G__22032, G__22033, G__22034, G__22035, G__22036, G__22037, G__22038, G__22039, G__22040, G__22041, G__22042, G__22043);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22044 = a;
    var G__22045 = b;
    var G__22046 = c;
    var G__22047 = d;
    var G__22048 = e;
    var G__22049 = f;
    var G__22050 = g;
    var G__22051 = h;
    var G__22052 = i;
    var G__22053 = j;
    var G__22054 = k;
    var G__22055 = l;
    var G__22056 = m;
    var G__22057 = n;
    var G__22058 = o;
    var G__22059 = p;
    var G__22060 = q;
    var G__22061 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__22044, G__22045, G__22046, G__22047, G__22048, G__22049, G__22050, G__22051, G__22052, G__22053, G__22054, G__22055, G__22056, G__22057, G__22058, G__22059, G__22060, G__22061) : self__.dispatch_fn.call(null, G__22044, G__22045, G__22046, G__22047, G__22048, G__22049, G__22050, G__22051, G__22052, G__22053, G__22054, G__22055, G__22056, G__22057, G__22058, G__22059, G__22060, G__22061);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22062 = a;
  var G__22063 = b;
  var G__22064 = c;
  var G__22065 = d;
  var G__22066 = e;
  var G__22067 = f;
  var G__22068 = g;
  var G__22069 = h;
  var G__22070 = i;
  var G__22071 = j;
  var G__22072 = k;
  var G__22073 = l;
  var G__22074 = m;
  var G__22075 = n;
  var G__22076 = o;
  var G__22077 = p;
  var G__22078 = q;
  var G__22079 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__22062, G__22063, G__22064, G__22065, G__22066, G__22067, G__22068, G__22069, G__22070, G__22071, G__22072, G__22073, G__22074, G__22075, G__22076, G__22077, G__22078, G__22079) : target_fn.call(null, G__22062, G__22063, G__22064, G__22065, G__22066, G__22067, G__22068, G__22069, G__22070, G__22071, G__22072, G__22073, G__22074, G__22075, G__22076, G__22077, G__22078, G__22079);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22080 = a;
    var G__22081 = b;
    var G__22082 = c;
    var G__22083 = d;
    var G__22084 = e;
    var G__22085 = f;
    var G__22086 = g;
    var G__22087 = h;
    var G__22088 = i;
    var G__22089 = j;
    var G__22090 = k;
    var G__22091 = l;
    var G__22092 = m;
    var G__22093 = n;
    var G__22094 = o;
    var G__22095 = p;
    var G__22096 = q;
    var G__22097 = r;
    var G__22098 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__22080, G__22081, G__22082, G__22083, G__22084, G__22085, G__22086, G__22087, G__22088, G__22089, G__22090, G__22091, G__22092, G__22093, G__22094, G__22095, G__22096, G__22097, G__22098) : self__.dispatch_fn.call(null, G__22080, G__22081, G__22082, G__22083, G__22084, G__22085, G__22086, G__22087, G__22088, G__22089, G__22090, G__22091, G__22092, G__22093, G__22094, G__22095, G__22096, 
    G__22097, G__22098);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22099 = a;
  var G__22100 = b;
  var G__22101 = c;
  var G__22102 = d;
  var G__22103 = e;
  var G__22104 = f;
  var G__22105 = g;
  var G__22106 = h;
  var G__22107 = i;
  var G__22108 = j;
  var G__22109 = k;
  var G__22110 = l;
  var G__22111 = m;
  var G__22112 = n;
  var G__22113 = o;
  var G__22114 = p;
  var G__22115 = q;
  var G__22116 = r;
  var G__22117 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__22099, G__22100, G__22101, G__22102, G__22103, G__22104, G__22105, G__22106, G__22107, G__22108, G__22109, G__22110, G__22111, G__22112, G__22113, G__22114, G__22115, G__22116, G__22117) : target_fn.call(null, G__22099, G__22100, G__22101, G__22102, G__22103, G__22104, G__22105, G__22106, G__22107, G__22108, G__22109, G__22110, G__22111, G__22112, G__22113, G__22114, G__22115, G__22116, G__22117);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__22118 = a;
    var G__22119 = b;
    var G__22120 = c;
    var G__22121 = d;
    var G__22122 = e;
    var G__22123 = f;
    var G__22124 = g;
    var G__22125 = h;
    var G__22126 = i;
    var G__22127 = j;
    var G__22128 = k;
    var G__22129 = l;
    var G__22130 = m;
    var G__22131 = n;
    var G__22132 = o;
    var G__22133 = p;
    var G__22134 = q;
    var G__22135 = r;
    var G__22136 = s;
    var G__22137 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__22118, G__22119, G__22120, G__22121, G__22122, G__22123, G__22124, G__22125, G__22126, G__22127, G__22128, G__22129, G__22130, G__22131, G__22132, G__22133, G__22134, G__22135, G__22136, G__22137) : self__.dispatch_fn.call(null, G__22118, G__22119, G__22120, G__22121, G__22122, G__22123, G__22124, G__22125, G__22126, G__22127, G__22128, G__22129, G__22130, G__22131, G__22132, G__22133, 
    G__22134, G__22135, G__22136, G__22137);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__22138 = a;
  var G__22139 = b;
  var G__22140 = c;
  var G__22141 = d;
  var G__22142 = e;
  var G__22143 = f;
  var G__22144 = g;
  var G__22145 = h;
  var G__22146 = i;
  var G__22147 = j;
  var G__22148 = k;
  var G__22149 = l;
  var G__22150 = m;
  var G__22151 = n;
  var G__22152 = o;
  var G__22153 = p;
  var G__22154 = q;
  var G__22155 = r;
  var G__22156 = s;
  var G__22157 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__22138, G__22139, G__22140, G__22141, G__22142, G__22143, G__22144, G__22145, G__22146, G__22147, G__22148, G__22149, G__22150, G__22151, G__22152, G__22153, G__22154, G__22155, G__22156, G__22157) : target_fn.call(null, G__22138, G__22139, G__22140, G__22141, G__22142, G__22143, G__22144, G__22145, G__22146, G__22147, G__22148, G__22149, G__22150, G__22151, G__22152, G__22153, G__22154, G__22155, G__22156, 
  G__22157);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__22159 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__22159);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__22164 = msg;
      return Error(G__22164);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__22169 = x;
      var G__22170 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__22169, G__22170) : pred.call(null, G__22169, G__22170);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__22171 = y;
        var G__22172 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__22171, G__22172) : pred.call(null, G__22171, G__22172);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj24154 = {};
  return obj24154;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3913__auto__ = port;
    if (and__3913__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4569__auto__ = port == null ? null : port;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj24156 = {};
  return obj24156;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3913__auto__ = port;
    if (and__3913__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4569__auto__ = port == null ? null : port;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj24158 = {};
  return obj24158;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3913__auto__ = chan;
    if (and__3913__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4569__auto__ = chan == null ? null : chan;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj24160 = {};
  return obj24160;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3913__auto__ = h;
    if (and__3913__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4569__auto__ = h == null ? null : h;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3913__auto__ = h;
    if (and__3913__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4569__auto__ = h == null ? null : h;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj24162 = {};
  return obj24162;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3913__auto__ = b;
    if (and__3913__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4569__auto__ = b == null ? null : b;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3913__auto__ = b;
    if (and__3913__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4569__auto__ = b == null ? null : b;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3913__auto__ = b;
    if (and__3913__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4569__auto__ = b == null ? null : b;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__24165 = cnt + 1;
      cnt = G__24165;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4812__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4812__auto__) {
      var v_24166 = this$.pop();
      if (keep_QMARK_.call(null, v_24166)) {
        this$.unshift(v_24166);
      } else {
      }
      var G__24167 = x + 1;
      x = G__24167;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -97582774, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null)))))].join(""));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_24170 = 0;
  while (true) {
    var m_24171 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_24171 == null) {
    } else {
      m_24171.call(null);
      if (count_24170 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__24172 = count_24170 + 1;
        count_24170 = G__24172;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3913__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3913__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t24178 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t24178 = function(val, box, meta24179) {
      this.val = val;
      this.box = box;
      this.meta24179 = meta24179;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t24178.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t24178.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24180) {
      var self__ = this;
      var _24180__$1 = this;
      return self__.meta24179;
    };
    cljs.core.async.impl.channels.t24178.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24180, meta24179__$1) {
      var self__ = this;
      var _24180__$1 = this;
      return new cljs.core.async.impl.channels.t24178(self__.val, self__.box, meta24179__$1);
    };
    cljs.core.async.impl.channels.t24178.cljs$lang$type = true;
    cljs.core.async.impl.channels.t24178.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t24178";
    cljs.core.async.impl.channels.t24178.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.channels/t24178");
    };
    cljs.core.async.impl.channels.__GT_t24178 = function __GT_t24178(val__$1, box__$1, meta24179) {
      return new cljs.core.async.impl.channels.t24178(val__$1, box__$1, meta24179);
    };
  }
  return new cljs.core.async.impl.channels.t24178(val, box, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_24181 = self__.takes.pop();
      if (taker_24181 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_24181)) {
          var take_cb_24182 = cljs.core.async.impl.protocols.commit.call(null, taker_24181);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_24182, taker_24181, this$__$1) {
            return function() {
              return take_cb_24182.call(null, null);
            };
          }(take_cb_24182, taker_24181, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, 
              "takes", "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t24120 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t24120 = function(f, fn_handler, meta24121) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta24121 = meta24121;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t24120.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t24120.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t24120.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t24120.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24122) {
      var self__ = this;
      var _24122__$1 = this;
      return self__.meta24121;
    };
    cljs.core.async.impl.ioc_helpers.t24120.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24122, meta24121__$1) {
      var self__ = this;
      var _24122__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t24120(self__.f, self__.fn_handler, meta24121__$1);
    };
    cljs.core.async.impl.ioc_helpers.t24120.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t24120.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t24120";
    cljs.core.async.impl.ioc_helpers.t24120.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.ioc-helpers/t24120");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t24120 = function __GT_t24120(f__$1, fn_handler__$1, meta24121) {
      return new cljs.core.async.impl.ioc_helpers.t24120(f__$1, fn_handler__$1, meta24121);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t24120(f, fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e24124) {
    if (e24124 instanceof Object) {
      var ex = e24124;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e24124;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_24127_24129 = state;
    statearr_24127_24129[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_24127_24129[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_24128_24130 = state;
    statearr_24128_24130[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_24128_24130[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_24133_24135 = state;
    statearr_24133_24135[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_24133_24135[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_24134_24136 = state;
    statearr_24134_24136[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_24134_24136[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__24137) {
    var map__24142 = p__24137;
    var map__24142__$1 = cljs.core.seq_QMARK_.call(null, map__24142) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24142) : map__24142;
    var opts = map__24142__$1;
    var statearr_24143_24146 = state;
    statearr_24143_24146[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__24142, map__24142__$1, opts) {
      return function(val) {
        var statearr_24144_24147 = state;
        statearr_24144_24147[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__24142, map__24142__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_24145_24148 = state;
      statearr_24145_24148[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__24137 = null;
    if (arguments.length > 3) {
      var G__24149__i = 0, G__24149__a = new Array(arguments.length - 3);
      while (G__24149__i < G__24149__a.length) {
        G__24149__a[G__24149__i] = arguments[G__24149__i + 3];
        ++G__24149__i;
      }
      p__24137 = new cljs.core.IndexedSeq(G__24149__a, 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__24137);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__24150) {
    var state = cljs.core.first(arglist__24150);
    arglist__24150 = cljs.core.next(arglist__24150);
    var cont_block = cljs.core.first(arglist__24150);
    arglist__24150 = cljs.core.next(arglist__24150);
    var ports = cljs.core.first(arglist__24150);
    var p__24137 = cljs.core.rest(arglist__24150);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__24137);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__24091 = level + 1;
        level = G__24091;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_24092 = 0;
    while (true) {
      if (i_24092 < arr.length) {
        arr[i_24092] = null;
        var G__24093 = i_24092 + 1;
        i_24092 = G__24093;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__24094 = x_SINGLEQUOTE_;
                x__$1 = G__24094;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__24095 = x__$1;
        var G__24096 = k;
        var G__24097 = level - 1;
        var G__24098 = update;
        x = G__24095;
        k = G__24096;
        level = G__24097;
        update = G__24098;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_24099 = self__.level + 1;
      while (true) {
        if (i_24099 <= new_level + 1) {
          update[i_24099] = self__.header;
          var G__24100 = i_24099 + 1;
          i_24099 = G__24100;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_24101 = 0;
    while (true) {
      if (i_24101 <= self__.level) {
        var links_24102 = update[i_24101].forward;
        if (links_24102[i_24101] === x__$1) {
          links_24102[i_24101] = x__$1.forward[i_24101];
          var G__24103 = i_24101 + 1;
          i_24101 = G__24103;
          continue;
        } else {
          var G__24104 = i_24101 + 1;
          i_24101 = G__24104;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__24105 = x_SINGLEQUOTE_;
              x__$1 = G__24105;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__24106 = nx;
        var G__24107 = level__$1 - 1;
        x = G__24106;
        level__$1 = G__24107;
        continue;
      } else {
        var G__24108 = x;
        var G__24109 = level__$1 - 1;
        x = G__24108;
        level__$1 = G__24109;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__24110 = x_SINGLEQUOTE_;
              x__$1 = G__24110;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__24111 = nx;
        var G__24112 = level__$1 - 1;
        x = G__24111;
        level__$1 = G__24112;
        continue;
      } else {
        var G__24113 = x;
        var G__24114 = level__$1 - 1;
        x = G__24113;
        level__$1 = G__24114;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3925__auto__ = cljs.core.truth_(function() {
    var and__3913__auto__ = me;
    if (cljs.core.truth_(and__3913__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3913__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3925__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3925__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t22178 !== "undefined") {
  } else {
    cljs.core.async.t22178 = function(f, fn_handler, meta22179) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta22179 = meta22179;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t22178.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t22178.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t22178.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t22178.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22180) {
      var self__ = this;
      var _22180__$1 = this;
      return self__.meta22179;
    };
    cljs.core.async.t22178.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22180, meta22179__$1) {
      var self__ = this;
      var _22180__$1 = this;
      return new cljs.core.async.t22178(self__.f, self__.fn_handler, meta22179__$1);
    };
    cljs.core.async.t22178.cljs$lang$type = true;
    cljs.core.async.t22178.cljs$lang$ctorStr = "cljs.core.async/t22178";
    cljs.core.async.t22178.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t22178");
    };
    cljs.core.async.__GT_t22178 = function __GT_t22178(f__$1, fn_handler__$1, meta22179) {
      return new cljs.core.async.t22178(f__$1, fn_handler__$1, meta22179);
    };
  }
  return new cljs.core.async.t22178(f, fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_22181 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_22181);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_22181, ret) {
          return function() {
            return fn1.call(null, val_22181);
          };
        }(val_22181, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = ret;
      if (cljs.core.truth_(and__3913__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3913__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4812__auto___22182 = n;
  var x_22183 = 0;
  while (true) {
    if (x_22183 < n__4812__auto___22182) {
      a[x_22183] = 0;
      var G__22184 = x_22183 + 1;
      x_22183 = G__22184;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__22185 = i + 1;
      i = G__22185;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t22189 !== "undefined") {
  } else {
    cljs.core.async.t22189 = function(flag, alt_flag, meta22190) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta22190 = meta22190;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t22189.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t22189.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t22189.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t22189.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_22191) {
        var self__ = this;
        var _22191__$1 = this;
        return self__.meta22190;
      };
    }(flag);
    cljs.core.async.t22189.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_22191, meta22190__$1) {
        var self__ = this;
        var _22191__$1 = this;
        return new cljs.core.async.t22189(self__.flag, self__.alt_flag, meta22190__$1);
      };
    }(flag);
    cljs.core.async.t22189.cljs$lang$type = true;
    cljs.core.async.t22189.cljs$lang$ctorStr = "cljs.core.async/t22189";
    cljs.core.async.t22189.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
        return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t22189");
      };
    }(flag);
    cljs.core.async.__GT_t22189 = function(flag) {
      return function __GT_t22189(flag__$1, alt_flag__$1, meta22190) {
        return new cljs.core.async.t22189(flag__$1, alt_flag__$1, meta22190);
      };
    }(flag);
  }
  return new cljs.core.async.t22189(flag, alt_flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t22195 !== "undefined") {
  } else {
    cljs.core.async.t22195 = function(cb, flag, alt_handler, meta22196) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta22196 = meta22196;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t22195.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t22195.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t22195.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t22195.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22197) {
      var self__ = this;
      var _22197__$1 = this;
      return self__.meta22196;
    };
    cljs.core.async.t22195.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22197, meta22196__$1) {
      var self__ = this;
      var _22197__$1 = this;
      return new cljs.core.async.t22195(self__.cb, self__.flag, self__.alt_handler, meta22196__$1);
    };
    cljs.core.async.t22195.cljs$lang$type = true;
    cljs.core.async.t22195.cljs$lang$ctorStr = "cljs.core.async/t22195";
    cljs.core.async.t22195.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t22195");
    };
    cljs.core.async.__GT_t22195 = function __GT_t22195(cb__$1, flag__$1, alt_handler__$1, meta22196) {
      return new cljs.core.async.t22195(cb__$1, flag__$1, alt_handler__$1, meta22196);
    };
  }
  return new cljs.core.async.t22195(cb, flag, alt_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__22198_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__22198_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3925__auto__ = wport;
            if (cljs.core.truth_(or__3925__auto__)) {
              return or__3925__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__22199 = i + 1;
          i = G__22199;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3925__auto__ = ret;
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3913__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3913__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3913__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__22200) {
    var map__22202 = p__22200;
    var map__22202__$1 = cljs.core.seq_QMARK_.call(null, map__22202) ? cljs.core.apply.call(null, cljs.core.hash_map, map__22202) : map__22202;
    var opts = map__22202__$1;
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__22200 = null;
    if (arguments.length > 1) {
      var G__22203__i = 0, G__22203__a = new Array(arguments.length - 1);
      while (G__22203__i < G__22203__a.length) {
        G__22203__a[G__22203__i] = arguments[G__22203__i + 1];
        ++G__22203__i;
      }
      p__22200 = new cljs.core.IndexedSeq(G__22203__a, 0);
    }
    return alts_BANG___delegate.call(this, ports, p__22200);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__22204) {
    var ports = cljs.core.first(arglist__22204);
    var p__22200 = cljs.core.rest(arglist__22204);
    return alts_BANG___delegate(ports, p__22200);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t22212 !== "undefined") {
  } else {
    cljs.core.async.t22212 = function(ch, f, map_LT_, meta22213) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta22213 = meta22213;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t22212.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t22212.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t22212.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t22212.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t22215 !== "undefined") {
        } else {
          cljs.core.async.t22215 = function(fn1, _, meta22213, map_LT_, f, ch, meta22216) {
            this.fn1 = fn1;
            this._ = _;
            this.meta22213 = meta22213;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta22216 = meta22216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t22215.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t22215.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t22215.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t22215.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__22205_SHARP_) {
                  return f1.call(null, p1__22205_SHARP_ == null ? null : self__.f.call(null, p1__22205_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t22215.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_22217) {
              var self__ = this;
              var _22217__$1 = this;
              return self__.meta22216;
            };
          }(___$1);
          cljs.core.async.t22215.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_22217, meta22216__$1) {
              var self__ = this;
              var _22217__$1 = this;
              return new cljs.core.async.t22215(self__.fn1, self__._, self__.meta22213, self__.map_LT_, self__.f, self__.ch, meta22216__$1);
            };
          }(___$1);
          cljs.core.async.t22215.cljs$lang$type = true;
          cljs.core.async.t22215.cljs$lang$ctorStr = "cljs.core.async/t22215";
          cljs.core.async.t22215.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
              return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t22215");
            };
          }(___$1);
          cljs.core.async.__GT_t22215 = function(___$1) {
            return function __GT_t22215(fn1__$1, ___$2, meta22213__$1, map_LT___$1, f__$1, ch__$1, meta22216) {
              return new cljs.core.async.t22215(fn1__$1, ___$2, meta22213__$1, map_LT___$1, f__$1, ch__$1, meta22216);
            };
          }(___$1);
        }
        return new cljs.core.async.t22215(fn1, ___$1, self__.meta22213, self__.map_LT_, self__.f, self__.ch, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__3913__auto__ = ret;
        if (cljs.core.truth_(and__3913__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3913__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t22212.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t22212.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t22212.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22214) {
      var self__ = this;
      var _22214__$1 = this;
      return self__.meta22213;
    };
    cljs.core.async.t22212.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22214, meta22213__$1) {
      var self__ = this;
      var _22214__$1 = this;
      return new cljs.core.async.t22212(self__.ch, self__.f, self__.map_LT_, meta22213__$1);
    };
    cljs.core.async.t22212.cljs$lang$type = true;
    cljs.core.async.t22212.cljs$lang$ctorStr = "cljs.core.async/t22212";
    cljs.core.async.t22212.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t22212");
    };
    cljs.core.async.__GT_t22212 = function __GT_t22212(ch__$1, f__$1, map_LT___$1, meta22213) {
      return new cljs.core.async.t22212(ch__$1, f__$1, map_LT___$1, meta22213);
    };
  }
  return new cljs.core.async.t22212(ch, f, map_LT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t22221 !== "undefined") {
  } else {
    cljs.core.async.t22221 = function(ch, f, map_GT_, meta22222) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta22222 = meta22222;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t22221.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t22221.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t22221.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t22221.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t22221.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t22221.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t22221.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22223) {
      var self__ = this;
      var _22223__$1 = this;
      return self__.meta22222;
    };
    cljs.core.async.t22221.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22223, meta22222__$1) {
      var self__ = this;
      var _22223__$1 = this;
      return new cljs.core.async.t22221(self__.ch, self__.f, self__.map_GT_, meta22222__$1);
    };
    cljs.core.async.t22221.cljs$lang$type = true;
    cljs.core.async.t22221.cljs$lang$ctorStr = "cljs.core.async/t22221";
    cljs.core.async.t22221.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t22221");
    };
    cljs.core.async.__GT_t22221 = function __GT_t22221(ch__$1, f__$1, map_GT___$1, meta22222) {
      return new cljs.core.async.t22221(ch__$1, f__$1, map_GT___$1, meta22222);
    };
  }
  return new cljs.core.async.t22221(ch, f, map_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t22227 !== "undefined") {
  } else {
    cljs.core.async.t22227 = function(ch, p, filter_GT_, meta22228) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta22228 = meta22228;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t22227.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t22227.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t22227.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t22227.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t22227.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t22227.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t22227.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22229) {
      var self__ = this;
      var _22229__$1 = this;
      return self__.meta22228;
    };
    cljs.core.async.t22227.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22229, meta22228__$1) {
      var self__ = this;
      var _22229__$1 = this;
      return new cljs.core.async.t22227(self__.ch, self__.p, self__.filter_GT_, meta22228__$1);
    };
    cljs.core.async.t22227.cljs$lang$type = true;
    cljs.core.async.t22227.cljs$lang$ctorStr = "cljs.core.async/t22227";
    cljs.core.async.t22227.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t22227");
    };
    cljs.core.async.__GT_t22227 = function __GT_t22227(ch__$1, p__$1, filter_GT___$1, meta22228) {
      return new cljs.core.async.t22227(ch__$1, p__$1, filter_GT___$1, meta22228);
    };
  }
  return new cljs.core.async.t22227(ch, p, filter_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6564__auto___22304 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___22304, out) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto___22304, out) {
            return function(state_22287) {
              var state_val_22288 = state_22287[1];
              if (state_val_22288 === 7) {
                var inst_22283 = state_22287[2];
                var state_22287__$1 = state_22287;
                var statearr_22289_22305 = state_22287__$1;
                statearr_22289_22305[2] = inst_22283;
                statearr_22289_22305[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22288 === 1) {
                  var state_22287__$1 = state_22287;
                  var statearr_22290_22306 = state_22287__$1;
                  statearr_22290_22306[2] = null;
                  statearr_22290_22306[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22288 === 4) {
                    var inst_22269 = state_22287[5];
                    var inst_22269__$1 = state_22287[2];
                    var inst_22270 = inst_22269__$1 == null;
                    var state_22287__$1 = function() {
                      var statearr_22291 = state_22287;
                      statearr_22291[5] = inst_22269__$1;
                      return statearr_22291;
                    }();
                    if (cljs.core.truth_(inst_22270)) {
                      var statearr_22292_22307 = state_22287__$1;
                      statearr_22292_22307[1] = 5;
                    } else {
                      var statearr_22293_22308 = state_22287__$1;
                      statearr_22293_22308[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22288 === 6) {
                      var inst_22269 = state_22287[5];
                      var inst_22274 = p.call(null, inst_22269);
                      var state_22287__$1 = state_22287;
                      if (cljs.core.truth_(inst_22274)) {
                        var statearr_22294_22309 = state_22287__$1;
                        statearr_22294_22309[1] = 8;
                      } else {
                        var statearr_22295_22310 = state_22287__$1;
                        statearr_22295_22310[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22288 === 3) {
                        var inst_22285 = state_22287[2];
                        var state_22287__$1 = state_22287;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22287__$1, inst_22285);
                      } else {
                        if (state_val_22288 === 2) {
                          var state_22287__$1 = state_22287;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22287__$1, 4, ch);
                        } else {
                          if (state_val_22288 === 11) {
                            var inst_22277 = state_22287[2];
                            var state_22287__$1 = state_22287;
                            var statearr_22296_22311 = state_22287__$1;
                            statearr_22296_22311[2] = inst_22277;
                            statearr_22296_22311[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22288 === 9) {
                              var state_22287__$1 = state_22287;
                              var statearr_22297_22312 = state_22287__$1;
                              statearr_22297_22312[2] = null;
                              statearr_22297_22312[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22288 === 5) {
                                var inst_22272 = cljs.core.async.close_BANG_.call(null, out);
                                var state_22287__$1 = state_22287;
                                var statearr_22298_22313 = state_22287__$1;
                                statearr_22298_22313[2] = inst_22272;
                                statearr_22298_22313[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22288 === 10) {
                                  var inst_22280 = state_22287[2];
                                  var state_22287__$1 = function() {
                                    var statearr_22299 = state_22287;
                                    statearr_22299[6] = inst_22280;
                                    return statearr_22299;
                                  }();
                                  var statearr_22300_22314 = state_22287__$1;
                                  statearr_22300_22314[2] = null;
                                  statearr_22300_22314[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22288 === 8) {
                                    var inst_22269 = state_22287[5];
                                    var state_22287__$1 = state_22287;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22287__$1, 11, out, inst_22269);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6564__auto___22304, out);
          return function(switch__6520__auto__, c__6564__auto___22304, out) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_22302 = [null, null, null, null, null, null, null];
                statearr_22302[0] = state_machine__6521__auto__;
                statearr_22302[1] = 1;
                return statearr_22302;
              };
              var state_machine__6521__auto____1 = function(state_22287) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_22287);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_22287) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_22287);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto___22304, out);
        }();
        var state__6566__auto__ = function() {
          var statearr_22303 = f__6565__auto__.call(null);
          statearr_22303[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___22304;
          return statearr_22303;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto___22304, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_22462) {
            var state_val_22463 = state_22462[1];
            if (state_val_22463 === 7) {
              var inst_22458 = state_22462[2];
              var state_22462__$1 = state_22462;
              var statearr_22464_22497 = state_22462__$1;
              statearr_22464_22497[2] = inst_22458;
              statearr_22464_22497[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_22463 === 20) {
                var inst_22433 = state_22462[5];
                var inst_22444 = state_22462[2];
                var inst_22445 = cljs.core.next.call(null, inst_22433);
                var inst_22419 = inst_22445;
                var inst_22420 = null;
                var inst_22421 = 0;
                var inst_22422 = 0;
                var state_22462__$1 = function() {
                  var statearr_22465 = state_22462;
                  statearr_22465[6] = inst_22419;
                  statearr_22465[7] = inst_22422;
                  statearr_22465[8] = inst_22421;
                  statearr_22465[9] = inst_22444;
                  statearr_22465[10] = inst_22420;
                  return statearr_22465;
                }();
                var statearr_22466_22498 = state_22462__$1;
                statearr_22466_22498[2] = null;
                statearr_22466_22498[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22463 === 1) {
                  var state_22462__$1 = state_22462;
                  var statearr_22467_22499 = state_22462__$1;
                  statearr_22467_22499[2] = null;
                  statearr_22467_22499[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22463 === 4) {
                    var inst_22408 = state_22462[11];
                    var inst_22408__$1 = state_22462[2];
                    var inst_22409 = inst_22408__$1 == null;
                    var state_22462__$1 = function() {
                      var statearr_22471 = state_22462;
                      statearr_22471[11] = inst_22408__$1;
                      return statearr_22471;
                    }();
                    if (cljs.core.truth_(inst_22409)) {
                      var statearr_22472_22500 = state_22462__$1;
                      statearr_22472_22500[1] = 5;
                    } else {
                      var statearr_22473_22501 = state_22462__$1;
                      statearr_22473_22501[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22463 === 15) {
                      var state_22462__$1 = state_22462;
                      var statearr_22474_22502 = state_22462__$1;
                      statearr_22474_22502[2] = null;
                      statearr_22474_22502[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22463 === 13) {
                        var inst_22419 = state_22462[6];
                        var inst_22422 = state_22462[7];
                        var inst_22421 = state_22462[8];
                        var inst_22420 = state_22462[10];
                        var inst_22429 = state_22462[2];
                        var inst_22430 = inst_22422 + 1;
                        var tmp22468 = inst_22419;
                        var tmp22469 = inst_22421;
                        var tmp22470 = inst_22420;
                        var inst_22419__$1 = tmp22468;
                        var inst_22420__$1 = tmp22470;
                        var inst_22421__$1 = tmp22469;
                        var inst_22422__$1 = inst_22430;
                        var state_22462__$1 = function() {
                          var statearr_22475 = state_22462;
                          statearr_22475[6] = inst_22419__$1;
                          statearr_22475[7] = inst_22422__$1;
                          statearr_22475[8] = inst_22421__$1;
                          statearr_22475[12] = inst_22429;
                          statearr_22475[10] = inst_22420__$1;
                          return statearr_22475;
                        }();
                        var statearr_22476_22503 = state_22462__$1;
                        statearr_22476_22503[2] = null;
                        statearr_22476_22503[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22463 === 6) {
                          var inst_22408 = state_22462[11];
                          var inst_22413 = f.call(null, inst_22408);
                          var inst_22418 = cljs.core.seq.call(null, inst_22413);
                          var inst_22419 = inst_22418;
                          var inst_22420 = null;
                          var inst_22421 = 0;
                          var inst_22422 = 0;
                          var state_22462__$1 = function() {
                            var statearr_22477 = state_22462;
                            statearr_22477[6] = inst_22419;
                            statearr_22477[7] = inst_22422;
                            statearr_22477[8] = inst_22421;
                            statearr_22477[10] = inst_22420;
                            return statearr_22477;
                          }();
                          var statearr_22478_22504 = state_22462__$1;
                          statearr_22478_22504[2] = null;
                          statearr_22478_22504[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22463 === 17) {
                            var inst_22433 = state_22462[5];
                            var inst_22437 = cljs.core.chunk_first.call(null, inst_22433);
                            var inst_22438 = cljs.core.chunk_rest.call(null, inst_22433);
                            var inst_22439 = cljs.core.count.call(null, inst_22437);
                            var inst_22419 = inst_22438;
                            var inst_22420 = inst_22437;
                            var inst_22421 = inst_22439;
                            var inst_22422 = 0;
                            var state_22462__$1 = function() {
                              var statearr_22479 = state_22462;
                              statearr_22479[6] = inst_22419;
                              statearr_22479[7] = inst_22422;
                              statearr_22479[8] = inst_22421;
                              statearr_22479[10] = inst_22420;
                              return statearr_22479;
                            }();
                            var statearr_22480_22505 = state_22462__$1;
                            statearr_22480_22505[2] = null;
                            statearr_22480_22505[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22463 === 3) {
                              var inst_22460 = state_22462[2];
                              var state_22462__$1 = state_22462;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22462__$1, inst_22460);
                            } else {
                              if (state_val_22463 === 12) {
                                var inst_22453 = state_22462[2];
                                var state_22462__$1 = state_22462;
                                var statearr_22481_22506 = state_22462__$1;
                                statearr_22481_22506[2] = inst_22453;
                                statearr_22481_22506[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22463 === 2) {
                                  var state_22462__$1 = state_22462;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22462__$1, 4, in$);
                                } else {
                                  if (state_val_22463 === 19) {
                                    var inst_22448 = state_22462[2];
                                    var state_22462__$1 = state_22462;
                                    var statearr_22482_22507 = state_22462__$1;
                                    statearr_22482_22507[2] = inst_22448;
                                    statearr_22482_22507[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22463 === 11) {
                                      var inst_22419 = state_22462[6];
                                      var inst_22433 = state_22462[5];
                                      var inst_22433__$1 = cljs.core.seq.call(null, inst_22419);
                                      var state_22462__$1 = function() {
                                        var statearr_22483 = state_22462;
                                        statearr_22483[5] = inst_22433__$1;
                                        return statearr_22483;
                                      }();
                                      if (inst_22433__$1) {
                                        var statearr_22484_22508 = state_22462__$1;
                                        statearr_22484_22508[1] = 14;
                                      } else {
                                        var statearr_22485_22509 = state_22462__$1;
                                        statearr_22485_22509[1] = 15;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22463 === 9) {
                                        var inst_22455 = state_22462[2];
                                        var state_22462__$1 = function() {
                                          var statearr_22486 = state_22462;
                                          statearr_22486[13] = inst_22455;
                                          return statearr_22486;
                                        }();
                                        var statearr_22487_22510 = state_22462__$1;
                                        statearr_22487_22510[2] = null;
                                        statearr_22487_22510[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22463 === 5) {
                                          var inst_22411 = cljs.core.async.close_BANG_.call(null, out);
                                          var state_22462__$1 = state_22462;
                                          var statearr_22488_22511 = state_22462__$1;
                                          statearr_22488_22511[2] = inst_22411;
                                          statearr_22488_22511[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22463 === 14) {
                                            var inst_22433 = state_22462[5];
                                            var inst_22435 = cljs.core.chunked_seq_QMARK_.call(null, inst_22433);
                                            var state_22462__$1 = state_22462;
                                            if (inst_22435) {
                                              var statearr_22489_22512 = state_22462__$1;
                                              statearr_22489_22512[1] = 17;
                                            } else {
                                              var statearr_22490_22513 = state_22462__$1;
                                              statearr_22490_22513[1] = 18;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_22463 === 16) {
                                              var inst_22451 = state_22462[2];
                                              var state_22462__$1 = state_22462;
                                              var statearr_22491_22514 = state_22462__$1;
                                              statearr_22491_22514[2] = inst_22451;
                                              statearr_22491_22514[1] = 12;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_22463 === 10) {
                                                var inst_22422 = state_22462[7];
                                                var inst_22420 = state_22462[10];
                                                var inst_22427 = cljs.core._nth.call(null, inst_22420, inst_22422);
                                                var state_22462__$1 = state_22462;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22462__$1, 13, out, inst_22427);
                                              } else {
                                                if (state_val_22463 === 18) {
                                                  var inst_22433 = state_22462[5];
                                                  var inst_22442 = cljs.core.first.call(null, inst_22433);
                                                  var state_22462__$1 = state_22462;
                                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22462__$1, 20, out, inst_22442);
                                                } else {
                                                  if (state_val_22463 === 8) {
                                                    var inst_22422 = state_22462[7];
                                                    var inst_22421 = state_22462[8];
                                                    var inst_22424 = inst_22422 < inst_22421;
                                                    var inst_22425 = inst_22424;
                                                    var state_22462__$1 = state_22462;
                                                    if (cljs.core.truth_(inst_22425)) {
                                                      var statearr_22492_22515 = state_22462__$1;
                                                      statearr_22492_22515[1] = 10;
                                                    } else {
                                                      var statearr_22493_22516 = state_22462__$1;
                                                      statearr_22493_22516[1] = 11;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_22495 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_22495[0] = state_machine__6521__auto__;
              statearr_22495[1] = 1;
              return statearr_22495;
            };
            var state_machine__6521__auto____1 = function(state_22462) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_22462);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_22462) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_22462);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_22496 = f__6565__auto__.call(null);
        statearr_22496[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_22496;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6564__auto___22589 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___22589) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto___22589) {
            return function(state_22572) {
              var state_val_22573 = state_22572[1];
              if (state_val_22573 === 7) {
                var inst_22568 = state_22572[2];
                var state_22572__$1 = state_22572;
                var statearr_22574_22590 = state_22572__$1;
                statearr_22574_22590[2] = inst_22568;
                statearr_22574_22590[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22573 === 1) {
                  var state_22572__$1 = state_22572;
                  var statearr_22575_22591 = state_22572__$1;
                  statearr_22575_22591[2] = null;
                  statearr_22575_22591[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22573 === 4) {
                    var inst_22555 = state_22572[5];
                    var inst_22555__$1 = state_22572[2];
                    var inst_22556 = inst_22555__$1 == null;
                    var state_22572__$1 = function() {
                      var statearr_22576 = state_22572;
                      statearr_22576[5] = inst_22555__$1;
                      return statearr_22576;
                    }();
                    if (cljs.core.truth_(inst_22556)) {
                      var statearr_22577_22592 = state_22572__$1;
                      statearr_22577_22592[1] = 5;
                    } else {
                      var statearr_22578_22593 = state_22572__$1;
                      statearr_22578_22593[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22573 === 6) {
                      var inst_22555 = state_22572[5];
                      var state_22572__$1 = state_22572;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22572__$1, 11, to, inst_22555);
                    } else {
                      if (state_val_22573 === 3) {
                        var inst_22570 = state_22572[2];
                        var state_22572__$1 = state_22572;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22572__$1, inst_22570);
                      } else {
                        if (state_val_22573 === 2) {
                          var state_22572__$1 = state_22572;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22572__$1, 4, from);
                        } else {
                          if (state_val_22573 === 11) {
                            var inst_22565 = state_22572[2];
                            var state_22572__$1 = function() {
                              var statearr_22579 = state_22572;
                              statearr_22579[6] = inst_22565;
                              return statearr_22579;
                            }();
                            var statearr_22580_22594 = state_22572__$1;
                            statearr_22580_22594[2] = null;
                            statearr_22580_22594[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22573 === 9) {
                              var state_22572__$1 = state_22572;
                              var statearr_22581_22595 = state_22572__$1;
                              statearr_22581_22595[2] = null;
                              statearr_22581_22595[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22573 === 5) {
                                var state_22572__$1 = state_22572;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_22582_22596 = state_22572__$1;
                                  statearr_22582_22596[1] = 8;
                                } else {
                                  var statearr_22583_22597 = state_22572__$1;
                                  statearr_22583_22597[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22573 === 10) {
                                  var inst_22562 = state_22572[2];
                                  var state_22572__$1 = state_22572;
                                  var statearr_22584_22598 = state_22572__$1;
                                  statearr_22584_22598[2] = inst_22562;
                                  statearr_22584_22598[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22573 === 8) {
                                    var inst_22559 = cljs.core.async.close_BANG_.call(null, to);
                                    var state_22572__$1 = state_22572;
                                    var statearr_22585_22599 = state_22572__$1;
                                    statearr_22585_22599[2] = inst_22559;
                                    statearr_22585_22599[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6564__auto___22589);
          return function(switch__6520__auto__, c__6564__auto___22589) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_22587 = [null, null, null, null, null, null, null];
                statearr_22587[0] = state_machine__6521__auto__;
                statearr_22587[1] = 1;
                return statearr_22587;
              };
              var state_machine__6521__auto____1 = function(state_22572) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_22572);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_22572) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_22572);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto___22589);
        }();
        var state__6566__auto__ = function() {
          var statearr_22588 = f__6565__auto__.call(null);
          statearr_22588[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___22589;
          return statearr_22588;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto___22589));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6564__auto___22678 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___22678, tc, fc) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto___22678, tc, fc) {
            return function(state_22660) {
              var state_val_22661 = state_22660[1];
              if (state_val_22661 === 7) {
                var inst_22656 = state_22660[2];
                var state_22660__$1 = state_22660;
                var statearr_22662_22679 = state_22660__$1;
                statearr_22662_22679[2] = inst_22656;
                statearr_22662_22679[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22661 === 1) {
                  var state_22660__$1 = state_22660;
                  var statearr_22663_22680 = state_22660__$1;
                  statearr_22663_22680[2] = null;
                  statearr_22663_22680[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22661 === 4) {
                    var inst_22641 = state_22660[5];
                    var inst_22641__$1 = state_22660[2];
                    var inst_22642 = inst_22641__$1 == null;
                    var state_22660__$1 = function() {
                      var statearr_22664 = state_22660;
                      statearr_22664[5] = inst_22641__$1;
                      return statearr_22664;
                    }();
                    if (cljs.core.truth_(inst_22642)) {
                      var statearr_22665_22681 = state_22660__$1;
                      statearr_22665_22681[1] = 5;
                    } else {
                      var statearr_22666_22682 = state_22660__$1;
                      statearr_22666_22682[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22661 === 6) {
                      var inst_22641 = state_22660[5];
                      var inst_22647 = p.call(null, inst_22641);
                      var state_22660__$1 = state_22660;
                      if (cljs.core.truth_(inst_22647)) {
                        var statearr_22667_22683 = state_22660__$1;
                        statearr_22667_22683[1] = 9;
                      } else {
                        var statearr_22668_22684 = state_22660__$1;
                        statearr_22668_22684[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22661 === 3) {
                        var inst_22658 = state_22660[2];
                        var state_22660__$1 = state_22660;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22660__$1, inst_22658);
                      } else {
                        if (state_val_22661 === 2) {
                          var state_22660__$1 = state_22660;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22660__$1, 4, ch);
                        } else {
                          if (state_val_22661 === 11) {
                            var inst_22641 = state_22660[5];
                            var inst_22651 = state_22660[2];
                            var state_22660__$1 = state_22660;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22660__$1, 8, inst_22651, inst_22641);
                          } else {
                            if (state_val_22661 === 9) {
                              var state_22660__$1 = state_22660;
                              var statearr_22669_22685 = state_22660__$1;
                              statearr_22669_22685[2] = tc;
                              statearr_22669_22685[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22661 === 5) {
                                var inst_22644 = cljs.core.async.close_BANG_.call(null, tc);
                                var inst_22645 = cljs.core.async.close_BANG_.call(null, fc);
                                var state_22660__$1 = function() {
                                  var statearr_22670 = state_22660;
                                  statearr_22670[6] = inst_22644;
                                  return statearr_22670;
                                }();
                                var statearr_22671_22686 = state_22660__$1;
                                statearr_22671_22686[2] = inst_22645;
                                statearr_22671_22686[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22661 === 10) {
                                  var state_22660__$1 = state_22660;
                                  var statearr_22672_22687 = state_22660__$1;
                                  statearr_22672_22687[2] = fc;
                                  statearr_22672_22687[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22661 === 8) {
                                    var inst_22653 = state_22660[2];
                                    var state_22660__$1 = function() {
                                      var statearr_22673 = state_22660;
                                      statearr_22673[7] = inst_22653;
                                      return statearr_22673;
                                    }();
                                    var statearr_22674_22688 = state_22660__$1;
                                    statearr_22674_22688[2] = null;
                                    statearr_22674_22688[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6564__auto___22678, tc, fc);
          return function(switch__6520__auto__, c__6564__auto___22678, tc, fc) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_22676 = [null, null, null, null, null, null, null, null];
                statearr_22676[0] = state_machine__6521__auto__;
                statearr_22676[1] = 1;
                return statearr_22676;
              };
              var state_machine__6521__auto____1 = function(state_22660) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_22660);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_22660) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_22660);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto___22678, tc, fc);
        }();
        var state__6566__auto__ = function() {
          var statearr_22677 = f__6565__auto__.call(null);
          statearr_22677[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___22678;
          return statearr_22677;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto___22678, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_22731) {
            var state_val_22732 = state_22731[1];
            if (state_val_22732 === 7) {
              var inst_22727 = state_22731[2];
              var state_22731__$1 = state_22731;
              var statearr_22733_22745 = state_22731__$1;
              statearr_22733_22745[2] = inst_22727;
              statearr_22733_22745[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_22732 === 6) {
                var inst_22720 = state_22731[5];
                var inst_22717 = state_22731[6];
                var inst_22724 = f.call(null, inst_22717, inst_22720);
                var inst_22717__$1 = inst_22724;
                var state_22731__$1 = function() {
                  var statearr_22734 = state_22731;
                  statearr_22734[6] = inst_22717__$1;
                  return statearr_22734;
                }();
                var statearr_22735_22746 = state_22731__$1;
                statearr_22735_22746[2] = null;
                statearr_22735_22746[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22732 === 5) {
                  var inst_22717 = state_22731[6];
                  var state_22731__$1 = state_22731;
                  var statearr_22736_22747 = state_22731__$1;
                  statearr_22736_22747[2] = inst_22717;
                  statearr_22736_22747[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22732 === 4) {
                    var inst_22720 = state_22731[5];
                    var inst_22720__$1 = state_22731[2];
                    var inst_22721 = inst_22720__$1 == null;
                    var state_22731__$1 = function() {
                      var statearr_22737 = state_22731;
                      statearr_22737[5] = inst_22720__$1;
                      return statearr_22737;
                    }();
                    if (cljs.core.truth_(inst_22721)) {
                      var statearr_22738_22748 = state_22731__$1;
                      statearr_22738_22748[1] = 5;
                    } else {
                      var statearr_22739_22749 = state_22731__$1;
                      statearr_22739_22749[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22732 === 3) {
                      var inst_22729 = state_22731[2];
                      var state_22731__$1 = state_22731;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22731__$1, inst_22729);
                    } else {
                      if (state_val_22732 === 2) {
                        var state_22731__$1 = state_22731;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22731__$1, 4, ch);
                      } else {
                        if (state_val_22732 === 1) {
                          var inst_22717 = init;
                          var state_22731__$1 = function() {
                            var statearr_22740 = state_22731;
                            statearr_22740[6] = inst_22717;
                            return statearr_22740;
                          }();
                          var statearr_22741_22750 = state_22731__$1;
                          statearr_22741_22750[2] = null;
                          statearr_22741_22750[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_22743 = [null, null, null, null, null, null, null];
              statearr_22743[0] = state_machine__6521__auto__;
              statearr_22743[1] = 1;
              return statearr_22743;
            };
            var state_machine__6521__auto____1 = function(state_22731) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_22731);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_22731) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_22731);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_22744 = f__6565__auto__.call(null);
        statearr_22744[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_22744;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto__) {
            return function(state_22808) {
              var state_val_22809 = state_22808[1];
              if (state_val_22809 === 7) {
                var inst_22789 = state_22808[5];
                var inst_22794 = state_22808[2];
                var inst_22795 = cljs.core.next.call(null, inst_22789);
                var inst_22789__$1 = inst_22795;
                var state_22808__$1 = function() {
                  var statearr_22810 = state_22808;
                  statearr_22810[6] = inst_22794;
                  statearr_22810[5] = inst_22789__$1;
                  return statearr_22810;
                }();
                var statearr_22811_22825 = state_22808__$1;
                statearr_22811_22825[2] = null;
                statearr_22811_22825[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22809 === 1) {
                  var inst_22788 = cljs.core.seq.call(null, coll);
                  var inst_22789 = inst_22788;
                  var state_22808__$1 = function() {
                    var statearr_22812 = state_22808;
                    statearr_22812[5] = inst_22789;
                    return statearr_22812;
                  }();
                  var statearr_22813_22826 = state_22808__$1;
                  statearr_22813_22826[2] = null;
                  statearr_22813_22826[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22809 === 4) {
                    var inst_22789 = state_22808[5];
                    var inst_22792 = cljs.core.first.call(null, inst_22789);
                    var state_22808__$1 = state_22808;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22808__$1, 7, ch, inst_22792);
                  } else {
                    if (state_val_22809 === 6) {
                      var inst_22804 = state_22808[2];
                      var state_22808__$1 = state_22808;
                      var statearr_22814_22827 = state_22808__$1;
                      statearr_22814_22827[2] = inst_22804;
                      statearr_22814_22827[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22809 === 3) {
                        var inst_22806 = state_22808[2];
                        var state_22808__$1 = state_22808;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22808__$1, inst_22806);
                      } else {
                        if (state_val_22809 === 2) {
                          var inst_22789 = state_22808[5];
                          var state_22808__$1 = state_22808;
                          if (cljs.core.truth_(inst_22789)) {
                            var statearr_22815_22828 = state_22808__$1;
                            statearr_22815_22828[1] = 4;
                          } else {
                            var statearr_22816_22829 = state_22808__$1;
                            statearr_22816_22829[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22809 === 9) {
                            var state_22808__$1 = state_22808;
                            var statearr_22817_22830 = state_22808__$1;
                            statearr_22817_22830[2] = null;
                            statearr_22817_22830[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22809 === 5) {
                              var state_22808__$1 = state_22808;
                              if (cljs.core.truth_(close_QMARK_)) {
                                var statearr_22818_22831 = state_22808__$1;
                                statearr_22818_22831[1] = 8;
                              } else {
                                var statearr_22819_22832 = state_22808__$1;
                                statearr_22819_22832[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22809 === 10) {
                                var inst_22802 = state_22808[2];
                                var state_22808__$1 = state_22808;
                                var statearr_22820_22833 = state_22808__$1;
                                statearr_22820_22833[2] = inst_22802;
                                statearr_22820_22833[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22809 === 8) {
                                  var inst_22799 = cljs.core.async.close_BANG_.call(null, ch);
                                  var state_22808__$1 = state_22808;
                                  var statearr_22821_22834 = state_22808__$1;
                                  statearr_22821_22834[2] = inst_22799;
                                  statearr_22821_22834[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6564__auto__);
          return function(switch__6520__auto__, c__6564__auto__) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_22823 = [null, null, null, null, null, null, null];
                statearr_22823[0] = state_machine__6521__auto__;
                statearr_22823[1] = 1;
                return statearr_22823;
              };
              var state_machine__6521__auto____1 = function(state_22808) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_22808);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_22808) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_22808);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto__);
        }();
        var state__6566__auto__ = function() {
          var statearr_22824 = f__6565__auto__.call(null);
          statearr_22824[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
          return statearr_22824;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto__));
    return c__6564__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj22836 = {};
  return obj22836;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3913__auto__ = _;
    if (and__3913__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4569__auto__ = _ == null ? null : _;
    return function() {
      var or__3925__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj22838 = {};
  return obj22838;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t23051 !== "undefined") {
    } else {
      cljs.core.async.t23051 = function(cs, ch, mult, meta23052) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta23052 = meta23052;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t23051.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t23051.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t23051.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t23051.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t23051.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t23051.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t23051.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_23053) {
          var self__ = this;
          var _23053__$1 = this;
          return self__.meta23052;
        };
      }(cs);
      cljs.core.async.t23051.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_23053, meta23052__$1) {
          var self__ = this;
          var _23053__$1 = this;
          return new cljs.core.async.t23051(self__.cs, self__.ch, self__.mult, meta23052__$1);
        };
      }(cs);
      cljs.core.async.t23051.cljs$lang$type = true;
      cljs.core.async.t23051.cljs$lang$ctorStr = "cljs.core.async/t23051";
      cljs.core.async.t23051.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
          return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t23051");
        };
      }(cs);
      cljs.core.async.__GT_t23051 = function(cs) {
        return function __GT_t23051(cs__$1, ch__$1, mult__$1, meta23052) {
          return new cljs.core.async.t23051(cs__$1, ch__$1, mult__$1, meta23052);
        };
      }(cs);
    }
    return new cljs.core.async.t23051(cs, ch, mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6564__auto___23263 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___23263, cs, m, dchan, dctr, done) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto___23263, cs, m, dchan, dctr, done) {
          return function(state_23181) {
            var state_val_23182 = state_23181[1];
            if (state_val_23182 === 7) {
              var inst_23177 = state_23181[2];
              var state_23181__$1 = state_23181;
              var statearr_23183_23264 = state_23181__$1;
              statearr_23183_23264[2] = inst_23177;
              statearr_23183_23264[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23182 === 20) {
                var inst_23085 = state_23181[5];
                var inst_23095 = cljs.core.first.call(null, inst_23085);
                var inst_23096 = cljs.core.nth.call(null, inst_23095, 0, null);
                var inst_23097 = cljs.core.nth.call(null, inst_23095, 1, null);
                var state_23181__$1 = function() {
                  var statearr_23184 = state_23181;
                  statearr_23184[6] = inst_23096;
                  return statearr_23184;
                }();
                if (cljs.core.truth_(inst_23097)) {
                  var statearr_23185_23265 = state_23181__$1;
                  statearr_23185_23265[1] = 22;
                } else {
                  var statearr_23186_23266 = state_23181__$1;
                  statearr_23186_23266[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23182 === 27) {
                  var inst_23125 = state_23181[7];
                  var inst_23127 = state_23181[8];
                  var inst_23132 = cljs.core._nth.call(null, inst_23125, inst_23127);
                  var state_23181__$1 = function() {
                    var statearr_23187 = state_23181;
                    statearr_23187[9] = inst_23132;
                    return statearr_23187;
                  }();
                  var statearr_23188_23267 = state_23181__$1;
                  statearr_23188_23267[2] = null;
                  statearr_23188_23267[1] = 32;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23182 === 1) {
                    var state_23181__$1 = state_23181;
                    var statearr_23189_23268 = state_23181__$1;
                    statearr_23189_23268[2] = null;
                    statearr_23189_23268[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23182 === 24) {
                      var inst_23085 = state_23181[5];
                      var inst_23102 = state_23181[2];
                      var inst_23103 = cljs.core.next.call(null, inst_23085);
                      var inst_23065 = inst_23103;
                      var inst_23066 = null;
                      var inst_23067 = 0;
                      var inst_23068 = 0;
                      var state_23181__$1 = function() {
                        var statearr_23190 = state_23181;
                        statearr_23190[10] = inst_23066;
                        statearr_23190[11] = inst_23068;
                        statearr_23190[12] = inst_23102;
                        statearr_23190[13] = inst_23067;
                        statearr_23190[14] = inst_23065;
                        return statearr_23190;
                      }();
                      var statearr_23191_23269 = state_23181__$1;
                      statearr_23191_23269[2] = null;
                      statearr_23191_23269[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23182 === 39) {
                        var inst_23144 = state_23181[15];
                        var inst_23161 = state_23181[2];
                        var inst_23162 = cljs.core.next.call(null, inst_23144);
                        var inst_23124 = inst_23162;
                        var inst_23125 = null;
                        var inst_23126 = 0;
                        var inst_23127 = 0;
                        var state_23181__$1 = function() {
                          var statearr_23195 = state_23181;
                          statearr_23195[16] = inst_23124;
                          statearr_23195[7] = inst_23125;
                          statearr_23195[17] = inst_23161;
                          statearr_23195[18] = inst_23126;
                          statearr_23195[8] = inst_23127;
                          return statearr_23195;
                        }();
                        var statearr_23196_23270 = state_23181__$1;
                        statearr_23196_23270[2] = null;
                        statearr_23196_23270[1] = 25;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23182 === 4) {
                          var inst_23056 = state_23181[19];
                          var inst_23056__$1 = state_23181[2];
                          var inst_23057 = inst_23056__$1 == null;
                          var state_23181__$1 = function() {
                            var statearr_23197 = state_23181;
                            statearr_23197[19] = inst_23056__$1;
                            return statearr_23197;
                          }();
                          if (cljs.core.truth_(inst_23057)) {
                            var statearr_23198_23271 = state_23181__$1;
                            statearr_23198_23271[1] = 5;
                          } else {
                            var statearr_23199_23272 = state_23181__$1;
                            statearr_23199_23272[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23182 === 15) {
                            var inst_23066 = state_23181[10];
                            var inst_23068 = state_23181[11];
                            var inst_23067 = state_23181[13];
                            var inst_23065 = state_23181[14];
                            var inst_23081 = state_23181[2];
                            var inst_23082 = inst_23068 + 1;
                            var tmp23192 = inst_23066;
                            var tmp23193 = inst_23067;
                            var tmp23194 = inst_23065;
                            var inst_23065__$1 = tmp23194;
                            var inst_23066__$1 = tmp23192;
                            var inst_23067__$1 = tmp23193;
                            var inst_23068__$1 = inst_23082;
                            var state_23181__$1 = function() {
                              var statearr_23200 = state_23181;
                              statearr_23200[20] = inst_23081;
                              statearr_23200[10] = inst_23066__$1;
                              statearr_23200[11] = inst_23068__$1;
                              statearr_23200[13] = inst_23067__$1;
                              statearr_23200[14] = inst_23065__$1;
                              return statearr_23200;
                            }();
                            var statearr_23201_23273 = state_23181__$1;
                            statearr_23201_23273[2] = null;
                            statearr_23201_23273[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23182 === 21) {
                              var inst_23106 = state_23181[2];
                              var state_23181__$1 = state_23181;
                              var statearr_23202_23274 = state_23181__$1;
                              statearr_23202_23274[2] = inst_23106;
                              statearr_23202_23274[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23182 === 31) {
                                var inst_23132 = state_23181[9];
                                var inst_23133 = state_23181[2];
                                var inst_23134 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                var inst_23135 = cljs.core.async.untap_STAR_.call(null, m, inst_23132);
                                var state_23181__$1 = function() {
                                  var statearr_23203 = state_23181;
                                  statearr_23203[21] = inst_23133;
                                  statearr_23203[22] = inst_23134;
                                  return statearr_23203;
                                }();
                                var statearr_23204_23275 = state_23181__$1;
                                statearr_23204_23275[2] = inst_23135;
                                statearr_23204_23275[1] = 30;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23182 === 32) {
                                  try {
                                    var inst_23056 = state_23181[19];
                                    var inst_23132 = state_23181[9];
                                    var inst_23138 = cljs.core.async.put_BANG_.call(null, inst_23132, inst_23056, done);
                                    var state_23181__$1 = state_23181;
                                    var statearr_23207_23276 = state_23181__$1;
                                    statearr_23207_23276[2] = inst_23138;
                                    statearr_23207_23276[1] = 30;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } catch (e23205) {
                                    if (e23205 instanceof Object) {
                                      var ex__6514__auto__ = e23205;
                                      var statearr_23206_23277 = state_23181;
                                      statearr_23206_23277[1] = 31;
                                      statearr_23206_23277[2] = ex__6514__auto__;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      throw e23205;
                                    }
                                  }
                                } else {
                                  if (state_val_23182 === 40) {
                                    var inst_23153 = state_23181[23];
                                    var inst_23154 = state_23181[2];
                                    var inst_23155 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                    var inst_23156 = cljs.core.async.untap_STAR_.call(null, m, inst_23153);
                                    var state_23181__$1 = function() {
                                      var statearr_23208 = state_23181;
                                      statearr_23208[24] = inst_23154;
                                      statearr_23208[25] = inst_23155;
                                      return statearr_23208;
                                    }();
                                    var statearr_23209_23278 = state_23181__$1;
                                    statearr_23209_23278[2] = inst_23156;
                                    statearr_23209_23278[1] = 39;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23182 === 33) {
                                      var inst_23144 = state_23181[15];
                                      var inst_23146 = cljs.core.chunked_seq_QMARK_.call(null, inst_23144);
                                      var state_23181__$1 = state_23181;
                                      if (inst_23146) {
                                        var statearr_23210_23279 = state_23181__$1;
                                        statearr_23210_23279[1] = 36;
                                      } else {
                                        var statearr_23211_23280 = state_23181__$1;
                                        statearr_23211_23280[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23182 === 13) {
                                        var inst_23075 = state_23181[26];
                                        var inst_23078 = cljs.core.async.close_BANG_.call(null, inst_23075);
                                        var state_23181__$1 = state_23181;
                                        var statearr_23212_23281 = state_23181__$1;
                                        statearr_23212_23281[2] = inst_23078;
                                        statearr_23212_23281[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23182 === 22) {
                                          var inst_23096 = state_23181[6];
                                          var inst_23099 = cljs.core.async.close_BANG_.call(null, inst_23096);
                                          var state_23181__$1 = state_23181;
                                          var statearr_23213_23282 = state_23181__$1;
                                          statearr_23213_23282[2] = inst_23099;
                                          statearr_23213_23282[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23182 === 36) {
                                            var inst_23144 = state_23181[15];
                                            var inst_23148 = cljs.core.chunk_first.call(null, inst_23144);
                                            var inst_23149 = cljs.core.chunk_rest.call(null, inst_23144);
                                            var inst_23150 = cljs.core.count.call(null, inst_23148);
                                            var inst_23124 = inst_23149;
                                            var inst_23125 = inst_23148;
                                            var inst_23126 = inst_23150;
                                            var inst_23127 = 0;
                                            var state_23181__$1 = function() {
                                              var statearr_23214 = state_23181;
                                              statearr_23214[16] = inst_23124;
                                              statearr_23214[7] = inst_23125;
                                              statearr_23214[18] = inst_23126;
                                              statearr_23214[8] = inst_23127;
                                              return statearr_23214;
                                            }();
                                            var statearr_23215_23283 = state_23181__$1;
                                            statearr_23215_23283[2] = null;
                                            statearr_23215_23283[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_23182 === 41) {
                                              try {
                                                var inst_23153 = state_23181[23];
                                                var inst_23056 = state_23181[19];
                                                var inst_23159 = cljs.core.async.put_BANG_.call(null, inst_23153, inst_23056, done);
                                                var state_23181__$1 = state_23181;
                                                var statearr_23218_23284 = state_23181__$1;
                                                statearr_23218_23284[2] = inst_23159;
                                                statearr_23218_23284[1] = 39;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } catch (e23216) {
                                                if (e23216 instanceof Object) {
                                                  var ex__6514__auto__ = e23216;
                                                  var statearr_23217_23285 = state_23181;
                                                  statearr_23217_23285[1] = 40;
                                                  statearr_23217_23285[2] = ex__6514__auto__;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  throw e23216;
                                                }
                                              }
                                            } else {
                                              if (state_val_23182 === 29) {
                                                var inst_23170 = state_23181[2];
                                                var state_23181__$1 = state_23181;
                                                var statearr_23219_23286 = state_23181__$1;
                                                statearr_23219_23286[2] = inst_23170;
                                                statearr_23219_23286[1] = 26;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_23182 === 6) {
                                                  var inst_23115 = cljs.core.deref.call(null, cs);
                                                  var inst_23116 = cljs.core.keys.call(null, inst_23115);
                                                  var inst_23117 = cljs.core.count.call(null, inst_23116);
                                                  var inst_23118 = cljs.core.reset_BANG_.call(null, dctr, inst_23117);
                                                  var inst_23123 = cljs.core.seq.call(null, inst_23116);
                                                  var inst_23124 = inst_23123;
                                                  var inst_23125 = null;
                                                  var inst_23126 = 0;
                                                  var inst_23127 = 0;
                                                  var state_23181__$1 = function() {
                                                    var statearr_23220 = state_23181;
                                                    statearr_23220[16] = inst_23124;
                                                    statearr_23220[7] = inst_23125;
                                                    statearr_23220[27] = inst_23118;
                                                    statearr_23220[18] = inst_23126;
                                                    statearr_23220[8] = inst_23127;
                                                    return statearr_23220;
                                                  }();
                                                  var statearr_23221_23287 = state_23181__$1;
                                                  statearr_23221_23287[2] = null;
                                                  statearr_23221_23287[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_23182 === 28) {
                                                    var inst_23124 = state_23181[16];
                                                    var inst_23144 = state_23181[15];
                                                    var inst_23144__$1 = cljs.core.seq.call(null, inst_23124);
                                                    var state_23181__$1 = function() {
                                                      var statearr_23222 = state_23181;
                                                      statearr_23222[15] = inst_23144__$1;
                                                      return statearr_23222;
                                                    }();
                                                    if (inst_23144__$1) {
                                                      var statearr_23223_23288 = state_23181__$1;
                                                      statearr_23223_23288[1] = 33;
                                                    } else {
                                                      var statearr_23224_23289 = state_23181__$1;
                                                      statearr_23224_23289[1] = 34;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_23182 === 25) {
                                                      var inst_23126 = state_23181[18];
                                                      var inst_23127 = state_23181[8];
                                                      var inst_23129 = inst_23127 < inst_23126;
                                                      var inst_23130 = inst_23129;
                                                      var state_23181__$1 = state_23181;
                                                      if (cljs.core.truth_(inst_23130)) {
                                                        var statearr_23225_23290 = state_23181__$1;
                                                        statearr_23225_23290[1] = 27;
                                                      } else {
                                                        var statearr_23226_23291 = state_23181__$1;
                                                        statearr_23226_23291[1] = 28;
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_23182 === 34) {
                                                        var state_23181__$1 = state_23181;
                                                        var statearr_23227_23292 = state_23181__$1;
                                                        statearr_23227_23292[2] = null;
                                                        statearr_23227_23292[1] = 35;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_23182 === 17) {
                                                          var state_23181__$1 = state_23181;
                                                          var statearr_23228_23293 = state_23181__$1;
                                                          statearr_23228_23293[2] = null;
                                                          statearr_23228_23293[1] = 18;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_23182 === 3) {
                                                            var inst_23179 = state_23181[2];
                                                            var state_23181__$1 = state_23181;
                                                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23181__$1, inst_23179);
                                                          } else {
                                                            if (state_val_23182 === 12) {
                                                              var inst_23111 = state_23181[2];
                                                              var state_23181__$1 = state_23181;
                                                              var statearr_23229_23294 = state_23181__$1;
                                                              statearr_23229_23294[2] = inst_23111;
                                                              statearr_23229_23294[1] = 9;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_23182 === 2) {
                                                                var state_23181__$1 = state_23181;
                                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23181__$1, 4, ch);
                                                              } else {
                                                                if (state_val_23182 === 23) {
                                                                  var state_23181__$1 = state_23181;
                                                                  var statearr_23230_23295 = state_23181__$1;
                                                                  statearr_23230_23295[2] = null;
                                                                  statearr_23230_23295[1] = 24;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_23182 === 35) {
                                                                    var inst_23168 = state_23181[2];
                                                                    var state_23181__$1 = state_23181;
                                                                    var statearr_23231_23296 = state_23181__$1;
                                                                    statearr_23231_23296[2] = inst_23168;
                                                                    statearr_23231_23296[1] = 29;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_23182 === 19) {
                                                                      var inst_23085 = state_23181[5];
                                                                      var inst_23089 = cljs.core.chunk_first.call(null, inst_23085);
                                                                      var inst_23090 = cljs.core.chunk_rest.call(null, inst_23085);
                                                                      var inst_23091 = cljs.core.count.call(null, inst_23089);
                                                                      var inst_23065 = inst_23090;
                                                                      var inst_23066 = inst_23089;
                                                                      var inst_23067 = inst_23091;
                                                                      var inst_23068 = 0;
                                                                      var state_23181__$1 = function() {
                                                                        var statearr_23232 = state_23181;
                                                                        statearr_23232[10] = inst_23066;
                                                                        statearr_23232[11] = inst_23068;
                                                                        statearr_23232[13] = inst_23067;
                                                                        statearr_23232[14] = inst_23065;
                                                                        return statearr_23232;
                                                                      }();
                                                                      var statearr_23233_23297 = state_23181__$1;
                                                                      statearr_23233_23297[2] = null;
                                                                      statearr_23233_23297[1] = 8;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_23182 === 11) {
                                                                        var inst_23085 = state_23181[5];
                                                                        var inst_23065 = state_23181[14];
                                                                        var inst_23085__$1 = cljs.core.seq.call(null, inst_23065);
                                                                        var state_23181__$1 = function() {
                                                                          var statearr_23234 = state_23181;
                                                                          statearr_23234[5] = inst_23085__$1;
                                                                          return statearr_23234;
                                                                        }();
                                                                        if (inst_23085__$1) {
                                                                          var statearr_23235_23298 = state_23181__$1;
                                                                          statearr_23235_23298[1] = 16;
                                                                        } else {
                                                                          var statearr_23236_23299 = state_23181__$1;
                                                                          statearr_23236_23299[1] = 17;
                                                                        }
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_23182 === 9) {
                                                                          var inst_23113 = state_23181[2];
                                                                          var state_23181__$1 = state_23181;
                                                                          var statearr_23237_23300 = state_23181__$1;
                                                                          statearr_23237_23300[2] = inst_23113;
                                                                          statearr_23237_23300[1] = 7;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_23182 === 5) {
                                                                            var inst_23063 = cljs.core.deref.call(null, cs);
                                                                            var inst_23064 = cljs.core.seq.call(null, inst_23063);
                                                                            var inst_23065 = inst_23064;
                                                                            var inst_23066 = null;
                                                                            var inst_23067 = 0;
                                                                            var inst_23068 = 0;
                                                                            var state_23181__$1 = function() {
                                                                              var statearr_23238 = state_23181;
                                                                              statearr_23238[10] = inst_23066;
                                                                              statearr_23238[11] = inst_23068;
                                                                              statearr_23238[13] = inst_23067;
                                                                              statearr_23238[14] = inst_23065;
                                                                              return statearr_23238;
                                                                            }();
                                                                            var statearr_23239_23301 = state_23181__$1;
                                                                            statearr_23239_23301[2] = null;
                                                                            statearr_23239_23301[1] = 8;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_23182 === 14) {
                                                                              var state_23181__$1 = state_23181;
                                                                              var statearr_23240_23302 = state_23181__$1;
                                                                              statearr_23240_23302[2] = null;
                                                                              statearr_23240_23302[1] = 15;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_23182 === 26) {
                                                                                var inst_23172 = state_23181[2];
                                                                                var state_23181__$1 = function() {
                                                                                  var statearr_23241 = state_23181;
                                                                                  statearr_23241[28] = inst_23172;
                                                                                  return statearr_23241;
                                                                                }();
                                                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23181__$1, 42, dchan);
                                                                              } else {
                                                                                if (state_val_23182 === 16) {
                                                                                  var inst_23085 = state_23181[5];
                                                                                  var inst_23087 = cljs.core.chunked_seq_QMARK_.call(null, inst_23085);
                                                                                  var state_23181__$1 = state_23181;
                                                                                  if (inst_23087) {
                                                                                    var statearr_23245_23303 = state_23181__$1;
                                                                                    statearr_23245_23303[1] = 19;
                                                                                  } else {
                                                                                    var statearr_23246_23304 = state_23181__$1;
                                                                                    statearr_23246_23304[1] = 20;
                                                                                  }
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_23182 === 38) {
                                                                                    var inst_23165 = state_23181[2];
                                                                                    var state_23181__$1 = state_23181;
                                                                                    var statearr_23247_23305 = state_23181__$1;
                                                                                    statearr_23247_23305[2] = inst_23165;
                                                                                    statearr_23247_23305[1] = 35;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_23182 === 30) {
                                                                                      var inst_23124 = state_23181[16];
                                                                                      var inst_23125 = state_23181[7];
                                                                                      var inst_23126 = state_23181[18];
                                                                                      var inst_23127 = state_23181[8];
                                                                                      var inst_23140 = state_23181[2];
                                                                                      var inst_23141 = inst_23127 + 1;
                                                                                      var tmp23242 = inst_23124;
                                                                                      var tmp23243 = inst_23125;
                                                                                      var tmp23244 = inst_23126;
                                                                                      var inst_23124__$1 = tmp23242;
                                                                                      var inst_23125__$1 = tmp23243;
                                                                                      var inst_23126__$1 = tmp23244;
                                                                                      var inst_23127__$1 = inst_23141;
                                                                                      var state_23181__$1 = function() {
                                                                                        var statearr_23248 = state_23181;
                                                                                        statearr_23248[16] = inst_23124__$1;
                                                                                        statearr_23248[7] = inst_23125__$1;
                                                                                        statearr_23248[29] = inst_23140;
                                                                                        statearr_23248[18] = inst_23126__$1;
                                                                                        statearr_23248[8] = inst_23127__$1;
                                                                                        return statearr_23248;
                                                                                      }();
                                                                                      var statearr_23249_23306 = state_23181__$1;
                                                                                      statearr_23249_23306[2] = null;
                                                                                      statearr_23249_23306[1] = 25;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_23182 === 10) {
                                                                                        var inst_23066 = state_23181[10];
                                                                                        var inst_23068 = state_23181[11];
                                                                                        var inst_23074 = cljs.core._nth.call(null, inst_23066, inst_23068);
                                                                                        var inst_23075 = cljs.core.nth.call(null, inst_23074, 0, null);
                                                                                        var inst_23076 = cljs.core.nth.call(null, inst_23074, 1, null);
                                                                                        var state_23181__$1 = function() {
                                                                                          var statearr_23250 = state_23181;
                                                                                          statearr_23250[26] = inst_23075;
                                                                                          return statearr_23250;
                                                                                        }();
                                                                                        if (cljs.core.truth_(inst_23076)) {
                                                                                          var statearr_23251_23307 = state_23181__$1;
                                                                                          statearr_23251_23307[1] = 13;
                                                                                        } else {
                                                                                          var statearr_23252_23308 = state_23181__$1;
                                                                                          statearr_23252_23308[1] = 14;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_23182 === 18) {
                                                                                          var inst_23109 = state_23181[2];
                                                                                          var state_23181__$1 = state_23181;
                                                                                          var statearr_23253_23309 = state_23181__$1;
                                                                                          statearr_23253_23309[2] = inst_23109;
                                                                                          statearr_23253_23309[1] = 12;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_23182 === 42) {
                                                                                            var inst_23174 = state_23181[2];
                                                                                            var state_23181__$1 = function() {
                                                                                              var statearr_23254 = state_23181;
                                                                                              statearr_23254[30] = inst_23174;
                                                                                              return statearr_23254;
                                                                                            }();
                                                                                            var statearr_23255_23310 = state_23181__$1;
                                                                                            statearr_23255_23310[2] = null;
                                                                                            statearr_23255_23310[1] = 2;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_23182 === 37) {
                                                                                              var inst_23144 = state_23181[15];
                                                                                              var inst_23153 = cljs.core.first.call(null, inst_23144);
                                                                                              var state_23181__$1 = function() {
                                                                                                var statearr_23256 = state_23181;
                                                                                                statearr_23256[23] = inst_23153;
                                                                                                return statearr_23256;
                                                                                              }();
                                                                                              var statearr_23257_23311 = state_23181__$1;
                                                                                              statearr_23257_23311[2] = null;
                                                                                              statearr_23257_23311[1] = 41;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_23182 === 8) {
                                                                                                var inst_23068 = state_23181[11];
                                                                                                var inst_23067 = state_23181[13];
                                                                                                var inst_23070 = inst_23068 < inst_23067;
                                                                                                var inst_23071 = inst_23070;
                                                                                                var state_23181__$1 = state_23181;
                                                                                                if (cljs.core.truth_(inst_23071)) {
                                                                                                  var statearr_23258_23312 = state_23181__$1;
                                                                                                  statearr_23258_23312[1] = 10;
                                                                                                } else {
                                                                                                  var statearr_23259_23313 = state_23181__$1;
                                                                                                  statearr_23259_23313[1] = 11;
                                                                                                }
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                return null;
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto___23263, cs, m, dchan, dctr, done);
        return function(switch__6520__auto__, c__6564__auto___23263, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_23261 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23261[0] = state_machine__6521__auto__;
              statearr_23261[1] = 1;
              return statearr_23261;
            };
            var state_machine__6521__auto____1 = function(state_23181) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_23181);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_23181) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_23181);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto___23263, cs, m, dchan, dctr, done);
      }();
      var state__6566__auto__ = function() {
        var statearr_23262 = f__6565__auto__.call(null);
        statearr_23262[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___23263;
        return statearr_23262;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto___23263, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj23315 = {};
  return obj23315;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t23421 !== "undefined") {
    } else {
      cljs.core.async.t23421 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta23422) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta23422 = meta23422;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t23421.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t23421.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23421.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23421.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23421.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23421.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23421.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t23421.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23421.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_23423) {
          var self__ = this;
          var _23423__$1 = this;
          return self__.meta23422;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23421.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_23423, meta23422__$1) {
          var self__ = this;
          var _23423__$1 = this;
          return new cljs.core.async.t23421(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta23422__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23421.cljs$lang$type = true;
      cljs.core.async.t23421.cljs$lang$ctorStr = "cljs.core.async/t23421";
      cljs.core.async.t23421.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
          return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t23421");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t23421 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t23421(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta23422) {
          return new cljs.core.async.t23421(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta23422);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t23421(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__6564__auto___23526 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___23526, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto___23526, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_23488) {
            var state_val_23489 = state_23488[1];
            if (state_val_23489 === 7) {
              var inst_23437 = state_23488[5];
              var inst_23442 = cljs.core.apply.call(null, cljs.core.hash_map, inst_23437);
              var state_23488__$1 = state_23488;
              var statearr_23490_23527 = state_23488__$1;
              statearr_23490_23527[2] = inst_23442;
              statearr_23490_23527[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23489 === 20) {
                var inst_23452 = state_23488[6];
                var state_23488__$1 = state_23488;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23488__$1, 23, out, inst_23452);
              } else {
                if (state_val_23489 === 1) {
                  var inst_23427 = state_23488[7];
                  var inst_23427__$1 = calc_state.call(null);
                  var inst_23428 = cljs.core.seq_QMARK_.call(null, inst_23427__$1);
                  var state_23488__$1 = function() {
                    var statearr_23491 = state_23488;
                    statearr_23491[7] = inst_23427__$1;
                    return statearr_23491;
                  }();
                  if (inst_23428) {
                    var statearr_23492_23528 = state_23488__$1;
                    statearr_23492_23528[1] = 2;
                  } else {
                    var statearr_23493_23529 = state_23488__$1;
                    statearr_23493_23529[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23489 === 4) {
                    var inst_23427 = state_23488[7];
                    var inst_23433 = state_23488[2];
                    var inst_23434 = cljs.core.get.call(null, inst_23433, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                    var inst_23435 = cljs.core.get.call(null, inst_23433, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                    var inst_23436 = cljs.core.get.call(null, inst_23433, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                    var inst_23437 = inst_23427;
                    var state_23488__$1 = function() {
                      var statearr_23494 = state_23488;
                      statearr_23494[5] = inst_23437;
                      statearr_23494[8] = inst_23434;
                      statearr_23494[9] = inst_23436;
                      statearr_23494[10] = inst_23435;
                      return statearr_23494;
                    }();
                    var statearr_23495_23530 = state_23488__$1;
                    statearr_23495_23530[2] = null;
                    statearr_23495_23530[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23489 === 15) {
                      var state_23488__$1 = state_23488;
                      var statearr_23496_23531 = state_23488__$1;
                      statearr_23496_23531[2] = null;
                      statearr_23496_23531[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23489 === 21) {
                        var state_23488__$1 = state_23488;
                        var statearr_23497_23532 = state_23488__$1;
                        statearr_23497_23532[2] = null;
                        statearr_23497_23532[1] = 22;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23489 === 13) {
                          var inst_23484 = state_23488[2];
                          var state_23488__$1 = state_23488;
                          var statearr_23498_23533 = state_23488__$1;
                          statearr_23498_23533[2] = inst_23484;
                          statearr_23498_23533[1] = 6;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23489 === 22) {
                            var inst_23445 = state_23488[11];
                            var inst_23481 = state_23488[2];
                            var inst_23437 = inst_23445;
                            var state_23488__$1 = function() {
                              var statearr_23499 = state_23488;
                              statearr_23499[5] = inst_23437;
                              statearr_23499[12] = inst_23481;
                              return statearr_23499;
                            }();
                            var statearr_23500_23534 = state_23488__$1;
                            statearr_23500_23534[2] = null;
                            statearr_23500_23534[1] = 5;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23489 === 6) {
                              var inst_23486 = state_23488[2];
                              var state_23488__$1 = state_23488;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23488__$1, inst_23486);
                            } else {
                              if (state_val_23489 === 17) {
                                var inst_23467 = state_23488[13];
                                var state_23488__$1 = state_23488;
                                var statearr_23501_23535 = state_23488__$1;
                                statearr_23501_23535[2] = inst_23467;
                                statearr_23501_23535[1] = 19;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23489 === 3) {
                                  var inst_23427 = state_23488[7];
                                  var state_23488__$1 = state_23488;
                                  var statearr_23502_23536 = state_23488__$1;
                                  statearr_23502_23536[2] = inst_23427;
                                  statearr_23502_23536[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23489 === 12) {
                                    var inst_23448 = state_23488[14];
                                    var inst_23453 = state_23488[15];
                                    var inst_23467 = state_23488[13];
                                    var inst_23467__$1 = inst_23448.call(null, inst_23453);
                                    var state_23488__$1 = function() {
                                      var statearr_23503 = state_23488;
                                      statearr_23503[13] = inst_23467__$1;
                                      return statearr_23503;
                                    }();
                                    if (cljs.core.truth_(inst_23467__$1)) {
                                      var statearr_23504_23537 = state_23488__$1;
                                      statearr_23504_23537[1] = 17;
                                    } else {
                                      var statearr_23505_23538 = state_23488__$1;
                                      statearr_23505_23538[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23489 === 2) {
                                      var inst_23427 = state_23488[7];
                                      var inst_23430 = cljs.core.apply.call(null, cljs.core.hash_map, inst_23427);
                                      var state_23488__$1 = state_23488;
                                      var statearr_23506_23539 = state_23488__$1;
                                      statearr_23506_23539[2] = inst_23430;
                                      statearr_23506_23539[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23489 === 23) {
                                        var inst_23478 = state_23488[2];
                                        var state_23488__$1 = state_23488;
                                        var statearr_23507_23540 = state_23488__$1;
                                        statearr_23507_23540[2] = inst_23478;
                                        statearr_23507_23540[1] = 22;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23489 === 19) {
                                          var inst_23475 = state_23488[2];
                                          var state_23488__$1 = state_23488;
                                          if (cljs.core.truth_(inst_23475)) {
                                            var statearr_23508_23541 = state_23488__$1;
                                            statearr_23508_23541[1] = 20;
                                          } else {
                                            var statearr_23509_23542 = state_23488__$1;
                                            statearr_23509_23542[1] = 21;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23489 === 11) {
                                            var inst_23452 = state_23488[6];
                                            var inst_23458 = inst_23452 == null;
                                            var state_23488__$1 = state_23488;
                                            if (cljs.core.truth_(inst_23458)) {
                                              var statearr_23510_23543 = state_23488__$1;
                                              statearr_23510_23543[1] = 14;
                                            } else {
                                              var statearr_23511_23544 = state_23488__$1;
                                              statearr_23511_23544[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_23489 === 9) {
                                              var inst_23445 = state_23488[11];
                                              var inst_23445__$1 = state_23488[2];
                                              var inst_23446 = cljs.core.get.call(null, inst_23445__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                              var inst_23447 = cljs.core.get.call(null, inst_23445__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                              var inst_23448 = cljs.core.get.call(null, inst_23445__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                              var state_23488__$1 = function() {
                                                var statearr_23512 = state_23488;
                                                statearr_23512[14] = inst_23448;
                                                statearr_23512[11] = inst_23445__$1;
                                                statearr_23512[16] = inst_23447;
                                                return statearr_23512;
                                              }();
                                              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_23488__$1, 10, inst_23446);
                                            } else {
                                              if (state_val_23489 === 5) {
                                                var inst_23437 = state_23488[5];
                                                var inst_23440 = cljs.core.seq_QMARK_.call(null, inst_23437);
                                                var state_23488__$1 = state_23488;
                                                if (inst_23440) {
                                                  var statearr_23513_23545 = state_23488__$1;
                                                  statearr_23513_23545[1] = 7;
                                                } else {
                                                  var statearr_23514_23546 = state_23488__$1;
                                                  statearr_23514_23546[1] = 8;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_23489 === 14) {
                                                  var inst_23453 = state_23488[15];
                                                  var inst_23460 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_23453);
                                                  var state_23488__$1 = state_23488;
                                                  var statearr_23515_23547 = state_23488__$1;
                                                  statearr_23515_23547[2] = inst_23460;
                                                  statearr_23515_23547[1] = 16;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_23489 === 16) {
                                                    var inst_23463 = state_23488[2];
                                                    var inst_23464 = calc_state.call(null);
                                                    var inst_23437 = inst_23464;
                                                    var state_23488__$1 = function() {
                                                      var statearr_23516 = state_23488;
                                                      statearr_23516[5] = inst_23437;
                                                      statearr_23516[17] = inst_23463;
                                                      return statearr_23516;
                                                    }();
                                                    var statearr_23517_23548 = state_23488__$1;
                                                    statearr_23517_23548[2] = null;
                                                    statearr_23517_23548[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_23489 === 10) {
                                                      var inst_23453 = state_23488[15];
                                                      var inst_23452 = state_23488[6];
                                                      var inst_23451 = state_23488[2];
                                                      var inst_23452__$1 = cljs.core.nth.call(null, inst_23451, 0, null);
                                                      var inst_23453__$1 = cljs.core.nth.call(null, inst_23451, 1, null);
                                                      var inst_23454 = inst_23452__$1 == null;
                                                      var inst_23455 = cljs.core._EQ_.call(null, inst_23453__$1, change);
                                                      var inst_23456 = inst_23454 || inst_23455;
                                                      var state_23488__$1 = function() {
                                                        var statearr_23518 = state_23488;
                                                        statearr_23518[15] = inst_23453__$1;
                                                        statearr_23518[6] = inst_23452__$1;
                                                        return statearr_23518;
                                                      }();
                                                      if (cljs.core.truth_(inst_23456)) {
                                                        var statearr_23519_23549 = state_23488__$1;
                                                        statearr_23519_23549[1] = 11;
                                                      } else {
                                                        var statearr_23520_23550 = state_23488__$1;
                                                        statearr_23520_23550[1] = 12;
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_23489 === 18) {
                                                        var inst_23448 = state_23488[14];
                                                        var inst_23453 = state_23488[15];
                                                        var inst_23447 = state_23488[16];
                                                        var inst_23470 = cljs.core.empty_QMARK_.call(null, inst_23448);
                                                        var inst_23471 = inst_23447.call(null, inst_23453);
                                                        var inst_23472 = cljs.core.not.call(null, inst_23471);
                                                        var inst_23473 = inst_23470 && inst_23472;
                                                        var state_23488__$1 = state_23488;
                                                        var statearr_23521_23551 = state_23488__$1;
                                                        statearr_23521_23551[2] = inst_23473;
                                                        statearr_23521_23551[1] = 19;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_23489 === 8) {
                                                          var inst_23437 = state_23488[5];
                                                          var state_23488__$1 = state_23488;
                                                          var statearr_23522_23552 = state_23488__$1;
                                                          statearr_23522_23552[2] = inst_23437;
                                                          statearr_23522_23552[1] = 9;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto___23526, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6520__auto__, c__6564__auto___23526, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_23524 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23524[0] = state_machine__6521__auto__;
              statearr_23524[1] = 1;
              return statearr_23524;
            };
            var state_machine__6521__auto____1 = function(state_23488) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_23488);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_23488) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_23488);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto___23526, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6566__auto__ = function() {
        var statearr_23525 = f__6565__auto__.call(null);
        statearr_23525[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___23526;
        return statearr_23525;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto___23526, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj23554 = {};
  return obj23554;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3913__auto__ = p;
    if (and__3913__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4569__auto__ = p == null ? null : p;
    return function() {
      var or__3925__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3913__auto__ = p;
    if (and__3913__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4569__auto__ = p == null ? null : p;
    return function() {
      var or__3925__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3913__auto__ = p;
      if (and__3913__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4569__auto__ = p == null ? null : p;
      return function() {
        var or__3925__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4569__auto__)];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3913__auto__ = p;
      if (and__3913__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4569__auto__ = p == null ? null : p;
      return function() {
        var or__3925__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4569__auto__)];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3925__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3925__auto__, mults) {
            return function(p1__23555_SHARP_) {
              if (cljs.core.truth_(p1__23555_SHARP_.call(null, topic))) {
                return p1__23555_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__23555_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3925__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t23679 !== "undefined") {
      } else {
        cljs.core.async.t23679 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta23680) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta23680 = meta23680;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t23679.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t23679.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t23679.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t23679.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t23679.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t23679.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t23679.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t23679.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_23681) {
            var self__ = this;
            var _23681__$1 = this;
            return self__.meta23680;
          };
        }(mults, ensure_mult);
        cljs.core.async.t23679.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_23681, meta23680__$1) {
            var self__ = this;
            var _23681__$1 = this;
            return new cljs.core.async.t23679(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta23680__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t23679.cljs$lang$type = true;
        cljs.core.async.t23679.cljs$lang$ctorStr = "cljs.core.async/t23679";
        cljs.core.async.t23679.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
            return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t23679");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t23679 = function(mults, ensure_mult) {
          return function __GT_t23679(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta23680) {
            return new cljs.core.async.t23679(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta23680);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t23679(ensure_mult, mults, buf_fn, topic_fn, ch, pub, cljs.core.PersistentArrayMap.EMPTY);
    }();
    var c__6564__auto___23802 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___23802, mults, ensure_mult, p) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto___23802, mults, ensure_mult, p) {
            return function(state_23754) {
              var state_val_23755 = state_23754[1];
              if (state_val_23755 === 7) {
                var inst_23750 = state_23754[2];
                var state_23754__$1 = state_23754;
                var statearr_23756_23803 = state_23754__$1;
                statearr_23756_23803[2] = inst_23750;
                statearr_23756_23803[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23755 === 20) {
                  var state_23754__$1 = state_23754;
                  var statearr_23757_23804 = state_23754__$1;
                  statearr_23757_23804[2] = null;
                  statearr_23757_23804[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23755 === 1) {
                    var state_23754__$1 = state_23754;
                    var statearr_23758_23805 = state_23754__$1;
                    statearr_23758_23805[2] = null;
                    statearr_23758_23805[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23755 === 24) {
                      try {
                        var inst_23734 = state_23754[5];
                        var inst_23684 = state_23754[6];
                        var inst_23740 = cljs.core.async.muxch_STAR_.call(null, inst_23734);
                        var state_23754__$1 = state_23754;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23754__$1, 25, inst_23740, inst_23684);
                      } catch (e23759) {
                        if (e23759 instanceof Object) {
                          var ex__6514__auto__ = e23759;
                          var statearr_23760_23806 = state_23754;
                          statearr_23760_23806[1] = 23;
                          statearr_23760_23806[2] = ex__6514__auto__;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e23759;
                        }
                      }
                    } else {
                      if (state_val_23755 === 4) {
                        var inst_23684 = state_23754[6];
                        var inst_23684__$1 = state_23754[2];
                        var inst_23685 = inst_23684__$1 == null;
                        var state_23754__$1 = function() {
                          var statearr_23761 = state_23754;
                          statearr_23761[6] = inst_23684__$1;
                          return statearr_23761;
                        }();
                        if (cljs.core.truth_(inst_23685)) {
                          var statearr_23762_23807 = state_23754__$1;
                          statearr_23762_23807[1] = 5;
                        } else {
                          var statearr_23763_23808 = state_23754__$1;
                          statearr_23763_23808[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23755 === 15) {
                          var inst_23726 = state_23754[2];
                          var state_23754__$1 = state_23754;
                          var statearr_23764_23809 = state_23754__$1;
                          statearr_23764_23809[2] = inst_23726;
                          statearr_23764_23809[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23755 === 21) {
                            var inst_23747 = state_23754[2];
                            var state_23754__$1 = function() {
                              var statearr_23765 = state_23754;
                              statearr_23765[7] = inst_23747;
                              return statearr_23765;
                            }();
                            var statearr_23766_23810 = state_23754__$1;
                            statearr_23766_23810[2] = null;
                            statearr_23766_23810[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23755 === 13) {
                              var inst_23708 = state_23754[8];
                              var inst_23710 = cljs.core.chunked_seq_QMARK_.call(null, inst_23708);
                              var state_23754__$1 = state_23754;
                              if (inst_23710) {
                                var statearr_23767_23811 = state_23754__$1;
                                statearr_23767_23811[1] = 16;
                              } else {
                                var statearr_23768_23812 = state_23754__$1;
                                statearr_23768_23812[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23755 === 22) {
                                var inst_23744 = state_23754[2];
                                var state_23754__$1 = state_23754;
                                var statearr_23769_23813 = state_23754__$1;
                                statearr_23769_23813[2] = inst_23744;
                                statearr_23769_23813[1] = 21;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23755 === 6) {
                                  var inst_23734 = state_23754[5];
                                  var inst_23732 = state_23754[9];
                                  var inst_23684 = state_23754[6];
                                  var inst_23732__$1 = topic_fn.call(null, inst_23684);
                                  var inst_23733 = cljs.core.deref.call(null, mults);
                                  var inst_23734__$1 = cljs.core.get.call(null, inst_23733, inst_23732__$1);
                                  var state_23754__$1 = function() {
                                    var statearr_23770 = state_23754;
                                    statearr_23770[5] = inst_23734__$1;
                                    statearr_23770[9] = inst_23732__$1;
                                    return statearr_23770;
                                  }();
                                  if (cljs.core.truth_(inst_23734__$1)) {
                                    var statearr_23771_23814 = state_23754__$1;
                                    statearr_23771_23814[1] = 19;
                                  } else {
                                    var statearr_23772_23815 = state_23754__$1;
                                    statearr_23772_23815[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23755 === 25) {
                                    try {
                                      var inst_23742 = state_23754[2];
                                      var state_23754__$1 = state_23754;
                                      var statearr_23775_23816 = state_23754__$1;
                                      statearr_23775_23816[2] = inst_23742;
                                      statearr_23775_23816[1] = 22;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } catch (e23773) {
                                      if (e23773 instanceof Object) {
                                        var ex__6514__auto__ = e23773;
                                        var statearr_23774_23817 = state_23754;
                                        statearr_23774_23817[1] = 23;
                                        statearr_23774_23817[2] = ex__6514__auto__;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        throw e23773;
                                      }
                                    }
                                  } else {
                                    if (state_val_23755 === 17) {
                                      var inst_23708 = state_23754[8];
                                      var inst_23717 = cljs.core.first.call(null, inst_23708);
                                      var inst_23718 = cljs.core.async.muxch_STAR_.call(null, inst_23717);
                                      var inst_23719 = cljs.core.async.close_BANG_.call(null, inst_23718);
                                      var inst_23720 = cljs.core.next.call(null, inst_23708);
                                      var inst_23694 = inst_23720;
                                      var inst_23695 = null;
                                      var inst_23696 = 0;
                                      var inst_23697 = 0;
                                      var state_23754__$1 = function() {
                                        var statearr_23776 = state_23754;
                                        statearr_23776[10] = inst_23696;
                                        statearr_23776[11] = inst_23695;
                                        statearr_23776[12] = inst_23694;
                                        statearr_23776[13] = inst_23719;
                                        statearr_23776[14] = inst_23697;
                                        return statearr_23776;
                                      }();
                                      var statearr_23777_23818 = state_23754__$1;
                                      statearr_23777_23818[2] = null;
                                      statearr_23777_23818[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23755 === 3) {
                                        var inst_23752 = state_23754[2];
                                        var state_23754__$1 = state_23754;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23754__$1, inst_23752);
                                      } else {
                                        if (state_val_23755 === 12) {
                                          var inst_23728 = state_23754[2];
                                          var state_23754__$1 = state_23754;
                                          var statearr_23778_23819 = state_23754__$1;
                                          statearr_23778_23819[2] = inst_23728;
                                          statearr_23778_23819[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23755 === 2) {
                                            var state_23754__$1 = state_23754;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23754__$1, 4, ch);
                                          } else {
                                            if (state_val_23755 === 23) {
                                              var inst_23732 = state_23754[9];
                                              var inst_23736 = state_23754[2];
                                              var inst_23737 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_23732);
                                              var state_23754__$1 = function() {
                                                var statearr_23779 = state_23754;
                                                statearr_23779[15] = inst_23736;
                                                return statearr_23779;
                                              }();
                                              var statearr_23780_23820 = state_23754__$1;
                                              statearr_23780_23820[2] = inst_23737;
                                              statearr_23780_23820[1] = 22;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_23755 === 19) {
                                                var state_23754__$1 = state_23754;
                                                var statearr_23781_23821 = state_23754__$1;
                                                statearr_23781_23821[2] = null;
                                                statearr_23781_23821[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_23755 === 11) {
                                                  var inst_23708 = state_23754[8];
                                                  var inst_23694 = state_23754[12];
                                                  var inst_23708__$1 = cljs.core.seq.call(null, inst_23694);
                                                  var state_23754__$1 = function() {
                                                    var statearr_23782 = state_23754;
                                                    statearr_23782[8] = inst_23708__$1;
                                                    return statearr_23782;
                                                  }();
                                                  if (inst_23708__$1) {
                                                    var statearr_23783_23822 = state_23754__$1;
                                                    statearr_23783_23822[1] = 13;
                                                  } else {
                                                    var statearr_23784_23823 = state_23754__$1;
                                                    statearr_23784_23823[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_23755 === 9) {
                                                    var inst_23730 = state_23754[2];
                                                    var state_23754__$1 = state_23754;
                                                    var statearr_23785_23824 = state_23754__$1;
                                                    statearr_23785_23824[2] = inst_23730;
                                                    statearr_23785_23824[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_23755 === 5) {
                                                      var inst_23691 = cljs.core.deref.call(null, mults);
                                                      var inst_23692 = cljs.core.vals.call(null, inst_23691);
                                                      var inst_23693 = cljs.core.seq.call(null, inst_23692);
                                                      var inst_23694 = inst_23693;
                                                      var inst_23695 = null;
                                                      var inst_23696 = 0;
                                                      var inst_23697 = 0;
                                                      var state_23754__$1 = function() {
                                                        var statearr_23786 = state_23754;
                                                        statearr_23786[10] = inst_23696;
                                                        statearr_23786[11] = inst_23695;
                                                        statearr_23786[12] = inst_23694;
                                                        statearr_23786[14] = inst_23697;
                                                        return statearr_23786;
                                                      }();
                                                      var statearr_23787_23825 = state_23754__$1;
                                                      statearr_23787_23825[2] = null;
                                                      statearr_23787_23825[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_23755 === 14) {
                                                        var state_23754__$1 = state_23754;
                                                        var statearr_23791_23826 = state_23754__$1;
                                                        statearr_23791_23826[2] = null;
                                                        statearr_23791_23826[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_23755 === 16) {
                                                          var inst_23708 = state_23754[8];
                                                          var inst_23712 = cljs.core.chunk_first.call(null, inst_23708);
                                                          var inst_23713 = cljs.core.chunk_rest.call(null, inst_23708);
                                                          var inst_23714 = cljs.core.count.call(null, inst_23712);
                                                          var inst_23694 = inst_23713;
                                                          var inst_23695 = inst_23712;
                                                          var inst_23696 = inst_23714;
                                                          var inst_23697 = 0;
                                                          var state_23754__$1 = function() {
                                                            var statearr_23792 = state_23754;
                                                            statearr_23792[10] = inst_23696;
                                                            statearr_23792[11] = inst_23695;
                                                            statearr_23792[12] = inst_23694;
                                                            statearr_23792[14] = inst_23697;
                                                            return statearr_23792;
                                                          }();
                                                          var statearr_23793_23827 = state_23754__$1;
                                                          statearr_23793_23827[2] = null;
                                                          statearr_23793_23827[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_23755 === 10) {
                                                            var inst_23696 = state_23754[10];
                                                            var inst_23695 = state_23754[11];
                                                            var inst_23694 = state_23754[12];
                                                            var inst_23697 = state_23754[14];
                                                            var inst_23702 = cljs.core._nth.call(null, inst_23695, inst_23697);
                                                            var inst_23703 = cljs.core.async.muxch_STAR_.call(null, inst_23702);
                                                            var inst_23704 = cljs.core.async.close_BANG_.call(null, inst_23703);
                                                            var inst_23705 = inst_23697 + 1;
                                                            var tmp23788 = inst_23696;
                                                            var tmp23789 = inst_23695;
                                                            var tmp23790 = inst_23694;
                                                            var inst_23694__$1 = tmp23790;
                                                            var inst_23695__$1 = tmp23789;
                                                            var inst_23696__$1 = tmp23788;
                                                            var inst_23697__$1 = inst_23705;
                                                            var state_23754__$1 = function() {
                                                              var statearr_23794 = state_23754;
                                                              statearr_23794[16] = inst_23704;
                                                              statearr_23794[10] = inst_23696__$1;
                                                              statearr_23794[11] = inst_23695__$1;
                                                              statearr_23794[12] = inst_23694__$1;
                                                              statearr_23794[14] = inst_23697__$1;
                                                              return statearr_23794;
                                                            }();
                                                            var statearr_23795_23828 = state_23754__$1;
                                                            statearr_23795_23828[2] = null;
                                                            statearr_23795_23828[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_23755 === 18) {
                                                              var inst_23723 = state_23754[2];
                                                              var state_23754__$1 = state_23754;
                                                              var statearr_23796_23829 = state_23754__$1;
                                                              statearr_23796_23829[2] = inst_23723;
                                                              statearr_23796_23829[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_23755 === 8) {
                                                                var inst_23696 = state_23754[10];
                                                                var inst_23697 = state_23754[14];
                                                                var inst_23699 = inst_23697 < inst_23696;
                                                                var inst_23700 = inst_23699;
                                                                var state_23754__$1 = state_23754;
                                                                if (cljs.core.truth_(inst_23700)) {
                                                                  var statearr_23797_23830 = state_23754__$1;
                                                                  statearr_23797_23830[1] = 10;
                                                                } else {
                                                                  var statearr_23798_23831 = state_23754__$1;
                                                                  statearr_23798_23831[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6564__auto___23802, mults, ensure_mult, p);
          return function(switch__6520__auto__, c__6564__auto___23802, mults, ensure_mult, p) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_23800 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_23800[0] = state_machine__6521__auto__;
                statearr_23800[1] = 1;
                return statearr_23800;
              };
              var state_machine__6521__auto____1 = function(state_23754) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_23754);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_23754) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_23754);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto___23802, mults, ensure_mult, p);
        }();
        var state__6566__auto__ = function() {
          var statearr_23801 = f__6565__auto__.call(null);
          statearr_23801[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___23802;
          return statearr_23801;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto___23802, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, java.util.Arrays.copyOf.call(null, rets, cnt));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6564__auto___23962 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___23962, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto___23962, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_23934) {
              var state_val_23935 = state_23934[1];
              if (state_val_23935 === 7) {
                var state_23934__$1 = state_23934;
                var statearr_23936_23963 = state_23934__$1;
                statearr_23936_23963[2] = null;
                statearr_23936_23963[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23935 === 1) {
                  var state_23934__$1 = state_23934;
                  var statearr_23937_23964 = state_23934__$1;
                  statearr_23937_23964[2] = null;
                  statearr_23937_23964[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23935 === 4) {
                    var inst_23899 = state_23934[5];
                    var inst_23901 = inst_23899 < cnt;
                    var state_23934__$1 = state_23934;
                    if (cljs.core.truth_(inst_23901)) {
                      var statearr_23938_23965 = state_23934__$1;
                      statearr_23938_23965[1] = 6;
                    } else {
                      var statearr_23939_23966 = state_23934__$1;
                      statearr_23939_23966[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23935 === 15) {
                      var inst_23930 = state_23934[2];
                      var state_23934__$1 = state_23934;
                      var statearr_23940_23967 = state_23934__$1;
                      statearr_23940_23967[2] = inst_23930;
                      statearr_23940_23967[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23935 === 13) {
                        var inst_23923 = cljs.core.async.close_BANG_.call(null, out);
                        var state_23934__$1 = state_23934;
                        var statearr_23941_23968 = state_23934__$1;
                        statearr_23941_23968[2] = inst_23923;
                        statearr_23941_23968[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23935 === 6) {
                          var state_23934__$1 = state_23934;
                          var statearr_23942_23969 = state_23934__$1;
                          statearr_23942_23969[2] = null;
                          statearr_23942_23969[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23935 === 3) {
                            var inst_23932 = state_23934[2];
                            var state_23934__$1 = state_23934;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23934__$1, inst_23932);
                          } else {
                            if (state_val_23935 === 12) {
                              var inst_23920 = state_23934[6];
                              var inst_23920__$1 = state_23934[2];
                              var inst_23921 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_23920__$1);
                              var state_23934__$1 = function() {
                                var statearr_23943 = state_23934;
                                statearr_23943[6] = inst_23920__$1;
                                return statearr_23943;
                              }();
                              if (cljs.core.truth_(inst_23921)) {
                                var statearr_23944_23970 = state_23934__$1;
                                statearr_23944_23970[1] = 13;
                              } else {
                                var statearr_23945_23971 = state_23934__$1;
                                statearr_23945_23971[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23935 === 2) {
                                var inst_23898 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_23899 = 0;
                                var state_23934__$1 = function() {
                                  var statearr_23946 = state_23934;
                                  statearr_23946[5] = inst_23899;
                                  statearr_23946[7] = inst_23898;
                                  return statearr_23946;
                                }();
                                var statearr_23947_23972 = state_23934__$1;
                                statearr_23947_23972[2] = null;
                                statearr_23947_23972[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23935 === 11) {
                                  try {
                                    var inst_23899 = state_23934[5];
                                    var inst_23907 = chs__$1.call(null, inst_23899);
                                    var inst_23908 = done.call(null, inst_23899);
                                    var inst_23909 = cljs.core.async.take_BANG_.call(null, inst_23907, inst_23908);
                                    var state_23934__$1 = state_23934;
                                    var statearr_23950_23973 = state_23934__$1;
                                    statearr_23950_23973[2] = inst_23909;
                                    statearr_23950_23973[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } catch (e23948) {
                                    if (e23948 instanceof Object) {
                                      var ex__6514__auto__ = e23948;
                                      var statearr_23949_23974 = state_23934;
                                      statearr_23949_23974[1] = 10;
                                      statearr_23949_23974[2] = ex__6514__auto__;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      throw e23948;
                                    }
                                  }
                                } else {
                                  if (state_val_23935 === 9) {
                                    var inst_23899 = state_23934[5];
                                    var inst_23911 = state_23934[2];
                                    var inst_23912 = inst_23899 + 1;
                                    var inst_23899__$1 = inst_23912;
                                    var state_23934__$1 = function() {
                                      var statearr_23951 = state_23934;
                                      statearr_23951[5] = inst_23899__$1;
                                      statearr_23951[8] = inst_23911;
                                      return statearr_23951;
                                    }();
                                    var statearr_23952_23975 = state_23934__$1;
                                    statearr_23952_23975[2] = null;
                                    statearr_23952_23975[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23935 === 5) {
                                      var inst_23918 = state_23934[2];
                                      var state_23934__$1 = function() {
                                        var statearr_23953 = state_23934;
                                        statearr_23953[9] = inst_23918;
                                        return statearr_23953;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23934__$1, 12, dchan);
                                    } else {
                                      if (state_val_23935 === 14) {
                                        var inst_23920 = state_23934[6];
                                        var inst_23925 = cljs.core.apply.call(null, f, inst_23920);
                                        var state_23934__$1 = state_23934;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23934__$1, 16, out, inst_23925);
                                      } else {
                                        if (state_val_23935 === 16) {
                                          var inst_23927 = state_23934[2];
                                          var state_23934__$1 = function() {
                                            var statearr_23954 = state_23934;
                                            statearr_23954[10] = inst_23927;
                                            return statearr_23954;
                                          }();
                                          var statearr_23955_23976 = state_23934__$1;
                                          statearr_23955_23976[2] = null;
                                          statearr_23955_23976[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23935 === 10) {
                                            var inst_23903 = state_23934[2];
                                            var inst_23904 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_23934__$1 = function() {
                                              var statearr_23956 = state_23934;
                                              statearr_23956[11] = inst_23903;
                                              return statearr_23956;
                                            }();
                                            var statearr_23957_23977 = state_23934__$1;
                                            statearr_23957_23977[2] = inst_23904;
                                            statearr_23957_23977[1] = 9;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_23935 === 8) {
                                              var inst_23916 = state_23934[2];
                                              var state_23934__$1 = state_23934;
                                              var statearr_23958_23978 = state_23934__$1;
                                              statearr_23958_23978[2] = inst_23916;
                                              statearr_23958_23978[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6564__auto___23962, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6520__auto__, c__6564__auto___23962, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_23960 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_23960[0] = state_machine__6521__auto__;
                statearr_23960[1] = 1;
                return statearr_23960;
              };
              var state_machine__6521__auto____1 = function(state_23934) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_23934);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_23934) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_23934);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto___23962, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6566__auto__ = function() {
          var statearr_23961 = f__6565__auto__.call(null);
          statearr_23961[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___23962;
          return statearr_23961;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto___23962, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6564__auto___24078 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___24078, out) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto___24078, out) {
            return function(state_24058) {
              var state_val_24059 = state_24058[1];
              if (state_val_24059 === 7) {
                var inst_24037 = state_24058[5];
                var inst_24038 = state_24058[6];
                var inst_24037__$1 = state_24058[2];
                var inst_24038__$1 = cljs.core.nth.call(null, inst_24037__$1, 0, null);
                var inst_24039 = cljs.core.nth.call(null, inst_24037__$1, 1, null);
                var inst_24040 = inst_24038__$1 == null;
                var state_24058__$1 = function() {
                  var statearr_24060 = state_24058;
                  statearr_24060[7] = inst_24039;
                  statearr_24060[5] = inst_24037__$1;
                  statearr_24060[6] = inst_24038__$1;
                  return statearr_24060;
                }();
                if (cljs.core.truth_(inst_24040)) {
                  var statearr_24061_24079 = state_24058__$1;
                  statearr_24061_24079[1] = 8;
                } else {
                  var statearr_24062_24080 = state_24058__$1;
                  statearr_24062_24080[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24059 === 1) {
                  var inst_24029 = cljs.core.vec.call(null, chs);
                  var inst_24030 = inst_24029;
                  var state_24058__$1 = function() {
                    var statearr_24063 = state_24058;
                    statearr_24063[8] = inst_24030;
                    return statearr_24063;
                  }();
                  var statearr_24064_24081 = state_24058__$1;
                  statearr_24064_24081[2] = null;
                  statearr_24064_24081[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24059 === 4) {
                    var inst_24030 = state_24058[8];
                    var state_24058__$1 = state_24058;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_24058__$1, 7, inst_24030);
                  } else {
                    if (state_val_24059 === 6) {
                      var inst_24054 = state_24058[2];
                      var state_24058__$1 = state_24058;
                      var statearr_24065_24082 = state_24058__$1;
                      statearr_24065_24082[2] = inst_24054;
                      statearr_24065_24082[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24059 === 3) {
                        var inst_24056 = state_24058[2];
                        var state_24058__$1 = state_24058;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24058__$1, inst_24056);
                      } else {
                        if (state_val_24059 === 2) {
                          var inst_24030 = state_24058[8];
                          var inst_24032 = cljs.core.count.call(null, inst_24030);
                          var inst_24033 = inst_24032 > 0;
                          var state_24058__$1 = state_24058;
                          if (cljs.core.truth_(inst_24033)) {
                            var statearr_24067_24083 = state_24058__$1;
                            statearr_24067_24083[1] = 4;
                          } else {
                            var statearr_24068_24084 = state_24058__$1;
                            statearr_24068_24084[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_24059 === 11) {
                            var inst_24030 = state_24058[8];
                            var inst_24047 = state_24058[2];
                            var tmp24066 = inst_24030;
                            var inst_24030__$1 = tmp24066;
                            var state_24058__$1 = function() {
                              var statearr_24069 = state_24058;
                              statearr_24069[8] = inst_24030__$1;
                              statearr_24069[9] = inst_24047;
                              return statearr_24069;
                            }();
                            var statearr_24070_24085 = state_24058__$1;
                            statearr_24070_24085[2] = null;
                            statearr_24070_24085[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24059 === 9) {
                              var inst_24038 = state_24058[6];
                              var state_24058__$1 = state_24058;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24058__$1, 11, out, inst_24038);
                            } else {
                              if (state_val_24059 === 5) {
                                var inst_24052 = cljs.core.async.close_BANG_.call(null, out);
                                var state_24058__$1 = state_24058;
                                var statearr_24071_24086 = state_24058__$1;
                                statearr_24071_24086[2] = inst_24052;
                                statearr_24071_24086[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_24059 === 10) {
                                  var inst_24050 = state_24058[2];
                                  var state_24058__$1 = state_24058;
                                  var statearr_24072_24087 = state_24058__$1;
                                  statearr_24072_24087[2] = inst_24050;
                                  statearr_24072_24087[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24059 === 8) {
                                    var inst_24030 = state_24058[8];
                                    var inst_24039 = state_24058[7];
                                    var inst_24037 = state_24058[5];
                                    var inst_24038 = state_24058[6];
                                    var inst_24042 = function() {
                                      var c = inst_24039;
                                      var v = inst_24038;
                                      var vec__24035 = inst_24037;
                                      var cs = inst_24030;
                                      return function(c, v, vec__24035, cs, inst_24030, inst_24039, inst_24037, inst_24038, state_val_24059, c__6564__auto___24078, out) {
                                        return function(p1__23979_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__23979_SHARP_);
                                        };
                                      }(c, v, vec__24035, cs, inst_24030, inst_24039, inst_24037, inst_24038, state_val_24059, c__6564__auto___24078, out);
                                    }();
                                    var inst_24043 = cljs.core.filterv.call(null, inst_24042, inst_24030);
                                    var inst_24030__$1 = inst_24043;
                                    var state_24058__$1 = function() {
                                      var statearr_24073 = state_24058;
                                      statearr_24073[8] = inst_24030__$1;
                                      return statearr_24073;
                                    }();
                                    var statearr_24074_24088 = state_24058__$1;
                                    statearr_24074_24088[2] = null;
                                    statearr_24074_24088[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6564__auto___24078, out);
          return function(switch__6520__auto__, c__6564__auto___24078, out) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_24076 = [null, null, null, null, null, null, null, null, null, null];
                statearr_24076[0] = state_machine__6521__auto__;
                statearr_24076[1] = 1;
                return statearr_24076;
              };
              var state_machine__6521__auto____1 = function(state_24058) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_24058);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_24058) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_24058);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto___24078, out);
        }();
        var state__6566__auto__ = function() {
          var statearr_24077 = f__6565__auto__.call(null);
          statearr_24077[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___24078;
          return statearr_24077;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto___24078, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
goog.provide("logger");
goog.require("cljs.core");
goog.require("cljs.core.async");
cljs.core.enable_console_print_BANG_.call(null);
logger.tagsOn = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "all", "all", 892129742), new cljs.core.Keyword(null, "inv", "inv", 1526077438), new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), new cljs.core.Keyword(null, "blockchainHeight", "blockchainHeight", -607390728), new cljs.core.Keyword(null, "prevblk", "prevblk", 1731240431), new cljs.core.Keyword(null, "blockknown", "blockknown", -1662820144), new cljs.core.Keyword(null, 
"makeBlock", "makeBlock", -1854081426), new cljs.core.Keyword(null, "heightFromBlock", "heightFromBlock", 328660240), new cljs.core.Keyword(null, "saveBlock", "saveBlock", 2070754850), new cljs.core.Keyword(null, "dbput", "dbput", 890434907), new cljs.core.Keyword(null, "makeGetBlock", "makeGetBlock", -1966015644), new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312)], null);
logger.tagsOFF = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "receive", "receive", 1830053389)], null);
logger.tags = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "merkleRoot", "merkleRoot", -1567310602), new cljs.core.Keyword(null, "dbupdate", "dbupdate", 1437384630)], null);
logger.og = function og(type, format, data) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15598) {
            var state_val_15599 = state_15598[1];
            if (state_val_15599 === 7) {
              var inst_15589 = state_15598[2];
              var state_15598__$1 = state_15598;
              if (cljs.core.truth_(inst_15589)) {
                var statearr_15600_15618 = state_15598__$1;
                statearr_15600_15618[1] = 8;
              } else {
                var statearr_15601_15619 = state_15598__$1;
                statearr_15601_15619[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15599 === 1) {
                var inst_15573 = state_15598[5];
                var inst_15571 = [type];
                var inst_15572 = cljs.core.PersistentHashSet.fromArray(inst_15571, true);
                var inst_15573__$1 = cljs.core.some.call(null, inst_15572, logger.tagsOn);
                var state_15598__$1 = function() {
                  var statearr_15602 = state_15598;
                  statearr_15602[5] = inst_15573__$1;
                  return statearr_15602;
                }();
                if (cljs.core.truth_(inst_15573__$1)) {
                  var statearr_15603_15620 = state_15598__$1;
                  statearr_15603_15620[1] = 2;
                } else {
                  var statearr_15604_15621 = state_15598__$1;
                  statearr_15604_15621[1] = 3;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15599 === 4) {
                  var inst_15581 = state_15598[6];
                  var inst_15581__$1 = state_15598[2];
                  var state_15598__$1 = function() {
                    var statearr_15605 = state_15598;
                    statearr_15605[6] = inst_15581__$1;
                    return statearr_15605;
                  }();
                  if (cljs.core.truth_(inst_15581__$1)) {
                    var statearr_15606_15622 = state_15598__$1;
                    statearr_15606_15622[1] = 5;
                  } else {
                    var statearr_15607_15623 = state_15598__$1;
                    statearr_15607_15623[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15599 === 6) {
                    var inst_15581 = state_15598[6];
                    var state_15598__$1 = state_15598;
                    var statearr_15608_15624 = state_15598__$1;
                    statearr_15608_15624[2] = inst_15581;
                    statearr_15608_15624[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15599 === 3) {
                      var inst_15576 = [new cljs.core.Keyword(null, "all", "all", 892129742), null];
                      var inst_15577 = new cljs.core.PersistentArrayMap(null, 1, inst_15576, null);
                      var inst_15578 = new cljs.core.PersistentHashSet(null, inst_15577, null);
                      var inst_15579 = cljs.core.some.call(null, inst_15578, logger.tagsOn);
                      var state_15598__$1 = state_15598;
                      var statearr_15609_15625 = state_15598__$1;
                      statearr_15609_15625[2] = inst_15579;
                      statearr_15609_15625[1] = 4;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15599 === 2) {
                        var inst_15573 = state_15598[5];
                        var state_15598__$1 = state_15598;
                        var statearr_15610_15626 = state_15598__$1;
                        statearr_15610_15626[2] = inst_15573;
                        statearr_15610_15626[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15599 === 9) {
                          var state_15598__$1 = state_15598;
                          var statearr_15611_15627 = state_15598__$1;
                          statearr_15611_15627[2] = null;
                          statearr_15611_15627[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15599 === 5) {
                            var inst_15583 = [type];
                            var inst_15584 = cljs.core.PersistentHashSet.fromArray(inst_15583, true);
                            var inst_15585 = cljs.core.some.call(null, inst_15584, logger.tagsOFF);
                            var inst_15586 = cljs.core.not.call(null, inst_15585);
                            var state_15598__$1 = state_15598;
                            var statearr_15612_15628 = state_15598__$1;
                            statearr_15612_15628[2] = inst_15586;
                            statearr_15612_15628[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15599 === 10) {
                              var inst_15596 = state_15598[2];
                              var state_15598__$1 = function() {
                                var statearr_15613 = state_15598;
                                statearr_15613[7] = inst_15596;
                                return statearr_15613;
                              }();
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15598__$1, data);
                            } else {
                              if (state_val_15599 === 8) {
                                var inst_15591 = type + " ";
                                var inst_15592 = inst_15591 + format;
                                var inst_15593 = console.log(inst_15592, data);
                                var state_15598__$1 = state_15598;
                                var statearr_15614_15629 = state_15598__$1;
                                statearr_15614_15629[2] = inst_15593;
                                statearr_15614_15629[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15616 = [null, null, null, null, null, null, null, null];
              statearr_15616[0] = state_machine__6521__auto__;
              statearr_15616[1] = 1;
              return statearr_15616;
            };
            var state_machine__6521__auto____1 = function(state_15598) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15598);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15598) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15598);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15617 = f__6565__auto__.call(null);
        statearr_15617[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15617;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
goog.provide("pubsub");
goog.require("cljs.core");
goog.require("logger");
goog.require("cljs.core.async");
pubsub.proxychan = cljs.core.async.chan.call(null);
pubsub.proxychan2 = cljs.core.async.chan.call(null, 1);
pubsub.sendReceiveCh = cljs.core.async.chan.call(null, 1E3);
pubsub.statesCh = cljs.core.async.chan.call(null, 1E3);
pubsub.states = function() {
  var obj13717 = {};
  return obj13717;
}();
pubsub.receiveCH = cljs.core.async.chan.call(null, 1E3);
pubsub.get = function get() {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_13741) {
            var state_val_13742 = state_13741[1];
            if (state_val_13742 === 3) {
              var inst_13738 = state_13741[2];
              var inst_13739 = logger.og.call(null, new cljs.core.Keyword(null, "getpubsub", "getpubsub", -56419473), "peerjs", pubsub.a);
              var state_13741__$1 = function() {
                var statearr_13743 = state_13741;
                statearr_13743[5] = inst_13738;
                statearr_13743[6] = inst_13739;
                return statearr_13743;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13741__$1, pubsub.a);
            } else {
              if (state_val_13742 === 2) {
                var inst_13734 = state_13741[2];
                var inst_13735 = pubsub.a = inst_13734;
                var inst_13736 = logger.og.call(null, new cljs.core.Keyword(null, "getpubsub", "getpubsub", -56419473), "peerjs", pubsub.a);
                var state_13741__$1 = function() {
                  var statearr_13744 = state_13741;
                  statearr_13744[7] = inst_13736;
                  statearr_13744[8] = inst_13735;
                  return statearr_13744;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13741__$1, 3, pubsub.proxychan2, pubsub.a);
              } else {
                if (state_val_13742 === 1) {
                  var state_13741__$1 = state_13741;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13741__$1, 2, pubsub.proxychan2);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_13746 = [null, null, null, null, null, null, null, null, null];
              statearr_13746[0] = state_machine__6521__auto__;
              statearr_13746[1] = 1;
              return statearr_13746;
            };
            var state_machine__6521__auto____1 = function(state_13741) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_13741);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_13741) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_13741);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_13747 = f__6565__auto__.call(null);
        statearr_13747[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_13747;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
pubsub.init = function init(what) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_13762) {
            var state_val_13763 = state_13762[1];
            if (state_val_13763 === 2) {
              var inst_13760 = state_13762[2];
              var state_13762__$1 = state_13762;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13762__$1, inst_13760);
            } else {
              if (state_val_13763 === 1) {
                var inst_13758 = logger.og.call(null, new cljs.core.Keyword(null, "initpubsub", "initpubsub", -596274170), "peerjs", what);
                var state_13762__$1 = function() {
                  var statearr_13764 = state_13762;
                  statearr_13764[5] = inst_13758;
                  return statearr_13764;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13762__$1, 2, pubsub.proxychan2, what);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_13766 = [null, null, null, null, null, null];
              statearr_13766[0] = state_machine__6521__auto__;
              statearr_13766[1] = 1;
              return statearr_13766;
            };
            var state_machine__6521__auto____1 = function(state_13762) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_13762);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_13762) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_13762);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_13767 = f__6565__auto__.call(null);
        statearr_13767[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_13767;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
pubsub.set = function set(what) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_13784) {
            var state_val_13785 = state_13784[1];
            if (state_val_13785 === 3) {
              var inst_13782 = state_13784[2];
              var state_13784__$1 = state_13784;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13784__$1, inst_13782);
            } else {
              if (state_val_13785 === 2) {
                var inst_13780 = state_13784[2];
                var state_13784__$1 = function() {
                  var statearr_13786 = state_13784;
                  statearr_13786[5] = inst_13780;
                  return statearr_13786;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13784__$1, 3, pubsub.proxychan2, what);
              } else {
                if (state_val_13785 === 1) {
                  var state_13784__$1 = state_13784;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13784__$1, 2, pubsub.proxychan2);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_13788 = [null, null, null, null, null, null];
              statearr_13788[0] = state_machine__6521__auto__;
              statearr_13788[1] = 1;
              return statearr_13788;
            };
            var state_machine__6521__auto____1 = function(state_13784) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_13784);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_13784) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_13784);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_13789 = f__6565__auto__.call(null);
        statearr_13789[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_13789;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
pubsub.subs = function() {
  var obj13791 = {};
  return obj13791;
}();
pubsub.sub = function sub(typ, fun) {
  return pubsub.subs[typ] = fun;
};
pubsub.pub = function pub(typ, msg) {
  logger.og.call(null, new cljs.core.Keyword(null, "pub", "pub", -1189143908), "pubing ", typ + " " + msg);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_13809) {
            var state_val_13810 = state_13809[1];
            if (state_val_13810 === 2) {
              var inst_13807 = state_13809[2];
              var state_13809__$1 = state_13809;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13809__$1, inst_13807);
            } else {
              if (state_val_13810 === 1) {
                var inst_13805 = {"typ":typ, "msg":msg};
                var state_13809__$1 = state_13809;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13809__$1, 2, pubsub.proxychan, inst_13805);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_13812 = [null, null, null, null, null];
              statearr_13812[0] = state_machine__6521__auto__;
              statearr_13812[1] = 1;
              return statearr_13812;
            };
            var state_machine__6521__auto____1 = function(state_13809) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_13809);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_13809) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_13809);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_13813 = f__6565__auto__.call(null);
        statearr_13813[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_13813;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
pubsub.makeMsg = function makeMsg(typ, m, pchannel) {
  var obj13817 = {"typ":typ, "msg":m};
  return obj13817;
};
pubsub.initpubsub = function initpubsub() {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_13825) {
            var state_val_13826 = state_13825[1];
            if (state_val_13826 === 1) {
              var state_13825__$1 = state_13825;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13825__$1, null);
            } else {
              return null;
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_13828 = [null, null, null, null, null];
              statearr_13828[0] = state_machine__6521__auto__;
              statearr_13828[1] = 1;
              return statearr_13828;
            };
            var state_machine__6521__auto____1 = function(state_13825) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_13825);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_13825) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_13825);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_13829 = f__6565__auto__.call(null);
        statearr_13829[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_13829;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
pubsub.r = function r(typ) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_13912) {
            var state_val_13913 = state_13912[1];
            if (state_val_13913 === 7) {
              var inst_13900 = pubsub.mtemp["typ"];
              var inst_13901 = inst_13900 === 0;
              var state_13912__$1 = state_13912;
              if (cljs.core.truth_(inst_13901)) {
                var statearr_13914_13932 = state_13912__$1;
                statearr_13914_13932[1] = 10;
              } else {
                var statearr_13915_13933 = state_13912__$1;
                statearr_13915_13933[1] = 11;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13913 === 1) {
                var inst_13881 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve %s", typ);
                var inst_13884 = {"typ":0};
                var state_13912__$1 = function() {
                  var statearr_13916 = state_13912;
                  statearr_13916[5] = inst_13881;
                  return statearr_13916;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13912__$1, 2, pubsub.statesCh, inst_13884);
              } else {
                if (state_val_13913 === 4) {
                  var inst_13910 = state_13912[2];
                  var state_13912__$1 = state_13912;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13912__$1, inst_13910);
                } else {
                  if (state_val_13913 === 6) {
                    var state_13912__$1 = state_13912;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13912__$1, 9, pubsub.statesCh, pubsub.m);
                  } else {
                    if (state_val_13913 === 3) {
                      var inst_13888 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve in loop");
                      var state_13912__$1 = function() {
                        var statearr_13917 = state_13912;
                        statearr_13917[6] = inst_13888;
                        return statearr_13917;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13912__$1, 5, pubsub.sendReceiveCh);
                    } else {
                      if (state_val_13913 === 12) {
                        var inst_13906 = state_13912[2];
                        var state_13912__$1 = state_13912;
                        var statearr_13918_13934 = state_13912__$1;
                        statearr_13918_13934[2] = inst_13906;
                        statearr_13918_13934[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13913 === 2) {
                          var inst_13886 = state_13912[2];
                          var state_13912__$1 = function() {
                            var statearr_13919 = state_13912;
                            statearr_13919[7] = inst_13886;
                            return statearr_13919;
                          }();
                          var statearr_13920_13935 = state_13912__$1;
                          statearr_13920_13935[2] = null;
                          statearr_13920_13935[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13913 === 11) {
                            var state_13912__$1 = state_13912;
                            var statearr_13921_13936 = state_13912__$1;
                            statearr_13921_13936[2] = null;
                            statearr_13921_13936[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13913 === 9) {
                              var inst_13897 = state_13912[2];
                              var inst_13898 = pubsub.mtemp["msg"];
                              var state_13912__$1 = function() {
                                var statearr_13922 = state_13912;
                                statearr_13922[8] = inst_13897;
                                return statearr_13922;
                              }();
                              var statearr_13923_13937 = state_13912__$1;
                              statearr_13923_13937[2] = inst_13898;
                              statearr_13923_13937[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13913 === 5) {
                                var inst_13890 = state_13912[2];
                                var inst_13891 = pubsub.mtemp = inst_13890;
                                var inst_13892 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "now looking at ", pubsub.mtemp);
                                var inst_13893 = pubsub.mtemp["typ"];
                                var inst_13894 = inst_13893 === typ;
                                var state_13912__$1 = function() {
                                  var statearr_13924 = state_13912;
                                  statearr_13924[9] = inst_13892;
                                  statearr_13924[10] = inst_13891;
                                  return statearr_13924;
                                }();
                                if (cljs.core.truth_(inst_13894)) {
                                  var statearr_13925_13938 = state_13912__$1;
                                  statearr_13925_13938[1] = 6;
                                } else {
                                  var statearr_13926_13939 = state_13912__$1;
                                  statearr_13926_13939[1] = 7;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13913 === 10) {
                                  var state_13912__$1 = state_13912;
                                  var statearr_13927_13940 = state_13912__$1;
                                  statearr_13927_13940[2] = 0;
                                  statearr_13927_13940[1] = 12;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13913 === 8) {
                                    var inst_13908 = state_13912[2];
                                    var state_13912__$1 = state_13912;
                                    var statearr_13928_13941 = state_13912__$1;
                                    statearr_13928_13941[2] = inst_13908;
                                    statearr_13928_13941[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_13930 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_13930[0] = state_machine__6521__auto__;
              statearr_13930[1] = 1;
              return statearr_13930;
            };
            var state_machine__6521__auto____1 = function(state_13912) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_13912);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_13912) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_13912);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_13931 = f__6565__auto__.call(null);
        statearr_13931[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_13931;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
pubsub.check = function check(typ, v, ret) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_14093) {
            var state_val_14094 = state_14093[1];
            if (state_val_14094 === 7) {
              var inst_14055 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "found no val  ", pubsub.mtemp);
              var inst_14056 = pubsub.mtemp["typ"] = typ;
              var state_14093__$1 = function() {
                var statearr_14095 = state_14093;
                statearr_14095[5] = inst_14056;
                statearr_14095[6] = inst_14055;
                return statearr_14095;
              }();
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14093__$1, 11, pubsub.statesCh, pubsub.mtemp);
            } else {
              if (state_val_14094 === 20) {
                var state_14093__$1 = state_14093;
                var statearr_14096_14128 = state_14093__$1;
                statearr_14096_14128[2] = null;
                statearr_14096_14128[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14094 === 1) {
                  var inst_14037 = {"typ":typ, "msg":v};
                  var inst_14038 = pubsub.m = inst_14037;
                  var state_14093__$1 = function() {
                    var statearr_14097 = state_14093;
                    statearr_14097[7] = inst_14038;
                    return statearr_14097;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14093__$1, 2, pubsub.statesCh);
                } else {
                  if (state_val_14094 === 24) {
                    var inst_14087 = state_14093[2];
                    var state_14093__$1 = state_14093;
                    var statearr_14098_14129 = state_14093__$1;
                    statearr_14098_14129[2] = inst_14087;
                    statearr_14098_14129[1] = 15;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14094 === 4) {
                      var inst_14066 = pubsub.mtemp["typ"];
                      var inst_14067 = inst_14066 === 0;
                      var state_14093__$1 = state_14093;
                      if (cljs.core.truth_(inst_14067)) {
                        var statearr_14099_14130 = state_14093__$1;
                        statearr_14099_14130[1] = 13;
                      } else {
                        var statearr_14100_14131 = state_14093__$1;
                        statearr_14100_14131[1] = 14;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14094 === 15) {
                        var inst_14089 = state_14093[2];
                        var state_14093__$1 = state_14093;
                        var statearr_14101_14132 = state_14093__$1;
                        statearr_14101_14132[2] = inst_14089;
                        statearr_14101_14132[1] = 5;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14094 === 21) {
                          var inst_14078 = state_14093[2];
                          var state_14093__$1 = state_14093;
                          var statearr_14102_14133 = state_14093__$1;
                          statearr_14102_14133[2] = inst_14078;
                          statearr_14102_14133[1] = 18;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14094 === 13) {
                            var state_14093__$1 = state_14093;
                            if (cljs.core.truth_(ret)) {
                              var statearr_14103_14134 = state_14093__$1;
                              statearr_14103_14134[1] = 16;
                            } else {
                              var statearr_14104_14135 = state_14093__$1;
                              statearr_14104_14135[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14094 === 22) {
                              var inst_14075 = state_14093[2];
                              var state_14093__$1 = function() {
                                var statearr_14105 = state_14093;
                                statearr_14105[8] = inst_14075;
                                return statearr_14105;
                              }();
                              var statearr_14106_14136 = state_14093__$1;
                              statearr_14106_14136[2] = v;
                              statearr_14106_14136[1] = 21;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14094 === 6) {
                                var inst_14047 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "found val  ", pubsub.mtemp);
                                var inst_14048 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "putting back   ", pubsub.m);
                                var state_14093__$1 = function() {
                                  var statearr_14107 = state_14093;
                                  statearr_14107[9] = inst_14048;
                                  statearr_14107[10] = inst_14047;
                                  return statearr_14107;
                                }();
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14093__$1, 9, pubsub.statesCh, pubsub.m);
                              } else {
                                if (state_val_14094 === 17) {
                                  var state_14093__$1 = state_14093;
                                  if (cljs.core.truth_(v)) {
                                    var statearr_14108_14137 = state_14093__$1;
                                    statearr_14108_14137[1] = 19;
                                  } else {
                                    var statearr_14109_14138 = state_14093__$1;
                                    statearr_14109_14138[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14094 === 3) {
                                    var state_14093__$1 = state_14093;
                                    if (cljs.core.truth_(v)) {
                                      var statearr_14110_14139 = state_14093__$1;
                                      statearr_14110_14139[1] = 6;
                                    } else {
                                      var statearr_14111_14140 = state_14093__$1;
                                      statearr_14111_14140[1] = 7;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14094 === 12) {
                                      var inst_14062 = state_14093[2];
                                      var state_14093__$1 = state_14093;
                                      var statearr_14112_14141 = state_14093__$1;
                                      statearr_14112_14141[2] = inst_14062;
                                      statearr_14112_14141[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14094 === 2) {
                                        var inst_14040 = state_14093[2];
                                        var inst_14041 = pubsub.mtemp = inst_14040;
                                        var inst_14042 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "checking  ", pubsub.mtemp);
                                        var inst_14043 = pubsub.mtemp["typ"];
                                        var inst_14044 = inst_14043 === typ;
                                        var state_14093__$1 = function() {
                                          var statearr_14113 = state_14093;
                                          statearr_14113[11] = inst_14041;
                                          statearr_14113[12] = inst_14042;
                                          return statearr_14113;
                                        }();
                                        if (cljs.core.truth_(inst_14044)) {
                                          var statearr_14114_14142 = state_14093__$1;
                                          statearr_14114_14142[1] = 3;
                                        } else {
                                          var statearr_14115_14143 = state_14093__$1;
                                          statearr_14115_14143[1] = 4;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_14094 === 23) {
                                          var inst_14083 = state_14093[2];
                                          var inst_14084 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "itteration  ", ret);
                                          var inst_14085 = check.call(null, typ, v, ret);
                                          var state_14093__$1 = function() {
                                            var statearr_14116 = state_14093;
                                            statearr_14116[13] = inst_14083;
                                            statearr_14116[14] = inst_14084;
                                            return statearr_14116;
                                          }();
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14093__$1, 24, inst_14085);
                                        } else {
                                          if (state_val_14094 === 19) {
                                            var inst_14073 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "got nul val is ", v);
                                            var state_14093__$1 = function() {
                                              var statearr_14117 = state_14093;
                                              statearr_14117[15] = inst_14073;
                                              return statearr_14117;
                                            }();
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14093__$1, 22, pubsub.statesCh, pubsub.m);
                                          } else {
                                            if (state_val_14094 === 11) {
                                              var inst_14058 = state_14093[2];
                                              var inst_14059 = pubsub.mtemp["msg"];
                                              var inst_14060 = check.call(null, typ, v, inst_14059);
                                              var state_14093__$1 = function() {
                                                var statearr_14118 = state_14093;
                                                statearr_14118[16] = inst_14058;
                                                return statearr_14118;
                                              }();
                                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14093__$1, 12, inst_14060);
                                            } else {
                                              if (state_val_14094 === 9) {
                                                var inst_14050 = state_14093[2];
                                                var inst_14051 = check.call(null, typ, v, v);
                                                var state_14093__$1 = function() {
                                                  var statearr_14119 = state_14093;
                                                  statearr_14119[17] = inst_14050;
                                                  return statearr_14119;
                                                }();
                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14093__$1, 10, inst_14051);
                                              } else {
                                                if (state_val_14094 === 5) {
                                                  var inst_14091 = state_14093[2];
                                                  var state_14093__$1 = state_14093;
                                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14093__$1, inst_14091);
                                                } else {
                                                  if (state_val_14094 === 14) {
                                                    var state_14093__$1 = state_14093;
                                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14093__$1, 23, pubsub.statesCh, pubsub.mtemp);
                                                  } else {
                                                    if (state_val_14094 === 16) {
                                                      var inst_14070 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "ending ", v);
                                                      var state_14093__$1 = function() {
                                                        var statearr_14120 = state_14093;
                                                        statearr_14120[18] = inst_14070;
                                                        return statearr_14120;
                                                      }();
                                                      var statearr_14121_14144 = state_14093__$1;
                                                      statearr_14121_14144[2] = ret;
                                                      statearr_14121_14144[1] = 18;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_14094 === 10) {
                                                        var inst_14053 = state_14093[2];
                                                        var state_14093__$1 = state_14093;
                                                        var statearr_14122_14145 = state_14093__$1;
                                                        statearr_14122_14145[2] = inst_14053;
                                                        statearr_14122_14145[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_14094 === 18) {
                                                          var inst_14080 = state_14093[2];
                                                          var state_14093__$1 = state_14093;
                                                          var statearr_14123_14146 = state_14093__$1;
                                                          statearr_14123_14146[2] = inst_14080;
                                                          statearr_14123_14146[1] = 15;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_14094 === 8) {
                                                            var inst_14064 = state_14093[2];
                                                            var state_14093__$1 = state_14093;
                                                            var statearr_14124_14147 = state_14093__$1;
                                                            statearr_14124_14147[2] = inst_14064;
                                                            statearr_14124_14147[1] = 5;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_14126 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_14126[0] = state_machine__6521__auto__;
              statearr_14126[1] = 1;
              return statearr_14126;
            };
            var state_machine__6521__auto____1 = function(state_14093) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_14093);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_14093) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_14093);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_14127 = f__6565__auto__.call(null);
        statearr_14127[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_14127;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
pubsub.swp = function swp(typ, v) {
  if (cljs.core.truth_(v)) {
    return pubsub.states[typ] = v;
  } else {
    return pubsub.states[typ];
  }
};
pubsub.rr = function() {
  var rr__delegate = function(typ) {
    var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto__) {
            return function(state_14292) {
              var state_val_14293 = state_14292[1];
              if (state_val_14293 === 7) {
                var inst_14254 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "now looking at ", pubsub.mtemp);
                var inst_14255 = 0;
                var state_14292__$1 = function() {
                  var statearr_14294 = state_14292;
                  statearr_14294[5] = inst_14255;
                  statearr_14294[6] = inst_14254;
                  return statearr_14294;
                }();
                var statearr_14295_14322 = state_14292__$1;
                statearr_14295_14322[2] = null;
                statearr_14295_14322[1] = 9;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14293 === 1) {
                  var inst_14235 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve ", typ);
                  var inst_14236 = cljs.core.count.call(null, typ);
                  var inst_14237 = inst_14236 / 2;
                  var inst_14238 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve ", inst_14237);
                  var inst_14241 = {"typ":0};
                  var state_14292__$1 = function() {
                    var statearr_14296 = state_14292;
                    statearr_14296[7] = inst_14238;
                    statearr_14296[8] = inst_14235;
                    return statearr_14296;
                  }();
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14292__$1, 2, pubsub.sendReceiveCh, inst_14241);
                } else {
                  if (state_val_14293 === 4) {
                    var inst_14290 = state_14292[2];
                    var state_14292__$1 = state_14292;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14292__$1, inst_14290);
                  } else {
                    if (state_val_14293 === 15) {
                      var inst_14255 = state_14292[5];
                      var inst_14277 = inst_14255 + 2;
                      var inst_14255__$1 = inst_14277;
                      var state_14292__$1 = function() {
                        var statearr_14297 = state_14292;
                        statearr_14297[5] = inst_14255__$1;
                        return statearr_14297;
                      }();
                      var statearr_14298_14323 = state_14292__$1;
                      statearr_14298_14323[2] = null;
                      statearr_14298_14323[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14293 === 13) {
                        var inst_14283 = state_14292[2];
                        var state_14292__$1 = state_14292;
                        var statearr_14299_14324 = state_14292__$1;
                        statearr_14299_14324[2] = inst_14283;
                        statearr_14299_14324[1] = 10;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14293 === 6) {
                          var inst_14252 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "got null");
                          var state_14292__$1 = function() {
                            var statearr_14300 = state_14292;
                            statearr_14300[9] = inst_14252;
                            return statearr_14300;
                          }();
                          var statearr_14301_14325 = state_14292__$1;
                          statearr_14301_14325[2] = 0;
                          statearr_14301_14325[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14293 === 17) {
                            var inst_14275 = state_14292[2];
                            var state_14292__$1 = state_14292;
                            var statearr_14302_14326 = state_14292__$1;
                            statearr_14302_14326[2] = inst_14275;
                            statearr_14302_14326[1] = 16;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14293 === 3) {
                              var inst_14245 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve in loop");
                              var state_14292__$1 = function() {
                                var statearr_14303 = state_14292;
                                statearr_14303[10] = inst_14245;
                                return statearr_14303;
                              }();
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14292__$1, 5, pubsub.sendReceiveCh);
                            } else {
                              if (state_val_14293 === 12) {
                                var state_14292__$1 = state_14292;
                                var statearr_14304_14327 = state_14292__$1;
                                statearr_14304_14327[2] = null;
                                statearr_14304_14327[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14293 === 2) {
                                  var inst_14243 = state_14292[2];
                                  var state_14292__$1 = function() {
                                    var statearr_14305 = state_14292;
                                    statearr_14305[11] = inst_14243;
                                    return statearr_14305;
                                  }();
                                  var statearr_14306_14328 = state_14292__$1;
                                  statearr_14306_14328[2] = null;
                                  statearr_14306_14328[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14293 === 11) {
                                    var inst_14255 = state_14292[5];
                                    var inst_14260 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "checking ", inst_14255);
                                    var inst_14261 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "got ", pubsub.mtemp);
                                    var inst_14262 = cljs.core.nth.call(null, typ, inst_14255);
                                    var inst_14263 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "looking for ", inst_14262);
                                    var inst_14264 = pubsub.mtemp["typ"];
                                    var inst_14265 = cljs.core.nth.call(null, typ, inst_14255);
                                    var inst_14266 = inst_14264 === inst_14265;
                                    var state_14292__$1 = function() {
                                      var statearr_14307 = state_14292;
                                      statearr_14307[12] = inst_14260;
                                      statearr_14307[13] = inst_14263;
                                      statearr_14307[14] = inst_14261;
                                      return statearr_14307;
                                    }();
                                    if (cljs.core.truth_(inst_14266)) {
                                      var statearr_14308_14329 = state_14292__$1;
                                      statearr_14308_14329[1] = 14;
                                    } else {
                                      var statearr_14309_14330 = state_14292__$1;
                                      statearr_14309_14330[1] = 15;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14293 === 9) {
                                      var inst_14255 = state_14292[5];
                                      var inst_14257 = cljs.core.count.call(null, typ);
                                      var inst_14258 = inst_14255 < inst_14257;
                                      var state_14292__$1 = state_14292;
                                      if (cljs.core.truth_(inst_14258)) {
                                        var statearr_14310_14331 = state_14292__$1;
                                        statearr_14310_14331[1] = 11;
                                      } else {
                                        var statearr_14311_14332 = state_14292__$1;
                                        statearr_14311_14332[1] = 12;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14293 === 5) {
                                        var inst_14247 = state_14292[2];
                                        var inst_14248 = pubsub.mtemp = inst_14247;
                                        var inst_14249 = pubsub.mtemp["typ"];
                                        var inst_14250 = inst_14249 === 0;
                                        var state_14292__$1 = function() {
                                          var statearr_14312 = state_14292;
                                          statearr_14312[15] = inst_14248;
                                          return statearr_14312;
                                        }();
                                        if (cljs.core.truth_(inst_14250)) {
                                          var statearr_14313_14333 = state_14292__$1;
                                          statearr_14313_14333[1] = 6;
                                        } else {
                                          var statearr_14314_14334 = state_14292__$1;
                                          statearr_14314_14334[1] = 7;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_14293 === 14) {
                                          var inst_14255 = state_14292[5];
                                          var inst_14268 = cljs.core.nth.call(null, typ, inst_14255);
                                          var inst_14269 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "found ", inst_14268);
                                          var inst_14270 = inst_14255 + 1;
                                          var inst_14271 = cljs.core.nth.call(null, typ, inst_14270);
                                          var inst_14272 = pubsub.mtemp["msg"];
                                          var inst_14273 = inst_14271.call(null, inst_14272);
                                          var state_14292__$1 = function() {
                                            var statearr_14315 = state_14292;
                                            statearr_14315[16] = inst_14269;
                                            return statearr_14315;
                                          }();
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14292__$1, 17, inst_14273);
                                        } else {
                                          if (state_val_14293 === 16) {
                                            var inst_14280 = state_14292[2];
                                            var state_14292__$1 = state_14292;
                                            var statearr_14316_14335 = state_14292__$1;
                                            statearr_14316_14335[2] = inst_14280;
                                            statearr_14316_14335[1] = 13;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_14293 === 10) {
                                              var inst_14285 = state_14292[2];
                                              var inst_14286 = pubsub.result = inst_14285;
                                              var state_14292__$1 = state_14292;
                                              var statearr_14317_14336 = state_14292__$1;
                                              statearr_14317_14336[2] = inst_14286;
                                              statearr_14317_14336[1] = 8;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_14293 === 8) {
                                                var inst_14288 = state_14292[2];
                                                var state_14292__$1 = state_14292;
                                                var statearr_14318_14337 = state_14292__$1;
                                                statearr_14318_14337[2] = inst_14288;
                                                statearr_14318_14337[1] = 4;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6564__auto__);
          return function(switch__6520__auto__, c__6564__auto__) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_14320 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14320[0] = state_machine__6521__auto__;
                statearr_14320[1] = 1;
                return statearr_14320;
              };
              var state_machine__6521__auto____1 = function(state_14292) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_14292);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_14292) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_14292);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto__);
        }();
        var state__6566__auto__ = function() {
          var statearr_14321 = f__6565__auto__.call(null);
          statearr_14321[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
          return statearr_14321;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto__));
    return c__6564__auto__;
  };
  var rr = function(var_args) {
    var typ = null;
    if (arguments.length > 0) {
      var G__14338__i = 0, G__14338__a = new Array(arguments.length - 0);
      while (G__14338__i < G__14338__a.length) {
        G__14338__a[G__14338__i] = arguments[G__14338__i + 0];
        ++G__14338__i;
      }
      typ = new cljs.core.IndexedSeq(G__14338__a, 0);
    }
    return rr__delegate.call(this, typ);
  };
  rr.cljs$lang$maxFixedArity = 0;
  rr.cljs$lang$applyTo = function(arglist__14339) {
    var typ = cljs.core.seq(arglist__14339);
    return rr__delegate(typ);
  };
  rr.cljs$core$IFn$_invoke$arity$variadic = rr__delegate;
  return rr;
}();
pubsub.rrs = function() {
  var rrs__delegate = function(typ) {
    var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto__) {
            return function(state_14480) {
              var state_val_14481 = state_14480[1];
              if (state_val_14481 === 7) {
                var inst_14475 = state_14480[2];
                var state_14480__$1 = function() {
                  var statearr_14482 = state_14480;
                  statearr_14482[5] = inst_14475;
                  return statearr_14482;
                }();
                var statearr_14483_14510 = state_14480__$1;
                statearr_14483_14510[2] = null;
                statearr_14483_14510[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14481 === 1) {
                  var inst_14425 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve ", typ);
                  var inst_14426 = cljs.core.count.call(null, typ);
                  var inst_14427 = inst_14426 / 2;
                  var inst_14428 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve ", inst_14427);
                  var state_14480__$1 = function() {
                    var statearr_14484 = state_14480;
                    statearr_14484[6] = inst_14425;
                    statearr_14484[7] = inst_14428;
                    return statearr_14484;
                  }();
                  var statearr_14485_14511 = state_14480__$1;
                  statearr_14485_14511[2] = null;
                  statearr_14485_14511[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14481 === 4) {
                    var inst_14432 = state_14480[2];
                    var inst_14433 = pubsub.mtemp = inst_14432;
                    var inst_14434 = pubsub.mtemp["typ"];
                    var inst_14435 = inst_14434 === 0;
                    var state_14480__$1 = function() {
                      var statearr_14486 = state_14480;
                      statearr_14486[8] = inst_14433;
                      return statearr_14486;
                    }();
                    if (cljs.core.truth_(inst_14435)) {
                      var statearr_14487_14512 = state_14480__$1;
                      statearr_14487_14512[1] = 5;
                    } else {
                      var statearr_14488_14513 = state_14480__$1;
                      statearr_14488_14513[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14481 === 15) {
                      var inst_14467 = state_14480[2];
                      var state_14480__$1 = state_14480;
                      var statearr_14489_14514 = state_14480__$1;
                      statearr_14489_14514[2] = inst_14467;
                      statearr_14489_14514[1] = 12;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14481 === 13) {
                        var inst_14440 = state_14480[9];
                        var inst_14453 = cljs.core.nth.call(null, typ, inst_14440);
                        var inst_14454 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "found ", inst_14453);
                        var inst_14455 = inst_14440 + 1;
                        var inst_14456 = cljs.core.nth.call(null, typ, inst_14455);
                        var inst_14457 = pubsub.mtemp["msg"];
                        var inst_14458 = inst_14456.call(null, inst_14457);
                        var inst_14459 = pubsub.ret = inst_14458;
                        var inst_14460 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "return ", pubsub.ret);
                        var state_14480__$1 = function() {
                          var statearr_14490 = state_14480;
                          statearr_14490[10] = inst_14459;
                          statearr_14490[11] = inst_14460;
                          statearr_14490[12] = inst_14454;
                          return statearr_14490;
                        }();
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14480__$1, 16, pubsub.receiveCH, pubsub.ret);
                      } else {
                        if (state_val_14481 === 6) {
                          var inst_14439 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "now looking at ", pubsub.mtemp);
                          var inst_14440 = 0;
                          var state_14480__$1 = function() {
                            var statearr_14491 = state_14480;
                            statearr_14491[13] = inst_14439;
                            statearr_14491[9] = inst_14440;
                            return statearr_14491;
                          }();
                          var statearr_14492_14515 = state_14480__$1;
                          statearr_14492_14515[2] = null;
                          statearr_14492_14515[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14481 === 3) {
                            var inst_14478 = state_14480[2];
                            var state_14480__$1 = state_14480;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14480__$1, inst_14478);
                          } else {
                            if (state_val_14481 === 12) {
                              var inst_14470 = state_14480[2];
                              var state_14480__$1 = state_14480;
                              var statearr_14493_14516 = state_14480__$1;
                              statearr_14493_14516[2] = inst_14470;
                              statearr_14493_14516[1] = 9;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14481 === 2) {
                                var inst_14430 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve in loop");
                                var state_14480__$1 = function() {
                                  var statearr_14494 = state_14480;
                                  statearr_14494[14] = inst_14430;
                                  return statearr_14494;
                                }();
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14480__$1, 4, pubsub.sendReceiveCh);
                              } else {
                                if (state_val_14481 === 11) {
                                  var state_14480__$1 = state_14480;
                                  var statearr_14495_14517 = state_14480__$1;
                                  statearr_14495_14517[2] = null;
                                  statearr_14495_14517[1] = 12;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14481 === 9) {
                                    var inst_14472 = state_14480[2];
                                    var inst_14473 = pubsub.result = inst_14472;
                                    var state_14480__$1 = state_14480;
                                    var statearr_14496_14518 = state_14480__$1;
                                    statearr_14496_14518[2] = inst_14473;
                                    statearr_14496_14518[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14481 === 5) {
                                      var inst_14437 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "got null");
                                      var state_14480__$1 = function() {
                                        var statearr_14497 = state_14480;
                                        statearr_14497[15] = inst_14437;
                                        return statearr_14497;
                                      }();
                                      var statearr_14498_14519 = state_14480__$1;
                                      statearr_14498_14519[2] = 0;
                                      statearr_14498_14519[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14481 === 14) {
                                        var inst_14440 = state_14480[9];
                                        var inst_14464 = inst_14440 + 2;
                                        var inst_14440__$1 = inst_14464;
                                        var state_14480__$1 = function() {
                                          var statearr_14499 = state_14480;
                                          statearr_14499[9] = inst_14440__$1;
                                          return statearr_14499;
                                        }();
                                        var statearr_14500_14520 = state_14480__$1;
                                        statearr_14500_14520[2] = null;
                                        statearr_14500_14520[1] = 8;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_14481 === 16) {
                                          var inst_14462 = state_14480[2];
                                          var state_14480__$1 = state_14480;
                                          var statearr_14501_14521 = state_14480__$1;
                                          statearr_14501_14521[2] = inst_14462;
                                          statearr_14501_14521[1] = 15;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14481 === 10) {
                                            var inst_14440 = state_14480[9];
                                            var inst_14445 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "checking ", inst_14440);
                                            var inst_14446 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "got ", pubsub.mtemp);
                                            var inst_14447 = cljs.core.nth.call(null, typ, inst_14440);
                                            var inst_14448 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "looking for ", inst_14447);
                                            var inst_14449 = pubsub.mtemp["typ"];
                                            var inst_14450 = cljs.core.nth.call(null, typ, inst_14440);
                                            var inst_14451 = inst_14449 === inst_14450;
                                            var state_14480__$1 = function() {
                                              var statearr_14502 = state_14480;
                                              statearr_14502[16] = inst_14446;
                                              statearr_14502[17] = inst_14445;
                                              statearr_14502[18] = inst_14448;
                                              return statearr_14502;
                                            }();
                                            if (cljs.core.truth_(inst_14451)) {
                                              var statearr_14503_14522 = state_14480__$1;
                                              statearr_14503_14522[1] = 13;
                                            } else {
                                              var statearr_14504_14523 = state_14480__$1;
                                              statearr_14504_14523[1] = 14;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_14481 === 8) {
                                              var inst_14440 = state_14480[9];
                                              var inst_14442 = cljs.core.count.call(null, typ);
                                              var inst_14443 = inst_14440 < inst_14442;
                                              var state_14480__$1 = state_14480;
                                              if (cljs.core.truth_(inst_14443)) {
                                                var statearr_14505_14524 = state_14480__$1;
                                                statearr_14505_14524[1] = 10;
                                              } else {
                                                var statearr_14506_14525 = state_14480__$1;
                                                statearr_14506_14525[1] = 11;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6564__auto__);
          return function(switch__6520__auto__, c__6564__auto__) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_14508 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14508[0] = state_machine__6521__auto__;
                statearr_14508[1] = 1;
                return statearr_14508;
              };
              var state_machine__6521__auto____1 = function(state_14480) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_14480);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_14480) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_14480);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto__);
        }();
        var state__6566__auto__ = function() {
          var statearr_14509 = f__6565__auto__.call(null);
          statearr_14509[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
          return statearr_14509;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto__));
    return c__6564__auto__;
  };
  var rrs = function(var_args) {
    var typ = null;
    if (arguments.length > 0) {
      var G__14526__i = 0, G__14526__a = new Array(arguments.length - 0);
      while (G__14526__i < G__14526__a.length) {
        G__14526__a[G__14526__i] = arguments[G__14526__i + 0];
        ++G__14526__i;
      }
      typ = new cljs.core.IndexedSeq(G__14526__a, 0);
    }
    return rrs__delegate.call(this, typ);
  };
  rrs.cljs$lang$maxFixedArity = 0;
  rrs.cljs$lang$applyTo = function(arglist__14527) {
    var typ = cljs.core.seq(arglist__14527);
    return rrs__delegate(typ);
  };
  rrs.cljs$core$IFn$_invoke$arity$variadic = rrs__delegate;
  return rrs;
}();
pubsub.rrsa = function() {
  var rrsa__delegate = function(rch, sch, typ) {
    var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto__) {
            return function(state_14679) {
              var state_val_14680 = state_14679[1];
              if (state_val_14680 === 7) {
                var inst_14674 = state_14679[2];
                var state_14679__$1 = function() {
                  var statearr_14681 = state_14679;
                  statearr_14681[5] = inst_14674;
                  return statearr_14681;
                }();
                var statearr_14682_14710 = state_14679__$1;
                statearr_14682_14710[2] = null;
                statearr_14682_14710[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14680 === 1) {
                  var inst_14619 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve ", typ);
                  var inst_14620 = cljs.core.count.call(null, typ);
                  var inst_14621 = inst_14620 / 2;
                  var inst_14622 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve ", inst_14621);
                  var state_14679__$1 = function() {
                    var statearr_14683 = state_14679;
                    statearr_14683[6] = inst_14622;
                    statearr_14683[7] = inst_14619;
                    return statearr_14683;
                  }();
                  var statearr_14684_14711 = state_14679__$1;
                  statearr_14684_14711[2] = null;
                  statearr_14684_14711[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14680 === 4) {
                    var inst_14626 = state_14679[2];
                    var inst_14627 = pubsub.mtemp = inst_14626;
                    var inst_14628 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve in loop", pubsub.mtemp);
                    var inst_14629 = pubsub.mtemp["typ"];
                    var inst_14630 = inst_14629 === 0;
                    var state_14679__$1 = function() {
                      var statearr_14685 = state_14679;
                      statearr_14685[8] = inst_14627;
                      statearr_14685[9] = inst_14628;
                      return statearr_14685;
                    }();
                    if (cljs.core.truth_(inst_14630)) {
                      var statearr_14686_14712 = state_14679__$1;
                      statearr_14686_14712[1] = 5;
                    } else {
                      var statearr_14687_14713 = state_14679__$1;
                      statearr_14687_14713[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14680 === 15) {
                      var inst_14666 = state_14679[2];
                      var state_14679__$1 = state_14679;
                      var statearr_14688_14714 = state_14679__$1;
                      statearr_14688_14714[2] = inst_14666;
                      statearr_14688_14714[1] = 12;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14680 === 13) {
                        var inst_14635 = state_14679[10];
                        var inst_14648 = cljs.core.nth.call(null, typ, inst_14635);
                        var inst_14649 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "found ", inst_14648);
                        var inst_14650 = pubsub.mtemp["msg"];
                        var inst_14651 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "args ", inst_14650);
                        var inst_14652 = inst_14635 + 1;
                        var inst_14653 = cljs.core.nth.call(null, typ, inst_14652);
                        var inst_14654 = pubsub.mtemp["msg"];
                        var inst_14655 = cljs.core.apply.call(null, inst_14653, inst_14654);
                        var state_14679__$1 = function() {
                          var statearr_14689 = state_14679;
                          statearr_14689[11] = inst_14649;
                          statearr_14689[12] = inst_14651;
                          return statearr_14689;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14679__$1, 16, inst_14655);
                      } else {
                        if (state_val_14680 === 6) {
                          var inst_14634 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "now looking at ", pubsub.mtemp);
                          var inst_14635 = 0;
                          var state_14679__$1 = function() {
                            var statearr_14690 = state_14679;
                            statearr_14690[10] = inst_14635;
                            statearr_14690[13] = inst_14634;
                            return statearr_14690;
                          }();
                          var statearr_14691_14715 = state_14679__$1;
                          statearr_14691_14715[2] = null;
                          statearr_14691_14715[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14680 === 17) {
                            var inst_14661 = state_14679[2];
                            var state_14679__$1 = state_14679;
                            var statearr_14692_14716 = state_14679__$1;
                            statearr_14692_14716[2] = inst_14661;
                            statearr_14692_14716[1] = 15;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14680 === 3) {
                              var inst_14677 = state_14679[2];
                              var state_14679__$1 = state_14679;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14679__$1, inst_14677);
                            } else {
                              if (state_val_14680 === 12) {
                                var inst_14669 = state_14679[2];
                                var state_14679__$1 = state_14679;
                                var statearr_14693_14717 = state_14679__$1;
                                statearr_14693_14717[2] = inst_14669;
                                statearr_14693_14717[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14680 === 2) {
                                  var inst_14624 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve in loop");
                                  var state_14679__$1 = function() {
                                    var statearr_14694 = state_14679;
                                    statearr_14694[14] = inst_14624;
                                    return statearr_14694;
                                  }();
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14679__$1, 4, sch);
                                } else {
                                  if (state_val_14680 === 11) {
                                    var state_14679__$1 = state_14679;
                                    var statearr_14695_14718 = state_14679__$1;
                                    statearr_14695_14718[2] = null;
                                    statearr_14695_14718[1] = 12;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14680 === 9) {
                                      var inst_14671 = state_14679[2];
                                      var inst_14672 = pubsub.result = inst_14671;
                                      var state_14679__$1 = state_14679;
                                      var statearr_14696_14719 = state_14679__$1;
                                      statearr_14696_14719[2] = inst_14672;
                                      statearr_14696_14719[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14680 === 5) {
                                        var inst_14632 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "got null");
                                        var state_14679__$1 = function() {
                                          var statearr_14697 = state_14679;
                                          statearr_14697[15] = inst_14632;
                                          return statearr_14697;
                                        }();
                                        var statearr_14698_14720 = state_14679__$1;
                                        statearr_14698_14720[2] = 0;
                                        statearr_14698_14720[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_14680 === 14) {
                                          var inst_14635 = state_14679[10];
                                          var inst_14663 = inst_14635 + 2;
                                          var inst_14635__$1 = inst_14663;
                                          var state_14679__$1 = function() {
                                            var statearr_14699 = state_14679;
                                            statearr_14699[10] = inst_14635__$1;
                                            return statearr_14699;
                                          }();
                                          var statearr_14700_14721 = state_14679__$1;
                                          statearr_14700_14721[2] = null;
                                          statearr_14700_14721[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14680 === 16) {
                                            var inst_14657 = state_14679[2];
                                            var inst_14658 = pubsub.ret = inst_14657;
                                            var inst_14659 = logger.og.call(null, new cljs.core.Keyword(null, "receive1", "receive1", -1698206131), "return ", pubsub.ret);
                                            var state_14679__$1 = function() {
                                              var statearr_14701 = state_14679;
                                              statearr_14701[16] = inst_14659;
                                              statearr_14701[17] = inst_14658;
                                              return statearr_14701;
                                            }();
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14679__$1, 17, rch, pubsub.ret);
                                          } else {
                                            if (state_val_14680 === 10) {
                                              var inst_14635 = state_14679[10];
                                              var inst_14640 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "checking ", inst_14635);
                                              var inst_14641 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "got ", pubsub.mtemp);
                                              var inst_14642 = cljs.core.nth.call(null, typ, inst_14635);
                                              var inst_14643 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "looking for ", inst_14642);
                                              var inst_14644 = pubsub.mtemp["typ"];
                                              var inst_14645 = cljs.core.nth.call(null, typ, inst_14635);
                                              var inst_14646 = inst_14644 === inst_14645;
                                              var state_14679__$1 = function() {
                                                var statearr_14702 = state_14679;
                                                statearr_14702[18] = inst_14643;
                                                statearr_14702[19] = inst_14641;
                                                statearr_14702[20] = inst_14640;
                                                return statearr_14702;
                                              }();
                                              if (cljs.core.truth_(inst_14646)) {
                                                var statearr_14703_14722 = state_14679__$1;
                                                statearr_14703_14722[1] = 13;
                                              } else {
                                                var statearr_14704_14723 = state_14679__$1;
                                                statearr_14704_14723[1] = 14;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_14680 === 8) {
                                                var inst_14635 = state_14679[10];
                                                var inst_14637 = cljs.core.count.call(null, typ);
                                                var inst_14638 = inst_14635 < inst_14637;
                                                var state_14679__$1 = state_14679;
                                                if (cljs.core.truth_(inst_14638)) {
                                                  var statearr_14705_14724 = state_14679__$1;
                                                  statearr_14705_14724[1] = 10;
                                                } else {
                                                  var statearr_14706_14725 = state_14679__$1;
                                                  statearr_14706_14725[1] = 11;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6564__auto__);
          return function(switch__6520__auto__, c__6564__auto__) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_14708 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14708[0] = state_machine__6521__auto__;
                statearr_14708[1] = 1;
                return statearr_14708;
              };
              var state_machine__6521__auto____1 = function(state_14679) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_14679);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_14679) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_14679);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto__);
        }();
        var state__6566__auto__ = function() {
          var statearr_14709 = f__6565__auto__.call(null);
          statearr_14709[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
          return statearr_14709;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto__));
    return c__6564__auto__;
  };
  var rrsa = function(rch, sch, var_args) {
    var typ = null;
    if (arguments.length > 2) {
      var G__14726__i = 0, G__14726__a = new Array(arguments.length - 2);
      while (G__14726__i < G__14726__a.length) {
        G__14726__a[G__14726__i] = arguments[G__14726__i + 2];
        ++G__14726__i;
      }
      typ = new cljs.core.IndexedSeq(G__14726__a, 0);
    }
    return rrsa__delegate.call(this, rch, sch, typ);
  };
  rrsa.cljs$lang$maxFixedArity = 2;
  rrsa.cljs$lang$applyTo = function(arglist__14727) {
    var rch = cljs.core.first(arglist__14727);
    arglist__14727 = cljs.core.next(arglist__14727);
    var sch = cljs.core.first(arglist__14727);
    var typ = cljs.core.rest(arglist__14727);
    return rrsa__delegate(rch, sch, typ);
  };
  rrsa.cljs$core$IFn$_invoke$arity$variadic = rrsa__delegate;
  return rrsa;
}();
pubsub.s = function s(typ, m) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_14744) {
            var state_val_14745 = state_14744[1];
            if (state_val_14745 === 2) {
              var inst_14742 = state_14744[2];
              var state_14744__$1 = state_14744;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14744__$1, inst_14742);
            } else {
              if (state_val_14745 === 1) {
                var inst_14739 = logger.og.call(null, new cljs.core.Keyword(null, "send", "send", -652151114), typ, m);
                var inst_14740 = pubsub.makeMsg.call(null, typ, m);
                var state_14744__$1 = function() {
                  var statearr_14746 = state_14744;
                  statearr_14746[5] = inst_14739;
                  return statearr_14746;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14744__$1, 2, pubsub.sendReceiveCh, inst_14740);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_14748 = [null, null, null, null, null, null];
              statearr_14748[0] = state_machine__6521__auto__;
              statearr_14748[1] = 1;
              return statearr_14748;
            };
            var state_machine__6521__auto____1 = function(state_14744) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_14744);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_14744) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_14744);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_14749 = f__6565__auto__.call(null);
        statearr_14749[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_14749;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
pubsub.si = function si(typ, m) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_14780) {
            var state_val_14781 = state_14780[1];
            if (state_val_14781 === 3) {
              var inst_14776 = state_14780[2];
              var inst_14777 = pubsub.n = inst_14776;
              var inst_14778 = logger.og.call(null, new cljs.core.Keyword(null, "send", "send", -652151114), "recieved", pubsub.n);
              var state_14780__$1 = function() {
                var statearr_14782 = state_14780;
                statearr_14782[5] = inst_14777;
                return statearr_14782;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14780__$1, inst_14778);
            } else {
              if (state_val_14781 === 2) {
                var inst_14774 = state_14780[2];
                var state_14780__$1 = function() {
                  var statearr_14783 = state_14780;
                  statearr_14783[6] = inst_14774;
                  return statearr_14783;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14780__$1, 3, pubsub.pchannel);
              } else {
                if (state_val_14781 === 1) {
                  var inst_14769 = logger.og.call(null, new cljs.core.Keyword(null, "send", "send", -652151114), typ, m);
                  var inst_14770 = cljs.core.async.chan.call(null);
                  var inst_14771 = pubsub.pchannel = inst_14770;
                  var inst_14772 = pubsub.makeMsg.call(null, typ, m, pubsub.pchannel);
                  var state_14780__$1 = function() {
                    var statearr_14784 = state_14780;
                    statearr_14784[7] = inst_14771;
                    statearr_14784[8] = inst_14769;
                    return statearr_14784;
                  }();
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14780__$1, 2, pubsub.sendReceiveCh, inst_14772);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_14786 = [null, null, null, null, null, null, null, null, null];
              statearr_14786[0] = state_machine__6521__auto__;
              statearr_14786[1] = 1;
              return statearr_14786;
            };
            var state_machine__6521__auto____1 = function(state_14780) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_14780);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_14780) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_14780);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_14787 = f__6565__auto__.call(null);
        statearr_14787[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_14787;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
pubsub.sia = function() {
  var sia__delegate = function(typ, m) {
    var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto__) {
            return function(state_14848) {
              var state_val_14849 = state_14848[1];
              if (state_val_14849 === 6) {
                var inst_14844 = state_14848[2];
                var inst_14845 = pubsub.n = inst_14844;
                var inst_14846 = logger.og.call(null, new cljs.core.Keyword(null, "send", "send", -652151114), "recieved", pubsub.n);
                var state_14848__$1 = function() {
                  var statearr_14850 = state_14848;
                  statearr_14850[5] = inst_14846;
                  statearr_14850[6] = inst_14845;
                  return statearr_14850;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14848__$1, pubsub.n);
              } else {
                if (state_val_14849 === 5) {
                  var inst_14837 = state_14848[2];
                  var inst_14838 = {"typ":typ, "msg":inst_14837};
                  var state_14848__$1 = state_14848;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14848__$1, 2, pubsub.sch, inst_14838);
                } else {
                  if (state_val_14849 === 4) {
                    var inst_14835 = cljs.core.PersistentVector.EMPTY;
                    var state_14848__$1 = state_14848;
                    var statearr_14851_14860 = state_14848__$1;
                    statearr_14851_14860[2] = inst_14835;
                    statearr_14851_14860[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14849 === 3) {
                      var inst_14831 = cljs.core.PersistentVector.EMPTY;
                      var inst_14832 = m.arr;
                      var inst_14833 = cljs.core.into.call(null, inst_14831, inst_14832);
                      var state_14848__$1 = state_14848;
                      var statearr_14852_14861 = state_14848__$1;
                      statearr_14852_14861[2] = inst_14833;
                      statearr_14852_14861[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14849 === 2) {
                        var inst_14840 = state_14848[2];
                        var inst_14841 = routing.routea.call(null, pubsub.pchannel, pubsub.sch);
                        var inst_14842 = logger.og.call(null, new cljs.core.Keyword(null, "send", "send", -652151114), "function returned ", typ);
                        var state_14848__$1 = function() {
                          var statearr_14853 = state_14848;
                          statearr_14853[7] = inst_14840;
                          statearr_14853[8] = inst_14841;
                          statearr_14853[9] = inst_14842;
                          return statearr_14853;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14848__$1, 6, pubsub.pchannel);
                      } else {
                        if (state_val_14849 === 1) {
                          var inst_14824 = cljs.core.async.chan.call(null, 1);
                          var inst_14825 = pubsub.pchannel = inst_14824;
                          var inst_14826 = cljs.core.async.chan.call(null, 1);
                          var inst_14827 = pubsub.sch = inst_14826;
                          var state_14848__$1 = function() {
                            var statearr_14854 = state_14848;
                            statearr_14854[10] = inst_14825;
                            statearr_14854[11] = inst_14827;
                            return statearr_14854;
                          }();
                          if (cljs.core.truth_(m)) {
                            var statearr_14855_14862 = state_14848__$1;
                            statearr_14855_14862[1] = 3;
                          } else {
                            var statearr_14856_14863 = state_14848__$1;
                            statearr_14856_14863[1] = 4;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6564__auto__);
          return function(switch__6520__auto__, c__6564__auto__) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_14858 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14858[0] = state_machine__6521__auto__;
                statearr_14858[1] = 1;
                return statearr_14858;
              };
              var state_machine__6521__auto____1 = function(state_14848) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_14848);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_14848) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_14848);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto__);
        }();
        var state__6566__auto__ = function() {
          var statearr_14859 = f__6565__auto__.call(null);
          statearr_14859[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
          return statearr_14859;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto__));
    return c__6564__auto__;
  };
  var sia = function(typ, var_args) {
    var m = null;
    if (arguments.length > 1) {
      var G__14864__i = 0, G__14864__a = new Array(arguments.length - 1);
      while (G__14864__i < G__14864__a.length) {
        G__14864__a[G__14864__i] = arguments[G__14864__i + 1];
        ++G__14864__i;
      }
      m = new cljs.core.IndexedSeq(G__14864__a, 0);
    }
    return sia__delegate.call(this, typ, m);
  };
  sia.cljs$lang$maxFixedArity = 1;
  sia.cljs$lang$applyTo = function(arglist__14865) {
    var typ = cljs.core.first(arglist__14865);
    var m = cljs.core.rest(arglist__14865);
    return sia__delegate(typ, m);
  };
  sia.cljs$core$IFn$_invoke$arity$variadic = sia__delegate;
  return sia;
}();
goog.provide("intercom");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
cljs.core.enable_console_print_BANG_.call(null);
intercom.intercomState = "start";
intercom.state = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
intercom.inputch = cljs.core.async.chan.call(null);
intercom.outputch = cljs.core.async.chan.call(null);
intercom.statech = cljs.core.async.chan.call(null);
intercom.onMessage = function onMessage(wch, type, data) {
  l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), type + " message in intercom", data);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_11994) {
            var state_val_11995 = state_11994[1];
            if (state_val_11995 === 2) {
              var inst_11992 = state_11994[2];
              var state_11994__$1 = state_11994;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11994__$1, inst_11992);
            } else {
              if (state_val_11995 === 1) {
                var inst_11990 = {"type":type, "data":data, "peer":wch};
                var state_11994__$1 = state_11994;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11994__$1, 2, intercom.inputch, inst_11990);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_11997 = [null, null, null, null, null];
              statearr_11997[0] = state_machine__6521__auto__;
              statearr_11997[1] = 1;
              return statearr_11997;
            };
            var state_machine__6521__auto____1 = function(state_11994) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_11994);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_11994) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_11994);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_11998 = f__6565__auto__.call(null);
        statearr_11998[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_11998;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
intercom.setIntercomState = function setIntercomState(conn, state) {
  return conn.intercomstate = state;
};
intercom.getIntercomState = function getIntercomState(conn) {
  l.og.call(null, new cljs.core.Keyword(null, "getIntercomState", "getIntercomState", -1128989799), "intercom state", conn);
  return conn["intercomstate"];
};
intercom.tostateu = function tostateu(conn, statename) {
  l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "changing state to: ", statename);
  return conn["intercomstate"] = statename;
};
intercom.typeof_QMARK_ = function typeof_QMARK_(message, type) {
  return message.type === type;
};
intercom.is_QMARK_ = function is_QMARK_(state, qstate) {
  return state === qstate;
};
intercom.intercomstatemachine = function intercomstatemachine(conn, message) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_12228) {
            var state_val_12229 = state_12228[1];
            if (state_val_12229 === 7) {
              var inst_12171 = intercom.is_QMARK_.call(null, intercom.state, "grind");
              var state_12228__$1 = state_12228;
              if (inst_12171) {
                var statearr_12230_12279 = state_12228__$1;
                statearr_12230_12279[1] = 13;
              } else {
                var statearr_12231_12280 = state_12228__$1;
                statearr_12231_12280[1] = 14;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12229 === 20) {
                var inst_12183 = intercom.typeof_QMARK_.call(null, message, "getdata");
                var state_12228__$1 = state_12228;
                if (inst_12183) {
                  var statearr_12232_12281 = state_12228__$1;
                  statearr_12232_12281[1] = 22;
                } else {
                  var statearr_12233_12282 = state_12228__$1;
                  statearr_12233_12282[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12229 === 27) {
                  var inst_12213 = state_12228[2];
                  var state_12228__$1 = state_12228;
                  var statearr_12234_12283 = state_12228__$1;
                  statearr_12234_12283[2] = inst_12213;
                  statearr_12234_12283[1] = 24;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12229 === 1) {
                    var inst_12139 = cljs.core.partial.call(null, intercom.tostateu, conn);
                    var inst_12140 = intercom.tostate = inst_12139;
                    var inst_12141 = intercom.getIntercomState.call(null, conn);
                    var inst_12142 = intercom.state = inst_12141;
                    var inst_12143 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "starting loop in intercom");
                    var inst_12144 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "state in intercom ", intercom.state);
                    var inst_12145 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "message in intercom ", message);
                    var inst_12146 = message.data;
                    var inst_12147 = intercom.v = inst_12146;
                    var inst_12148 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "state ", intercom.state);
                    var inst_12149 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "message ", message);
                    var inst_12150 = intercom.is_QMARK_.call(null, intercom.state, "start");
                    var state_12228__$1 = function() {
                      var statearr_12235 = state_12228;
                      statearr_12235[5] = inst_12147;
                      statearr_12235[6] = inst_12148;
                      statearr_12235[7] = inst_12145;
                      statearr_12235[8] = inst_12143;
                      statearr_12235[9] = inst_12142;
                      statearr_12235[10] = inst_12144;
                      statearr_12235[11] = inst_12149;
                      statearr_12235[12] = inst_12140;
                      return statearr_12235;
                    }();
                    if (inst_12150) {
                      var statearr_12236_12284 = state_12228__$1;
                      statearr_12236_12284[1] = 2;
                    } else {
                      var statearr_12237_12285 = state_12228__$1;
                      statearr_12237_12285[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12229 === 24) {
                      var inst_12215 = state_12228[2];
                      var state_12228__$1 = state_12228;
                      var statearr_12238_12286 = state_12228__$1;
                      statearr_12238_12286[2] = inst_12215;
                      statearr_12238_12286[1] = 21;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12229 === 4) {
                        var inst_12226 = state_12228[2];
                        var state_12228__$1 = state_12228;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12228__$1, inst_12226);
                      } else {
                        if (state_val_12229 === 15) {
                          var inst_12222 = state_12228[2];
                          var state_12228__$1 = state_12228;
                          var statearr_12239_12287 = state_12228__$1;
                          statearr_12239_12287[2] = inst_12222;
                          statearr_12239_12287[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12229 === 21) {
                            var inst_12217 = state_12228[2];
                            var state_12228__$1 = state_12228;
                            var statearr_12240_12288 = state_12228__$1;
                            statearr_12240_12288[2] = inst_12217;
                            statearr_12240_12288[1] = 18;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12229 === 31) {
                              var inst_12200 = it.takeData.call(null, message);
                              var inst_12201 = intercom.tostate.call(null, inst_12200);
                              var state_12228__$1 = state_12228;
                              var statearr_12241_12289 = state_12228__$1;
                              statearr_12241_12289[2] = inst_12201;
                              statearr_12241_12289[1] = 33;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12229 === 32) {
                                var state_12228__$1 = state_12228;
                                var statearr_12242_12290 = state_12228__$1;
                                statearr_12242_12290[1] = 34;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12229 === 33) {
                                  var inst_12209 = state_12228[2];
                                  var state_12228__$1 = state_12228;
                                  var statearr_12244_12291 = state_12228__$1;
                                  statearr_12244_12291[2] = inst_12209;
                                  statearr_12244_12291[1] = 30;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12229 === 13) {
                                    var inst_12173 = intercom.typeof_QMARK_.call(null, message, "conn");
                                    var state_12228__$1 = state_12228;
                                    if (inst_12173) {
                                      var statearr_12245_12292 = state_12228__$1;
                                      statearr_12245_12292[1] = 16;
                                    } else {
                                      var statearr_12246_12293 = state_12228__$1;
                                      statearr_12246_12293[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12229 === 22) {
                                      var inst_12185 = it.takeGetData.call(null, message);
                                      var inst_12186 = intercom.tostate.call(null, inst_12185);
                                      var state_12228__$1 = state_12228;
                                      var statearr_12247_12294 = state_12228__$1;
                                      statearr_12247_12294[2] = inst_12186;
                                      statearr_12247_12294[1] = 24;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12229 === 36) {
                                        var inst_12207 = state_12228[2];
                                        var state_12228__$1 = state_12228;
                                        var statearr_12248_12295 = state_12228__$1;
                                        statearr_12248_12295[2] = inst_12207;
                                        statearr_12248_12295[1] = 33;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12229 === 29) {
                                          var inst_12198 = intercom.typeof_QMARK_.call(null, message, "data");
                                          var state_12228__$1 = state_12228;
                                          if (inst_12198) {
                                            var statearr_12249_12296 = state_12228__$1;
                                            statearr_12249_12296[1] = 31;
                                          } else {
                                            var statearr_12250_12297 = state_12228__$1;
                                            statearr_12250_12297[1] = 32;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12229 === 6) {
                                            var inst_12161 = intercom.typeof_QMARK_.call(null, message, "version");
                                            var state_12228__$1 = state_12228;
                                            if (inst_12161) {
                                              var statearr_12251_12298 = state_12228__$1;
                                              statearr_12251_12298[1] = 9;
                                            } else {
                                              var statearr_12252_12299 = state_12228__$1;
                                              statearr_12252_12299[1] = 10;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_12229 === 28) {
                                              var inst_12195 = it.takeTx.call(null, message);
                                              var inst_12196 = intercom.tostate.call(null, inst_12195);
                                              var state_12228__$1 = state_12228;
                                              var statearr_12253_12300 = state_12228__$1;
                                              statearr_12253_12300[2] = inst_12196;
                                              statearr_12253_12300[1] = 30;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_12229 === 25) {
                                                var inst_12190 = it.takeGetTx.call(null, message);
                                                var inst_12191 = intercom.tostate.call(null, inst_12190);
                                                var state_12228__$1 = state_12228;
                                                var statearr_12254_12301 = state_12228__$1;
                                                statearr_12254_12301[2] = inst_12191;
                                                statearr_12254_12301[1] = 27;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_12229 === 34) {
                                                  var inst_12204 = intercom.tostate.call(null, "grind");
                                                  var state_12228__$1 = state_12228;
                                                  var statearr_12255_12302 = state_12228__$1;
                                                  statearr_12255_12302[2] = inst_12204;
                                                  statearr_12255_12302[1] = 36;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_12229 === 17) {
                                                    var inst_12178 = intercom.typeof_QMARK_.call(null, message, "inv");
                                                    var state_12228__$1 = state_12228;
                                                    if (inst_12178) {
                                                      var statearr_12256_12303 = state_12228__$1;
                                                      statearr_12256_12303[1] = 19;
                                                    } else {
                                                      var statearr_12257_12304 = state_12228__$1;
                                                      statearr_12257_12304[1] = 20;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_12229 === 3) {
                                                      var inst_12159 = intercom.is_QMARK_.call(null, intercom.state, "version");
                                                      var state_12228__$1 = state_12228;
                                                      if (inst_12159) {
                                                        var statearr_12258_12305 = state_12228__$1;
                                                        statearr_12258_12305[1] = 6;
                                                      } else {
                                                        var statearr_12259_12306 = state_12228__$1;
                                                        statearr_12259_12306[1] = 7;
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_12229 === 12) {
                                                        var inst_12165 = state_12228[2];
                                                        var inst_12166 = intercom.tostate.call(null, inst_12165);
                                                        var state_12228__$1 = state_12228;
                                                        var statearr_12260_12307 = state_12228__$1;
                                                        statearr_12260_12307[2] = inst_12166;
                                                        statearr_12260_12307[1] = 11;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_12229 === 2) {
                                                          var inst_12152 = it.takeConn.call(null, message);
                                                          var state_12228__$1 = state_12228;
                                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12228__$1, 5, inst_12152);
                                                        } else {
                                                          if (state_val_12229 === 23) {
                                                            var inst_12188 = intercom.typeof_QMARK_.call(null, message, "gettx");
                                                            var state_12228__$1 = state_12228;
                                                            if (inst_12188) {
                                                              var statearr_12261_12308 = state_12228__$1;
                                                              statearr_12261_12308[1] = 25;
                                                            } else {
                                                              var statearr_12262_12309 = state_12228__$1;
                                                              statearr_12262_12309[1] = 26;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_12229 === 35) {
                                                              var state_12228__$1 = state_12228;
                                                              var statearr_12263_12310 = state_12228__$1;
                                                              statearr_12263_12310[2] = null;
                                                              statearr_12263_12310[1] = 36;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_12229 === 19) {
                                                                var inst_12180 = it.takeInv.call(null, message);
                                                                var inst_12181 = intercom.tostate.call(null, inst_12180);
                                                                var state_12228__$1 = state_12228;
                                                                var statearr_12264_12311 = state_12228__$1;
                                                                statearr_12264_12311[2] = inst_12181;
                                                                statearr_12264_12311[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_12229 === 11) {
                                                                  var inst_12169 = state_12228[2];
                                                                  var state_12228__$1 = state_12228;
                                                                  var statearr_12265_12312 = state_12228__$1;
                                                                  statearr_12265_12312[2] = inst_12169;
                                                                  statearr_12265_12312[1] = 8;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_12229 === 9) {
                                                                    var inst_12163 = it.takeVersion.call(null, message);
                                                                    var state_12228__$1 = state_12228;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12228__$1, 12, inst_12163);
                                                                  } else {
                                                                    if (state_val_12229 === 5) {
                                                                      var inst_12154 = state_12228[2];
                                                                      var inst_12155 = intercom.newstate = inst_12154;
                                                                      var inst_12156 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "start -\x3e ", intercom.newstate);
                                                                      var inst_12157 = intercom.tostate.call(null, intercom.newstate);
                                                                      var state_12228__$1 = function() {
                                                                        var statearr_12266 = state_12228;
                                                                        statearr_12266[13] = inst_12156;
                                                                        statearr_12266[14] = inst_12155;
                                                                        return statearr_12266;
                                                                      }();
                                                                      var statearr_12267_12313 = state_12228__$1;
                                                                      statearr_12267_12313[2] = inst_12157;
                                                                      statearr_12267_12313[1] = 4;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_12229 === 14) {
                                                                        var state_12228__$1 = state_12228;
                                                                        var statearr_12268_12314 = state_12228__$1;
                                                                        statearr_12268_12314[2] = null;
                                                                        statearr_12268_12314[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_12229 === 26) {
                                                                          var inst_12193 = intercom.typeof_QMARK_.call(null, message, "tx");
                                                                          var state_12228__$1 = state_12228;
                                                                          if (inst_12193) {
                                                                            var statearr_12269_12315 = state_12228__$1;
                                                                            statearr_12269_12315[1] = 28;
                                                                          } else {
                                                                            var statearr_12270_12316 = state_12228__$1;
                                                                            statearr_12270_12316[1] = 29;
                                                                          }
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_12229 === 16) {
                                                                            var inst_12175 = it.takeConn.call(null, message);
                                                                            var inst_12176 = intercom.tostate.call(null, inst_12175);
                                                                            var state_12228__$1 = state_12228;
                                                                            var statearr_12271_12317 = state_12228__$1;
                                                                            statearr_12271_12317[2] = inst_12176;
                                                                            statearr_12271_12317[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_12229 === 30) {
                                                                              var inst_12211 = state_12228[2];
                                                                              var state_12228__$1 = state_12228;
                                                                              var statearr_12272_12318 = state_12228__$1;
                                                                              statearr_12272_12318[2] = inst_12211;
                                                                              statearr_12272_12318[1] = 27;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_12229 === 10) {
                                                                                var state_12228__$1 = state_12228;
                                                                                var statearr_12273_12319 = state_12228__$1;
                                                                                statearr_12273_12319[2] = null;
                                                                                statearr_12273_12319[1] = 11;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_12229 === 18) {
                                                                                  var inst_12219 = state_12228[2];
                                                                                  var state_12228__$1 = state_12228;
                                                                                  var statearr_12274_12320 = state_12228__$1;
                                                                                  statearr_12274_12320[2] = inst_12219;
                                                                                  statearr_12274_12320[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_12229 === 8) {
                                                                                    var inst_12224 = state_12228[2];
                                                                                    var state_12228__$1 = state_12228;
                                                                                    var statearr_12275_12321 = state_12228__$1;
                                                                                    statearr_12275_12321[2] = inst_12224;
                                                                                    statearr_12275_12321[1] = 4;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    return null;
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_12277 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12277[0] = state_machine__6521__auto__;
              statearr_12277[1] = 1;
              return statearr_12277;
            };
            var state_machine__6521__auto____1 = function(state_12228) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_12228);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_12228) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_12228);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_12278 = f__6565__auto__.call(null);
        statearr_12278[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_12278;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
goog.provide("blockchain");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
cljs.core.enable_console_print_BANG_.call(null);
blockchain.memPool = [];
blockchain.blockhainInfo = function() {
  var obj18023 = {};
  return obj18023;
}();
blockchain.blockhainInfo.dificulty = 5;
blockchain.addTransactionToMemPool = function addTransactionToMemPool(x) {
  blockchain.memPool.push(x);
  return l.og.call(null, new cljs.core.Keyword(null, "blockchain", "blockchain", -1030570049), "new memPool after adding ", blockchain.memPool);
};
blockchain.removeTransactionFromMemPool = function removeTransactionFromMemPool(x) {
  blockchain.memPool.splice(blockchain.memPool.indexOf(x));
  return l.og.call(null, new cljs.core.Keyword(null, "blockchain", "blockchain", -1030570049), "new memPool after remove ", blockchain.memPool);
};
blockchain.makeBlockHeader = function makeBlockHeader(version, previous, fmroot, timestamp, bits, nonce, txcount) {
  var obj18027 = {"version":1, "heightFromRoot":0, "previous":previous, "merkleRoot":fmroot, "timestamp":timestamp, "bits":bits, "nonce":nonce, "txcount":txcount};
  return obj18027;
};
blockchain.makeTransaction = function makeTransaction() {
  var obj18031 = {"":1};
  return obj18031;
};
blockchain.addTransactionToBlock = function addTransactionToBlock() {
  var obj18035 = {"":1};
  return obj18035;
};
blockchain.prevblk = function prevblk(blockk) {
  blockchain.c.call(null, "log", new cljs.core.Keyword(null, "prevblk", "prevblk", 1731240431), "about to get prev blk ", blockk);
  return blockk.header.previous;
};
blockchain.blockKnown_QMARK_ = function blockKnown_QMARK_(blockk) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_18113) {
            var state_val_18114 = state_18113[1];
            if (state_val_18114 === 7) {
              var inst_18107 = state_18113[2];
              var inst_18108 = blockchain.res = inst_18107;
              var state_18113__$1 = function() {
                var statearr_18115 = state_18113;
                statearr_18115[5] = inst_18108;
                return statearr_18115;
              }();
              var statearr_18116_18136 = state_18113__$1;
              statearr_18116_18136[2] = blockchain.res;
              statearr_18116_18136[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18114 === 1) {
                var state_18113__$1 = state_18113;
                if (cljs.core.truth_(blockk)) {
                  var statearr_18117_18137 = state_18113__$1;
                  statearr_18117_18137[1] = 2;
                } else {
                  var statearr_18118_18138 = state_18113__$1;
                  statearr_18118_18138[1] = 3;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18114 === 4) {
                  var inst_18111 = state_18113[2];
                  var state_18113__$1 = state_18113;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18113__$1, inst_18111);
                } else {
                  if (state_val_18114 === 15) {
                    var inst_18105 = state_18113[2];
                    var state_18113__$1 = state_18113;
                    var statearr_18119_18139 = state_18113__$1;
                    statearr_18119_18139[2] = inst_18105;
                    statearr_18119_18139[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18114 === 13) {
                      var state_18113__$1 = state_18113;
                      var statearr_18120_18140 = state_18113__$1;
                      statearr_18120_18140[2] = true;
                      statearr_18120_18140[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18114 === 6) {
                        var inst_18099 = db.g.call(null, blockk);
                        var state_18113__$1 = state_18113;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18113__$1, 12, inst_18099);
                      } else {
                        if (state_val_18114 === 3) {
                          var state_18113__$1 = state_18113;
                          var statearr_18121_18141 = state_18113__$1;
                          statearr_18121_18141[2] = false;
                          statearr_18121_18141[1] = 4;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18114 === 12) {
                            var inst_18101 = state_18113[2];
                            var state_18113__$1 = state_18113;
                            if (cljs.core.truth_(inst_18101)) {
                              var statearr_18122_18142 = state_18113__$1;
                              statearr_18122_18142[1] = 13;
                            } else {
                              var statearr_18123_18143 = state_18113__$1;
                              statearr_18123_18143[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18114 === 2) {
                              var inst_18087 = l.og.call(null, new cljs.core.Keyword(null, "blockknown", "blockknown", -1662820144), "block known? ", blockk);
                              var inst_18088 = blockk.hash;
                              var state_18113__$1 = function() {
                                var statearr_18124 = state_18113;
                                statearr_18124[6] = inst_18087;
                                return statearr_18124;
                              }();
                              if (cljs.core.truth_(inst_18088)) {
                                var statearr_18125_18144 = state_18113__$1;
                                statearr_18125_18144[1] = 5;
                              } else {
                                var statearr_18126_18145 = state_18113__$1;
                                statearr_18126_18145[1] = 6;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18114 === 11) {
                                var inst_18097 = state_18113[2];
                                var state_18113__$1 = state_18113;
                                var statearr_18127_18146 = state_18113__$1;
                                statearr_18127_18146[2] = inst_18097;
                                statearr_18127_18146[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18114 === 9) {
                                  var state_18113__$1 = state_18113;
                                  var statearr_18128_18147 = state_18113__$1;
                                  statearr_18128_18147[2] = true;
                                  statearr_18128_18147[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18114 === 5) {
                                    var inst_18090 = blockk.hash;
                                    var inst_18091 = db.g.call(null, inst_18090);
                                    var state_18113__$1 = state_18113;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18113__$1, 8, inst_18091);
                                  } else {
                                    if (state_val_18114 === 14) {
                                      var state_18113__$1 = state_18113;
                                      var statearr_18129_18148 = state_18113__$1;
                                      statearr_18129_18148[2] = false;
                                      statearr_18129_18148[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18114 === 10) {
                                        var state_18113__$1 = state_18113;
                                        var statearr_18130_18149 = state_18113__$1;
                                        statearr_18130_18149[2] = false;
                                        statearr_18130_18149[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18114 === 8) {
                                          var inst_18093 = state_18113[2];
                                          var state_18113__$1 = state_18113;
                                          if (cljs.core.truth_(inst_18093)) {
                                            var statearr_18131_18150 = state_18113__$1;
                                            statearr_18131_18150[1] = 9;
                                          } else {
                                            var statearr_18132_18151 = state_18113__$1;
                                            statearr_18132_18151[1] = 10;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_18134 = [null, null, null, null, null, null, null];
              statearr_18134[0] = state_machine__6521__auto__;
              statearr_18134[1] = 1;
              return statearr_18134;
            };
            var state_machine__6521__auto____1 = function(state_18113) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_18113);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_18113) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_18113);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_18135 = f__6565__auto__.call(null);
        statearr_18135[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_18135;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
blockchain.last_QMARK_ = function last_QMARK_(blockk) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_18238) {
            var state_val_18239 = state_18238[1];
            if (state_val_18239 === 7) {
              var state_18238__$1 = state_18238;
              var statearr_18240_18258 = state_18238__$1;
              statearr_18240_18258[2] = true;
              statearr_18240_18258[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18239 === 1) {
                var inst_18205 = l.og.call(null, new cljs.core.Keyword(null, "blockchain", "blockchain", -1030570049), "block known? ", blockk);
                var inst_18206 = db.g.call(null, "last");
                var state_18238__$1 = function() {
                  var statearr_18241 = state_18238;
                  statearr_18241[5] = inst_18205;
                  return statearr_18241;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18238__$1, 2, inst_18206);
              } else {
                if (state_val_18239 === 4) {
                  var inst_18224 = db.g.call(null, blockk);
                  var state_18238__$1 = state_18238;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18238__$1, 10, inst_18224);
                } else {
                  if (state_val_18239 === 13) {
                    var inst_18233 = state_18238[2];
                    var state_18238__$1 = state_18238;
                    var statearr_18242_18259 = state_18238__$1;
                    statearr_18242_18259[2] = inst_18233;
                    statearr_18242_18259[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18239 === 6) {
                      var inst_18215 = state_18238[2];
                      var inst_18216 = inst_18215.hash;
                      var inst_18217 = blockk.hash;
                      var inst_18218 = inst_18216 === inst_18217;
                      var state_18238__$1 = state_18238;
                      if (cljs.core.truth_(inst_18218)) {
                        var statearr_18243_18260 = state_18238__$1;
                        statearr_18243_18260[1] = 7;
                      } else {
                        var statearr_18244_18261 = state_18238__$1;
                        statearr_18244_18261[1] = 8;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18239 === 3) {
                        var inst_18212 = blockk.hash;
                        var inst_18213 = db.g.call(null, inst_18212);
                        var state_18238__$1 = state_18238;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18238__$1, 6, inst_18213);
                      } else {
                        if (state_val_18239 === 12) {
                          var state_18238__$1 = state_18238;
                          var statearr_18245_18262 = state_18238__$1;
                          statearr_18245_18262[2] = false;
                          statearr_18245_18262[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18239 === 2) {
                            var inst_18208 = state_18238[2];
                            var inst_18209 = blockchain.lastt = inst_18208;
                            var inst_18210 = blockk.hash;
                            var state_18238__$1 = function() {
                              var statearr_18246 = state_18238;
                              statearr_18246[6] = inst_18209;
                              return statearr_18246;
                            }();
                            if (cljs.core.truth_(inst_18210)) {
                              var statearr_18247_18263 = state_18238__$1;
                              statearr_18247_18263[1] = 3;
                            } else {
                              var statearr_18248_18264 = state_18238__$1;
                              statearr_18248_18264[1] = 4;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18239 === 11) {
                              var state_18238__$1 = state_18238;
                              var statearr_18249_18265 = state_18238__$1;
                              statearr_18249_18265[2] = true;
                              statearr_18249_18265[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18239 === 9) {
                                var inst_18222 = state_18238[2];
                                var state_18238__$1 = state_18238;
                                var statearr_18250_18266 = state_18238__$1;
                                statearr_18250_18266[2] = inst_18222;
                                statearr_18250_18266[1] = 5;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18239 === 5) {
                                  var inst_18235 = state_18238[2];
                                  var inst_18236 = blockchain.res = inst_18235;
                                  var state_18238__$1 = function() {
                                    var statearr_18251 = state_18238;
                                    statearr_18251[7] = inst_18236;
                                    return statearr_18251;
                                  }();
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18238__$1, blockchain.res);
                                } else {
                                  if (state_val_18239 === 10) {
                                    var inst_18226 = state_18238[2];
                                    var inst_18227 = inst_18226.hash;
                                    var inst_18228 = blockk.hash;
                                    var inst_18229 = inst_18227 === inst_18228;
                                    var state_18238__$1 = state_18238;
                                    if (cljs.core.truth_(inst_18229)) {
                                      var statearr_18252_18267 = state_18238__$1;
                                      statearr_18252_18267[1] = 11;
                                    } else {
                                      var statearr_18253_18268 = state_18238__$1;
                                      statearr_18253_18268[1] = 12;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18239 === 8) {
                                      var state_18238__$1 = state_18238;
                                      var statearr_18254_18269 = state_18238__$1;
                                      statearr_18254_18269[2] = false;
                                      statearr_18254_18269[1] = 9;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_18256 = [null, null, null, null, null, null, null, null];
              statearr_18256[0] = state_machine__6521__auto__;
              statearr_18256[1] = 1;
              return statearr_18256;
            };
            var state_machine__6521__auto____1 = function(state_18238) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_18238);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_18238) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_18238);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_18257 = f__6565__auto__.call(null);
        statearr_18257[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_18257;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
blockchain.heightFromBlock = function heightFromBlock(blockk) {
  l.og.call(null, new cljs.core.Keyword(null, "heightFromBlock", "heightFromBlock", 328660240), "getting height from block ", blockk);
  return blockk.header.heightFromRoot;
};
blockchain.makeBlock = function makeBlock(work) {
  l.og.call(null, new cljs.core.Keyword(null, "makeBlock", "makeBlock", -1854081426), "about to make block ", work);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_18340) {
            var state_val_18341 = state_18340[1];
            if (state_val_18341 === 4) {
              var inst_18335 = state_18340[2];
              var inst_18336 = {"header":blockchain.blockHeader, "hash":inst_18335, "transactions":blockchain.transactions};
              var inst_18337 = blockchain.blockk = inst_18336;
              var inst_18338 = l.og.call(null, new cljs.core.Keyword(null, "makeBlock", "makeBlock", -1854081426), "newly made block ", blockchain.blockk);
              var state_18340__$1 = function() {
                var statearr_18342 = state_18340;
                statearr_18342[5] = inst_18337;
                statearr_18342[6] = inst_18338;
                return statearr_18342;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18340__$1, blockchain.blockk);
            } else {
              if (state_val_18341 === 3) {
                var inst_18316 = state_18340[2];
                var inst_18317 = blockchain.transactions = inst_18316;
                var inst_18318 = blockchain.lastv = blockchain.lastt2;
                var inst_18319 = l.og.call(null, new cljs.core.Keyword(null, "makeBlock", "makeBlock", -1854081426), "last ", blockchain.lastv);
                var inst_18320 = blockchain.lastv.hash;
                var inst_18321 = work.root;
                var inst_18322 = new Date;
                var inst_18323 = inst_18322.getTime();
                var inst_18324 = blockchain.blockhainInfo.dificulty;
                var inst_18325 = work.nonce;
                var inst_18326 = blockchain.transactions.lenght;
                var inst_18327 = blockchain.makeBlockHeader.call(null, "0", inst_18320, inst_18321, inst_18323, inst_18324, inst_18325, inst_18326);
                var inst_18328 = blockchain.blockHeader = inst_18327;
                var inst_18329 = l.og.call(null, new cljs.core.Keyword(null, "makeBlock", "makeBlock", -1854081426), "block header ", blockchain.blockHeader);
                var inst_18330 = l.og.call(null, new cljs.core.Keyword(null, "makeBlock", "makeBlock", -1854081426), "transactions when saving block ", blockchain.transactions);
                var inst_18333 = crypto.bHash.call(null, blockchain.blockHeader);
                var state_18340__$1 = function() {
                  var statearr_18343 = state_18340;
                  statearr_18343[7] = inst_18318;
                  statearr_18343[8] = inst_18330;
                  statearr_18343[9] = inst_18317;
                  statearr_18343[10] = inst_18328;
                  statearr_18343[11] = inst_18329;
                  statearr_18343[12] = inst_18319;
                  return statearr_18343;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18340__$1, 4, inst_18333);
              } else {
                if (state_val_18341 === 2) {
                  var inst_18311 = state_18340[2];
                  var inst_18312 = blockchain.lastt2 = inst_18311;
                  var inst_18313 = l.og.call(null, new cljs.core.Keyword(null, "makeBlock", "makeBlock", -1854081426), "last ", blockchain.lastt2);
                  var inst_18314 = db.g.call(null, "txs");
                  var state_18340__$1 = function() {
                    var statearr_18344 = state_18340;
                    statearr_18344[13] = inst_18312;
                    statearr_18344[14] = inst_18313;
                    return statearr_18344;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18340__$1, 3, inst_18314);
                } else {
                  if (state_val_18341 === 1) {
                    var inst_18309 = db.g.call(null, "last");
                    var state_18340__$1 = state_18340;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18340__$1, 2, inst_18309);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_18346 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_18346[0] = state_machine__6521__auto__;
              statearr_18346[1] = 1;
              return statearr_18346;
            };
            var state_machine__6521__auto____1 = function(state_18340) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_18340);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_18340) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_18340);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_18347 = f__6565__auto__.call(null);
        statearr_18347[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_18347;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
blockchain.saveBlock = function saveBlock(dbase, blockR) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_18394) {
            var state_val_18395 = state_18394[1];
            if (state_val_18395 === 4) {
              var inst_18392 = state_18394[2];
              var state_18394__$1 = state_18394;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18394__$1, inst_18392);
            } else {
              if (state_val_18395 === 3) {
                var inst_18388 = state_18394[2];
                var inst_18389 = "b" + blockchain.heightForBlock;
                var inst_18390 = db.ps.call(null, inst_18389, blockR);
                var state_18394__$1 = function() {
                  var statearr_18396 = state_18394;
                  statearr_18396[5] = inst_18388;
                  return statearr_18396;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18394__$1, 4, inst_18390);
              } else {
                if (state_val_18395 === 2) {
                  var inst_18378 = state_18394[2];
                  var inst_18379 = blockchain.heightForBlock = inst_18378;
                  var inst_18380 = blockR.header;
                  var inst_18381 = inst_18380.heightFromRoot = blockchain.heightForBlock;
                  var inst_18382 = function() {
                    return function(inst_18378, inst_18379, inst_18380, inst_18381, state_val_18395, c__6564__auto__) {
                      return function() {
                        return blockR;
                      };
                    }(inst_18378, inst_18379, inst_18380, inst_18381, state_val_18395, c__6564__auto__);
                  }();
                  var inst_18383 = blockchain.a = inst_18382;
                  var inst_18384 = db.update.call(null, "last", blockchain.a);
                  var inst_18385 = blockR.hash;
                  var inst_18386 = db.ps.call(null, inst_18385, blockR);
                  var state_18394__$1 = function() {
                    var statearr_18397 = state_18394;
                    statearr_18397[6] = inst_18383;
                    statearr_18397[7] = inst_18381;
                    statearr_18397[8] = inst_18379;
                    statearr_18397[9] = inst_18384;
                    return statearr_18397;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18394__$1, 3, inst_18386);
                } else {
                  if (state_val_18395 === 1) {
                    var inst_18375 = l.og.call(null, new cljs.core.Keyword(null, "saveBlock", "saveBlock", 2070754850), "saving ", blockR);
                    var inst_18376 = blockchain.blockchainHeight.call(null, 1);
                    var state_18394__$1 = function() {
                      var statearr_18398 = state_18394;
                      statearr_18398[10] = inst_18375;
                      return statearr_18398;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18394__$1, 2, inst_18376);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_18400 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_18400[0] = state_machine__6521__auto__;
              statearr_18400[1] = 1;
              return statearr_18400;
            };
            var state_machine__6521__auto____1 = function(state_18394) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_18394);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_18394) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_18394);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_18401 = f__6565__auto__.call(null);
        statearr_18401[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_18401;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
blockchain.addToChain = function addToChain(schain) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_18481) {
            var state_val_18482 = state_18481[1];
            if (state_val_18482 === 7) {
              var inst_18453 = state_18481[5];
              var inst_18467 = state_18481[2];
              var inst_18468 = schain.length;
              var inst_18469 = inst_18453 < inst_18468;
              var state_18481__$1 = function() {
                var statearr_18483 = state_18481;
                statearr_18483[6] = inst_18467;
                return statearr_18483;
              }();
              if (cljs.core.truth_(inst_18469)) {
                var statearr_18484_18502 = state_18481__$1;
                statearr_18484_18502[1] = 8;
              } else {
                var statearr_18485_18503 = state_18481__$1;
                statearr_18485_18503[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18482 === 1) {
                var inst_18452 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "about to add to chain");
                var inst_18453 = 0;
                var state_18481__$1 = function() {
                  var statearr_18486 = state_18481;
                  statearr_18486[7] = inst_18452;
                  statearr_18486[5] = inst_18453;
                  return statearr_18486;
                }();
                var statearr_18487_18504 = state_18481__$1;
                statearr_18487_18504[2] = null;
                statearr_18487_18504[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18482 === 4) {
                  var inst_18460 = state_18481[2];
                  var state_18481__$1 = state_18481;
                  if (cljs.core.truth_(inst_18460)) {
                    var statearr_18488_18505 = state_18481__$1;
                    statearr_18488_18505[1] = 5;
                  } else {
                    var statearr_18489_18506 = state_18481__$1;
                    statearr_18489_18506[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18482 === 6) {
                    var inst_18453 = state_18481[5];
                    var inst_18464 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "block is not known ", inst_18453);
                    var inst_18465 = blockchain.saveBlock.call(null, inst_18453);
                    var state_18481__$1 = function() {
                      var statearr_18490 = state_18481;
                      statearr_18490[8] = inst_18464;
                      return statearr_18490;
                    }();
                    var statearr_18491_18507 = state_18481__$1;
                    statearr_18491_18507[2] = inst_18465;
                    statearr_18491_18507[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18482 === 3) {
                      var inst_18477 = state_18481[2];
                      var inst_18478 = cljs.core.last.call(null, schain);
                      var inst_18479 = db.update.call(null, "last", inst_18478);
                      var state_18481__$1 = function() {
                        var statearr_18492 = state_18481;
                        statearr_18492[9] = inst_18477;
                        return statearr_18492;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18481__$1, inst_18479);
                    } else {
                      if (state_val_18482 === 2) {
                        var inst_18453 = state_18481[5];
                        var inst_18455 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "itterating current step ", inst_18453);
                        var inst_18456 = schain[inst_18453];
                        var inst_18457 = blockchain.prevblk.call(null, inst_18456);
                        var inst_18458 = blockchain.blockKnown_QMARK_.call(null, inst_18457);
                        var state_18481__$1 = function() {
                          var statearr_18493 = state_18481;
                          statearr_18493[10] = inst_18455;
                          return statearr_18493;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18481__$1, 4, inst_18458);
                      } else {
                        if (state_val_18482 === 9) {
                          var state_18481__$1 = state_18481;
                          var statearr_18494_18508 = state_18481__$1;
                          statearr_18494_18508[2] = null;
                          statearr_18494_18508[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18482 === 5) {
                            var inst_18453 = state_18481[5];
                            var inst_18462 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "block is known ", inst_18453);
                            var state_18481__$1 = state_18481;
                            var statearr_18495_18509 = state_18481__$1;
                            statearr_18495_18509[2] = inst_18462;
                            statearr_18495_18509[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18482 === 10) {
                              var inst_18475 = state_18481[2];
                              var state_18481__$1 = state_18481;
                              var statearr_18496_18510 = state_18481__$1;
                              statearr_18496_18510[2] = inst_18475;
                              statearr_18496_18510[1] = 3;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18482 === 8) {
                                var inst_18453 = state_18481[5];
                                var inst_18471 = inst_18453 + 1;
                                var inst_18453__$1 = inst_18471;
                                var state_18481__$1 = function() {
                                  var statearr_18497 = state_18481;
                                  statearr_18497[5] = inst_18453__$1;
                                  return statearr_18497;
                                }();
                                var statearr_18498_18511 = state_18481__$1;
                                statearr_18498_18511[2] = null;
                                statearr_18498_18511[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_18500 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_18500[0] = state_machine__6521__auto__;
              statearr_18500[1] = 1;
              return statearr_18500;
            };
            var state_machine__6521__auto____1 = function(state_18481) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_18481);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_18481) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_18481);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_18501 = f__6565__auto__.call(null);
        statearr_18501[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_18501;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
blockchain.blockchainHeight = function blockchainHeight(x) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_18550) {
            var state_val_18551 = state_18550[1];
            if (state_val_18551 === 6) {
              var inst_18545 = state_18550[2];
              var state_18550__$1 = state_18550;
              var statearr_18552_18560 = state_18550__$1;
              statearr_18552_18560[2] = inst_18545;
              statearr_18552_18560[1] = 5;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18551 === 5) {
                var inst_18548 = state_18550[2];
                var state_18550__$1 = state_18550;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18550__$1, inst_18548);
              } else {
                if (state_val_18551 === 4) {
                  var state_18550__$1 = state_18550;
                  var statearr_18553_18561 = state_18550__$1;
                  statearr_18553_18561[2] = blockchain.hght;
                  statearr_18553_18561[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18551 === 3) {
                    var inst_18542 = function() {
                      return function(state_val_18551, c__6564__auto__) {
                        return function(v) {
                          l.og.call(null, new cljs.core.Keyword(null, "height", "height", 1025178622), "prev height ", v);
                          l.og.call(null, new cljs.core.Keyword(null, "height", "height", 1025178622), "to add  ", x);
                          l.og.call(null, new cljs.core.Keyword(null, "height", "height", 1025178622), "after addition  ", v + x);
                          return v + x;
                        };
                      }(state_val_18551, c__6564__auto__);
                    }();
                    var inst_18543 = db.update.call(null, "height", inst_18542);
                    var state_18550__$1 = state_18550;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18550__$1, 6, inst_18543);
                  } else {
                    if (state_val_18551 === 2) {
                      var inst_18538 = state_18550[2];
                      var inst_18539 = blockchain.hght = inst_18538;
                      var inst_18540 = l.og.call(null, new cljs.core.Keyword(null, "blockchainHeight", "blockchainHeight", -607390728), "blockchain height ", blockchain.hght);
                      var state_18550__$1 = function() {
                        var statearr_18554 = state_18550;
                        statearr_18554[5] = inst_18540;
                        statearr_18554[6] = inst_18539;
                        return statearr_18554;
                      }();
                      if (cljs.core.truth_(x)) {
                        var statearr_18555_18562 = state_18550__$1;
                        statearr_18555_18562[1] = 3;
                      } else {
                        var statearr_18556_18563 = state_18550__$1;
                        statearr_18556_18563[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18551 === 1) {
                        var inst_18536 = db.g.call(null, "height");
                        var state_18550__$1 = state_18550;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18550__$1, 2, inst_18536);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_18558 = [null, null, null, null, null, null, null];
              statearr_18558[0] = state_machine__6521__auto__;
              statearr_18558[1] = 1;
              return statearr_18558;
            };
            var state_machine__6521__auto____1 = function(state_18550) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_18550);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_18550) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_18550);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_18559 = f__6565__auto__.call(null);
        statearr_18559[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_18559;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
blockchain.popA = function popA(a) {
  return a.splice(0, 1);
};
blockchain.log2 = function log2(n) {
  return Math.log.call(null, n) / Math.log.call(null, 2);
};
goog.provide("reagent.interop");
goog.require("cljs.core");
reagent.interop.fvars = {};
goog.provide("reagent.debug");
goog.require("cljs.core");
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__27569 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__27570 = cljs.core.next.call(null, coll__$1);
        sb = G__27569;
        coll__$1 = G__27570;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__27571 = sb;
        var G__27572 = coll__$2;
        sb = G__27571;
        coll__$1 = G__27572;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__27573 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__27573;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__27577 = cljs.core._EQ_;
    var expr__27578 = limit;
    if (cljs.core.truth_(pred__27577.call(null, 1, expr__27578))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__27577.call(null, 2, expr__27578))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__27580 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__27581 = limit__$1 - 1;
            var G__27582 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__27580;
            limit__$1 = G__27581;
            parts = G__27582;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__27583 = index - 1;
        index = G__27583;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___27584 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___27584)) {
        var replacement_27585 = temp__4124__auto___27584;
        buffer.append([cljs.core.str(replacement_27585)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__27586 = index + 1;
      index = G__27586;
      continue;
    }
    break;
  }
};
goog.provide("reagent.impl.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("reagent.interop");
goog.require("reagent.debug");
reagent.impl.util.is_client = typeof window !== "undefined" && !(window["document"] == null);
reagent.impl.util.extract_props = function extract_props(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  if (cljs.core.map_QMARK_.call(null, p)) {
    return p;
  } else {
    return null;
  }
};
reagent.impl.util.extract_children = function extract_children(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  var first_child = p == null || cljs.core.map_QMARK_.call(null, p) ? 2 : 1;
  if (cljs.core.count.call(null, v) > first_child) {
    return cljs.core.subvec.call(null, v, first_child);
  } else {
    return null;
  }
};
reagent.impl.util.get_argv = function get_argv(c) {
  return c["props"]["argv"];
};
reagent.impl.util.get_props = function get_props(c) {
  return reagent.impl.util.extract_props.call(null, c["props"]["argv"]);
};
reagent.impl.util.get_children = function get_children(c) {
  return reagent.impl.util.extract_children.call(null, c["props"]["argv"]);
};
reagent.impl.util.reagent_component_QMARK_ = function reagent_component_QMARK_(c) {
  return!(c["props"]["argv"] == null);
};
reagent.impl.util.cached_react_class = function cached_react_class(c) {
  return c["cljsReactClass"];
};
reagent.impl.util.cache_react_class = function cache_react_class(c, constructor) {
  return c["cljsReactClass"] = constructor;
};
reagent.impl.util.memoize_1 = function memoize_1(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function(arg) {
      var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), arg);
      if (!(v == null)) {
        return v;
      } else {
        var ret = f.call(null, arg);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, arg, ret);
        return ret;
      }
    };
  }(mem);
};
reagent.impl.util.dont_camel_case = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["aria", null, "data", null], null), null);
reagent.impl.util.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("");
  }
};
reagent.impl.util.dash_to_camel = function dash_to_camel(dashed) {
  if (typeof dashed === "string") {
    return dashed;
  } else {
    var name_str = cljs.core.name.call(null, dashed);
    var vec__27727 = clojure.string.split.call(null, name_str, /-/);
    var start = cljs.core.nth.call(null, vec__27727, 0, null);
    var parts = cljs.core.nthnext.call(null, vec__27727, 1);
    if (cljs.core.truth_(reagent.impl.util.dont_camel_case.call(null, start))) {
      return name_str;
    } else {
      return cljs.core.apply.call(null, cljs.core.str, start, cljs.core.map.call(null, reagent.impl.util.capitalize, parts));
    }
  }
};
reagent.impl.util.partial_ifn = function(f, args, p) {
  this.f = f;
  this.args = args;
  this.p = p;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 6291457;
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f, self__.args], null));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._EQ_.call(null, self__.f, other.f) && cljs.core._EQ_.call(null, self__.args, other.args);
};
reagent.impl.util.partial_ifn.prototype.call = function() {
  var G__27729__delegate = function(self__, a) {
    var self____$1 = this;
    var _ = self____$1;
    var or__3925__auto___27730 = self__.p;
    if (cljs.core.truth_(or__3925__auto___27730)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__27729 = function(self__, var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 1) {
      var G__27731__i = 0, G__27731__a = new Array(arguments.length - 1);
      while (G__27731__i < G__27731__a.length) {
        G__27731__a[G__27731__i] = arguments[G__27731__i + 1];
        ++G__27731__i;
      }
      a = new cljs.core.IndexedSeq(G__27731__a, 0);
    }
    return G__27729__delegate.call(this, self__, a);
  };
  G__27729.cljs$lang$maxFixedArity = 1;
  G__27729.cljs$lang$applyTo = function(arglist__27732) {
    var self__ = cljs.core.first(arglist__27732);
    var a = cljs.core.rest(arglist__27732);
    return G__27729__delegate(self__, a);
  };
  G__27729.cljs$core$IFn$_invoke$arity$variadic = G__27729__delegate;
  return G__27729;
}();
reagent.impl.util.partial_ifn.prototype.apply = function(self__, args27728) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args27728)));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
  var G__27733__delegate = function(a) {
    var _ = this;
    var or__3925__auto___27734 = self__.p;
    if (cljs.core.truth_(or__3925__auto___27734)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__27733 = function(var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 0) {
      var G__27735__i = 0, G__27735__a = new Array(arguments.length - 0);
      while (G__27735__i < G__27735__a.length) {
        G__27735__a[G__27735__i] = arguments[G__27735__i + 0];
        ++G__27735__i;
      }
      a = new cljs.core.IndexedSeq(G__27735__a, 0);
    }
    return G__27733__delegate.call(this, a);
  };
  G__27733.cljs$lang$maxFixedArity = 0;
  G__27733.cljs$lang$applyTo = function(arglist__27736) {
    var a = cljs.core.seq(arglist__27736);
    return G__27733__delegate(a);
  };
  G__27733.cljs$core$IFn$_invoke$arity$variadic = G__27733__delegate;
  return G__27733;
}();
reagent.impl.util.partial_ifn.cljs$lang$type = true;
reagent.impl.util.partial_ifn.cljs$lang$ctorStr = "reagent.impl.util/partial-ifn";
reagent.impl.util.partial_ifn.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "reagent.impl.util/partial-ifn");
};
reagent.impl.util.__GT_partial_ifn = function __GT_partial_ifn(f, args, p) {
  return new reagent.impl.util.partial_ifn(f, args, p);
};
reagent.impl.util.merge_class = function merge_class(p1, p2) {
  var class$ = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var c1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var c2 = temp__4126__auto____$1;
        return[cljs.core.str(c1), cljs.core.str(" "), cljs.core.str(c2)].join("");
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (class$ == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "class", "class", -2030961996), class$);
  }
};
reagent.impl.util.merge_style = function merge_style(p1, p2) {
  var style = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var s1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var s2 = temp__4126__auto____$1;
        return cljs.core.merge.call(null, s1, s2);
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (style == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "style", "style", -496642736), style);
  }
};
reagent.impl.util.merge_props = function merge_props(p1, p2) {
  if (p1 == null) {
    return p2;
  } else {
    if (cljs.core.map_QMARK_.call(null, p1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "p1", "p1", 703771573, null))))].join(""));
    }
    return reagent.impl.util.merge_style.call(null, p1, reagent.impl.util.merge_class.call(null, p1, cljs.core.merge.call(null, p1, p2)));
  }
};
reagent.impl.util._STAR_always_update_STAR_ = false;
if (typeof reagent.impl.util.roots !== "undefined") {
} else {
  reagent.impl.util.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
}
reagent.impl.util.clear_container = function clear_container(node) {
  try {
    return React["unmountComponentAtNode"](node);
  } catch (e27738) {
    if (e27738 instanceof Object) {
      var e = e27738;
      if (typeof console !== "undefined") {
        console.log("Error unmounting:");
      } else {
      }
      if (typeof console !== "undefined") {
        return console.log(e);
      } else {
        return null;
      }
    } else {
      throw e27738;
    }
  }
};
reagent.impl.util.render_component = function render_component(comp, container, callback) {
  try {
    var _STAR_always_update_STAR_27743 = reagent.impl.util._STAR_always_update_STAR_;
    reagent.impl.util._STAR_always_update_STAR_ = true;
    try {
      return React["render"](comp.call(null), container, function(_STAR_always_update_STAR_27743) {
        return function() {
          var _STAR_always_update_STAR_27744 = reagent.impl.util._STAR_always_update_STAR_;
          reagent.impl.util._STAR_always_update_STAR_ = false;
          try {
            cljs.core.swap_BANG_.call(null, reagent.impl.util.roots, cljs.core.assoc, container, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp, container], null));
            if (cljs.core.some_QMARK_.call(null, callback)) {
              return callback.call(null);
            } else {
              return null;
            }
          } finally {
            reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_27744;
          }
        };
      }(_STAR_always_update_STAR_27743));
    } finally {
      reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_27743;
    }
  } catch (e27742) {
    if (e27742 instanceof Object) {
      var e = e27742;
      reagent.impl.util.clear_container.call(null, container);
      throw e;
    } else {
      throw e27742;
    }
  }
};
reagent.impl.util.re_render_component = function re_render_component(comp, container) {
  return reagent.impl.util.render_component.call(null, comp, container, null);
};
reagent.impl.util.unmount_component_at_node = function unmount_component_at_node(container) {
  cljs.core.swap_BANG_.call(null, reagent.impl.util.roots, cljs.core.dissoc, container);
  return React["unmountComponentAtNode"](container);
};
reagent.impl.util.force_update_all = function force_update_all() {
  var seq__27749_27753 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, reagent.impl.util.roots)));
  var chunk__27750_27754 = null;
  var count__27751_27755 = 0;
  var i__27752_27756 = 0;
  while (true) {
    if (i__27752_27756 < count__27751_27755) {
      var v_27757 = cljs.core._nth.call(null, chunk__27750_27754, i__27752_27756);
      cljs.core.apply.call(null, reagent.impl.util.re_render_component, v_27757);
      var G__27758 = seq__27749_27753;
      var G__27759 = chunk__27750_27754;
      var G__27760 = count__27751_27755;
      var G__27761 = i__27752_27756 + 1;
      seq__27749_27753 = G__27758;
      chunk__27750_27754 = G__27759;
      count__27751_27755 = G__27760;
      i__27752_27756 = G__27761;
      continue;
    } else {
      var temp__4126__auto___27762 = cljs.core.seq.call(null, seq__27749_27753);
      if (temp__4126__auto___27762) {
        var seq__27749_27763__$1 = temp__4126__auto___27762;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27749_27763__$1)) {
          var c__4712__auto___27764 = cljs.core.chunk_first.call(null, seq__27749_27763__$1);
          var G__27765 = cljs.core.chunk_rest.call(null, seq__27749_27763__$1);
          var G__27766 = c__4712__auto___27764;
          var G__27767 = cljs.core.count.call(null, c__4712__auto___27764);
          var G__27768 = 0;
          seq__27749_27753 = G__27765;
          chunk__27750_27754 = G__27766;
          count__27751_27755 = G__27767;
          i__27752_27756 = G__27768;
          continue;
        } else {
          var v_27769 = cljs.core.first.call(null, seq__27749_27763__$1);
          cljs.core.apply.call(null, reagent.impl.util.re_render_component, v_27769);
          var G__27770 = cljs.core.next.call(null, seq__27749_27763__$1);
          var G__27771 = null;
          var G__27772 = 0;
          var G__27773 = 0;
          seq__27749_27753 = G__27770;
          chunk__27750_27754 = G__27771;
          count__27751_27755 = G__27772;
          i__27752_27756 = G__27773;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return "Updated";
};
reagent.impl.util.Wrapper = function(state, callback, changed) {
  this.state = state;
  this.callback = callback;
  this.changed = changed;
  this.cljs$lang$protocol_mask$partition0$ = 2149613568;
  this.cljs$lang$protocol_mask$partition1$ = 114688;
};
reagent.impl.util.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  cljs.core._write.call(null, writer, "#\x3cwrap: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.impl.util.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof reagent.impl.util.Wrapper && cljs.core.not.call(null, self__.changed) && cljs.core.not.call(null, other.changed) && cljs.core._EQ_.call(null, self__.state, other.state) && cljs.core._EQ_.call(null, self__.callback, other.callback);
};
reagent.impl.util.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.impl.util.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.impl.util.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.impl.util.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.impl.util.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(this$, newval) {
  var self__ = this;
  var this$__$1 = this;
  self__.changed = true;
  self__.state = newval;
  self__.callback.call(null, newval);
  return self__.state;
};
reagent.impl.util.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.state;
};
reagent.impl.util.Wrapper.cljs$lang$type = true;
reagent.impl.util.Wrapper.cljs$lang$ctorStr = "reagent.impl.util/Wrapper";
reagent.impl.util.Wrapper.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "reagent.impl.util/Wrapper");
};
reagent.impl.util.__GT_Wrapper = function __GT_Wrapper(state, callback, changed) {
  return new reagent.impl.util.Wrapper(state, callback, changed);
};
reagent.impl.util.make_wrapper = function make_wrapper(value, callback_fn, args) {
  return new reagent.impl.util.Wrapper(value, new reagent.impl.util.partial_ifn(callback_fn, args, null), false);
};
goog.provide("reagent.ratom");
goog.require("cljs.core");
goog.require("reagent.impl.util");
if (typeof reagent.ratom.debug !== "undefined") {
} else {
  reagent.ratom.debug = false;
}
if (typeof reagent.ratom._running !== "undefined") {
} else {
  reagent.ratom._running = cljs.core.atom.call(null, 0);
}
reagent.ratom.running = function running() {
  return cljs.core.deref.call(null, reagent.ratom._running);
};
reagent.ratom.capture_derefed = function capture_derefed(f, obj) {
  obj.cljsCaptured = null;
  var _STAR_ratom_context_STAR_27624 = reagent.ratom._STAR_ratom_context_STAR_;
  reagent.ratom._STAR_ratom_context_STAR_ = obj;
  try {
    return f.call(null);
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_27624;
  }
};
reagent.ratom.captured = function captured(obj) {
  var c = obj.cljsCaptured;
  obj.cljsCaptured = null;
  return c;
};
reagent.ratom.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  var obj = reagent.ratom._STAR_ratom_context_STAR_;
  if (obj == null) {
    return null;
  } else {
    var captured = obj.cljsCaptured;
    return obj.cljsCaptured = cljs.core.conj.call(null, captured == null ? cljs.core.PersistentHashSet.EMPTY : captured, derefable);
  }
};
reagent.ratom.RAtom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f) {
      f.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  if (self__.validator == null) {
  } else {
    if (cljs.core.truth_(self__.validator.call(null, new_value))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null))))].join(""));
    }
  }
  var old_value = self__.state;
  self__.state = new_value;
  if (self__.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, a__$1, old_value, new_value);
  }
  return new_value;
};
reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
  return self__.state;
};
reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.RAtom.cljs$lang$type = true;
reagent.ratom.RAtom.cljs$lang$ctorStr = "reagent.ratom/RAtom";
reagent.ratom.RAtom.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "reagent.ratom/RAtom");
};
reagent.ratom.__GT_RAtom = function __GT_RAtom(state, meta, validator, watches) {
  return new reagent.ratom.RAtom(state, meta, validator, watches);
};
reagent.ratom.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new reagent.ratom.RAtom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__27628__delegate = function(x, p__27625) {
      var map__27627 = p__27625;
      var map__27627__$1 = cljs.core.seq_QMARK_.call(null, map__27627) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27627) : map__27627;
      var validator = cljs.core.get.call(null, map__27627__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__27627__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new reagent.ratom.RAtom(x, meta, validator, null);
    };
    var G__27628 = function(x, var_args) {
      var p__27625 = null;
      if (arguments.length > 1) {
        var G__27629__i = 0, G__27629__a = new Array(arguments.length - 1);
        while (G__27629__i < G__27629__a.length) {
          G__27629__a[G__27629__i] = arguments[G__27629__i + 1];
          ++G__27629__i;
        }
        p__27625 = new cljs.core.IndexedSeq(G__27629__a, 0);
      }
      return G__27628__delegate.call(this, x, p__27625);
    };
    G__27628.cljs$lang$maxFixedArity = 1;
    G__27628.cljs$lang$applyTo = function(arglist__27630) {
      var x = cljs.core.first(arglist__27630);
      var p__27625 = cljs.core.rest(arglist__27630);
      return G__27628__delegate(x, p__27625);
    };
    G__27628.cljs$core$IFn$_invoke$arity$variadic = G__27628__delegate;
    return G__27628;
  }();
  atom = function(x, var_args) {
    var p__27625 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__27631 = null;
        if (arguments.length > 1) {
          var G__27632__i = 0, G__27632__a = new Array(arguments.length - 1);
          while (G__27632__i < G__27632__a.length) {
            G__27632__a[G__27632__i] = arguments[G__27632__i + 1];
            ++G__27632__i;
          }
          G__27631 = new cljs.core.IndexedSeq(G__27632__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__27631);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
reagent.ratom.peek_at = function peek_at(a, path) {
  var _STAR_ratom_context_STAR_27634 = reagent.ratom._STAR_ratom_context_STAR_;
  reagent.ratom._STAR_ratom_context_STAR_ = null;
  try {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, a), path);
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_27634;
  }
};
reagent.ratom.RCursor = function(path, ratom, setf, reaction) {
  this.path = path;
  this.ratom = ratom;
  this.setf = setf;
  this.reaction = reaction;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom, self__.path, self__.setf], null));
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._notify_watches.call(null, self__.ratom, oldval, newval);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._add_watch.call(null, self__.ratom, key, f);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._remove_watch.call(null, self__.ratom, key);
};
reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cCursor: ");
  cljs.core.pr_writer.call(null, self__.path, writer, opts);
  cljs.core._write.call(null, writer, " ");
  cljs.core.pr_writer.call(null, self__.ratom, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, reagent.ratom.peek_at.call(null, self__.ratom, self__.path)));
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, reagent.ratom.peek_at.call(null, self__.ratom, self__.path), x));
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, reagent.ratom.peek_at.call(null, self__.ratom, self__.path), x, y));
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, reagent.ratom.peek_at.call(null, self__.ratom, self__.path), x, y, more));
};
reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  if (self__.setf == null) {
    return cljs.core.swap_BANG_.call(null, self__.ratom, cljs.core.assoc_in, self__.path, new_value);
  } else {
    return self__.setf.call(null, new_value);
  }
};
reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (reagent.ratom._STAR_ratom_context_STAR_ == null) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.ratom), self__.path);
  } else {
    if (self__.reaction == null) {
      self__.reaction = reagent.ratom.make_reaction.call(null, function(this$__$1) {
        return function() {
          return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.ratom), self__.path);
        };
      }(this$__$1));
    } else {
    }
    return cljs.core.deref.call(null, self__.reaction);
  }
};
reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return other instanceof reagent.ratom.RCursor && cljs.core._EQ_.call(null, self__.path, other.path) && cljs.core._EQ_.call(null, self__.ratom, other.ratom) && cljs.core._EQ_.call(null, self__.setf, other.setf);
};
reagent.ratom.RCursor.cljs$lang$type = true;
reagent.ratom.RCursor.cljs$lang$ctorStr = "reagent.ratom/RCursor";
reagent.ratom.RCursor.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "reagent.ratom/RCursor");
};
reagent.ratom.__GT_RCursor = function __GT_RCursor(path, ratom, setf, reaction) {
  return new reagent.ratom.RCursor(path, ratom, setf, reaction);
};
reagent.ratom.cursor = function() {
  var cursor = null;
  var cursor__2 = function(path, ra) {
    return new reagent.ratom.RCursor(path, ra, null, null);
  };
  var cursor__4 = function(path, ra, setf, args) {
    return new reagent.ratom.RCursor(path, ra, new reagent.impl.util.partial_ifn(setf, args, null), null);
  };
  cursor = function(path, ra, setf, args) {
    switch(arguments.length) {
      case 2:
        return cursor__2.call(this, path, ra);
      case 4:
        return cursor__4.call(this, path, ra, setf, args);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cursor.cljs$core$IFn$_invoke$arity$2 = cursor__2;
  cursor.cljs$core$IFn$_invoke$arity$4 = cursor__4;
  return cursor;
}();
reagent.ratom.IDisposable = function() {
  var obj27636 = {};
  return obj27636;
}();
reagent.ratom.dispose_BANG_ = function dispose_BANG_(this$) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = reagent.ratom.dispose_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = reagent.ratom.dispose_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IRunnable = function() {
  var obj27638 = {};
  return obj27638;
}();
reagent.ratom.run = function run(this$) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.reagent$ratom$IRunnable$run$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.reagent$ratom$IRunnable$run$arity$1(this$);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = reagent.ratom.run[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = reagent.ratom.run["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRunnable.run", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IComputedImpl = function() {
  var obj27640 = {};
  return obj27640;
}();
reagent.ratom._update_watching = function _update_watching(this$, derefed) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2(this$, derefed);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = reagent.ratom._update_watching[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = reagent.ratom._update_watching["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-update-watching", this$);
        }
      }
    }().call(null, this$, derefed);
  }
};
reagent.ratom._handle_change = function _handle_change(k, sender, oldval, newval) {
  if (function() {
    var and__3913__auto__ = k;
    if (and__3913__auto__) {
      return k.reagent$ratom$IComputedImpl$_handle_change$arity$4;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return k.reagent$ratom$IComputedImpl$_handle_change$arity$4(k, sender, oldval, newval);
  } else {
    var x__4569__auto__ = k == null ? null : k;
    return function() {
      var or__3925__auto__ = reagent.ratom._handle_change[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = reagent.ratom._handle_change["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-handle-change", k);
        }
      }
    }().call(null, k, sender, oldval, newval);
  }
};
reagent.ratom.call_watches = function call_watches(obs, watches, oldval, newval) {
  return cljs.core.reduce_kv.call(null, function(_, key, f) {
    f.call(null, key, obs, oldval, newval);
    return null;
  }, null, watches);
};
reagent.ratom.Reaction = function(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  this.f = f;
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.active_QMARK_ = active_QMARK_;
  this.watching = watching;
  this.watches = watches;
  this.auto_run = auto_run;
  this.on_set = on_set;
  this.on_dispose = on_dispose;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_handle_change$arity$4 = function(this$, sender, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = self__.active_QMARK_;
    if (cljs.core.truth_(and__3913__auto__)) {
      return cljs.core.not.call(null, self__.dirty_QMARK_) && !(oldval === newval);
    } else {
      return and__3913__auto__;
    }
  }())) {
    self__.dirty_QMARK_ = true;
    return function() {
      var or__3925__auto__ = self__.auto_run;
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return reagent.ratom.run;
      }
    }().call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_update_watching$arity$2 = function(this$, derefed) {
  var self__ = this;
  var this$__$1 = this;
  var seq__27641_27653 = cljs.core.seq.call(null, derefed);
  var chunk__27642_27654 = null;
  var count__27643_27655 = 0;
  var i__27644_27656 = 0;
  while (true) {
    if (i__27644_27656 < count__27643_27655) {
      var w_27657 = cljs.core._nth.call(null, chunk__27642_27654, i__27644_27656);
      if (cljs.core.contains_QMARK_.call(null, self__.watching, w_27657)) {
      } else {
        cljs.core.add_watch.call(null, w_27657, this$__$1, reagent.ratom._handle_change);
      }
      var G__27658 = seq__27641_27653;
      var G__27659 = chunk__27642_27654;
      var G__27660 = count__27643_27655;
      var G__27661 = i__27644_27656 + 1;
      seq__27641_27653 = G__27658;
      chunk__27642_27654 = G__27659;
      count__27643_27655 = G__27660;
      i__27644_27656 = G__27661;
      continue;
    } else {
      var temp__4126__auto___27662 = cljs.core.seq.call(null, seq__27641_27653);
      if (temp__4126__auto___27662) {
        var seq__27641_27663__$1 = temp__4126__auto___27662;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27641_27663__$1)) {
          var c__4712__auto___27664 = cljs.core.chunk_first.call(null, seq__27641_27663__$1);
          var G__27665 = cljs.core.chunk_rest.call(null, seq__27641_27663__$1);
          var G__27666 = c__4712__auto___27664;
          var G__27667 = cljs.core.count.call(null, c__4712__auto___27664);
          var G__27668 = 0;
          seq__27641_27653 = G__27665;
          chunk__27642_27654 = G__27666;
          count__27643_27655 = G__27667;
          i__27644_27656 = G__27668;
          continue;
        } else {
          var w_27669 = cljs.core.first.call(null, seq__27641_27663__$1);
          if (cljs.core.contains_QMARK_.call(null, self__.watching, w_27669)) {
          } else {
            cljs.core.add_watch.call(null, w_27669, this$__$1, reagent.ratom._handle_change);
          }
          var G__27670 = cljs.core.next.call(null, seq__27641_27663__$1);
          var G__27671 = null;
          var G__27672 = 0;
          var G__27673 = 0;
          seq__27641_27653 = G__27670;
          chunk__27642_27654 = G__27671;
          count__27643_27655 = G__27672;
          i__27644_27656 = G__27673;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__27645_27674 = cljs.core.seq.call(null, self__.watching);
  var chunk__27646_27675 = null;
  var count__27647_27676 = 0;
  var i__27648_27677 = 0;
  while (true) {
    if (i__27648_27677 < count__27647_27676) {
      var w_27678 = cljs.core._nth.call(null, chunk__27646_27675, i__27648_27677);
      if (cljs.core.contains_QMARK_.call(null, derefed, w_27678)) {
      } else {
        cljs.core.remove_watch.call(null, w_27678, this$__$1);
      }
      var G__27679 = seq__27645_27674;
      var G__27680 = chunk__27646_27675;
      var G__27681 = count__27647_27676;
      var G__27682 = i__27648_27677 + 1;
      seq__27645_27674 = G__27679;
      chunk__27646_27675 = G__27680;
      count__27647_27676 = G__27681;
      i__27648_27677 = G__27682;
      continue;
    } else {
      var temp__4126__auto___27683 = cljs.core.seq.call(null, seq__27645_27674);
      if (temp__4126__auto___27683) {
        var seq__27645_27684__$1 = temp__4126__auto___27683;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27645_27684__$1)) {
          var c__4712__auto___27685 = cljs.core.chunk_first.call(null, seq__27645_27684__$1);
          var G__27686 = cljs.core.chunk_rest.call(null, seq__27645_27684__$1);
          var G__27687 = c__4712__auto___27685;
          var G__27688 = cljs.core.count.call(null, c__4712__auto___27685);
          var G__27689 = 0;
          seq__27645_27674 = G__27686;
          chunk__27646_27675 = G__27687;
          count__27647_27676 = G__27688;
          i__27648_27677 = G__27689;
          continue;
        } else {
          var w_27690 = cljs.core.first.call(null, seq__27645_27684__$1);
          if (cljs.core.contains_QMARK_.call(null, derefed, w_27690)) {
          } else {
            cljs.core.remove_watch.call(null, w_27690, this$__$1);
          }
          var G__27691 = cljs.core.next.call(null, seq__27645_27684__$1);
          var G__27692 = null;
          var G__27693 = 0;
          var G__27694 = 0;
          seq__27645_27674 = G__27691;
          chunk__27646_27675 = G__27692;
          count__27647_27676 = G__27693;
          i__27648_27677 = G__27694;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return self__.watching = derefed;
};
reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cReaction "), cljs.core.str(cljs.core.hash.call(null, this$__$1)), cljs.core.str(": ")].join(""));
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var seq__27649_27695 = cljs.core.seq.call(null, self__.watching);
  var chunk__27650_27696 = null;
  var count__27651_27697 = 0;
  var i__27652_27698 = 0;
  while (true) {
    if (i__27652_27698 < count__27651_27697) {
      var w_27699 = cljs.core._nth.call(null, chunk__27650_27696, i__27652_27698);
      cljs.core.remove_watch.call(null, w_27699, this$__$1);
      var G__27700 = seq__27649_27695;
      var G__27701 = chunk__27650_27696;
      var G__27702 = count__27651_27697;
      var G__27703 = i__27652_27698 + 1;
      seq__27649_27695 = G__27700;
      chunk__27650_27696 = G__27701;
      count__27651_27697 = G__27702;
      i__27652_27698 = G__27703;
      continue;
    } else {
      var temp__4126__auto___27704 = cljs.core.seq.call(null, seq__27649_27695);
      if (temp__4126__auto___27704) {
        var seq__27649_27705__$1 = temp__4126__auto___27704;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__27649_27705__$1)) {
          var c__4712__auto___27706 = cljs.core.chunk_first.call(null, seq__27649_27705__$1);
          var G__27707 = cljs.core.chunk_rest.call(null, seq__27649_27705__$1);
          var G__27708 = c__4712__auto___27706;
          var G__27709 = cljs.core.count.call(null, c__4712__auto___27706);
          var G__27710 = 0;
          seq__27649_27695 = G__27707;
          chunk__27650_27696 = G__27708;
          count__27651_27697 = G__27709;
          i__27652_27698 = G__27710;
          continue;
        } else {
          var w_27711 = cljs.core.first.call(null, seq__27649_27705__$1);
          cljs.core.remove_watch.call(null, w_27711, this$__$1);
          var G__27712 = cljs.core.next.call(null, seq__27649_27705__$1);
          var G__27713 = null;
          var G__27714 = 0;
          var G__27715 = 0;
          seq__27649_27695 = G__27712;
          chunk__27650_27696 = G__27713;
          count__27651_27697 = G__27714;
          i__27652_27698 = G__27715;
          continue;
        }
      } else {
      }
    }
    break;
  }
  self__.watching = cljs.core.PersistentHashSet.EMPTY;
  self__.state = null;
  self__.dirty_QMARK_ = true;
  if (cljs.core.truth_(self__.active_QMARK_)) {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.dec);
    } else {
    }
    self__.active_QMARK_ = false;
  } else {
  }
  if (cljs.core.truth_(self__.on_dispose)) {
    return self__.on_dispose.call(null);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  var old_value = self__.state;
  self__.state = new_value;
  cljs.core._notify_watches.call(null, a__$1, old_value, new_value);
  return new_value;
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f__$1) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, self__.state));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f__$1, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, self__.state, x));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f__$1, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, self__.state, x, y));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f__$1, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f__$1, self__.state, x, y, more));
};
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var oldstate = self__.state;
  var res = reagent.ratom.capture_derefed.call(null, self__.f, this$__$1);
  var derefed = reagent.ratom.captured.call(null, this$__$1);
  if (cljs.core.not_EQ_.call(null, derefed, self__.watching)) {
    reagent.ratom._update_watching.call(null, this$__$1, derefed);
  } else {
  }
  if (cljs.core.truth_(self__.active_QMARK_)) {
  } else {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
    } else {
    }
    self__.active_QMARK_ = true;
  }
  self__.dirty_QMARK_ = false;
  self__.state = res;
  reagent.ratom.call_watches.call(null, this$__$1, self__.watches, oldstate, self__.state);
  return res;
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(self__.on_set)) {
    self__.on_set.call(null, oldval, newval);
  } else {
  }
  return reagent.ratom.call_watches.call(null, this$__$1, self__.watches, oldval, newval);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, k, wf) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, k, wf);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  self__.watches = cljs.core.dissoc.call(null, self__.watches, k);
  if (cljs.core.empty_QMARK_.call(null, self__.watches)) {
    return reagent.ratom.dispose_BANG_.call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, function() {
    var or__3925__auto__ = self__.auto_run;
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return reagent.ratom._STAR_ratom_context_STAR_;
    }
  }())) {
    var x__14696__auto___27716 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.auto_run, reagent.ratom._STAR_ratom_context_STAR_], null);
    if (typeof console !== "undefined") {
      console.log([cljs.core.str([cljs.core.str("dbg "), cljs.core.str("reagent.ratom"), cljs.core.str(":"), cljs.core.str(249), cljs.core.str(": "), cljs.core.str("[auto-run *ratom-context*]"), cljs.core.str(": "), cljs.core.str(cljs.core.pr_str.call(null, x__14696__auto___27716))].join(""))].join(""));
    } else {
    }
  } else {
  }
  if (cljs.core.truth_(function() {
    var or__3925__auto__ = self__.auto_run;
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return reagent.ratom._STAR_ratom_context_STAR_;
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Reaction derefed outside auto-running context"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), new cljs.core.Symbol(null, "auto-run", "auto-run", -696035332, null), new cljs.core.Symbol(null, "*ratom-context*", "*ratom-context*", -1557728360, null))))].join(""));
  }
  reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
  if (cljs.core.truth_(self__.dirty_QMARK_)) {
    return reagent.ratom.run.call(null, this$__$1);
  } else {
    return self__.state;
  }
};
reagent.ratom.Reaction.cljs$lang$type = true;
reagent.ratom.Reaction.cljs$lang$ctorStr = "reagent.ratom/Reaction";
reagent.ratom.Reaction.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "reagent.ratom/Reaction");
};
reagent.ratom.__GT_Reaction = function __GT_Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  return new reagent.ratom.Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose);
};
reagent.ratom.make_reaction = function() {
  var make_reaction__delegate = function(f, p__27717) {
    var map__27719 = p__27717;
    var map__27719__$1 = cljs.core.seq_QMARK_.call(null, map__27719) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27719) : map__27719;
    var derefed = cljs.core.get.call(null, map__27719__$1, new cljs.core.Keyword(null, "derefed", "derefed", 590684583));
    var on_dispose = cljs.core.get.call(null, map__27719__$1, new cljs.core.Keyword(null, "on-dispose", "on-dispose", 2105306360));
    var on_set = cljs.core.get.call(null, map__27719__$1, new cljs.core.Keyword(null, "on-set", "on-set", -140953470));
    var auto_run = cljs.core.get.call(null, map__27719__$1, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437));
    var runner = cljs.core._EQ_.call(null, auto_run, true) ? reagent.ratom.run : auto_run;
    var active = !(derefed == null);
    var dirty = !active;
    var reaction = new reagent.ratom.Reaction(f, null, dirty, active, null, cljs.core.PersistentArrayMap.EMPTY, runner, on_set, on_dispose);
    if (derefed == null) {
    } else {
      if (cljs.core.truth_(reagent.ratom.debug)) {
        cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
      } else {
      }
      reagent.ratom._update_watching.call(null, reaction, derefed);
    }
    return reaction;
  };
  var make_reaction = function(f, var_args) {
    var p__27717 = null;
    if (arguments.length > 1) {
      var G__27720__i = 0, G__27720__a = new Array(arguments.length - 1);
      while (G__27720__i < G__27720__a.length) {
        G__27720__a[G__27720__i] = arguments[G__27720__i + 1];
        ++G__27720__i;
      }
      p__27717 = new cljs.core.IndexedSeq(G__27720__a, 0);
    }
    return make_reaction__delegate.call(this, f, p__27717);
  };
  make_reaction.cljs$lang$maxFixedArity = 1;
  make_reaction.cljs$lang$applyTo = function(arglist__27721) {
    var f = cljs.core.first(arglist__27721);
    var p__27717 = cljs.core.rest(arglist__27721);
    return make_reaction__delegate(f, p__27717);
  };
  make_reaction.cljs$core$IFn$_invoke$arity$variadic = make_reaction__delegate;
  return make_reaction;
}();
goog.provide("reagent.impl.batching");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("reagent.impl.util");
goog.require("reagent.ratom");
goog.require("reagent.interop");
goog.require("reagent.debug");
if (typeof reagent.impl.batching.mount_count !== "undefined") {
} else {
  reagent.impl.batching.mount_count = 0;
}
reagent.impl.batching.next_mount_count = function next_mount_count() {
  return reagent.impl.batching.mount_count = reagent.impl.batching.mount_count + 1;
};
reagent.impl.batching.fake_raf = function fake_raf(f) {
  return setTimeout(f, 16);
};
reagent.impl.batching.next_tick = cljs.core.not.call(null, reagent.impl.util.is_client) ? reagent.impl.batching.fake_raf : function() {
  var w = window;
  var or__3925__auto__ = w["requestAnimationFrame"];
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    var or__3925__auto____$1 = w["webkitRequestAnimationFrame"];
    if (cljs.core.truth_(or__3925__auto____$1)) {
      return or__3925__auto____$1;
    } else {
      var or__3925__auto____$2 = w["mozRequestAnimationFrame"];
      if (cljs.core.truth_(or__3925__auto____$2)) {
        return or__3925__auto____$2;
      } else {
        var or__3925__auto____$3 = w["msRequestAnimationFrame"];
        if (cljs.core.truth_(or__3925__auto____$3)) {
          return or__3925__auto____$3;
        } else {
          return reagent.impl.batching.fake_raf;
        }
      }
    }
  }
}();
reagent.impl.batching.compare_mount_order = function compare_mount_order(c1, c2) {
  return c1["cljsMountOrder"] - c2["cljsMountOrder"];
};
reagent.impl.batching.run_queue = function run_queue(a) {
  a.sort(reagent.impl.batching.compare_mount_order);
  var n__4812__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4812__auto__) {
      var c_27558 = a[i];
      if (cljs.core.truth_(c_27558["cljsIsDirty"])) {
        c_27558["forceUpdate"]();
      } else {
      }
      var G__27559 = i + 1;
      i = G__27559;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.run_funs = function run_funs(a) {
  var n__4812__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4812__auto__) {
      a[i].call(null);
      var G__27560 = i + 1;
      i = G__27560;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.RenderQueue = function(queue, scheduled_QMARK_, after_render) {
  this.queue = queue;
  this.scheduled_QMARK_ = scheduled_QMARK_;
  this.after_render = after_render;
};
reagent.impl.batching.RenderQueue.prototype.queue_render = function(c) {
  var self__ = this;
  var this$ = this;
  self__.queue.push(c);
  return this$.schedule();
};
reagent.impl.batching.RenderQueue.prototype.add_after_render = function(f) {
  var self__ = this;
  var _ = this;
  return self__.after_render.push(f);
};
reagent.impl.batching.RenderQueue.prototype.schedule = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.truth_(self__.scheduled_QMARK_)) {
    return null;
  } else {
    self__.scheduled_QMARK_ = true;
    return reagent.impl.batching.next_tick.call(null, function(this$) {
      return function() {
        return this$.run_queue();
      };
    }(this$));
  }
};
reagent.impl.batching.RenderQueue.prototype.run_queue = function() {
  var self__ = this;
  var _ = this;
  var q = self__.queue;
  var aq = self__.after_render;
  self__.queue = [];
  self__.after_render = [];
  self__.scheduled_QMARK_ = false;
  reagent.impl.batching.run_queue.call(null, q);
  return reagent.impl.batching.run_funs.call(null, aq);
};
reagent.impl.batching.RenderQueue.cljs$lang$type = true;
reagent.impl.batching.RenderQueue.cljs$lang$ctorStr = "reagent.impl.batching/RenderQueue";
reagent.impl.batching.RenderQueue.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "reagent.impl.batching/RenderQueue");
};
reagent.impl.batching.__GT_RenderQueue = function __GT_RenderQueue(queue, scheduled_QMARK_, after_render) {
  return new reagent.impl.batching.RenderQueue(queue, scheduled_QMARK_, after_render);
};
reagent.impl.batching.render_queue = new reagent.impl.batching.RenderQueue([], false, []);
reagent.impl.batching.flush = function flush() {
  return reagent.impl.batching.render_queue.run_queue();
};
reagent.impl.batching.queue_render = function queue_render(c) {
  c["cljsIsDirty"] = true;
  return reagent.impl.batching.render_queue.queue_render(c);
};
reagent.impl.batching.mark_rendered = function mark_rendered(c) {
  return c["cljsIsDirty"] = false;
};
reagent.impl.batching.do_after_flush = function do_after_flush(f) {
  return reagent.impl.batching.render_queue.add_after_render(f);
};
reagent.impl.batching.do_later = function do_later(f) {
  reagent.impl.batching.do_after_flush.call(null, f);
  return reagent.impl.batching.render_queue.schedule();
};
reagent.impl.batching.is_reagent_component = function is_reagent_component(c) {
  var G__27562 = c;
  var G__27562__$1 = G__27562 == null ? null : G__27562["props"];
  var G__27562__$2 = G__27562__$1 == null ? null : G__27562__$1["argv"];
  return G__27562__$2;
};
reagent.impl.batching.run_reactively = function run_reactively(c, run) {
  if (cljs.core.truth_(reagent.impl.batching.is_reagent_component.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "is-reagent-component", "is-reagent-component", -1856228005, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  reagent.impl.batching.mark_rendered.call(null, c);
  var rat = c["cljsRatom"];
  if (rat == null) {
    var res = reagent.ratom.capture_derefed.call(null, run, c);
    var derefed = reagent.ratom.captured.call(null, c);
    if (!(derefed == null)) {
      c["cljsRatom"] = reagent.ratom.make_reaction.call(null, run, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437), function(res, derefed, rat) {
        return function() {
          return reagent.impl.batching.queue_render.call(null, c);
        };
      }(res, derefed, rat), new cljs.core.Keyword(null, "derefed", "derefed", 590684583), derefed);
    } else {
    }
    return res;
  } else {
    return reagent.ratom.run.call(null, rat);
  }
};
reagent.impl.batching.dispose = function dispose(c) {
  var G__27564_27565 = c["cljsRatom"];
  var G__27564_27566__$1 = G__27564_27565 == null ? null : reagent.ratom.dispose_BANG_.call(null, G__27564_27565);
  return reagent.impl.batching.mark_rendered.call(null, c);
};
goog.provide("reagent.impl.component");
goog.require("cljs.core");
goog.require("reagent.debug");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("reagent.impl.util");
reagent.impl.component.state_atom = function state_atom(this$) {
  var sa = this$["cljsState"];
  if (!(sa == null)) {
    return sa;
  } else {
    return this$["cljsState"] = reagent.ratom.atom.call(null, null);
  }
};
reagent.impl.component.state = function state(this$) {
  return cljs.core.deref.call(null, reagent.impl.component.state_atom.call(null, this$));
};
reagent.impl.component.replace_state = function replace_state(this$, new_state) {
  return cljs.core.reset_BANG_.call(null, reagent.impl.component.state_atom.call(null, this$), new_state);
};
reagent.impl.component.set_state = function set_state(this$, new_state) {
  return cljs.core.swap_BANG_.call(null, reagent.impl.component.state_atom.call(null, this$), cljs.core.merge, new_state);
};
reagent.impl.component.as_element = function as_element(x) {
  return reagent.impl.template.as_element(x);
};
reagent.impl.component.do_render = function do_render(c) {
  var _STAR_current_component_STAR_27540 = reagent.impl.component._STAR_current_component_STAR_;
  reagent.impl.component._STAR_current_component_STAR_ = c;
  try {
    var f = c["cljsRender"];
    var _ = cljs.core.ifn_QMARK_.call(null, f) ? null : function() {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }();
    var p = c["props"];
    var res = c["componentFunction"] == null ? f.call(null, c) : function() {
      var argv = p["argv"];
      var n = cljs.core.count.call(null, argv);
      var G__27541 = n;
      switch(G__27541) {
        case 1:
          return f.call(null);
          break;
        case 2:
          return f.call(null, cljs.core.nth.call(null, argv, 1));
          break;
        case 3:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2));
          break;
        case 4:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3));
          break;
        case 5:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3), cljs.core.nth.call(null, argv, 4));
          break;
        default:
          return cljs.core.apply.call(null, f, cljs.core.subvec.call(null, argv, 1));
      }
    }();
    if (cljs.core.vector_QMARK_.call(null, res)) {
      return reagent.impl.component.as_element.call(null, res);
    } else {
      if (cljs.core.ifn_QMARK_.call(null, res)) {
        c["cljsRender"] = res;
        return do_render.call(null, c);
      } else {
        return res;
      }
    }
  } finally {
    reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR_27540;
  }
};
reagent.impl.component.static_fns = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "render", "render", -1408033454), function() {
  var c = this;
  if (cljs.core.not.call(null, reagent.impl.component._STAR_non_reactive_STAR_)) {
    return reagent.impl.batching.run_reactively.call(null, c, function(c) {
      return function() {
        return reagent.impl.component.do_render.call(null, c);
      };
    }(c));
  } else {
    return reagent.impl.component.do_render.call(null, c);
  }
}], null);
reagent.impl.component.custom_wrapper = function custom_wrapper(key, f) {
  var G__27544 = key instanceof cljs.core.Keyword ? key.fqn : null;
  switch(G__27544) {
    case "componentWillUnmount":
      return function(G__27544) {
        return function() {
          var c = this;
          reagent.impl.batching.dispose.call(null, c);
          if (f == null) {
            return null;
          } else {
            return f.call(null, c);
          }
        };
      }(G__27544);
      break;
    case "componentWillMount":
      return function(G__27544) {
        return function() {
          var c = this;
          c["cljsMountOrder"] = reagent.impl.batching.next_mount_count.call(null);
          if (f == null) {
            return null;
          } else {
            return f.call(null, c);
          }
        };
      }(G__27544);
      break;
    case "componentDidUpdate":
      return function(G__27544) {
        return function(oldprops) {
          var c = this;
          return f.call(null, c, oldprops["argv"]);
        };
      }(G__27544);
      break;
    case "componentWillUpdate":
      return function(G__27544) {
        return function(nextprops) {
          var c = this;
          return f.call(null, c, nextprops["argv"]);
        };
      }(G__27544);
      break;
    case "shouldComponentUpdate":
      return function(G__27544) {
        return function(nextprops, nextstate) {
          var or__3925__auto__ = reagent.impl.util._STAR_always_update_STAR_;
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            var c = this;
            var old_argv = c["props"]["argv"];
            var new_argv = nextprops["argv"];
            if (f == null) {
              return old_argv == null || new_argv == null || cljs.core.not_EQ_.call(null, old_argv, new_argv);
            } else {
              return f.call(null, c, old_argv, new_argv);
            }
          }
        };
      }(G__27544);
      break;
    case "componentWillReceiveProps":
      return function(G__27544) {
        return function(props) {
          var c = this;
          return f.call(null, c, props["argv"]);
        };
      }(G__27544);
      break;
    case "getInitialState":
      return function(G__27544) {
        return function() {
          var c = this;
          return reagent.impl.component.set_state.call(null, c, f.call(null, c));
        };
      }(G__27544);
      break;
    case "getDefaultProps":
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("getDefaultProps not supported yet"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));break;
    default:
      return null;
  }
};
reagent.impl.component.default_wrapper = function default_wrapper(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
    return function() {
      var G__27546__delegate = function(args) {
        var c = this;
        return cljs.core.apply.call(null, f, c, args);
      };
      var G__27546 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__27547__i = 0, G__27547__a = new Array(arguments.length - 0);
          while (G__27547__i < G__27547__a.length) {
            G__27547__a[G__27547__i] = arguments[G__27547__i + 0];
            ++G__27547__i;
          }
          args = new cljs.core.IndexedSeq(G__27547__a, 0);
        }
        return G__27546__delegate.call(this, args);
      };
      G__27546.cljs$lang$maxFixedArity = 0;
      G__27546.cljs$lang$applyTo = function(arglist__27548) {
        var args = cljs.core.seq(arglist__27548);
        return G__27546__delegate(args);
      };
      G__27546.cljs$core$IFn$_invoke$arity$variadic = G__27546__delegate;
      return G__27546;
    }();
  } else {
    return f;
  }
};
reagent.impl.component.dont_wrap = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), null, new cljs.core.Keyword(null, "render", "render", -1408033454), null, new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104), null], null), null);
reagent.impl.component.dont_bind = function dont_bind(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
    var G__27550 = f;
    G__27550["__reactDontBind"] = true;
    return G__27550;
  } else {
    return f;
  }
};
reagent.impl.component.get_wrapper = function get_wrapper(key, f, name) {
  if (cljs.core.truth_(reagent.impl.component.dont_wrap.call(null, key))) {
    return reagent.impl.component.dont_bind.call(null, f);
  } else {
    var wrap = reagent.impl.component.custom_wrapper.call(null, key, f);
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = wrap;
      if (cljs.core.truth_(and__3913__auto__)) {
        return f;
      } else {
        return and__3913__auto__;
      }
    }())) {
      if (cljs.core.ifn_QMARK_.call(null, f)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected function in "), cljs.core.str(name), cljs.core.str(key), cljs.core.str(" but got "), cljs.core.str(f)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
      }
    } else {
    }
    var or__3925__auto__ = wrap;
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return reagent.impl.component.default_wrapper.call(null, f);
    }
  }
};
reagent.impl.component.obligatory = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), null, new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619), null, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), null], null);
reagent.impl.component.dash_to_camel = reagent.impl.util.memoize_1.call(null, reagent.impl.util.dash_to_camel);
reagent.impl.component.camelify_map_keys = function camelify_map_keys(fun_map) {
  return cljs.core.reduce_kv.call(null, function(m, k, v) {
    return cljs.core.assoc.call(null, m, cljs.core.keyword.call(null, reagent.impl.component.dash_to_camel.call(null, k)), v);
  }, cljs.core.PersistentArrayMap.EMPTY, fun_map);
};
reagent.impl.component.add_obligatory = function add_obligatory(fun_map) {
  return cljs.core.merge.call(null, reagent.impl.component.obligatory, fun_map);
};
reagent.impl.component.add_render = function add_render(fun_map, render_f) {
  return cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), render_f, new cljs.core.Keyword(null, "render", "render", -1408033454), (new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(reagent.impl.component.static_fns));
};
reagent.impl.component.wrap_funs = function wrap_funs(fun_map) {
  var render_fun = function() {
    var or__3925__auto__ = (new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return(new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(fun_map);
    }
  }();
  var _ = cljs.core.ifn_QMARK_.call(null, render_fun) ? null : function() {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Render must be a function, not "), cljs.core.str(cljs.core.pr_str.call(null, render_fun))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "render-fun", "render-fun", -1209513086, null))))].join(""));
  }();
  var name = [cljs.core.str(function() {
    var or__3925__auto__ = (new cljs.core.Keyword(null, "displayName", "displayName", -809144601)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      var or__3925__auto____$1 = render_fun["displayName"];
      if (cljs.core.truth_(or__3925__auto____$1)) {
        return or__3925__auto____$1;
      } else {
        var or__3925__auto____$2 = render_fun["name"];
        if (cljs.core.truth_(or__3925__auto____$2)) {
          return or__3925__auto____$2;
        } else {
          return "";
        }
      }
    }
  }())].join("");
  var name_SINGLEQUOTE_ = cljs.core.empty_QMARK_.call(null, name) ? [cljs.core.str(cljs.core.gensym.call(null, "reagent"))].join("") : name;
  var fmap = reagent.impl.component.add_render.call(null, cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "displayName", "displayName", -809144601), name_SINGLEQUOTE_), render_fun);
  return cljs.core.reduce_kv.call(null, function(render_fun, _, name, name_SINGLEQUOTE_, fmap) {
    return function(m, k, v) {
      return cljs.core.assoc.call(null, m, k, reagent.impl.component.get_wrapper.call(null, k, v, name_SINGLEQUOTE_));
    };
  }(render_fun, _, name, name_SINGLEQUOTE_, fmap), cljs.core.PersistentArrayMap.EMPTY, fmap);
};
reagent.impl.component.map_to_js = function map_to_js(m) {
  return cljs.core.reduce_kv.call(null, function(o, k, v) {
    var G__27552 = o;
    G__27552[cljs.core.name.call(null, k)] = v;
    return G__27552;
  }, {}, m);
};
reagent.impl.component.cljsify = function cljsify(body) {
  return reagent.impl.component.map_to_js.call(null, reagent.impl.component.wrap_funs.call(null, reagent.impl.component.add_obligatory.call(null, reagent.impl.component.camelify_map_keys.call(null, body))));
};
reagent.impl.component.create_class = function create_class(body) {
  if (cljs.core.map_QMARK_.call(null, body)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "body", "body", -408674142, null))))].join(""));
  }
  var spec = reagent.impl.component.cljsify.call(null, body);
  var res = React["createClass"](spec);
  var f = function(spec, res) {
    return function() {
      var G__27553__delegate = function(args) {
        return reagent.impl.component.as_element.call(null, cljs.core.apply.call(null, cljs.core.vector, res, args));
      };
      var G__27553 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__27554__i = 0, G__27554__a = new Array(arguments.length - 0);
          while (G__27554__i < G__27554__a.length) {
            G__27554__a[G__27554__i] = arguments[G__27554__i + 0];
            ++G__27554__i;
          }
          args = new cljs.core.IndexedSeq(G__27554__a, 0);
        }
        return G__27553__delegate.call(this, args);
      };
      G__27553.cljs$lang$maxFixedArity = 0;
      G__27553.cljs$lang$applyTo = function(arglist__27555) {
        var args = cljs.core.seq(arglist__27555);
        return G__27553__delegate(args);
      };
      G__27553.cljs$core$IFn$_invoke$arity$variadic = G__27553__delegate;
      return G__27553;
    }();
  }(spec, res);
  reagent.impl.util.cache_react_class.call(null, f, res);
  reagent.impl.util.cache_react_class.call(null, res, res);
  return f;
};
goog.provide("reagent.impl.template");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("clojure.string");
goog.require("reagent.debug");
reagent.impl.template.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
reagent.impl.template.attr_aliases = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "class", "class", -2030961996), "className", new cljs.core.Keyword(null, "for", "for", -1323786319), "htmlFor", new cljs.core.Keyword(null, "charset", "charset", -1063822193), "charSet"], null);
reagent.impl.template.hiccup_tag_QMARK_ = function hiccup_tag_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol || typeof x === "string";
};
reagent.impl.template.valid_tag_QMARK_ = function valid_tag_QMARK_(x) {
  return reagent.impl.template.hiccup_tag_QMARK_.call(null, x) || cljs.core.ifn_QMARK_.call(null, x);
};
reagent.impl.template.to_js_val = function to_js_val(v) {
  if (typeof v === "string" || typeof v === "number") {
    return v;
  } else {
    if (function() {
      var G__27590 = v;
      if (G__27590) {
        var bit__4599__auto__ = G__27590.cljs$lang$protocol_mask$partition1$ & 4096;
        if (bit__4599__auto__ || G__27590.cljs$core$INamed$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.name.call(null, v);
    } else {
      if (cljs.core.coll_QMARK_.call(null, v)) {
        return cljs.core.clj__GT_js.call(null, v);
      } else {
        if (cljs.core.ifn_QMARK_.call(null, v)) {
          return function() {
            var G__27591__delegate = function(args) {
              return cljs.core.apply.call(null, v, args);
            };
            var G__27591 = function(var_args) {
              var args = null;
              if (arguments.length > 0) {
                var G__27592__i = 0, G__27592__a = new Array(arguments.length - 0);
                while (G__27592__i < G__27592__a.length) {
                  G__27592__a[G__27592__i] = arguments[G__27592__i + 0];
                  ++G__27592__i;
                }
                args = new cljs.core.IndexedSeq(G__27592__a, 0);
              }
              return G__27591__delegate.call(this, args);
            };
            G__27591.cljs$lang$maxFixedArity = 0;
            G__27591.cljs$lang$applyTo = function(arglist__27593) {
              var args = cljs.core.seq(arglist__27593);
              return G__27591__delegate(args);
            };
            G__27591.cljs$core$IFn$_invoke$arity$variadic = G__27591__delegate;
            return G__27591;
          }();
        } else {
          return v;
        }
      }
    }
  }
};
reagent.impl.template.undash_prop_name = function undash_prop_name(n) {
  var or__3925__auto__ = reagent.impl.template.attr_aliases.call(null, n);
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    return reagent.impl.util.dash_to_camel.call(null, n);
  }
};
reagent.impl.template.cached_prop_name = reagent.impl.util.memoize_1.call(null, reagent.impl.template.undash_prop_name);
reagent.impl.template.convert_prop_value = function convert_prop_value(x) {
  if (typeof x === "string") {
    return x;
  } else {
    if (typeof x === "number") {
      return x;
    } else {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce_kv.call(null, function(o, k, v) {
          var G__27595 = o;
          G__27595[reagent.impl.template.cached_prop_name.call(null, k)] = reagent.impl.template.to_js_val.call(null, v);
          return G__27595;
        }, {}, x);
      } else {
        return reagent.impl.template.to_js_val.call(null, x);
      }
    }
  }
};
reagent.impl.template.set_id_class = function set_id_class(props, p__27596) {
  var vec__27598 = p__27596;
  var id = cljs.core.nth.call(null, vec__27598, 0, null);
  var class$ = cljs.core.nth.call(null, vec__27598, 1, null);
  var pid = props["id"];
  props["id"] = cljs.core.some_QMARK_.call(null, pid) ? pid : id;
  if (cljs.core.some_QMARK_.call(null, class$)) {
    var old = props["className"];
    return props["className"] = cljs.core.some_QMARK_.call(null, old) ? [cljs.core.str(class$), cljs.core.str(" "), cljs.core.str(old)].join("") : class$;
  } else {
    return null;
  }
};
reagent.impl.template.convert_props = function convert_props(props, id_class) {
  if (cljs.core.empty_QMARK_.call(null, props) && id_class == null) {
    return null;
  } else {
    var objprops = cljs.core.reduce_kv.call(null, function(o, k, v) {
      var pname_27599 = reagent.impl.template.cached_prop_name.call(null, k);
      o[pname_27599] = reagent.impl.template.convert_prop_value.call(null, v);
      return o;
    }, {}, props);
    if (cljs.core.some_QMARK_.call(null, id_class)) {
      reagent.impl.template.set_id_class.call(null, objprops, id_class);
    } else {
    }
    return objprops;
  }
};
reagent.impl.template.input_unmount = function input_unmount(this$) {
  return this$["cljsInputValue"] = null;
};
reagent.impl.template.input_set_value = function input_set_value(this$) {
  var temp__4130__auto__ = this$["cljsInputValue"];
  if (temp__4130__auto__ == null) {
    return null;
  } else {
    var value = temp__4130__auto__;
    this$["cljsInputDirty"] = false;
    var node = this$["getDOMNode"]();
    if (cljs.core.not_EQ_.call(null, value, node["value"])) {
      return node["value"] = value;
    } else {
      return null;
    }
  }
};
reagent.impl.template.input_handle_change = function input_handle_change(this$, on_change, e) {
  var res = on_change.call(null, e);
  if (cljs.core.truth_(this$["cljsInputDirty"])) {
  } else {
    this$["cljsInputDirty"] = true;
    reagent.impl.batching.do_later.call(null, function(res) {
      return function() {
        return reagent.impl.template.input_set_value.call(null, this$);
      };
    }(res));
  }
  return res;
};
reagent.impl.template.input_render_setup = function input_render_setup(this$, jsprops) {
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = jsprops["hasOwnProperty"]("onChange");
    if (cljs.core.truth_(and__3913__auto__)) {
      return jsprops["hasOwnProperty"]("value");
    } else {
      return and__3913__auto__;
    }
  }())) {
    var v = jsprops["value"];
    var value = v == null ? "" : v;
    var on_change = jsprops["onChange"];
    this$["cljsInputValue"] = value;
    delete jsprops["value"];
    var G__27602 = jsprops;
    G__27602["defaultValue"] = value;
    G__27602["onChange"] = function(G__27602, v, value, on_change) {
      return function(p1__27600_SHARP_) {
        return reagent.impl.template.input_handle_change.call(null, this$, on_change, p1__27600_SHARP_);
      };
    }(G__27602, v, value, on_change);
    return G__27602;
  } else {
    return this$["cljsInputValue"] = null;
  }
};
reagent.impl.template.input_component_QMARK_ = function input_component_QMARK_(x) {
  return x === "input" || x === "textarea";
};
reagent.impl.template.reagent_input_class = null;
reagent.impl.template.input_spec = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "display-name", "display-name", 694513143), "ReagentInput", new cljs.core.Keyword(null, "component-did-update", "component-did-update", -1468549173), reagent.impl.template.input_set_value, new cljs.core.Keyword(null, "component-will-unmount", "component-will-unmount", -2058314698), reagent.impl.template.input_unmount, new cljs.core.Keyword(null, "component-function", "component-function", 654728922), 
function(argv, comp, jsprops, first_child) {
  var this$ = reagent.impl.component._STAR_current_component_STAR_;
  reagent.impl.template.input_render_setup.call(null, this$, jsprops);
  return reagent.impl.template.make_element.call(null, argv, comp, jsprops, first_child);
}], null);
reagent.impl.template.reagent_input = function reagent_input(argv, comp, jsprops, first_child) {
  if (reagent.impl.template.reagent_input_class == null) {
    reagent.impl.template.reagent_input_class = reagent.impl.component.create_class.call(null, reagent.impl.template.input_spec);
  } else {
  }
  return reagent.impl.template.reagent_input_class.call(null, argv, comp, jsprops, first_child);
};
reagent.impl.template.parse_tag = function parse_tag(hiccup_tag) {
  var vec__27604 = cljs.core.next.call(null, cljs.core.re_matches.call(null, reagent.impl.template.re_tag, cljs.core.name.call(null, hiccup_tag)));
  var tag = cljs.core.nth.call(null, vec__27604, 0, null);
  var id = cljs.core.nth.call(null, vec__27604, 1, null);
  var class$ = cljs.core.nth.call(null, vec__27604, 2, null);
  var class_SINGLEQUOTE_ = cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, /\./, " ") : null;
  if (cljs.core.truth_(tag)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Unknown tag: '"), cljs.core.str(hiccup_tag), cljs.core.str("'")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "tag", "tag", 350170304, null)))].join(""));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag, cljs.core.truth_(function() {
    var or__3925__auto__ = id;
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return class_SINGLEQUOTE_;
    }
  }()) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, class_SINGLEQUOTE_], null) : null], null);
};
reagent.impl.template.fn_to_class = function fn_to_class(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected a function, not "), cljs.core.str(cljs.core.pr_str.call(null, f))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  var spec = cljs.core.meta.call(null, f);
  var withrender = cljs.core.assoc.call(null, spec, new cljs.core.Keyword(null, "component-function", "component-function", 654728922), f);
  var res = reagent.impl.component.create_class.call(null, withrender);
  var wrapf = reagent.impl.util.cached_react_class.call(null, res);
  reagent.impl.util.cache_react_class.call(null, f, wrapf);
  return wrapf;
};
reagent.impl.template.as_class = function as_class(tag) {
  var temp__4128__auto__ = reagent.impl.util.cached_react_class.call(null, tag);
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.fn_to_class.call(null, tag);
  } else {
    var cached_class = temp__4128__auto__;
    return cached_class;
  }
};
reagent.impl.template.get_key = function get_key(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    return cljs.core.get.call(null, x, new cljs.core.Keyword(null, "key", "key", -1516042587));
  } else {
    return null;
  }
};
reagent.impl.template.reag_element = function reag_element(tag, v) {
  var c = reagent.impl.template.as_class.call(null, tag);
  var jsprops = {"argv":v};
  var key_27609 = function() {
    var temp__4128__auto__ = function() {
      var G__27607 = cljs.core.meta.call(null, v);
      var G__27607__$1 = G__27607 == null ? null : reagent.impl.template.get_key.call(null, G__27607);
      return G__27607__$1;
    }();
    if (temp__4128__auto__ == null) {
      return reagent.impl.template.get_key.call(null, cljs.core.nth.call(null, v, 1, null));
    } else {
      var k = temp__4128__auto__;
      return k;
    }
  }();
  var G__27608_27610 = key_27609;
  var G__27608_27611__$1 = G__27608_27610 == null ? null : jsprops["key"] = G__27608_27610;
  return React["createElement"](c, jsprops);
};
reagent.impl.template.cached_parse = reagent.impl.util.memoize_1.call(null, reagent.impl.template.parse_tag);
reagent.impl.template.native_element = function native_element(tag, argv) {
  if (reagent.impl.template.hiccup_tag_QMARK_.call(null, tag)) {
    var vec__27615 = reagent.impl.template.cached_parse.call(null, tag);
    var comp = cljs.core.nth.call(null, vec__27615, 0, null);
    var id_class = cljs.core.nth.call(null, vec__27615, 1, null);
    var props = cljs.core.nth.call(null, argv, 1, null);
    var hasprops = props == null || cljs.core.map_QMARK_.call(null, props);
    var jsprops = reagent.impl.template.convert_props.call(null, hasprops ? props : null, id_class);
    var first_child = hasprops ? 2 : 1;
    if (reagent.impl.template.input_component_QMARK_.call(null, comp)) {
      return reagent.impl.template.as_element.call(null, cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.impl.template.reagent_input, argv, comp, jsprops, first_child], null), cljs.core.meta.call(null, argv)));
    } else {
      var p = function() {
        var temp__4128__auto__ = function() {
          var G__27616 = cljs.core.meta.call(null, argv);
          var G__27616__$1 = G__27616 == null ? null : reagent.impl.template.get_key.call(null, G__27616);
          return G__27616__$1;
        }();
        if (temp__4128__auto__ == null) {
          return jsprops;
        } else {
          var key = temp__4128__auto__;
          var G__27617 = jsprops == null ? {} : jsprops;
          G__27617["key"] = key;
          return G__27617;
        }
      }();
      return reagent.impl.template.make_element.call(null, argv, comp, p, first_child);
    }
  } else {
    return null;
  }
};
reagent.impl.template.vec_to_elem = function vec_to_elem(v) {
  if (cljs.core.count.call(null, v) > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Hiccup form should not be empty"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))))].join(""));
  }
  var tag = cljs.core.nth.call(null, v, 0);
  if (reagent.impl.template.valid_tag_QMARK_.call(null, tag)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Hiccup form: "), cljs.core.str(cljs.core.pr_str.call(null, v))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-tag?", "valid-tag?", 1243064160, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))))].join(""));
  }
  var temp__4128__auto__ = reagent.impl.template.native_element.call(null, tag, v);
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.reag_element.call(null, tag, v);
  } else {
    var ne = temp__4128__auto__;
    return ne;
  }
};
reagent.impl.template.seq_ctx = {};
reagent.impl.template.warn_on_deref = function warn_on_deref(x) {
  if (cljs.core.truth_(reagent.impl.template.seq_ctx["warned"])) {
    return null;
  } else {
    if (typeof console !== "undefined") {
      console.log("Warning: Reactive deref not supported in seq in ", cljs.core.pr_str.call(null, x));
    } else {
    }
    return reagent.impl.template.seq_ctx["warned"] = true;
  }
};
reagent.impl.template.as_element = function as_element(x) {
  if (typeof x === "string") {
    return x;
  } else {
    if (cljs.core.vector_QMARK_.call(null, x)) {
      return reagent.impl.template.vec_to_elem.call(null, x);
    } else {
      if (cljs.core.seq_QMARK_.call(null, x)) {
        if (reagent.ratom._STAR_ratom_context_STAR_ == null) {
          return reagent.impl.template.expand_seq.call(null, x);
        } else {
          var s = reagent.ratom.capture_derefed.call(null, function() {
            return reagent.impl.template.expand_seq.call(null, x);
          }, reagent.impl.template.seq_ctx);
          if (cljs.core.truth_(reagent.ratom.captured.call(null, reagent.impl.template.seq_ctx))) {
            reagent.impl.template.warn_on_deref.call(null, x);
          } else {
          }
          return s;
        }
      } else {
        return x;
      }
    }
  }
};
reagent.impl.template.expand_seq = function expand_seq(s) {
  var a = cljs.core.into_array.call(null, s);
  var n__4812__auto___27618 = a.length;
  var i_27619 = 0;
  while (true) {
    if (i_27619 < n__4812__auto___27618) {
      a[i_27619] = reagent.impl.template.as_element.call(null, a[i_27619]);
      var G__27620 = i_27619 + 1;
      i_27619 = G__27620;
      continue;
    } else {
    }
    break;
  }
  return a;
};
reagent.impl.template.make_element = function make_element(argv, comp, jsprops, first_child) {
  if (cljs.core.count.call(null, argv) === first_child + 1) {
    return React["createElement"](comp, jsprops, reagent.impl.template.as_element.call(null, cljs.core.nth.call(null, argv, first_child)));
  } else {
    return React["createElement"].apply(null, cljs.core.reduce_kv.call(null, function(a, k, v) {
      if (k >= first_child) {
        a.push(reagent.impl.template.as_element.call(null, v));
      } else {
      }
      return a;
    }, [comp, jsprops], argv));
  }
};
goog.provide("reagent.core");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.template");
goog.require("reagent.impl.batching");
goog.require("reagent.debug");
reagent.core.is_client = reagent.impl.util.is_client;
reagent.core.create_element = function() {
  var create_element = null;
  var create_element__1 = function(type) {
    return create_element.call(null, type, null);
  };
  var create_element__2 = function(type, props) {
    if (!cljs.core.map_QMARK_.call(null, props)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
    }
    return React.createElement(type, props);
  };
  var create_element__3 = function(type, props, child) {
    if (!cljs.core.map_QMARK_.call(null, props)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
    }
    return React.createElement(type, props, child);
  };
  var create_element__4 = function() {
    var G__27507__delegate = function(type, props, child, children) {
      if (!cljs.core.map_QMARK_.call(null, props)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
      }
      return cljs.core.apply.call(null, React.createElement, type, props, child, children);
    };
    var G__27507 = function(type, props, child, var_args) {
      var children = null;
      if (arguments.length > 3) {
        var G__27508__i = 0, G__27508__a = new Array(arguments.length - 3);
        while (G__27508__i < G__27508__a.length) {
          G__27508__a[G__27508__i] = arguments[G__27508__i + 3];
          ++G__27508__i;
        }
        children = new cljs.core.IndexedSeq(G__27508__a, 0);
      }
      return G__27507__delegate.call(this, type, props, child, children);
    };
    G__27507.cljs$lang$maxFixedArity = 3;
    G__27507.cljs$lang$applyTo = function(arglist__27509) {
      var type = cljs.core.first(arglist__27509);
      arglist__27509 = cljs.core.next(arglist__27509);
      var props = cljs.core.first(arglist__27509);
      arglist__27509 = cljs.core.next(arglist__27509);
      var child = cljs.core.first(arglist__27509);
      var children = cljs.core.rest(arglist__27509);
      return G__27507__delegate(type, props, child, children);
    };
    G__27507.cljs$core$IFn$_invoke$arity$variadic = G__27507__delegate;
    return G__27507;
  }();
  create_element = function(type, props, child, var_args) {
    var children = var_args;
    switch(arguments.length) {
      case 1:
        return create_element__1.call(this, type);
      case 2:
        return create_element__2.call(this, type, props);
      case 3:
        return create_element__3.call(this, type, props, child);
      default:
        var G__27510 = null;
        if (arguments.length > 3) {
          var G__27511__i = 0, G__27511__a = new Array(arguments.length - 3);
          while (G__27511__i < G__27511__a.length) {
            G__27511__a[G__27511__i] = arguments[G__27511__i + 3];
            ++G__27511__i;
          }
          G__27510 = new cljs.core.IndexedSeq(G__27511__a, 0);
        }
        return create_element__4.cljs$core$IFn$_invoke$arity$variadic(type, props, child, G__27510);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_element.cljs$lang$maxFixedArity = 3;
  create_element.cljs$lang$applyTo = create_element__4.cljs$lang$applyTo;
  create_element.cljs$core$IFn$_invoke$arity$1 = create_element__1;
  create_element.cljs$core$IFn$_invoke$arity$2 = create_element__2;
  create_element.cljs$core$IFn$_invoke$arity$3 = create_element__3;
  create_element.cljs$core$IFn$_invoke$arity$variadic = create_element__4.cljs$core$IFn$_invoke$arity$variadic;
  return create_element;
}();
reagent.core.as_element = function as_element(form) {
  return reagent.impl.template.as_element.call(null, form);
};
reagent.core.render = function() {
  var render = null;
  var render__2 = function(comp, container) {
    return render.call(null, comp, container, null);
  };
  var render__3 = function(comp, container, callback) {
    var f = function() {
      return reagent.core.as_element.call(null, cljs.core.fn_QMARK_.call(null, comp) ? comp.call(null) : comp);
    };
    return reagent.impl.util.render_component.call(null, f, container, callback);
  };
  render = function(comp, container, callback) {
    switch(arguments.length) {
      case 2:
        return render__2.call(this, comp, container);
      case 3:
        return render__3.call(this, comp, container, callback);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render.cljs$core$IFn$_invoke$arity$2 = render__2;
  render.cljs$core$IFn$_invoke$arity$3 = render__3;
  return render;
}();
reagent.core.unmount_component_at_node = function unmount_component_at_node(container) {
  return reagent.impl.util.unmount_component_at_node.call(null, container);
};
reagent.core.render_to_string = function render_to_string(component) {
  var _STAR_non_reactive_STAR_27513 = reagent.impl.component._STAR_non_reactive_STAR_;
  reagent.impl.component._STAR_non_reactive_STAR_ = true;
  try {
    return React["renderToString"](reagent.core.as_element.call(null, component));
  } finally {
    reagent.impl.component._STAR_non_reactive_STAR_ = _STAR_non_reactive_STAR_27513;
  }
};
reagent.core.as_component = reagent.core.as_element;
reagent.core.render_component = reagent.core.render;
reagent.core.render_component_to_string = reagent.core.render_to_string;
reagent.core.render_to_static_markup = function render_to_static_markup(component) {
  var _STAR_non_reactive_STAR_27515 = reagent.impl.component._STAR_non_reactive_STAR_;
  reagent.impl.component._STAR_non_reactive_STAR_ = true;
  try {
    return React["renderToStaticMarkup"](reagent.core.as_element.call(null, component));
  } finally {
    reagent.impl.component._STAR_non_reactive_STAR_ = _STAR_non_reactive_STAR_27515;
  }
};
reagent.core.force_update_all = function force_update_all() {
  return reagent.impl.util.force_update_all.call(null);
};
goog.exportSymbol("reagent.core.force_update_all", reagent.core.force_update_all);
reagent.core.create_class = function create_class(spec) {
  return reagent.impl.component.create_class.call(null, spec);
};
reagent.core.current_component = function current_component() {
  return reagent.impl.component._STAR_current_component_STAR_;
};
reagent.core.state = function state(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.component.state.call(null, this$);
};
reagent.core.replace_state = function replace_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return reagent.impl.component.replace_state.call(null, this$, new_state);
};
reagent.core.set_state = function set_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return reagent.impl.component.set_state.call(null, this$, new_state);
};
reagent.core.props = function props(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_props.call(null, this$);
};
reagent.core.children = function children(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_children.call(null, this$);
};
reagent.core.argv = function argv(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_argv.call(null, this$);
};
reagent.core.dom_node = function dom_node(this$) {
  return this$["getDOMNode"]();
};
reagent.core.merge_props = function merge_props(defaults, props) {
  return reagent.impl.util.merge_props.call(null, defaults, props);
};
reagent.core.flush = function flush() {
  return reagent.impl.batching.flush.call(null);
};
reagent.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return reagent.ratom.atom.call(null, x);
  };
  var atom__2 = function() {
    var G__27516__delegate = function(x, rest) {
      return cljs.core.apply.call(null, reagent.ratom.atom, x, rest);
    };
    var G__27516 = function(x, var_args) {
      var rest = null;
      if (arguments.length > 1) {
        var G__27517__i = 0, G__27517__a = new Array(arguments.length - 1);
        while (G__27517__i < G__27517__a.length) {
          G__27517__a[G__27517__i] = arguments[G__27517__i + 1];
          ++G__27517__i;
        }
        rest = new cljs.core.IndexedSeq(G__27517__a, 0);
      }
      return G__27516__delegate.call(this, x, rest);
    };
    G__27516.cljs$lang$maxFixedArity = 1;
    G__27516.cljs$lang$applyTo = function(arglist__27518) {
      var x = cljs.core.first(arglist__27518);
      var rest = cljs.core.rest(arglist__27518);
      return G__27516__delegate(x, rest);
    };
    G__27516.cljs$core$IFn$_invoke$arity$variadic = G__27516__delegate;
    return G__27516;
  }();
  atom = function(x, var_args) {
    var rest = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__27519 = null;
        if (arguments.length > 1) {
          var G__27520__i = 0, G__27520__a = new Array(arguments.length - 1);
          while (G__27520__i < G__27520__a.length) {
            G__27520__a[G__27520__i] = arguments[G__27520__i + 1];
            ++G__27520__i;
          }
          G__27519 = new cljs.core.IndexedSeq(G__27520__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__27519);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
reagent.core.wrap = function() {
  var wrap__delegate = function(value, reset_fn, args) {
    if (cljs.core.ifn_QMARK_.call(null, reset_fn)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "reset-fn", "reset-fn", 949643977, null))))].join(""));
    }
    return reagent.impl.util.make_wrapper.call(null, value, reset_fn, args);
  };
  var wrap = function(value, reset_fn, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__27521__i = 0, G__27521__a = new Array(arguments.length - 2);
      while (G__27521__i < G__27521__a.length) {
        G__27521__a[G__27521__i] = arguments[G__27521__i + 2];
        ++G__27521__i;
      }
      args = new cljs.core.IndexedSeq(G__27521__a, 0);
    }
    return wrap__delegate.call(this, value, reset_fn, args);
  };
  wrap.cljs$lang$maxFixedArity = 2;
  wrap.cljs$lang$applyTo = function(arglist__27522) {
    var value = cljs.core.first(arglist__27522);
    arglist__27522 = cljs.core.next(arglist__27522);
    var reset_fn = cljs.core.first(arglist__27522);
    var args = cljs.core.rest(arglist__27522);
    return wrap__delegate(value, reset_fn, args);
  };
  wrap.cljs$core$IFn$_invoke$arity$variadic = wrap__delegate;
  return wrap;
}();
reagent.core.cursor = function() {
  var cursor = null;
  var cursor__1 = function(path) {
    return function(ra) {
      return cursor.call(null, path, ra);
    };
  };
  var cursor__2 = function(path, ra) {
    if (function() {
      var G__27525 = ra;
      if (G__27525) {
        var bit__4606__auto__ = G__27525.cljs$lang$protocol_mask$partition0$ & 32768;
        if (bit__4606__auto__ || G__27525.cljs$core$IDeref$) {
          return true;
        } else {
          if (!G__27525.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__27525);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__27525);
      }
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null), new cljs.core.Symbol(null, "ra", "ra", 1258496501, null))))].join(""));
    }
    return reagent.ratom.cursor.call(null, path, ra);
  };
  var cursor__4 = function() {
    var G__27527__delegate = function(path, ra, reset_fn, args) {
      if (function() {
        var G__27526 = ra;
        if (G__27526) {
          var bit__4606__auto__ = G__27526.cljs$lang$protocol_mask$partition0$ & 32768;
          if (bit__4606__auto__ || G__27526.cljs$core$IDeref$) {
            return true;
          } else {
            if (!G__27526.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__27526);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__27526);
        }
      }()) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null), new cljs.core.Symbol(null, "ra", "ra", 1258496501, null))))].join(""));
      }
      if (cljs.core.ifn_QMARK_.call(null, reset_fn)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "reset-fn", "reset-fn", 949643977, null))))].join(""));
      }
      return reagent.ratom.cursor.call(null, path, ra, reset_fn, args);
    };
    var G__27527 = function(path, ra, reset_fn, var_args) {
      var args = null;
      if (arguments.length > 3) {
        var G__27528__i = 0, G__27528__a = new Array(arguments.length - 3);
        while (G__27528__i < G__27528__a.length) {
          G__27528__a[G__27528__i] = arguments[G__27528__i + 3];
          ++G__27528__i;
        }
        args = new cljs.core.IndexedSeq(G__27528__a, 0);
      }
      return G__27527__delegate.call(this, path, ra, reset_fn, args);
    };
    G__27527.cljs$lang$maxFixedArity = 3;
    G__27527.cljs$lang$applyTo = function(arglist__27529) {
      var path = cljs.core.first(arglist__27529);
      arglist__27529 = cljs.core.next(arglist__27529);
      var ra = cljs.core.first(arglist__27529);
      arglist__27529 = cljs.core.next(arglist__27529);
      var reset_fn = cljs.core.first(arglist__27529);
      var args = cljs.core.rest(arglist__27529);
      return G__27527__delegate(path, ra, reset_fn, args);
    };
    G__27527.cljs$core$IFn$_invoke$arity$variadic = G__27527__delegate;
    return G__27527;
  }();
  cursor = function(path, ra, reset_fn, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return cursor__1.call(this, path);
      case 2:
        return cursor__2.call(this, path, ra);
      default:
        var G__27530 = null;
        if (arguments.length > 3) {
          var G__27531__i = 0, G__27531__a = new Array(arguments.length - 3);
          while (G__27531__i < G__27531__a.length) {
            G__27531__a[G__27531__i] = arguments[G__27531__i + 3];
            ++G__27531__i;
          }
          G__27530 = new cljs.core.IndexedSeq(G__27531__a, 0);
        }
        return cursor__4.cljs$core$IFn$_invoke$arity$variadic(path, ra, reset_fn, G__27530);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cursor.cljs$lang$maxFixedArity = 3;
  cursor.cljs$lang$applyTo = cursor__4.cljs$lang$applyTo;
  cursor.cljs$core$IFn$_invoke$arity$1 = cursor__1;
  cursor.cljs$core$IFn$_invoke$arity$2 = cursor__2;
  cursor.cljs$core$IFn$_invoke$arity$variadic = cursor__4.cljs$core$IFn$_invoke$arity$variadic;
  return cursor;
}();
reagent.core.next_tick = function next_tick(f) {
  return reagent.impl.batching.next_tick.call(null, f);
};
reagent.core.partial = function() {
  var partial__delegate = function(f, args) {
    return new reagent.impl.util.partial_ifn(f, args, null);
  };
  var partial = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__27532__i = 0, G__27532__a = new Array(arguments.length - 1);
      while (G__27532__i < G__27532__a.length) {
        G__27532__a[G__27532__i] = arguments[G__27532__i + 1];
        ++G__27532__i;
      }
      args = new cljs.core.IndexedSeq(G__27532__a, 0);
    }
    return partial__delegate.call(this, f, args);
  };
  partial.cljs$lang$maxFixedArity = 1;
  partial.cljs$lang$applyTo = function(arglist__27533) {
    var f = cljs.core.first(arglist__27533);
    var args = cljs.core.rest(arglist__27533);
    return partial__delegate(f, args);
  };
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__delegate;
  return partial;
}();
goog.provide("html");
goog.require("cljs.core");
goog.require("reagent.core");
html.timer = reagent.core.atom.call(null, new Date);
html.time_color = reagent.core.atom.call(null, "#f34");
html.update_time = function update_time(time) {
  return setTimeout(function() {
    return cljs.core.reset_BANG_.call(null, time, new Date);
  }, 100);
};
html.greeting = function greeting(message) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h1", "h1", -1896887462), message], null);
};
html.proFile = function proFile(name, desc, pic, extra) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "width", "width", -384071477), "200px"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul.unstyled", 
  "ul.unstyled", -1948620308), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a.list-item", "a.list-item", -1757304900), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.pull-left", "div.pull-left", 727555294), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.circle", "div.circle", 2134211799), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), pic, new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "width", "width", 
  -384071477), "40px", new cljs.core.Keyword(null, "height", "height", 1025178622), "40px"], null)], null)], null)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.text", "div.text", 645060726), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), desc, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "br", "br", 934104792)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.small", "span.small", 1761756015), name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.text-grey", "span.text-grey", 391584589), extra], null)], null)], null)], null)], null)], null)], null)], null);
};
html.clock = function clock() {
  html.update_time.call(null, html.timer);
  var time_str = cljs.core.first.call(null, clojure.string.split.call(null, cljs.core.deref.call(null, html.timer).toTimeString(), " "));
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.example-clock", "div.example-clock", 1559289088), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "color", "color", 1011675173), cljs.core.deref.call(null, html.time_color)], null)], null), time_str], null);
};
html.color_input = function color_input() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.color-input", "div.color-input", -879914246), "Time color: ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.deref.call(null, 
  html.time_color), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__14852_SHARP_) {
    return cljs.core.reset_BANG_.call(null, html.time_color, p1__14852_SHARP_.target.value);
  }], null)], null)], null);
};
html.simple_example = function simple_example(name, desc, pic, extra) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [html.proFile, name, desc, pic, extra], null);
};
html.run = function run(name, desc, pic, extra) {
  return reagent.core.render_component.call(null, function() {
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [html.proFile, name, desc, pic, extra], null);
  }, document.body);
};
goog.provide("peerjs");
goog.require("cljs.core");
peerjs.peerParams = function() {
  var obj11966 = {"host":"localhost", "port":8E3, "key":"peerjs", "debug":false};
  return obj11966;
}();
goog.provide("communications");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
communications.intercomMeta = function() {
  var obj14869 = {"id":1, "knownPeers":cljs.core.PersistentVector.EMPTY, "knownPeersChannels":cljs.core.PersistentVector.EMPTY, "p2pchans":cljs.core.PersistentVector.EMPTY};
  return obj14869;
}();
communications.peers = cljs.core.PersistentVector.EMPTY;
communications.transactionch = cljs.core.async.chan.call(null);
communications.transactionch.type = "transactionch";
communications.cryptoCh = cljs.core.async.chan.call(null);
communications.cryptoCh.type = "cryptoch";
communications.setID = function setID(ev, id) {
  cljs.core.println.call(null, id);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_14897) {
            var state_val_14898 = state_14897[1];
            if (state_val_14898 === 2) {
              var inst_14890 = state_14897[2];
              var inst_14891 = console.log(inst_14890);
              var inst_14892 = new Peer(id, communications.peerParams);
              var inst_14893 = communications.peerjs = inst_14892;
              var inst_14894 = communications.init.call(null, communications.peerjs);
              var inst_14895 = communications.peerjs.on("connection", comm.onConnection);
              var state_14897__$1 = function() {
                var statearr_14899 = state_14897;
                statearr_14899[5] = inst_14891;
                statearr_14899[6] = inst_14893;
                statearr_14899[7] = inst_14894;
                return statearr_14899;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14897__$1, inst_14895);
            } else {
              if (state_val_14898 === 1) {
                var inst_14887 = communications.p.call(null, "lid", id);
                var inst_14888 = communications.g.call(null, "lid");
                var state_14897__$1 = function() {
                  var statearr_14900 = state_14897;
                  statearr_14900[8] = inst_14887;
                  return statearr_14900;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14897__$1, 2, inst_14888);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_14902 = [null, null, null, null, null, null, null, null, null];
              statearr_14902[0] = state_machine__6521__auto__;
              statearr_14902[1] = 1;
              return statearr_14902;
            };
            var state_machine__6521__auto____1 = function(state_14897) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_14897);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_14897) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_14897);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_14903 = f__6565__auto__.call(null);
        statearr_14903[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_14903;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
communications.start = cljs.core.async.chan.call(null);
communications.initial = function initial() {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_14964) {
            var state_val_14965 = state_14964[1];
            if (state_val_14965 === 6) {
              var inst_14956 = state_14964[2];
              var state_14964__$1 = state_14964;
              var statearr_14966_14976 = state_14964__$1;
              statearr_14966_14976[2] = inst_14956;
              statearr_14966_14976[1] = 5;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14965 === 5) {
                var inst_14958 = state_14964[2];
                var inst_14959 = pubsub.initpubsub.call(null);
                var inst_14960 = comm.setupComm.call(null);
                var inst_14961 = comm.startP2PCommLoop.call(null);
                var inst_14962 = ht.run.call(null, "Taras Bulba", "zaparozie r0x", "i4c32d4308e1fe.jpg", "- zaparozie");
                var state_14964__$1 = function() {
                  var statearr_14967 = state_14964;
                  statearr_14967[5] = inst_14960;
                  statearr_14967[6] = inst_14961;
                  statearr_14967[7] = inst_14958;
                  statearr_14967[8] = inst_14959;
                  return statearr_14967;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14964__$1, inst_14962);
              } else {
                if (state_val_14965 === 4) {
                  var inst_14954 = communications.initDBase.call(null);
                  var state_14964__$1 = state_14964;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14964__$1, 6, inst_14954);
                } else {
                  if (state_val_14965 === 3) {
                    var inst_14946 = console.log(communications.id);
                    var inst_14947 = $("#id");
                    var inst_14948 = inst_14947.val(communications.id);
                    var inst_14949 = new Peer(communications.id, communications.peerParams);
                    var inst_14950 = communications.peerjs = inst_14949;
                    var inst_14951 = communications.init.call(null, communications.peerjs);
                    var inst_14952 = communications.peerjs.on("connection", comm.onConnection);
                    var state_14964__$1 = function() {
                      var statearr_14968 = state_14964;
                      statearr_14968[9] = inst_14950;
                      statearr_14968[10] = inst_14951;
                      statearr_14968[11] = inst_14946;
                      statearr_14968[12] = inst_14948;
                      return statearr_14968;
                    }();
                    var statearr_14969_14977 = state_14964__$1;
                    statearr_14969_14977[2] = inst_14952;
                    statearr_14969_14977[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14965 === 2) {
                      var inst_14942 = state_14964[2];
                      var inst_14943 = communications.id = inst_14942;
                      var inst_14944 = l.og.call(null, new cljs.core.Keyword(null, "entryy", "entryy", -1997262549), "got id %s ", communications.id);
                      var state_14964__$1 = function() {
                        var statearr_14970 = state_14964;
                        statearr_14970[13] = inst_14943;
                        statearr_14970[14] = inst_14944;
                        return statearr_14970;
                      }();
                      if (cljs.core.truth_(communications.id)) {
                        var statearr_14971_14978 = state_14964__$1;
                        statearr_14971_14978[1] = 3;
                      } else {
                        var statearr_14972_14979 = state_14964__$1;
                        statearr_14972_14979[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14965 === 1) {
                        var inst_14940 = communications.g.call(null, "lid");
                        var state_14964__$1 = state_14964;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14964__$1, 2, inst_14940);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_14974 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_14974[0] = state_machine__6521__auto__;
              statearr_14974[1] = 1;
              return statearr_14974;
            };
            var state_machine__6521__auto____1 = function(state_14964) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_14964);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_14964) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_14964);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_14975 = f__6565__auto__.call(null);
        statearr_14975[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_14975;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
communications.connectionch = cljs.core.async.chan.call(null);
communications.broadcastNewBlock = function broadcastNewBlock(blockk) {
  l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "broadsacting new block", blockk);
  l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "broadsacting new block to ", communications.intercomMeta.knownPeersChannels);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15125) {
            var state_val_15126 = state_15125[1];
            if (state_val_15126 === 7) {
              var inst_15073 = state_15125[5];
              var inst_15076 = state_15125[6];
              var inst_15074 = state_15125[7];
              var inst_15075 = state_15125[8];
              var inst_15090 = state_15125[2];
              var inst_15091 = inst_15076 + 1;
              var tmp15127 = inst_15073;
              var tmp15128 = inst_15074;
              var tmp15129 = inst_15075;
              var inst_15073__$1 = tmp15127;
              var inst_15074__$1 = tmp15128;
              var inst_15075__$1 = tmp15129;
              var inst_15076__$1 = inst_15091;
              var state_15125__$1 = function() {
                var statearr_15130 = state_15125;
                statearr_15130[5] = inst_15073__$1;
                statearr_15130[6] = inst_15076__$1;
                statearr_15130[9] = inst_15090;
                statearr_15130[7] = inst_15074__$1;
                statearr_15130[8] = inst_15075__$1;
                return statearr_15130;
              }();
              var statearr_15131_15154 = state_15125__$1;
              statearr_15131_15154[2] = null;
              statearr_15131_15154[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15126 === 1) {
                var inst_15071 = communications.intercomMeta.knownPeersChannels;
                var inst_15072 = cljs.core.seq.call(null, inst_15071);
                var inst_15073 = inst_15072;
                var inst_15074 = null;
                var inst_15075 = 0;
                var inst_15076 = 0;
                var state_15125__$1 = function() {
                  var statearr_15132 = state_15125;
                  statearr_15132[5] = inst_15073;
                  statearr_15132[6] = inst_15076;
                  statearr_15132[7] = inst_15074;
                  statearr_15132[8] = inst_15075;
                  return statearr_15132;
                }();
                var statearr_15133_15155 = state_15125__$1;
                statearr_15133_15155[2] = null;
                statearr_15133_15155[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15126 === 4) {
                  var inst_15076 = state_15125[6];
                  var inst_15074 = state_15125[7];
                  var inst_15081 = cljs.core._nth.call(null, inst_15074, inst_15076);
                  var inst_15082 = "broadsacting new block to peer " + inst_15081;
                  var inst_15083 = inst_15082 + " ";
                  var inst_15084 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), inst_15083, blockk);
                  var inst_15085 = [];
                  var inst_15086 = communications.vectoR = inst_15085;
                  var inst_15087 = communications.vectoR.push(blockk);
                  var inst_15088 = im.makeInv.call(null, "block", communications.vectoR);
                  var state_15125__$1 = function() {
                    var statearr_15134 = state_15125;
                    statearr_15134[10] = inst_15087;
                    statearr_15134[11] = inst_15086;
                    statearr_15134[12] = inst_15084;
                    return statearr_15134;
                  }();
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15125__$1, 7, inst_15081, inst_15088);
                } else {
                  if (state_val_15126 === 13) {
                    var inst_15116 = state_15125[2];
                    var state_15125__$1 = state_15125;
                    var statearr_15135_15156 = state_15125__$1;
                    statearr_15135_15156[2] = inst_15116;
                    statearr_15135_15156[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15126 === 6) {
                      var inst_15121 = state_15125[2];
                      var state_15125__$1 = state_15125;
                      var statearr_15136_15157 = state_15125__$1;
                      statearr_15136_15157[2] = inst_15121;
                      statearr_15136_15157[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15126 === 3) {
                        var inst_15123 = state_15125[2];
                        var state_15125__$1 = state_15125;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15125__$1, inst_15123);
                      } else {
                        if (state_val_15126 === 12) {
                          var inst_15094 = state_15125[13];
                          var inst_15103 = cljs.core.first.call(null, inst_15094);
                          var inst_15104 = "broadsacting new block to peer " + inst_15103;
                          var inst_15105 = inst_15104 + " ";
                          var inst_15106 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), inst_15105, blockk);
                          var inst_15107 = [];
                          var inst_15108 = communications.vectoR = inst_15107;
                          var inst_15109 = communications.vectoR.push(blockk);
                          var inst_15110 = im.makeInv.call(null, "block", communications.vectoR);
                          var state_15125__$1 = function() {
                            var statearr_15137 = state_15125;
                            statearr_15137[14] = inst_15106;
                            statearr_15137[15] = inst_15108;
                            statearr_15137[16] = inst_15109;
                            return statearr_15137;
                          }();
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15125__$1, 14, inst_15103, inst_15110);
                        } else {
                          if (state_val_15126 === 2) {
                            var inst_15076 = state_15125[6];
                            var inst_15075 = state_15125[8];
                            var inst_15078 = inst_15076 < inst_15075;
                            var inst_15079 = inst_15078;
                            var state_15125__$1 = state_15125;
                            if (cljs.core.truth_(inst_15079)) {
                              var statearr_15138_15158 = state_15125__$1;
                              statearr_15138_15158[1] = 4;
                            } else {
                              var statearr_15139_15159 = state_15125__$1;
                              statearr_15139_15159[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15126 === 11) {
                              var inst_15094 = state_15125[13];
                              var inst_15098 = cljs.core.chunk_first.call(null, inst_15094);
                              var inst_15099 = cljs.core.chunk_rest.call(null, inst_15094);
                              var inst_15100 = cljs.core.count.call(null, inst_15098);
                              var inst_15073 = inst_15099;
                              var inst_15074 = inst_15098;
                              var inst_15075 = inst_15100;
                              var inst_15076 = 0;
                              var state_15125__$1 = function() {
                                var statearr_15140 = state_15125;
                                statearr_15140[5] = inst_15073;
                                statearr_15140[6] = inst_15076;
                                statearr_15140[7] = inst_15074;
                                statearr_15140[8] = inst_15075;
                                return statearr_15140;
                              }();
                              var statearr_15141_15160 = state_15125__$1;
                              statearr_15141_15160[2] = null;
                              statearr_15141_15160[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_15126 === 9) {
                                var state_15125__$1 = state_15125;
                                var statearr_15142_15161 = state_15125__$1;
                                statearr_15142_15161[2] = null;
                                statearr_15142_15161[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15126 === 5) {
                                  var inst_15073 = state_15125[5];
                                  var inst_15094 = state_15125[13];
                                  var inst_15094__$1 = cljs.core.seq.call(null, inst_15073);
                                  var state_15125__$1 = function() {
                                    var statearr_15143 = state_15125;
                                    statearr_15143[13] = inst_15094__$1;
                                    return statearr_15143;
                                  }();
                                  if (inst_15094__$1) {
                                    var statearr_15144_15162 = state_15125__$1;
                                    statearr_15144_15162[1] = 8;
                                  } else {
                                    var statearr_15145_15163 = state_15125__$1;
                                    statearr_15145_15163[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15126 === 14) {
                                    var inst_15094 = state_15125[13];
                                    var inst_15112 = state_15125[2];
                                    var inst_15113 = cljs.core.next.call(null, inst_15094);
                                    var inst_15073 = inst_15113;
                                    var inst_15074 = null;
                                    var inst_15075 = 0;
                                    var inst_15076 = 0;
                                    var state_15125__$1 = function() {
                                      var statearr_15146 = state_15125;
                                      statearr_15146[5] = inst_15073;
                                      statearr_15146[17] = inst_15112;
                                      statearr_15146[6] = inst_15076;
                                      statearr_15146[7] = inst_15074;
                                      statearr_15146[8] = inst_15075;
                                      return statearr_15146;
                                    }();
                                    var statearr_15147_15164 = state_15125__$1;
                                    statearr_15147_15164[2] = null;
                                    statearr_15147_15164[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_15126 === 10) {
                                      var inst_15119 = state_15125[2];
                                      var state_15125__$1 = state_15125;
                                      var statearr_15148_15165 = state_15125__$1;
                                      statearr_15148_15165[2] = inst_15119;
                                      statearr_15148_15165[1] = 6;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15126 === 8) {
                                        var inst_15094 = state_15125[13];
                                        var inst_15096 = cljs.core.chunked_seq_QMARK_.call(null, inst_15094);
                                        var state_15125__$1 = state_15125;
                                        if (inst_15096) {
                                          var statearr_15149_15166 = state_15125__$1;
                                          statearr_15149_15166[1] = 11;
                                        } else {
                                          var statearr_15150_15167 = state_15125__$1;
                                          statearr_15150_15167[1] = 12;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15152 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15152[0] = state_machine__6521__auto__;
              statearr_15152[1] = 1;
              return statearr_15152;
            };
            var state_machine__6521__auto____1 = function(state_15125) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15125);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15125) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15125);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15153 = f__6565__auto__.call(null);
        statearr_15153[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15153;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
communications.sendmsg = function sendmsg(peer, type, msg) {
  l.og.call(null, new cljs.core.Keyword(null, "sendmsg", "sendmsg", -606247143), "sending " + type, msg);
  l.og.call(null, new cljs.core.Keyword(null, "sendmsg", "sendmsg", -606247143), "peer ", peer);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15185) {
            var state_val_15186 = state_15185[1];
            if (state_val_15186 === 2) {
              var inst_15183 = state_15185[2];
              var state_15185__$1 = state_15185;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15185__$1, inst_15183);
            } else {
              if (state_val_15186 === 1) {
                var inst_15181 = {"type":type, "msg":msg};
                var state_15185__$1 = state_15185;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15185__$1, 2, peer, inst_15181);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15188 = [null, null, null, null, null];
              statearr_15188[0] = state_machine__6521__auto__;
              statearr_15188[1] = 1;
              return statearr_15188;
            };
            var state_machine__6521__auto____1 = function(state_15185) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15185);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15185) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15185);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15189 = f__6565__auto__.call(null);
        statearr_15189[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15189;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
communications.onOpen = function onOpen(conn) {
  l.og.call(null, new cljs.core.Keyword(null, "conn", "conn", 278309663), "connection opened trying to send data trough");
  l.og.call(null, new cljs.core.Keyword(null, "conn", "conn", 278309663), conn);
  conn.connType = "saltan";
  var c__6564__auto___15206 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___15206) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto___15206) {
          return function(state_15201) {
            var state_val_15202 = state_15201[1];
            if (state_val_15202 === 2) {
              var inst_15199 = state_15201[2];
              var state_15201__$1 = state_15201;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15201__$1, inst_15199);
            } else {
              if (state_val_15202 === 1) {
                var state_15201__$1 = state_15201;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15201__$1, 2, communications.connectionch, conn);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto___15206);
        return function(switch__6520__auto__, c__6564__auto___15206) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15204 = [null, null, null, null, null];
              statearr_15204[0] = state_machine__6521__auto__;
              statearr_15204[1] = 1;
              return statearr_15204;
            };
            var state_machine__6521__auto____1 = function(state_15201) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15201);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15201) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15201);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto___15206);
      }();
      var state__6566__auto__ = function() {
        var statearr_15205 = f__6565__auto__.call(null);
        statearr_15205[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___15206;
        return statearr_15205;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto___15206));
  return l.og.call(null, new cljs.core.Keyword(null, "conn", "conn", 278309663), "conn: ", conn);
};
communications.onConnection = function onConnection(conn) {
  l.og.call(null, new cljs.core.Keyword(null, "conn", "conn", 278309663), "connection is opened now try to send something");
  conn.connType = "tsaritsa";
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15218) {
            var state_val_15219 = state_15218[1];
            if (state_val_15219 === 2) {
              var inst_15216 = state_15218[2];
              var state_15218__$1 = state_15218;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15218__$1, inst_15216);
            } else {
              if (state_val_15219 === 1) {
                var state_15218__$1 = state_15218;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15218__$1, 2, communications.connectionch, conn);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15221 = [null, null, null, null, null];
              statearr_15221[0] = state_machine__6521__auto__;
              statearr_15221[1] = 1;
              return statearr_15221;
            };
            var state_machine__6521__auto____1 = function(state_15218) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15218);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15218) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15218);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15222 = f__6565__auto__.call(null);
        statearr_15222[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15222;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
communications.onData = function onData(read, data) {
  l.og.call(null, new cljs.core.Keyword(null, "conn", "conn", 278309663), "data recieved", data);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15234) {
            var state_val_15235 = state_15234[1];
            if (state_val_15235 === 2) {
              var inst_15232 = state_15234[2];
              var state_15234__$1 = state_15234;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15234__$1, inst_15232);
            } else {
              if (state_val_15235 === 1) {
                var state_15234__$1 = state_15234;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15234__$1, 2, read, data);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15237 = [null, null, null, null, null];
              statearr_15237[0] = state_machine__6521__auto__;
              statearr_15237[1] = 1;
              return statearr_15237;
            };
            var state_machine__6521__auto____1 = function(state_15234) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15234);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15234) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15234);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15238 = f__6565__auto__.call(null);
        statearr_15238[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15238;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
communications.channelsFromConnection = function channelsFromConnection(conn) {
  communications.readc = cljs.core.async.chan.call(null, 10);
  communications.writec = cljs.core.async.chan.call(null, 10);
  communications.readc.writec = communications.writec;
  communications.readc.type = "readch";
  communications.writec.type = "writech";
  conn.writec = communications.writec;
  conn.readc = communications.readc;
  communications.readc.conn = conn;
  communications.writec.conn = conn;
  conn.on("data", cljs.core.partial.call(null, communications.onData, communications.readc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [communications.readc, communications.writec], null);
};
communications.startP2PCommLoop = function startP2PCommLoop() {
  communications.stated = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [communications.connectionch], null);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15393) {
            var state_val_15394 = state_15393[1];
            if (state_val_15394 === 7) {
              var inst_15388 = state_15393[2];
              var state_15393__$1 = function() {
                var statearr_15395 = state_15393;
                statearr_15395[5] = inst_15388;
                return statearr_15395;
              }();
              var statearr_15396_15423 = state_15393__$1;
              statearr_15396_15423[2] = null;
              statearr_15396_15423[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15394 === 1) {
                var state_15393__$1 = state_15393;
                var statearr_15397_15424 = state_15393__$1;
                statearr_15397_15424[2] = null;
                statearr_15397_15424[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15394 === 4) {
                  var inst_15335 = state_15393[2];
                  var inst_15336 = communications.v = inst_15335;
                  var inst_15337 = l.og.call(null, new cljs.core.Keyword(null, "p2ploop", "p2ploop", -674348610), "got from state", communications.v);
                  var inst_15338 = cljs.core.nth.call(null, communications.v, 0);
                  var inst_15339 = communications.vrecieved = inst_15338;
                  var inst_15340 = cljs.core.nth.call(null, communications.v, 1);
                  var inst_15341 = communications.ch2 = inst_15340;
                  var inst_15342 = cljs.core.nth.call(null, communications.v, 1);
                  var inst_15343 = inst_15342 === communications.connectionch;
                  var state_15393__$1 = function() {
                    var statearr_15398 = state_15393;
                    statearr_15398[6] = inst_15341;
                    statearr_15398[7] = inst_15336;
                    statearr_15398[8] = inst_15339;
                    statearr_15398[9] = inst_15337;
                    return statearr_15398;
                  }();
                  if (cljs.core.truth_(inst_15343)) {
                    var statearr_15399_15425 = state_15393__$1;
                    statearr_15399_15425[1] = 5;
                  } else {
                    var statearr_15400_15426 = state_15393__$1;
                    statearr_15400_15426[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15394 === 15) {
                    var state_15393__$1 = state_15393;
                    var statearr_15401_15427 = state_15393__$1;
                    statearr_15401_15427[2] = null;
                    statearr_15401_15427[1] = 16;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15394 === 13) {
                      var inst_15368 = state_15393[2];
                      var inst_15369 = communications.ch2.writec;
                      var inst_15370 = communications.vrecieved.peer = inst_15369;
                      var inst_15371 = communications.ch2.conn;
                      var inst_15372 = i.intercomstatemachine.call(null, inst_15371, communications.vrecieved);
                      var state_15393__$1 = function() {
                        var statearr_15402 = state_15393;
                        statearr_15402[10] = inst_15368;
                        statearr_15402[11] = inst_15370;
                        return statearr_15402;
                      }();
                      var statearr_15403_15428 = state_15393__$1;
                      statearr_15403_15428[2] = inst_15372;
                      statearr_15403_15428[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15394 === 6) {
                        var inst_15356 = communications.ch2.type;
                        var inst_15357 = inst_15356 === "readch";
                        var state_15393__$1 = state_15393;
                        if (cljs.core.truth_(inst_15357)) {
                          var statearr_15404_15429 = state_15393__$1;
                          statearr_15404_15429[1] = 8;
                        } else {
                          var statearr_15405_15430 = state_15393__$1;
                          statearr_15405_15430[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15394 === 3) {
                          var inst_15391 = state_15393[2];
                          var state_15393__$1 = state_15393;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15393__$1, inst_15391);
                        } else {
                          if (state_val_15394 === 12) {
                            var state_15393__$1 = state_15393;
                            var statearr_15406_15431 = state_15393__$1;
                            statearr_15406_15431[2] = null;
                            statearr_15406_15431[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15394 === 2) {
                              var inst_15332 = l.og.call(null, new cljs.core.Keyword(null, "p2pCommLoop", "p2pCommLoop", -1999314115), "new iteration with state");
                              var inst_15333 = l.og.call(null, new cljs.core.Keyword(null, "p2pCommLoop", "p2pCommLoop", -1999314115), "state ", communications.stated);
                              var state_15393__$1 = function() {
                                var statearr_15407 = state_15393;
                                statearr_15407[12] = inst_15333;
                                statearr_15407[13] = inst_15332;
                                return statearr_15407;
                              }();
                              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_15393__$1, 4, communications.stated);
                            } else {
                              if (state_val_15394 === 11) {
                                var inst_15363 = communications.vrecieved.data;
                                var inst_15364 = JSON.parse(inst_15363);
                                var inst_15365 = communications.vrecieved = inst_15364;
                                var state_15393__$1 = state_15393;
                                var statearr_15408_15432 = state_15393__$1;
                                statearr_15408_15432[2] = inst_15365;
                                statearr_15408_15432[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15394 === 9) {
                                  var inst_15374 = communications.ch2.type;
                                  var inst_15375 = inst_15374 === "writech";
                                  var state_15393__$1 = state_15393;
                                  if (cljs.core.truth_(inst_15375)) {
                                    var statearr_15409_15433 = state_15393__$1;
                                    statearr_15409_15433[1] = 14;
                                  } else {
                                    var statearr_15410_15434 = state_15393__$1;
                                    statearr_15410_15434[1] = 15;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15394 === 5) {
                                    var inst_15345 = cljs.core.PersistentVector.EMPTY;
                                    var inst_15346 = communications.onNewConnection.call(null, communications.vrecieved);
                                    var inst_15347 = cljs.core.concat.call(null, communications.stated, inst_15346);
                                    var inst_15348 = cljs.core.into.call(null, inst_15345, inst_15347);
                                    var inst_15349 = communications.stated = inst_15348;
                                    var inst_15350 = i.getIntercomState.call(null, communications.vrecieved);
                                    var inst_15351 = communications.stat = inst_15350;
                                    var inst_15352 = l.og.call(null, new cljs.core.Keyword(null, "p2ploop", "p2ploop", -674348610), "intercom state", communications.stat);
                                    var inst_15353 = im.makeConn.call(null, communications.vrecieved);
                                    var inst_15354 = i.intercomstatemachine.call(null, communications.vrecieved, inst_15353);
                                    var state_15393__$1 = function() {
                                      var statearr_15411 = state_15393;
                                      statearr_15411[14] = inst_15351;
                                      statearr_15411[15] = inst_15352;
                                      statearr_15411[16] = inst_15349;
                                      return statearr_15411;
                                    }();
                                    var statearr_15412_15435 = state_15393__$1;
                                    statearr_15412_15435[2] = inst_15354;
                                    statearr_15412_15435[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_15394 === 14) {
                                      var inst_15377 = l.og.call(null, new cljs.core.Keyword(null, "p2ploop", "p2ploop", -674348610), "sending to peer ", communications.vrecieved);
                                      var inst_15378 = communications.ch2.conn;
                                      var inst_15379 = l.og.call(null, new cljs.core.Keyword(null, "p2ploop", "p2ploop", -674348610), "connection being sent to ", inst_15378);
                                      var inst_15380 = communications.ch2.conn;
                                      var inst_15381 = inst_15380.send(communications.vrecieved);
                                      var state_15393__$1 = function() {
                                        var statearr_15413 = state_15393;
                                        statearr_15413[17] = inst_15379;
                                        statearr_15413[18] = inst_15377;
                                        return statearr_15413;
                                      }();
                                      var statearr_15414_15436 = state_15393__$1;
                                      statearr_15414_15436[2] = inst_15381;
                                      statearr_15414_15436[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15394 === 16) {
                                        var inst_15384 = state_15393[2];
                                        var state_15393__$1 = state_15393;
                                        var statearr_15415_15437 = state_15393__$1;
                                        statearr_15415_15437[2] = inst_15384;
                                        statearr_15415_15437[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15394 === 10) {
                                          var inst_15386 = state_15393[2];
                                          var state_15393__$1 = state_15393;
                                          var statearr_15416_15438 = state_15393__$1;
                                          statearr_15416_15438[2] = inst_15386;
                                          statearr_15416_15438[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15394 === 8) {
                                            var inst_15359 = l.og.call(null, new cljs.core.Keyword(null, "p2ploop", "p2ploop", -674348610), "recieved from peer ", communications.vrecieved);
                                            var inst_15360 = communications.vrecieved.type;
                                            var inst_15361 = inst_15360 === "json";
                                            var state_15393__$1 = function() {
                                              var statearr_15417 = state_15393;
                                              statearr_15417[19] = inst_15359;
                                              return statearr_15417;
                                            }();
                                            if (cljs.core.truth_(inst_15361)) {
                                              var statearr_15418_15439 = state_15393__$1;
                                              statearr_15418_15439[1] = 11;
                                            } else {
                                              var statearr_15419_15440 = state_15393__$1;
                                              statearr_15419_15440[1] = 12;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15421 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15421[0] = state_machine__6521__auto__;
              statearr_15421[1] = 1;
              return statearr_15421;
            };
            var state_machine__6521__auto____1 = function(state_15393) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15393);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15393) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15393);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15422 = f__6565__auto__.call(null);
        statearr_15422[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15422;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
communications.onNewConnection = function onNewConnection(message) {
  communications.gconn = message;
  intercom.setIntercomState.call(null, message, "start");
  l.og.call(null, new cljs.core.Keyword(null, "mloop", "mloop", -1729555731), "got new connection", message);
  communications.peerChannels = communications.channelsFromConnection.call(null, message);
  communications.intercomMeta.knownPeers = cljs.core.conj.call(null, communications.intercomMeta.knownPeers, message.peer);
  l.og.call(null, new cljs.core.Keyword(null, "mloop", "mloop", -1729555731), "adding w channel to kpeers ", cljs.core.nth.call(null, communications.peerChannels, 1));
  communications.intercomMeta.p2pchans = cljs.core.concat.call(null, communications.intercomMeta.p2pchans, communications.peerChannels);
  communications.intercomMeta.knownPeersChannels = cljs.core.conj.call(null, communications.intercomMeta.knownPeersChannels, cljs.core.nth.call(null, communications.peerChannels, 1));
  l.og.call(null, new cljs.core.Keyword(null, "mloop", "mloop", -1729555731), "new state");
  return communications.peerChannels;
};
communications.onBlockMined = function onBlockMined(message) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15488) {
            var state_val_15489 = state_15488[1];
            if (state_val_15489 === 4) {
              var inst_15483 = state_15488[2];
              var inst_15484 = communications.gotFromHash = inst_15483;
              var inst_15485 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "got from hash ", communications.gotFromHash);
              var inst_15486 = communications.broadcastNewBlock.call(null, communications.gotFromHash);
              var state_15488__$1 = function() {
                var statearr_15490 = state_15488;
                statearr_15490[5] = inst_15484;
                statearr_15490[6] = inst_15485;
                return statearr_15490;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15488__$1, inst_15486);
            } else {
              if (state_val_15489 === 3) {
                var inst_15479 = state_15488[2];
                var inst_15480 = communications.blockk.hash;
                var inst_15481 = db.g.call(null, inst_15480);
                var state_15488__$1 = function() {
                  var statearr_15491 = state_15488;
                  statearr_15491[7] = inst_15479;
                  return statearr_15491;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15488__$1, 4, inst_15481);
              } else {
                if (state_val_15489 === 2) {
                  var inst_15472 = state_15488[2];
                  var inst_15473 = communications.blockk = inst_15472;
                  var inst_15474 = l.og.call(null, new cljs.core.Keyword(null, "onBlockMined", "onBlockMined", -993463133), "just made new block ", communications.blockk);
                  var inst_15475 = communications.blockk.hash;
                  var inst_15476 = l.og.call(null, new cljs.core.Keyword(null, "message", "message", -406056002), "hash to get ", inst_15475);
                  var inst_15477 = b.saveBlock.call(null, app.pouchDB.dbase, communications.blockk);
                  var state_15488__$1 = function() {
                    var statearr_15492 = state_15488;
                    statearr_15492[8] = inst_15473;
                    statearr_15492[9] = inst_15476;
                    statearr_15492[10] = inst_15474;
                    return statearr_15492;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15488__$1, 3, inst_15477);
                } else {
                  if (state_val_15489 === 1) {
                    var inst_15469 = l.og.call(null, new cljs.core.Keyword(null, "onBlockMined", "onBlockMined", -993463133), "recieved from worker ", message);
                    var inst_15470 = b.makeBlock.call(null, message);
                    var state_15488__$1 = function() {
                      var statearr_15493 = state_15488;
                      statearr_15493[11] = inst_15469;
                      return statearr_15493;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15488__$1, 2, inst_15470);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15495 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15495[0] = state_machine__6521__auto__;
              statearr_15495[1] = 1;
              return statearr_15495;
            };
            var state_machine__6521__auto____1 = function(state_15488) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15488);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15488) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15488);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15496 = f__6565__auto__.call(null);
        statearr_15496[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15496;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
communications.onTransaction = function onTransaction(message) {
  l.og.call(null, new cljs.core.Keyword(null, "onTransaction", "onTransaction", 1991881135), "recieved new transaction ", message);
  return communications.sha256.call(null, message);
};
communications.onCrypto = function onCrypto(message) {
  l.og.call(null, new cljs.core.Keyword(null, "onCrypto", "onCrypto", -1930465906), "recieved from crypto ", message);
  l.og.call(null, new cljs.core.Keyword(null, "onCrypto", "onCrypto", -1930465906), "mempoll \x3d ", b.memPool);
  b.addTransactionToMemPool.call(null, message);
  l.og.call(null, new cljs.core.Keyword(null, "onCrypto", "onCrypto", -1930465906), message["type"]);
  if (message["type"] === "fmr") {
    l.og.call(null, new cljs.core.Keyword(null, "onCrypto", "onCrypto", -1930465906), "merkle root ", message);
    communications.mine.call(null, message["value"]);
  } else {
  }
  if (cljs.core.count.call(null, b.memPool) > 3) {
    var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto__) {
            return function(state_15517) {
              var state_val_15518 = state_15517[1];
              if (state_val_15518 === 2) {
                var inst_15512 = state_15517[2];
                var inst_15513 = communications.fmroot = inst_15512;
                var inst_15514 = l.og.call(null, new cljs.core.Keyword(null, "onCrypto", "onCrypto", -1930465906), "calculating hash of transactions %s", communications.fmroot);
                var inst_15515 = communications.mine.call(null, communications.fmroot);
                var state_15517__$1 = function() {
                  var statearr_15519 = state_15517;
                  statearr_15519[5] = inst_15514;
                  statearr_15519[6] = inst_15513;
                  return statearr_15519;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15517__$1, inst_15515);
              } else {
                if (state_val_15518 === 1) {
                  var inst_15510 = crypto.merkleRoot.call(null, b.memPool);
                  var state_15517__$1 = state_15517;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15517__$1, 2, inst_15510);
                } else {
                  return null;
                }
              }
            };
          }(c__6564__auto__);
          return function(switch__6520__auto__, c__6564__auto__) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_15521 = [null, null, null, null, null, null, null];
                statearr_15521[0] = state_machine__6521__auto__;
                statearr_15521[1] = 1;
                return statearr_15521;
              };
              var state_machine__6521__auto____1 = function(state_15517) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_15517);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_15517) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_15517);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto__);
        }();
        var state__6566__auto__ = function() {
          var statearr_15522 = f__6565__auto__.call(null);
          statearr_15522[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
          return statearr_15522;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto__));
    return c__6564__auto__;
  } else {
    return null;
  }
};
communications.setupComm = function setupComm() {
  pubsub.sub.call(null, "blockMined", communications.onBlockMined);
  pubsub.sub.call(null, "crypto", communications.onCrypto);
  pubsub.sub.call(null, "transaction", communications.onTransaction);
  return pubsub.sub.call(null, "newConnection", communications.onNewConnection);
};
goog.provide("crypt");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
crypt.arraybtostring = function arraybtostring(buff) {
  return arrayBToString(buff);
};
crypt.encode = function encode(x) {
  return(new TextEncoder("utf-8")).encode(x);
};
crypt.shaC = cljs.core.async.chan.call(null);
crypt.resultToCh = function resultToCh(chan, digest) {
  crypt.m = crypt.arraybtostring.call(null, digest);
  l.og.call(null, new cljs.core.Keyword(null, "blockchain", "blockchain", -1030570049), "to channel: %s", crypt.m);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_17649) {
            var state_val_17650 = state_17649[1];
            if (state_val_17650 === 2) {
              var inst_17647 = state_17649[2];
              var state_17649__$1 = state_17649;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17649__$1, inst_17647);
            } else {
              if (state_val_17650 === 1) {
                var state_17649__$1 = state_17649;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17649__$1, 2, chan, crypt.m);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_17652 = [null, null, null, null, null];
              statearr_17652[0] = state_machine__6521__auto__;
              statearr_17652[1] = 1;
              return statearr_17652;
            };
            var state_machine__6521__auto____1 = function(state_17649) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_17649);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_17649) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_17649);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_17653 = f__6565__auto__.call(null);
        statearr_17653[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_17653;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
crypt.shaCallb = function shaCallb(digest) {
  l.og.call(null, new cljs.core.Keyword(null, "shaCallB", "shaCallB", 117825821), "%s", "about to do hash2");
  crypt.h = crypt.arraybtostring.call(null, digest);
  l.og.call(null, new cljs.core.Keyword(null, "shaCallB", "shaCallB", 117825821), "", crypt.h);
  return pubsub.pub.call(null, "crypto", crypt.h);
};
crypt.sha256 = function sha256(x) {
  l.og.call(null, new cljs.core.Keyword(null, "sha256", "sha256", 1890611800), "sha256 %s", x);
  return crypto.subtle.digest(function() {
    var obj17657 = {"name":"SHA-256"};
    return obj17657;
  }(), crypt.encode.call(null, x)).then(crypt.shaCallb);
};
crypt.sha256c = function sha256c(c, x) {
  return crypto.subtle.digest(function() {
    var obj17661 = {"name":"SHA-256"};
    return obj17661;
  }(), crypt.encode.call(null, x)).then(c);
};
crypt.s256 = function s256(k) {
  l.og.call(null, new cljs.core.Keyword(null, "blockchain", "blockchain", -1030570049), "about to sha256 ", k);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_17700) {
            var state_val_17701 = state_17700[1];
            if (state_val_17701 === 2) {
              var inst_17694 = state_17700[2];
              var inst_17695 = crypt.arraybtostring.call(null, inst_17694);
              var inst_17696 = crypt.r = inst_17695;
              var inst_17697 = "got from sha256 " + k;
              var inst_17698 = l.og.call(null, new cljs.core.Keyword(null, "s256", "s256", -1445609188), inst_17697, crypt.r);
              var state_17700__$1 = function() {
                var statearr_17702 = state_17700;
                statearr_17702[5] = inst_17698;
                statearr_17702[6] = inst_17696;
                return statearr_17702;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17700__$1, crypt.r);
            } else {
              if (state_val_17701 === 1) {
                var inst_17685 = cljs.core.async.chan.call(null);
                var inst_17688 = {"name":"SHA-256"};
                var inst_17689 = crypt.encode.call(null, k);
                var inst_17690 = crypto.subtle.digest(inst_17688, inst_17689);
                var inst_17691 = function() {
                  var c = inst_17685;
                  return function(c, inst_17685, inst_17688, inst_17689, inst_17690, state_val_17701, c__6564__auto__) {
                    return function(p1__17662_SHARP_) {
                      return cljs.core.async.put_BANG_.call(null, c, p1__17662_SHARP_);
                    };
                  }(c, inst_17685, inst_17688, inst_17689, inst_17690, state_val_17701, c__6564__auto__);
                }();
                var inst_17692 = inst_17690.then(inst_17691);
                var state_17700__$1 = function() {
                  var statearr_17703 = state_17700;
                  statearr_17703[7] = inst_17692;
                  return statearr_17703;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17700__$1, 2, inst_17685);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_17705 = [null, null, null, null, null, null, null, null];
              statearr_17705[0] = state_machine__6521__auto__;
              statearr_17705[1] = 1;
              return statearr_17705;
            };
            var state_machine__6521__auto____1 = function(state_17700) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_17700);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_17700) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_17700);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_17706 = f__6565__auto__.call(null);
        statearr_17706[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_17706;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
crypt.bHash = function bHash(blockHeader) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_17730) {
            var state_val_17731 = state_17730[1];
            if (state_val_17731 === 2) {
              var inst_17727 = state_17730[2];
              var inst_17728 = crypt.blockHash = inst_17727;
              var state_17730__$1 = function() {
                var statearr_17732 = state_17730;
                statearr_17732[5] = inst_17728;
                return statearr_17732;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17730__$1, crypt.blockHash);
            } else {
              if (state_val_17731 === 1) {
                var inst_17722 = JSON.stringify(blockHeader);
                var inst_17723 = crypt.stringified = inst_17722;
                var inst_17724 = l.og.call(null, new cljs.core.Keyword(null, "blockchain", "blockchain", -1030570049), "stringified", crypt.stringified);
                var inst_17725 = crypt.s256.call(null, crypt.stringified);
                var state_17730__$1 = function() {
                  var statearr_17733 = state_17730;
                  statearr_17733[6] = inst_17724;
                  statearr_17733[7] = inst_17723;
                  return statearr_17733;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17730__$1, 2, inst_17725);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_17735 = [null, null, null, null, null, null, null, null];
              statearr_17735[0] = state_machine__6521__auto__;
              statearr_17735[1] = 1;
              return statearr_17735;
            };
            var state_machine__6521__auto____1 = function(state_17730) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_17730);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_17730) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_17730);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_17736 = f__6565__auto__.call(null);
        statearr_17736[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_17736;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
crypt.merkleRoot = function merkleRoot(transactions) {
  l.og.call(null, new cljs.core.Keyword(null, "merkleRoot", "merkleRoot", -1567310602), "transactions ", transactions);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_17878) {
            var state_val_17879 = state_17878[1];
            if (state_val_17879 === 9) {
              var inst_17870 = state_17878[2];
              var inst_17871 = crypt.fromC = inst_17870;
              var inst_17872 = l.og.call(null, new cljs.core.Keyword(null, "merkleRoot", "merkleRoot", -1567310602), "from ch ", crypt.fromC);
              var inst_17873 = crypt.fromC.type = "fmr";
              var inst_17876 = {"value":crypt.fromC, "type":"fmr"};
              var state_17878__$1 = function() {
                var statearr_17881 = state_17878;
                statearr_17881[5] = inst_17872;
                statearr_17881[6] = inst_17871;
                statearr_17881[7] = inst_17873;
                return statearr_17881;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17878__$1, inst_17876);
            } else {
              if (state_val_17879 === 8) {
                var inst_17866 = state_17878[2];
                var state_17878__$1 = state_17878;
                var statearr_17882_17901 = state_17878__$1;
                statearr_17882_17901[2] = inst_17866;
                statearr_17882_17901[1] = 4;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17879 === 7) {
                  var inst_17844 = state_17878[8];
                  var inst_17862 = inst_17844.shift();
                  var inst_17863 = inst_17844.length;
                  var tmp17880 = inst_17844;
                  var inst_17842 = inst_17862;
                  var inst_17843 = inst_17863;
                  var inst_17844__$1 = tmp17880;
                  var state_17878__$1 = function() {
                    var statearr_17883 = state_17878;
                    statearr_17883[8] = inst_17844__$1;
                    statearr_17883[9] = inst_17842;
                    statearr_17883[10] = inst_17843;
                    return statearr_17883;
                  }();
                  var statearr_17884_17902 = state_17878__$1;
                  statearr_17884_17902[2] = null;
                  statearr_17884_17902[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17879 === 6) {
                    var inst_17844 = state_17878[8];
                    var inst_17842 = state_17878[9];
                    var inst_17843 = state_17878[10];
                    var inst_17858 = cljs.core.async.chan.call(null, 1);
                    var inst_17859 = function() {
                      var c__6564__auto____$1 = inst_17858;
                      var next = inst_17842;
                      var cnt = inst_17843;
                      var txs = inst_17844;
                      return function(c__6564__auto____$1, next, cnt, txs, inst_17844, inst_17842, inst_17843, inst_17858, state_val_17879, c__6564__auto__) {
                        return function() {
                          var f__6565__auto__ = function() {
                            var switch__6520__auto__ = function(c__6564__auto____$1, next, cnt, txs, inst_17844, inst_17842, inst_17843, inst_17858, state_val_17879, c__6564__auto__) {
                              return function(state_17856) {
                                var state_val_17857 = state_17856[1];
                                if (state_val_17857 === 1) {
                                  var state_17856__$1 = state_17856;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17856__$1, null);
                                } else {
                                  return null;
                                }
                              };
                            }(c__6564__auto____$1, next, cnt, txs, inst_17844, inst_17842, inst_17843, inst_17858, state_val_17879, c__6564__auto__);
                            return function(switch__6520__auto__, c__6564__auto____$1, next, cnt, txs, inst_17844, inst_17842, inst_17843, inst_17858, state_val_17879, c__6564__auto__) {
                              return function() {
                                var state_machine__6521__auto__ = null;
                                var state_machine__6521__auto____0 = function() {
                                  var statearr_17886 = [null, null, null, null, null];
                                  statearr_17886[0] = state_machine__6521__auto__;
                                  statearr_17886[1] = 1;
                                  return statearr_17886;
                                };
                                var state_machine__6521__auto____1 = function(state_17856) {
                                  while (true) {
                                    var result__6522__auto__ = switch__6520__auto__.call(null, state_17856);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                      continue;
                                    } else {
                                      return result__6522__auto__;
                                    }
                                    break;
                                  }
                                };
                                state_machine__6521__auto__ = function(state_17856) {
                                  switch(arguments.length) {
                                    case 0:
                                      return state_machine__6521__auto____0.call(this);
                                    case 1:
                                      return state_machine__6521__auto____1.call(this, state_17856);
                                  }
                                  throw new Error("Invalid arity: " + arguments.length);
                                };
                                state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
                                state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
                                return state_machine__6521__auto__;
                              }();
                            }(switch__6520__auto__, c__6564__auto____$1, next, cnt, txs, inst_17844, inst_17842, inst_17843, inst_17858, state_val_17879, c__6564__auto__);
                          }();
                          var state__6566__auto__ = function() {
                            var statearr_17887 = f__6565__auto__.call(null);
                            statearr_17887[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto____$1;
                            return statearr_17887;
                          }();
                          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
                        };
                      }(c__6564__auto____$1, next, cnt, txs, inst_17844, inst_17842, inst_17843, inst_17858, state_val_17879, c__6564__auto__);
                    }();
                    var inst_17860 = cljs.core.async.impl.dispatch.run.call(null, inst_17859);
                    var state_17878__$1 = function() {
                      var statearr_17888 = state_17878;
                      statearr_17888[11] = inst_17860;
                      return statearr_17888;
                    }();
                    var statearr_17889_17903 = state_17878__$1;
                    statearr_17889_17903[2] = inst_17858;
                    statearr_17889_17903[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17879 === 5) {
                      var inst_17842 = state_17878[9];
                      var inst_17843 = state_17878[10];
                      var inst_17848 = state_17878[2];
                      var inst_17849 = crypt.tx = inst_17848;
                      var inst_17850 = cljs.core.partial.call(null, crypt.resultToCh, crypt.shaC);
                      var inst_17851 = crypt.tx + inst_17842;
                      var inst_17852 = crypt.sha256c.call(null, inst_17850, inst_17851);
                      var inst_17853 = 0 === inst_17843;
                      var state_17878__$1 = function() {
                        var statearr_17890 = state_17878;
                        statearr_17890[12] = inst_17849;
                        statearr_17890[13] = inst_17852;
                        return statearr_17890;
                      }();
                      if (cljs.core.truth_(inst_17853)) {
                        var statearr_17891_17904 = state_17878__$1;
                        statearr_17891_17904[1] = 6;
                      } else {
                        var statearr_17892_17905 = state_17878__$1;
                        statearr_17892_17905[1] = 7;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17879 === 4) {
                        var inst_17868 = state_17878[2];
                        var state_17878__$1 = function() {
                          var statearr_17893 = state_17878;
                          statearr_17893[14] = inst_17868;
                          return statearr_17893;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17878__$1, 9, crypt.shaC);
                      } else {
                        if (state_val_17879 === 3) {
                          var inst_17843 = state_17878[10];
                          var inst_17846 = l.og.call(null, new cljs.core.Keyword(null, "merkleRoot", "merkleRoot", -1567310602), "count  %s", inst_17843);
                          var state_17878__$1 = function() {
                            var statearr_17894 = state_17878;
                            statearr_17894[15] = inst_17846;
                            return statearr_17894;
                          }();
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17878__$1, 5, crypt.shaC);
                        } else {
                          if (state_val_17879 === 2) {
                            var inst_17827 = state_17878[2];
                            var inst_17828 = cljs.core.async.chan.call(null);
                            var inst_17829 = crypt.shaC = inst_17828;
                            var inst_17830 = transactions.length;
                            var inst_17831 = crypt.originl = inst_17830;
                            var inst_17832 = l.og.call(null, new cljs.core.Keyword(null, "merkleRoot", "merkleRoot", -1567310602), "transactions length ", crypt.originl);
                            var inst_17833 = transactions.shift();
                            var inst_17834 = crypt.tx = inst_17833;
                            var inst_17835 = transactions.shift();
                            var inst_17836 = crypt.next = inst_17835;
                            var inst_17837 = cljs.core.partial.call(null, crypt.resultToCh, crypt.shaC);
                            var inst_17838 = crypt.tx + crypt.next;
                            var inst_17839 = crypt.sha256c.call(null, inst_17837, inst_17838);
                            var inst_17840 = transactions.shift();
                            var inst_17841 = transactions.length;
                            var inst_17842 = inst_17840;
                            var inst_17843 = inst_17841;
                            var inst_17844 = transactions;
                            var state_17878__$1 = function() {
                              var statearr_17895 = state_17878;
                              statearr_17895[16] = inst_17834;
                              statearr_17895[17] = inst_17829;
                              statearr_17895[18] = inst_17836;
                              statearr_17895[8] = inst_17844;
                              statearr_17895[9] = inst_17842;
                              statearr_17895[10] = inst_17843;
                              statearr_17895[19] = inst_17832;
                              statearr_17895[20] = inst_17839;
                              statearr_17895[21] = inst_17831;
                              statearr_17895[22] = inst_17827;
                              return statearr_17895;
                            }();
                            var statearr_17896_17906 = state_17878__$1;
                            statearr_17896_17906[2] = null;
                            statearr_17896_17906[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17879 === 1) {
                              var inst_17819 = l.og.call(null, new cljs.core.Keyword(null, "merkleRoot", "merkleRoot", -1567310602), "transactions2 ", transactions);
                              var inst_17820 = crypt.tr = transactions;
                              var inst_17821 = function() {
                                return function(inst_17819, inst_17820, state_val_17879, c__6564__auto__) {
                                  return function(x) {
                                    console.log("OLD : ", x);
                                    console.log("NEW : ", crypt.tr);
                                    return crypt.tr;
                                  };
                                }(inst_17819, inst_17820, state_val_17879, c__6564__auto__);
                              }();
                              var inst_17822 = crypt.a = inst_17821;
                              var inst_17823 = function() {
                                return function(inst_17819, inst_17820, inst_17821, inst_17822, state_val_17879, c__6564__auto__) {
                                  return function() {
                                    return db.update.call(null, "txs", crypt.a);
                                  };
                                }(inst_17819, inst_17820, inst_17821, inst_17822, state_val_17879, c__6564__auto__);
                              }();
                              var inst_17824 = crypt.utx = inst_17823;
                              var inst_17825 = db.update.call(null, "txs", crypt.a);
                              var state_17878__$1 = function() {
                                var statearr_17897 = state_17878;
                                statearr_17897[23] = inst_17819;
                                statearr_17897[24] = inst_17824;
                                statearr_17897[25] = inst_17822;
                                statearr_17897[26] = inst_17820;
                                return statearr_17897;
                              }();
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17878__$1, 2, inst_17825);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_17899 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17899[0] = state_machine__6521__auto__;
              statearr_17899[1] = 1;
              return statearr_17899;
            };
            var state_machine__6521__auto____1 = function(state_17878) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_17878);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_17878) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_17878);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_17900 = f__6565__auto__.call(null);
        statearr_17900[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_17900;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
goog.provide("cemerick.cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
cemerick.cljs.test._STAR_test_print_fn_STAR_ = null;
cemerick.cljs.test._STAR_entry_point_STAR_ = true;
cemerick.cljs.test._STAR_test_ctx_STAR_ = null;
cemerick.cljs.test.init_test_environment_STAR_ = function init_test_environment_STAR_(aux_data) {
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.assoc.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), cljs.core.truth_(cemerick.cljs.test._STAR_test_print_fn_STAR_) ? new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143), cemerick.cljs.test._STAR_test_print_fn_STAR_], null) : null), new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128), cljs.core.List.EMPTY), aux_data));
};
cemerick.cljs.test.init_test_environment = function init_test_environment() {
  var G__27777 = cemerick.cljs.test.init_test_environment_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786), cljs.core.List.EMPTY], null));
  cljs.core.swap_BANG_.call(null, G__27777, cljs.core.assoc, new cljs.core.Keyword(null, "async", "async", 1050769601), cemerick.cljs.test.init_test_environment_STAR_.call(null, cljs.core.PersistentArrayMap.EMPTY));
  return G__27777;
};
cemerick.cljs.test.registered_tests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_test_hooks = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_fixtures = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.register_test_BANG_ = function register_test_BANG_(ns, name, fn) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_tests, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns], null), cljs.core.assoc, name, fn);
};
cemerick.cljs.test.register_test_ns_hook_BANG_ = function register_test_ns_hook_BANG_(ns, name) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_test_hooks, cljs.core.assoc, ns, name);
};
cemerick.cljs.test.TestContext = function(test_env, test_name, __meta, __extmap, __hash) {
  this.test_env = test_env;
  this.test_name = test_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4528__auto__, k__4529__auto__) {
  var self__ = this;
  var this__4528__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4528__auto____$1, k__4529__auto__, null);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4530__auto__, k27779, else__4531__auto__) {
  var self__ = this;
  var this__4530__auto____$1 = this;
  var G__27781 = k27779 instanceof cljs.core.Keyword ? k27779.fqn : null;
  switch(G__27781) {
    case "test-name":
      return self__.test_name;
      break;
    case "test-env":
      return self__.test_env;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k27779, else__4531__auto__);
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4542__auto__, writer__4543__auto__, opts__4544__auto__) {
  var self__ = this;
  var this__4542__auto____$1 = this;
  var pr_pair__4545__auto__ = function(this__4542__auto____$1) {
    return function(keyval__4546__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4543__auto__, cljs.core.pr_writer, "", " ", "", opts__4544__auto__, keyval__4546__auto__);
    };
  }(this__4542__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4543__auto__, pr_pair__4545__auto__, "#cemerick.cljs.test.TestContext{", ", ", "}", opts__4544__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "test-name", "test-name", -675595913), self__.test_name], null)], null), self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4526__auto__) {
  var self__ = this;
  var this__4526__auto____$1 = this;
  return self__.__meta;
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4522__auto__) {
  var self__ = this;
  var this__4522__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4532__auto__) {
  var self__ = this;
  var this__4532__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4523__auto__) {
  var self__ = this;
  var this__4523__auto____$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_imap.call(null, this__4523__auto____$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4524__auto__, other__4525__auto__) {
  var self__ = this;
  var this__4524__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = other__4525__auto__;
    if (cljs.core.truth_(and__3913__auto__)) {
      return this__4524__auto____$1.constructor === other__4525__auto__.constructor && cljs.core.equiv_map.call(null, this__4524__auto____$1, other__4525__auto__);
    } else {
      return and__3913__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4537__auto__, k__4538__auto__) {
  var self__ = this;
  var this__4537__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), null, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), null], null), null), k__4538__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4537__auto____$1), self__.__meta), k__4538__auto__);
  } else {
    return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4538__auto__)), null);
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4535__auto__, k__4536__auto__, G__27778) {
  var self__ = this;
  var this__4535__auto____$1 = this;
  var pred__27782 = cljs.core.keyword_identical_QMARK_;
  var expr__27783 = k__4536__auto__;
  if (cljs.core.truth_(pred__27782.call(null, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), expr__27783))) {
    return new cemerick.cljs.test.TestContext(G__27778, self__.test_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__27782.call(null, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), expr__27783))) {
      return new cemerick.cljs.test.TestContext(self__.test_env, G__27778, self__.__meta, self__.__extmap, null);
    } else {
      return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4536__auto__, G__27778), null);
    }
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4540__auto__) {
  var self__ = this;
  var this__4540__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-name", "test-name", -675595913), self__.test_name], null)], null), 
  self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4527__auto__, G__27778) {
  var self__ = this;
  var this__4527__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, G__27778, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4533__auto__, entry__4534__auto__) {
  var self__ = this;
  var this__4533__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4534__auto__)) {
    return cljs.core._assoc.call(null, this__4533__auto____$1, cljs.core._nth.call(null, entry__4534__auto__, 0), cljs.core._nth.call(null, entry__4534__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4533__auto____$1, entry__4534__auto__);
  }
};
cemerick.cljs.test.TestContext.cljs$lang$type = true;
cemerick.cljs.test.TestContext.cljs$lang$ctorPrSeq = function(this__4562__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.TestContext.cljs$lang$ctorPrWriter = function(this__4562__auto__, writer__4563__auto__) {
  return cljs.core._write.call(null, writer__4563__auto__, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.__GT_TestContext = function __GT_TestContext(test_env, test_name) {
  return new cemerick.cljs.test.TestContext(test_env, test_name, null, null, null);
};
cemerick.cljs.test.map__GT_TestContext = function map__GT_TestContext(G__27780) {
  return new cemerick.cljs.test.TestContext((new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(G__27780), (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(G__27780), null, cljs.core.dissoc.call(null, G__27780, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), new cljs.core.Keyword(null, "test-name", "test-name", -675595913)), null);
};
cemerick.cljs.test.maybe_deref = function maybe_deref(x) {
  if (function() {
    var G__27787 = x;
    if (G__27787) {
      var bit__4606__auto__ = G__27787.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4606__auto__ || G__27787.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__27787.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__27787);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__27787);
    }
  }()) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cemerick.cljs.test.testing_complete_QMARK_ = function testing_complete_QMARK_(test_env) {
  var map__27789 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__27789__$1 = cljs.core.seq_QMARK_.call(null, map__27789) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27789) : map__27789;
  var remaining = cljs.core.get.call(null, map__27789__$1, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312));
  var running = cljs.core.get.call(null, map__27789__$1, new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558));
  var async = cljs.core.get.call(null, map__27789__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var and__3913__auto__ = cljs.core.empty_QMARK_.call(null, remaining);
  if (and__3913__auto__) {
    var and__3913__auto____$1 = cljs.core.empty_QMARK_.call(null, running);
    if (and__3913__auto____$1) {
      var or__3925__auto__ = async == null;
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        return testing_complete_QMARK_.call(null, async);
      }
    } else {
      return and__3913__auto____$1;
    }
  } else {
    return and__3913__auto__;
  }
};
cemerick.cljs.test.on_async_progress = function on_async_progress(test_env, callback) {
  if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env))) {
    setTimeout(function() {
      return callback.call(null, test_env);
    }, 1);
  } else {
    cljs.core.add_watch.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cemerick.cljs.test.maybe_deref.call(null, test_env)), cljs.core.gensym.call(null, "on-progress"), function(key, ref, old, new$) {
      var vec__27792 = cljs.core.map.call(null, function(p1__27790_SHARP_) {
        return cljs.core.select_keys.call(null, p1__27790_SHARP_, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test", "test", 577538877), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "error", "error", -978969032)], null));
      }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old, new$], null));
      var oldv = cljs.core.nth.call(null, vec__27792, 0, null);
      var newv = cljs.core.nth.call(null, vec__27792, 1, null);
      var complete_QMARK_ = cemerick.cljs.test.testing_complete_QMARK_.call(null, new$);
      if (cljs.core.truth_(function() {
        var or__3925__auto__ = complete_QMARK_;
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          return cljs.core.not_EQ_.call(null, oldv, newv);
        }
      }())) {
        callback.call(null, cemerick.cljs.test.maybe_deref.call(null, test_env));
      } else {
      }
      if (cljs.core.truth_(complete_QMARK_)) {
        return cljs.core.remove_watch.call(null, ref, key);
      } else {
        return null;
      }
    });
  }
  return test_env;
};
goog.exportSymbol("cemerick.cljs.test.on_async_progress", cemerick.cljs.test.on_async_progress);
cemerick.cljs.test.on_testing_complete = function on_testing_complete(test_env, callback) {
  return cemerick.cljs.test.on_async_progress.call(null, test_env, function(test_env__$1) {
    if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env__$1))) {
      return callback.call(null, test_env__$1);
    } else {
      return null;
    }
  });
};
goog.exportSymbol("cemerick.cljs.test.on_testing_complete", cemerick.cljs.test.on_testing_complete);
cemerick.cljs.test.testing_vars_str = function testing_vars_str(p__27793) {
  var map__27795 = p__27793;
  var map__27795__$1 = cljs.core.seq_QMARK_.call(null, map__27795) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27795) : map__27795;
  var m = map__27795__$1;
  var test_name = cljs.core.get.call(null, map__27795__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
  var test_env = cljs.core.get.call(null, map__27795__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var line = cljs.core.get.call(null, map__27795__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var file = cljs.core.get.call(null, map__27795__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  return[cljs.core.str(cljs.core.pr_str.call(null, function() {
    var or__3925__auto__ = cljs.core.seq.call(null, cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env))));
    if (or__3925__auto__) {
      return or__3925__auto__;
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, test_name);
    }
  }())), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(")")].join("");
};
cemerick.cljs.test.testing_contexts_str = function testing_contexts_str(test_env) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))));
};
cemerick.cljs.test.inc_report_counter = function inc_report_counter(test_env, name) {
  return cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
};
cemerick.cljs.test.report = function() {
  var method_table__4822__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4823__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4824__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4825__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4826__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cemerick.cljs.test", "report"), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4826__auto__, method_table__4822__auto__, prefer_table__4823__auto__, method_cache__4824__auto__, cached_hierarchy__4825__auto__);
}();
cemerick.cljs.test.file_and_line = function file_and_line(error) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), error.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), error.lineNumber], null);
};
cemerick.cljs.test.do_report = function() {
  var do_report = null;
  var do_report__1 = function(m) {
    return cemerick.cljs.test.report.call(null, function() {
      var G__27800 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
      switch(G__27800) {
        case "error":
          return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)), m);
          break;
        case "fail":
          return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, Error()), m);
          break;
        default:
          return m;
      }
    }());
  };
  var do_report__2 = function(p__27796, m) {
    var map__27799 = p__27796;
    var map__27799__$1 = cljs.core.seq_QMARK_.call(null, map__27799) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27799) : map__27799;
    var test_ctx = map__27799__$1;
    var test_name = cljs.core.get.call(null, map__27799__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var test_env = cljs.core.get.call(null, map__27799__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null))))].join(""));
    }
    return do_report.call(null, cljs.core.merge.call(null, m, test_ctx));
  };
  do_report = function(p__27796, m) {
    switch(arguments.length) {
      case 1:
        return do_report__1.call(this, p__27796);
      case 2:
        return do_report__2.call(this, p__27796, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  do_report.cljs$core$IFn$_invoke$arity$1 = do_report__1;
  do_report.cljs$core$IFn$_invoke$arity$2 = do_report__2;
  return do_report;
}();
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__27802) {
  var map__27803 = p__27802;
  var map__27803__$1 = cljs.core.seq_QMARK_.call(null, map__27803) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27803) : map__27803;
  var m = map__27803__$1;
  var test_env = cljs.core.get.call(null, map__27803__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_27804 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__3925__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    return cljs.core.prn.call(null, m);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27804;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "pass", "pass", 1574159993), function(p__27805) {
  var map__27806 = p__27805;
  var map__27806__$1 = cljs.core.seq_QMARK_.call(null, map__27806) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27806) : map__27806;
  var m = map__27806__$1;
  var test_env = cljs.core.get.call(null, map__27806__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_27807 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__3925__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    return cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27807;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "fail", "fail", 1706214930), function(p__27808) {
  var map__27809 = p__27808;
  var map__27809__$1 = cljs.core.seq_QMARK_.call(null, map__27809) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27809) : map__27809;
  var m = map__27809__$1;
  var test_env = cljs.core.get.call(null, map__27809__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_27810 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__3925__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
    cljs.core.println.call(null, "\nFAIL in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto___27811 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto___27811)) {
      var message_27812 = temp__4126__auto___27811;
      cljs.core.println.call(null, message_27812);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
    return cljs.core.println.call(null, "  actual:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27810;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "error", "error", -978969032), function(p__27813) {
  var map__27814 = p__27813;
  var map__27814__$1 = cljs.core.seq_QMARK_.call(null, map__27814) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27814) : map__27814;
  var m = map__27814__$1;
  var test_env = cljs.core.get.call(null, map__27814__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_27815 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__3925__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "error", "error", -978969032));
    cljs.core.println.call(null, "\nERROR in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto___27816 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto___27816)) {
      var message_27817 = temp__4126__auto___27816;
      cljs.core.println.call(null, message_27817);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
    cljs.core.print.call(null, "  actual: ");
    var actual = (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m);
    if (actual instanceof Error) {
      return cljs.core.println.call(null, actual.stack);
    } else {
      return cljs.core.prn.call(null, actual);
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27815;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709), function(p__27818) {
  var map__27819 = p__27818;
  var map__27819__$1 = cljs.core.seq_QMARK_.call(null, map__27819) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27819) : map__27819;
  var m = map__27819__$1;
  var test_env = cljs.core.get.call(null, map__27819__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_27820 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__3925__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709));
    cljs.core.println.call(null, "\nWARNING in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var message = temp__4126__auto__;
      return cljs.core.println.call(null, message);
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27820;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "summary", "summary", 380847952), function(p__27821) {
  var map__27822 = p__27821;
  var map__27822__$1 = cljs.core.seq_QMARK_.call(null, map__27822) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27822) : map__27822;
  var test_env = map__27822__$1;
  var error = cljs.core.get.call(null, map__27822__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
  var fail = cljs.core.get.call(null, map__27822__$1, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  var pass = cljs.core.get.call(null, map__27822__$1, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
  var test = cljs.core.get.call(null, map__27822__$1, new cljs.core.Keyword(null, "test", "test", 577538877));
  var _STAR_print_fn_STAR_27823 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__3925__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    cljs.core.println.call(null, "\nRan", test, "tests containing", pass + fail + error, "assertions.");
    var temp__4124__auto__ = function() {
      var and__3913__auto__ = cljs.core.not.call(null, cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env));
      if (and__3913__auto__) {
        return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, cljs.core.juxt.call(null, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312), new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)).call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(test_env)))));
      } else {
        return and__3913__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var pending_count = temp__4124__auto__;
      return cljs.core.println.call(null, "Waiting on", pending_count, [cljs.core.str("asynchronous test"), cljs.core.str(pending_count > 1 ? "s" : null), cljs.core.str(" to complete.")].join(""));
    } else {
      return cljs.core.println.call(null, "Testing complete:", fail, "failures,", error, "errors.");
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27823;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), function(p__27824) {
  var map__27825 = p__27824;
  var map__27825__$1 = cljs.core.seq_QMARK_.call(null, map__27825) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27825) : map__27825;
  var m = map__27825__$1;
  var async = cljs.core.get.call(null, map__27825__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var test_env = cljs.core.get.call(null, map__27825__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var ns = cljs.core.get.call(null, map__27825__$1, new cljs.core.Keyword(null, "ns", "ns", 441598760));
  var _STAR_print_fn_STAR_27826 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var or__3925__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return cljs.core._STAR_print_fn_STAR_;
    }
  }();
  try {
    return cljs.core.println.call(null, "\nTesting", ns, cljs.core.truth_(async) ? "(async)" : "");
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_27826;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645), function(p__27827) {
  var map__27828 = p__27827;
  var map__27828__$1 = cljs.core.seq_QMARK_.call(null, map__27828) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27828) : map__27828;
  var m = map__27828__$1;
  var test_env = cljs.core.get.call(null, map__27828__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), function(p__27829) {
  var map__27830 = p__27829;
  var map__27830__$1 = cljs.core.seq_QMARK_.call(null, map__27830) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27830) : map__27830;
  var m = map__27830__$1;
  var test_env = cljs.core.get.call(null, map__27830__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), function(p__27831) {
  var map__27832 = p__27831;
  var map__27832__$1 = cljs.core.seq_QMARK_.call(null, map__27832) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27832) : map__27832;
  var m = map__27832__$1;
  var test_env = cljs.core.get.call(null, map__27832__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cemerick.cljs.test.register_fixtures_BANG_ = function() {
  var register_fixtures_BANG___delegate = function(ns_sym, fixture_type, fixture_fns) {
    return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_fixtures, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_sym, fixture_type], null), cljs.core.constantly.call(null, fixture_fns));
  };
  var register_fixtures_BANG_ = function(ns_sym, fixture_type, var_args) {
    var fixture_fns = null;
    if (arguments.length > 2) {
      var G__27833__i = 0, G__27833__a = new Array(arguments.length - 2);
      while (G__27833__i < G__27833__a.length) {
        G__27833__a[G__27833__i] = arguments[G__27833__i + 2];
        ++G__27833__i;
      }
      fixture_fns = new cljs.core.IndexedSeq(G__27833__a, 0);
    }
    return register_fixtures_BANG___delegate.call(this, ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$lang$maxFixedArity = 2;
  register_fixtures_BANG_.cljs$lang$applyTo = function(arglist__27834) {
    var ns_sym = cljs.core.first(arglist__27834);
    arglist__27834 = cljs.core.next(arglist__27834);
    var fixture_type = cljs.core.first(arglist__27834);
    var fixture_fns = cljs.core.rest(arglist__27834);
    return register_fixtures_BANG___delegate(ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$core$IFn$_invoke$arity$variadic = register_fixtures_BANG___delegate;
  return register_fixtures_BANG_;
}();
cemerick.cljs.test.default_fixture = function default_fixture(f) {
  return f.call(null);
};
cemerick.cljs.test.compose_fixtures = function compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cemerick.cljs.test.join_fixtures = function join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cemerick.cljs.test.compose_fixtures, cemerick.cljs.test.default_fixture, fixtures);
};
cemerick.cljs.test.async_test_QMARK_ = function async_test_QMARK_(test_fn) {
  return cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, test_fn)));
};
cemerick.cljs.test.test_async_fn = function test_async_fn(async_test_env, test_name, test_fn) {
  cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), test_fn, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), async_test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name], null));
  cemerick.cljs.test.inc_report_counter.call(null, async_test_env, new cljs.core.Keyword(null, "test", "test", 577538877));
  return test_fn.call(null, new cemerick.cljs.test.TestContext(async_test_env, test_name, null, null, null));
};
cemerick.cljs.test.start_next_async_test = function start_next_async_test(async_test_env) {
  var next_test = cljs.core.atom.call(null, function() {
    return null;
  });
  cljs.core.swap_BANG_.call(null, async_test_env, function(next_test) {
    return function(env) {
      var temp__4124__auto__ = function() {
        var and__3913__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "stop", "stop", -2140911342)).cljs$core$IFn$_invoke$arity$1(env));
        if (and__3913__auto__) {
          return cljs.core.first.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)).cljs$core$IFn$_invoke$arity$1(env));
        } else {
          return and__3913__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__27836 = temp__4124__auto__;
        var name = cljs.core.nth.call(null, vec__27836, 0, null);
        var testfn = cljs.core.nth.call(null, vec__27836, 1, null);
        cljs.core.reset_BANG_.call(null, next_test, testfn);
        var ns_27837 = cljs.core.namespace.call(null, name);
        if (cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, async_test_env)), ns_27837)) {
        } else {
          cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_27837, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), async_test_env, new cljs.core.Keyword(null, "async", "async", 1050769601), true], null));
          cljs.core.alter_meta_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)], null), cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentHashSet.EMPTY), ns_27837);
        }
        return cljs.core.update_in.call(null, cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)], null), cljs.core.dissoc, name), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)], null), cljs.core.assoc, 
        name, new Date);
      } else {
        return env;
      }
    };
  }(next_test));
  setTimeout(function(next_test) {
    return function() {
      return cljs.core.deref.call(null, next_test).call(null);
    };
  }(next_test), 1);
  return async_test_env;
};
cemerick.cljs.test.squelch_internals = function squelch_internals(test_env) {
  var G__27842 = test_env;
  cljs.core.swap_BANG_.call(null, G__27842, function(G__27842) {
    return function(p1__27838_SHARP_) {
      return cljs.core.reduce.call(null, function(G__27842) {
        return function(env, p__27843) {
          var vec__27844 = p__27843;
          var k = cljs.core.nth.call(null, vec__27844, 0, null);
          var v = cljs.core.nth.call(null, vec__27844, 1, null);
          if (cljs.core._EQ_.call(null, cljs.core.namespace.call(null, k), cljs.core.namespace.call(null, new cljs.core.Keyword("cemerick.cljs.test", "foo", "cemerick.cljs.test/foo", -1669146357)))) {
            return env;
          } else {
            return cljs.core.assoc.call(null, env, k, v);
          }
        };
      }(G__27842), cljs.core.PersistentArrayMap.EMPTY, p1__27838_SHARP_);
    };
  }(G__27842));
  return G__27842;
};
cemerick.cljs.test.finish_test_entry_point = function finish_test_entry_point(entry_point_QMARK_, test_env) {
  if (cljs.core.truth_(entry_point_QMARK_)) {
    if (cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))))) {
      cljs.core.swap_BANG_.call(null, test_env, cljs.core.dissoc, new cljs.core.Keyword(null, "async", "async", 1050769601));
    } else {
      cemerick.cljs.test.start_next_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)));
    }
    return cljs.core.deref.call(null, cemerick.cljs.test.squelch_internals.call(null, test_env));
  } else {
    return test_env;
  }
};
cemerick.cljs.test.schedule_async_test = function schedule_async_test(async_test_env, test_name, test_fn) {
  cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)], null), cljs.core.fnil.call(null, cljs.core.assoc, cljs.core.sorted_map.call(null)), test_name, cljs.core.with_meta.call(null, function() {
    return cemerick.cljs.test.test_async_fn.call(null, async_test_env, test_name, test_fn);
  }, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), test_name], null)));
  return async_test_env;
};
cemerick.cljs.test.done_STAR_ = function() {
  var done_STAR_ = null;
  var done_STAR___1 = function(p__27846) {
    var map__27850 = p__27846;
    var map__27850__$1 = cljs.core.seq_QMARK_.call(null, map__27850) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27850) : map__27850;
    var test_ctx = map__27850__$1;
    var test_name = cljs.core.get.call(null, map__27850__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var async_test_env = cljs.core.get.call(null, map__27850__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null))))].join(""));
    }
    var first_call_QMARK_ = cljs.core.atom.call(null, false);
    cljs.core.swap_BANG_.call(null, async_test_env, function(first_call_QMARK_, map__27850, map__27850__$1, test_ctx, test_name, async_test_env) {
      return function(env) {
        cljs.core.reset_BANG_.call(null, first_call_QMARK_, cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)).cljs$core$IFn$_invoke$arity$1(env), test_name));
        return cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)], null), cljs.core.dissoc, test_name);
      };
    }(first_call_QMARK_, map__27850, map__27850__$1, test_ctx, test_name, async_test_env));
    if (cljs.core.truth_(cljs.core.deref.call(null, first_call_QMARK_))) {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), test_name], null), test_ctx));
      if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, async_test_env))) {
        cemerick.cljs.test.squelch_internals.call(null, async_test_env);
      } else {
        cemerick.cljs.test.start_next_async_test.call(null, async_test_env);
      }
    } else {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709), new cljs.core.Keyword(null, "message", "message", -406056002), "`(done)` called multiple times to signal end-of-test"], null), test_ctx));
    }
    return async_test_env;
  };
  var done_STAR___2 = function(p__27845, error) {
    var map__27849 = p__27845;
    var map__27849__$1 = cljs.core.seq_QMARK_.call(null, map__27849) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27849) : map__27849;
    var test_ctx = map__27849__$1;
    var test_name = cljs.core.get.call(null, map__27849__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var test_env = cljs.core.get.call(null, map__27849__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null))))].join(""));
    }
    cemerick.cljs.test.do_report.call(null, cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    error], null), test_ctx)));
    return done_STAR_.call(null, test_ctx);
  };
  done_STAR_ = function(p__27845, error) {
    switch(arguments.length) {
      case 1:
        return done_STAR___1.call(this, p__27845);
      case 2:
        return done_STAR___2.call(this, p__27845, error);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  done_STAR_.cljs$core$IFn$_invoke$arity$1 = done_STAR___1;
  done_STAR_.cljs$core$IFn$_invoke$arity$2 = done_STAR___2;
  return done_STAR_;
}();
cemerick.cljs.test.stop = function stop(async_test_env) {
  return cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.assoc, new cljs.core.Keyword(null, "stop", "stop", -2140911342), true);
};
cemerick.cljs.test.test_function = function() {
  var test_function = null;
  var test_function__1 = function(v) {
    return test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), v);
  };
  var test_function__2 = function(test_env, v) {
    var entry_point_QMARK___9654__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_27854 = cemerick.cljs.test._STAR_entry_point_STAR_;
    cemerick.cljs.test._STAR_entry_point_STAR_ = false;
    try {
      if (cljs.core.fn_QMARK_.call(null, v)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("test-var must be passed the function to be tested (not a symbol naming it)"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null))))].join(""));
      }
      var map__27855_27857 = cljs.core.meta.call(null, v);
      var map__27855_27858__$1 = cljs.core.seq_QMARK_.call(null, map__27855_27857) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27855_27857) : map__27855_27857;
      var t_27859 = cljs.core.get.call(null, map__27855_27858__$1, new cljs.core.Keyword(null, "test", "test", 577538877));
      var test_name_27860 = cljs.core.get.call(null, map__27855_27858__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
      var async_QMARK__27861 = cljs.core.get.call(null, map__27855_27858__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
      if (cljs.core.truth_(t_27859)) {
        if (cljs.core.truth_(async_QMARK__27861)) {
          cemerick.cljs.test.schedule_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), test_name_27860, t_27859);
        } else {
          try {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)], null), cljs.core.conj, function() {
              var or__3925__auto__ = test_name_27860;
              if (cljs.core.truth_(or__3925__auto__)) {
                return or__3925__auto__;
              } else {
                return v;
              }
            }());
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_27860], null));
            cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "test", "test", 577538877));
            try {
              t_27859.call(null, new cemerick.cljs.test.TestContext(test_env, test_name_27860, null, null, null));
            } catch (e27856) {
              if (e27856 instanceof Error) {
                var e_27862 = e27856;
                cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_27860, new cljs.core.Keyword(null, 
                "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e_27862], null));
              } else {
                throw e27856;
              }
            }
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_27860], null));
          } finally {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)], null), cljs.core.pop);
          }
        }
      } else {
      }
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___9654__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_27854;
    }
  };
  test_function = function(test_env, v) {
    switch(arguments.length) {
      case 1:
        return test_function__1.call(this, test_env);
      case 2:
        return test_function__2.call(this, test_env, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_function.cljs$core$IFn$_invoke$arity$1 = test_function__1;
  test_function.cljs$core$IFn$_invoke$arity$2 = test_function__2;
  return test_function;
}();
cemerick.cljs.test.test_all_vars = function() {
  var test_all_vars = null;
  var test_all_vars__1 = function(ns_sym) {
    return test_all_vars.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var test_all_vars__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___9654__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_27871 = cemerick.cljs.test._STAR_entry_point_STAR_;
    cemerick.cljs.test._STAR_entry_point_STAR_ = false;
    try {
      var tests_27876 = cljs.core.filter.call(null, function(_STAR_entry_point_STAR_27871, entry_point_QMARK___9654__auto__) {
        return function(p1__27863_SHARP_) {
          return(new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__27863_SHARP_));
        };
      }(_STAR_entry_point_STAR_27871, entry_point_QMARK___9654__auto__), cljs.core.vals.call(null, cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests), ns_sym)));
      var once_fixture_fn_27877 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "once", "once", -262568523)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      var each_fixture_fn_27878 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "each", "each", 940016129)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      once_fixture_fn_27877.call(null, function(once_fixture_fn_27877, each_fixture_fn_27878, tests_27876, _STAR_entry_point_STAR_27871, entry_point_QMARK___9654__auto__) {
        return function() {
          var seq__27872 = cljs.core.seq.call(null, cljs.core.remove.call(null, cemerick.cljs.test.async_test_QMARK_, tests_27876));
          var chunk__27873 = null;
          var count__27874 = 0;
          var i__27875 = 0;
          while (true) {
            if (i__27875 < count__27874) {
              var v = cljs.core._nth.call(null, chunk__27873, i__27875);
              each_fixture_fn_27878.call(null, function(seq__27872, chunk__27873, count__27874, i__27875, v, once_fixture_fn_27877, each_fixture_fn_27878, tests_27876, _STAR_entry_point_STAR_27871, entry_point_QMARK___9654__auto__) {
                return function() {
                  return cemerick.cljs.test.test_function.call(null, test_env, v);
                };
              }(seq__27872, chunk__27873, count__27874, i__27875, v, once_fixture_fn_27877, each_fixture_fn_27878, tests_27876, _STAR_entry_point_STAR_27871, entry_point_QMARK___9654__auto__));
              var G__27879 = seq__27872;
              var G__27880 = chunk__27873;
              var G__27881 = count__27874;
              var G__27882 = i__27875 + 1;
              seq__27872 = G__27879;
              chunk__27873 = G__27880;
              count__27874 = G__27881;
              i__27875 = G__27882;
              continue;
            } else {
              var temp__4126__auto__ = cljs.core.seq.call(null, seq__27872);
              if (temp__4126__auto__) {
                var seq__27872__$1 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__27872__$1)) {
                  var c__4712__auto__ = cljs.core.chunk_first.call(null, seq__27872__$1);
                  var G__27883 = cljs.core.chunk_rest.call(null, seq__27872__$1);
                  var G__27884 = c__4712__auto__;
                  var G__27885 = cljs.core.count.call(null, c__4712__auto__);
                  var G__27886 = 0;
                  seq__27872 = G__27883;
                  chunk__27873 = G__27884;
                  count__27874 = G__27885;
                  i__27875 = G__27886;
                  continue;
                } else {
                  var v = cljs.core.first.call(null, seq__27872__$1);
                  each_fixture_fn_27878.call(null, function(seq__27872, chunk__27873, count__27874, i__27875, v, seq__27872__$1, temp__4126__auto__, once_fixture_fn_27877, each_fixture_fn_27878, tests_27876, _STAR_entry_point_STAR_27871, entry_point_QMARK___9654__auto__) {
                    return function() {
                      return cemerick.cljs.test.test_function.call(null, test_env, v);
                    };
                  }(seq__27872, chunk__27873, count__27874, i__27875, v, seq__27872__$1, temp__4126__auto__, once_fixture_fn_27877, each_fixture_fn_27878, tests_27876, _STAR_entry_point_STAR_27871, entry_point_QMARK___9654__auto__));
                  var G__27887 = cljs.core.next.call(null, seq__27872__$1);
                  var G__27888 = null;
                  var G__27889 = 0;
                  var G__27890 = 0;
                  seq__27872 = G__27887;
                  chunk__27873 = G__27888;
                  count__27874 = G__27889;
                  i__27875 = G__27890;
                  continue;
                }
              } else {
                return null;
              }
            }
            break;
          }
        };
      }(once_fixture_fn_27877, each_fixture_fn_27878, tests_27876, _STAR_entry_point_STAR_27871, entry_point_QMARK___9654__auto__));
      cljs.core.reduce.call(null, function(tests_27876, _STAR_entry_point_STAR_27871, entry_point_QMARK___9654__auto__) {
        return function(p1__27864_SHARP_, p2__27865_SHARP_) {
          return cljs.core.apply.call(null, cemerick.cljs.test.schedule_async_test, p1__27864_SHARP_, p2__27865_SHARP_);
        };
      }(tests_27876, _STAR_entry_point_STAR_27871, entry_point_QMARK___9654__auto__), (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "test", "test", 577538877)), cljs.core.meta), cljs.core.filter.call(null, cemerick.cljs.test.async_test_QMARK_, tests_27876)));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___9654__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_27871;
    }
  };
  test_all_vars = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return test_all_vars__1.call(this, test_env);
      case 2:
        return test_all_vars__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_all_vars.cljs$core$IFn$_invoke$arity$1 = test_all_vars__1;
  test_all_vars.cljs$core$IFn$_invoke$arity$2 = test_all_vars__2;
  return test_all_vars;
}();
cemerick.cljs.test.test_ns = function() {
  var test_ns = null;
  var test_ns__1 = function(ns_sym) {
    return test_ns.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var test_ns__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___9654__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_27892 = cemerick.cljs.test._STAR_entry_point_STAR_;
    cemerick.cljs.test._STAR_entry_point_STAR_ = false;
    try {
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env], null));
      var temp__4124__auto___27893 = cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_test_hooks), ns_sym);
      if (cljs.core.truth_(temp__4124__auto___27893)) {
        var test_hook_27894 = temp__4124__auto___27893;
        test_hook_27894.call(null, test_env);
      } else {
        cemerick.cljs.test.test_all_vars.call(null, test_env, ns_sym);
      }
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env], null));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___9654__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_27892;
    }
  };
  test_ns = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return test_ns__1.call(this, test_env);
      case 2:
        return test_ns__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_ns.cljs$core$IFn$_invoke$arity$1 = test_ns__1;
  test_ns.cljs$core$IFn$_invoke$arity$2 = test_ns__2;
  return test_ns;
}();
cemerick.cljs.test.test_summary = function test_summary(test_env) {
  var test_env__$1 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  return cemerick.cljs.test.do_report.call(null, cljs.core.assoc.call(null, cljs.core.merge_with.call(null, cljs.core._PLUS_, test_env__$1, cemerick.cljs.test.maybe_deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(test_env__$1))), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952)));
};
cemerick.cljs.test.run_tests_STAR_ = function() {
  var run_tests_STAR___delegate = function(namespaces) {
    var vec__27901 = cljs.core.first.call(null, namespaces) instanceof cljs.core.Atom ? namespaces : cljs.core.cons.call(null, cemerick.cljs.test.init_test_environment.call(null), namespaces);
    var test_env = cljs.core.nth.call(null, vec__27901, 0, null);
    var namespaces__$1 = cljs.core.nthnext.call(null, vec__27901, 1);
    var entry_point_QMARK___9654__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_27902 = cemerick.cljs.test._STAR_entry_point_STAR_;
    cemerick.cljs.test._STAR_entry_point_STAR_ = false;
    try {
      var seq__27903_27907 = cljs.core.seq.call(null, cljs.core.distinct.call(null, namespaces__$1));
      var chunk__27904_27908 = null;
      var count__27905_27909 = 0;
      var i__27906_27910 = 0;
      while (true) {
        if (i__27906_27910 < count__27905_27909) {
          var ns_27911 = cljs.core._nth.call(null, chunk__27904_27908, i__27906_27910);
          cemerick.cljs.test.test_ns.call(null, test_env, ns_27911);
          var G__27912 = seq__27903_27907;
          var G__27913 = chunk__27904_27908;
          var G__27914 = count__27905_27909;
          var G__27915 = i__27906_27910 + 1;
          seq__27903_27907 = G__27912;
          chunk__27904_27908 = G__27913;
          count__27905_27909 = G__27914;
          i__27906_27910 = G__27915;
          continue;
        } else {
          var temp__4126__auto___27916 = cljs.core.seq.call(null, seq__27903_27907);
          if (temp__4126__auto___27916) {
            var seq__27903_27917__$1 = temp__4126__auto___27916;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__27903_27917__$1)) {
              var c__4712__auto___27918 = cljs.core.chunk_first.call(null, seq__27903_27917__$1);
              var G__27919 = cljs.core.chunk_rest.call(null, seq__27903_27917__$1);
              var G__27920 = c__4712__auto___27918;
              var G__27921 = cljs.core.count.call(null, c__4712__auto___27918);
              var G__27922 = 0;
              seq__27903_27907 = G__27919;
              chunk__27904_27908 = G__27920;
              count__27905_27909 = G__27921;
              i__27906_27910 = G__27922;
              continue;
            } else {
              var ns_27923 = cljs.core.first.call(null, seq__27903_27917__$1);
              cemerick.cljs.test.test_ns.call(null, test_env, ns_27923);
              var G__27924 = cljs.core.next.call(null, seq__27903_27917__$1);
              var G__27925 = null;
              var G__27926 = 0;
              var G__27927 = 0;
              seq__27903_27907 = G__27924;
              chunk__27904_27908 = G__27925;
              count__27905_27909 = G__27926;
              i__27906_27910 = G__27927;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cemerick.cljs.test.on_testing_complete.call(null, test_env, cemerick.cljs.test.test_summary);
      cemerick.cljs.test.test_summary.call(null, test_env);
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___9654__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_27902;
    }
  };
  var run_tests_STAR_ = function(var_args) {
    var namespaces = null;
    if (arguments.length > 0) {
      var G__27928__i = 0, G__27928__a = new Array(arguments.length - 0);
      while (G__27928__i < G__27928__a.length) {
        G__27928__a[G__27928__i] = arguments[G__27928__i + 0];
        ++G__27928__i;
      }
      namespaces = new cljs.core.IndexedSeq(G__27928__a, 0);
    }
    return run_tests_STAR___delegate.call(this, namespaces);
  };
  run_tests_STAR_.cljs$lang$maxFixedArity = 0;
  run_tests_STAR_.cljs$lang$applyTo = function(arglist__27929) {
    var namespaces = cljs.core.seq(arglist__27929);
    return run_tests_STAR___delegate(namespaces);
  };
  run_tests_STAR_.cljs$core$IFn$_invoke$arity$variadic = run_tests_STAR___delegate;
  return run_tests_STAR_;
}();
goog.exportSymbol("cemerick.cljs.test.run_tests_STAR_", cemerick.cljs.test.run_tests_STAR_);
cemerick.cljs.test.run_all_tests = function() {
  var run_all_tests = null;
  var run_all_tests__0 = function() {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests)));
  };
  var run_all_tests__1 = function(re) {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.filter.call(null, function(p1__27930_SHARP_) {
      return cljs.core.re_matches.call(null, re, cljs.core.name.call(null, p1__27930_SHARP_));
    }, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests))));
  };
  run_all_tests = function(re) {
    switch(arguments.length) {
      case 0:
        return run_all_tests__0.call(this);
      case 1:
        return run_all_tests__1.call(this, re);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  run_all_tests.cljs$core$IFn$_invoke$arity$0 = run_all_tests__0;
  run_all_tests.cljs$core$IFn$_invoke$arity$1 = run_all_tests__1;
  return run_all_tests;
}();
goog.exportSymbol("cemerick.cljs.test.run_all_tests", cemerick.cljs.test.run_all_tests);
cemerick.cljs.test.successful_QMARK_ = function successful_QMARK_(test_env) {
  var map__27932 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__27932__$1 = cljs.core.seq_QMARK_.call(null, map__27932) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27932) : map__27932;
  var async = cljs.core.get.call(null, map__27932__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var error = cljs.core.get.call(null, map__27932__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
  var fail = cljs.core.get.call(null, map__27932__$1, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  var and__3913__auto__ = cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env);
  if (cljs.core.truth_(and__3913__auto__)) {
    var and__3913__auto____$1 = function() {
      var or__3925__auto__ = fail;
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return 0;
      }
    }() === 0;
    if (and__3913__auto____$1) {
      var and__3913__auto____$2 = function() {
        var or__3925__auto__ = error;
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          return 0;
        }
      }() === 0;
      if (and__3913__auto____$2) {
        var or__3925__auto__ = async == null;
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          return successful_QMARK_.call(null, async);
        }
      } else {
        return and__3913__auto____$2;
      }
    } else {
      return and__3913__auto____$1;
    }
  } else {
    return and__3913__auto__;
  }
};
goog.exportSymbol("cemerick.cljs.test.successful_QMARK_", cemerick.cljs.test.successful_QMARK_);
cemerick.cljs.test.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
goog.exportSymbol("cemerick.cljs.test.set_print_fn_BANG_", cemerick.cljs.test.set_print_fn_BANG_);
goog.provide("database");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
goog.require("logger");
database.states = function() {
  var obj15526 = {};
  return obj15526;
}();
database.cleandb = function cleandb() {
  return m.cleandb.call(null);
};
database.dumpdb = function dumpdb() {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15540) {
            var state_val_15541 = state_15540[1];
            if (state_val_15541 === 2) {
              var inst_15538 = state_15540[2];
              var state_15540__$1 = state_15540;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15540__$1, inst_15538);
            } else {
              if (state_val_15541 === 1) {
                var inst_15536 = pubsub.sia.call(null, "mdumpdb");
                var state_15540__$1 = state_15540;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15540__$1, 2, inst_15536);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15543 = [null, null, null, null, null];
              statearr_15543[0] = state_machine__6521__auto__;
              statearr_15543[1] = 1;
              return statearr_15543;
            };
            var state_machine__6521__auto____1 = function(state_15540) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15540);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15540) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15540);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15544 = f__6565__auto__.call(null);
        statearr_15544[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15544;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
database.onDatabaseChange = cljs.core.async.chan.call(null);
database.onDatabaseChange.type = "databaseChange";
database.update = function update(k, f) {
  return logger.og.call(null, new cljs.core.Keyword(null, "dbupdate", "dbupdate", 1437384630), "getting from db ", k);
};
database.g = function g(k) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15558) {
            var state_val_15559 = state_15558[1];
            if (state_val_15559 === 2) {
              var inst_15556 = state_15558[2];
              var state_15558__$1 = state_15558;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15558__$1, inst_15556);
            } else {
              if (state_val_15559 === 1) {
                var inst_15554 = m.g.call(null, k);
                var state_15558__$1 = state_15558;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15558__$1, 2, inst_15554);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15561 = [null, null, null, null, null];
              statearr_15561[0] = state_machine__6521__auto__;
              statearr_15561[1] = 1;
              return statearr_15561;
            };
            var state_machine__6521__auto____1 = function(state_15558) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15558);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15558) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15558);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15562 = f__6565__auto__.call(null);
        statearr_15562[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15562;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
database.update = function update(k, v) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15576) {
            var state_val_15577 = state_15576[1];
            if (state_val_15577 === 2) {
              var inst_15574 = state_15576[2];
              var state_15576__$1 = state_15576;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15576__$1, inst_15574);
            } else {
              if (state_val_15577 === 1) {
                var inst_15572 = m.update.call(null, k, v);
                var state_15576__$1 = state_15576;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15576__$1, 2, inst_15572);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15579 = [null, null, null, null, null];
              statearr_15579[0] = state_machine__6521__auto__;
              statearr_15579[1] = 1;
              return statearr_15579;
            };
            var state_machine__6521__auto____1 = function(state_15576) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15576);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15576) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15576);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15580 = f__6565__auto__.call(null);
        statearr_15580[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15580;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
database.p = function p(k, v) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15594) {
            var state_val_15595 = state_15594[1];
            if (state_val_15595 === 2) {
              var inst_15592 = state_15594[2];
              var state_15594__$1 = state_15594;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15594__$1, inst_15592);
            } else {
              if (state_val_15595 === 1) {
                var inst_15590 = m.p.call(null, k, v);
                var state_15594__$1 = state_15594;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15594__$1, 2, inst_15590);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15597 = [null, null, null, null, null];
              statearr_15597[0] = state_machine__6521__auto__;
              statearr_15597[1] = 1;
              return statearr_15597;
            };
            var state_machine__6521__auto____1 = function(state_15594) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15594);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15594) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15594);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15598 = f__6565__auto__.call(null);
        statearr_15598[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15598;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
database.ps = function ps(k, v) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15612) {
            var state_val_15613 = state_15612[1];
            if (state_val_15613 === 2) {
              var inst_15610 = state_15612[2];
              var state_15612__$1 = state_15612;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15612__$1, inst_15610);
            } else {
              if (state_val_15613 === 1) {
                var inst_15608 = m.p.call(null, k, v);
                var state_15612__$1 = state_15612;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15612__$1, 2, inst_15608);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15615 = [null, null, null, null, null];
              statearr_15615[0] = state_machine__6521__auto__;
              statearr_15615[1] = 1;
              return statearr_15615;
            };
            var state_machine__6521__auto____1 = function(state_15612) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15612);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15612) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15612);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15616 = f__6565__auto__.call(null);
        statearr_15616[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15616;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
database.reg = function reg(typ, v) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15657) {
            var state_val_15658 = state_15657[1];
            if (state_val_15658 === 7) {
              var inst_15653 = state_15657[2];
              var state_15657__$1 = state_15657;
              var statearr_15659_15671 = state_15657__$1;
              statearr_15659_15671[2] = inst_15653;
              statearr_15659_15671[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15658 === 6) {
                var state_15657__$1 = state_15657;
                var statearr_15660_15672 = state_15657__$1;
                statearr_15660_15672[2] = 0;
                statearr_15660_15672[1] = 7;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15658 === 5) {
                  var inst_15650 = database.states[typ];
                  var state_15657__$1 = state_15657;
                  var statearr_15661_15673 = state_15657__$1;
                  statearr_15661_15673[2] = inst_15650;
                  statearr_15661_15673[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15658 === 4) {
                    var inst_15655 = state_15657[2];
                    var state_15657__$1 = state_15657;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15657__$1, inst_15655);
                  } else {
                    if (state_val_15658 === 3) {
                      var inst_15648 = database.states[typ];
                      var state_15657__$1 = state_15657;
                      if (cljs.core.truth_(inst_15648)) {
                        var statearr_15662_15674 = state_15657__$1;
                        statearr_15662_15674[1] = 5;
                      } else {
                        var statearr_15663_15675 = state_15657__$1;
                        statearr_15663_15675[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15658 === 2) {
                        var inst_15646 = database.states[typ] = v;
                        var state_15657__$1 = state_15657;
                        var statearr_15664_15676 = state_15657__$1;
                        statearr_15664_15676[2] = inst_15646;
                        statearr_15664_15676[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15658 === 1) {
                          var inst_15644 = logger.og.call(null, new cljs.core.Keyword(null, "reg", "reg", 1636216344), typ, v);
                          var state_15657__$1 = function() {
                            var statearr_15665 = state_15657;
                            statearr_15665[5] = inst_15644;
                            return statearr_15665;
                          }();
                          if (cljs.core.truth_(v)) {
                            var statearr_15666_15677 = state_15657__$1;
                            statearr_15666_15677[1] = 2;
                          } else {
                            var statearr_15667_15678 = state_15657__$1;
                            statearr_15667_15678[1] = 3;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15669 = [null, null, null, null, null, null];
              statearr_15669[0] = state_machine__6521__auto__;
              statearr_15669[1] = 1;
              return statearr_15669;
            };
            var state_machine__6521__auto____1 = function(state_15657) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15657);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15657) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15657);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15670 = f__6565__auto__.call(null);
        statearr_15670[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15670;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
database.initDBase = function initDBase(x) {
  logger.og.call(null, new cljs.core.Keyword(null, "initdbwraper", "initdbwraper", 631490056), "wrapper", x);
  return m.initDBase.call(null, x);
};
database.connectTo = function connectTo(ev, id) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15721) {
            var state_val_15722 = state_15721[1];
            if (state_val_15722 === 4) {
              var inst_15716 = state_15721[2];
              var inst_15717 = inst_15716.connect(id);
              var inst_15718 = cljs.core.partial.call(null, comm.onOpen, inst_15717);
              var inst_15719 = inst_15717.on("open", inst_15718);
              var state_15721__$1 = state_15721;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15721__$1, inst_15719);
            } else {
              if (state_val_15722 === 3) {
                var inst_15712 = state_15721[2];
                var inst_15713 = logger.og.call(null, new cljs.core.Keyword(null, "connectTo", "connectTo", 1625853527), "", inst_15712);
                var inst_15714 = cljs.core.get.call(null);
                var state_15721__$1 = function() {
                  var statearr_15723 = state_15721;
                  statearr_15723[5] = inst_15713;
                  return statearr_15723;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15721__$1, 4, inst_15714);
              } else {
                if (state_val_15722 === 2) {
                  var inst_15708 = state_15721[2];
                  var inst_15709 = logger.og.call(null, new cljs.core.Keyword(null, "connectTo", "connectTo", 1625853527), "", inst_15708);
                  var inst_15710 = cljs.core.get.call(null);
                  var state_15721__$1 = function() {
                    var statearr_15724 = state_15721;
                    statearr_15724[6] = inst_15709;
                    return statearr_15724;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15721__$1, 3, inst_15710);
                } else {
                  if (state_val_15722 === 1) {
                    var inst_15704 = cljs.core.first.call(null, id);
                    var inst_15705 = logger.og.call(null, new cljs.core.Keyword(null, "connectTo", "connectTo", 1625853527), "", inst_15704);
                    var inst_15706 = cljs.core.get.call(null);
                    var state_15721__$1 = function() {
                      var statearr_15725 = state_15721;
                      statearr_15725[7] = inst_15705;
                      return statearr_15725;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15721__$1, 2, inst_15706);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15727 = [null, null, null, null, null, null, null, null];
              statearr_15727[0] = state_machine__6521__auto__;
              statearr_15727[1] = 1;
              return statearr_15727;
            };
            var state_machine__6521__auto____1 = function(state_15721) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15721);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15721) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15721);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15728 = f__6565__auto__.call(null);
        statearr_15728[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15728;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
goog.provide("testt");
goog.require("cljs.core");
goog.require("cemerick.cljs.test");
goog.require("reagent.core");
goog.require("intercom");
goog.require("pubsub");
goog.require("blockchain");
goog.require("html");
goog.require("peerjs");
goog.require("cljs.core.async");
goog.require("database");
goog.require("communications");
goog.require("crypt");
goog.require("logger");
testt.initdbase = function initdbase() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.initdbase);
};
testt.initdbase = cljs.core.with_meta.call(null, testt.initdbase, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 22, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 22, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "initdbase", "testt/initdbase", 991259270, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 22, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", 
"line", 212345235), 22, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function initdbase_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18568 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      database.cleandb.call(null);
      database.initDBase.call(null, 1);
      return database.dumpdb.call(null);
    } catch (e18569) {
      if (e18569 instanceof Error) {
        var e__10059__auto__ = e18569;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18569;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18568;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "initdbase", "testt/initdbase", 991259270, null), testt.initdbase);
blockchain.makeBlockHeader = function makeBlockHeader() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.makeBlockHeader);
};
blockchain.makeBlockHeader = cljs.core.with_meta.call(null, blockchain.makeBlockHeader, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 26, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 32, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 32, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "makeBlockHeader", "testt/makeBlockHeader", 312821479, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 26, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 32, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, 
"line", "line", 212345235), 32, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function makeBlockHeader_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18572 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18573) {
      if (e18573 instanceof Error) {
        var e__10059__auto__ = e18573;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18573;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18572;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "makeBlockHeader", "testt/makeBlockHeader", 312821479, null), testt.makeBlockHeader);
testt.makeBlockBlock = function makeBlockBlock() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.makeBlockBlock);
};
testt.makeBlockBlock = cljs.core.with_meta.call(null, testt.makeBlockBlock, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 25, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 36, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 36, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "makeBlockBlock", "testt/makeBlockBlock", -2090853181, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 25, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 36, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, 
"line", "line", 212345235), 36, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function makeBlockBlock_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18576 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18577) {
      if (e18577 instanceof Error) {
        var e__10059__auto__ = e18577;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18577;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18576;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "makeBlockBlock", "testt/makeBlockBlock", -2090853181, null), testt.makeBlockBlock);
testt.saveblock = function saveblock() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.saveblock);
};
testt.saveblock = cljs.core.with_meta.call(null, testt.saveblock, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 41, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 41, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "saveblock", "testt/saveblock", 851231593, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 41, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", 
"line", 212345235), 41, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function saveblock_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18580 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return database.cleandb.call(null);
    } catch (e18581) {
      if (e18581 instanceof Error) {
        var e__10059__auto__ = e18581;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18581;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18580;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "saveblock", "testt/saveblock", 851231593, null), testt.saveblock);
testt.blockheight = function blockheight() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.blockheight);
};
testt.blockheight = cljs.core.with_meta.call(null, testt.blockheight, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 22, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 52, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 52, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "blockheight", "testt/blockheight", -627848480, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 22, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 52, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, 
"line", "line", 212345235), 52, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function blockheight_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18584 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18585) {
      if (e18585 instanceof Error) {
        var e__10059__auto__ = e18585;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18585;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18584;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "blockheight", "testt/blockheight", -627848480, null), testt.blockheight);
testt.sha256 = function sha256() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.sha256);
};
testt.sha256 = cljs.core.with_meta.call(null, testt.sha256, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 17, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 56, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 56, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null), 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "sha256", "testt/sha256", -339325251, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 17, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 56, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 
56, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function sha256_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18588 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18589) {
      if (e18589 instanceof Error) {
        var e__10059__auto__ = e18589;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18589;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18588;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "sha256", "testt/sha256", -339325251, null), testt.sha256);
testt.transaction_making = function transaction_making() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.transaction_making);
};
testt.transaction_making = cljs.core.with_meta.call(null, testt.transaction_making, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 29, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 60, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 60, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "transaction-making", "testt/transaction-making", 1399216211, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 29, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 60, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, 
"line", "line", 212345235), 60, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function transaction_making_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18592 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18593) {
      if (e18593 instanceof Error) {
        var e__10059__auto__ = e18593;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18593;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18592;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "transaction-making", "testt/transaction-making", 1399216211, null), testt.transaction_making);
testt.merkleroot = function merkleroot() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.merkleroot);
};
testt.merkleroot = cljs.core.with_meta.call(null, testt.merkleroot, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 21, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 64, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 64, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "merkleroot", "testt/merkleroot", 1515943603, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 21, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 64, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", 
"line", 212345235), 64, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function merkleroot_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18596 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18597) {
      if (e18597 instanceof Error) {
        var e__10059__auto__ = e18597;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18597;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18596;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "merkleroot", "testt/merkleroot", 1515943603, null), testt.merkleroot);
testt.transaction_in_block = function transaction_in_block() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.transaction_in_block);
};
testt.transaction_in_block = cljs.core.with_meta.call(null, testt.transaction_in_block, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 31, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 69, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 69, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "transaction-in-block", "testt/transaction-in-block", -1858485192, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 31, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 69, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, 
"line", "line", 212345235), 69, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function transaction_in_block_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18600 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18601) {
      if (e18601 instanceof Error) {
        var e__10059__auto__ = e18601;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18601;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18600;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "transaction-in-block", "testt/transaction-in-block", -1858485192, null), testt.transaction_in_block);
testt.mineblock = function mineblock() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.mineblock);
};
testt.mineblock = cljs.core.with_meta.call(null, testt.mineblock, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 74, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 74, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "mineblock", "testt/mineblock", -1652160405, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 74, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", 
"line", 212345235), 74, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function mineblock_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18604 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18605) {
      if (e18605 instanceof Error) {
        var e__10059__auto__ = e18605;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18605;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18604;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "mineblock", "testt/mineblock", -1652160405, null), testt.mineblock);
testt.broadcastblock = function broadcastblock() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.broadcastblock);
};
testt.broadcastblock = cljs.core.with_meta.call(null, testt.broadcastblock, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 25, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 78, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 78, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "broadcastblock", "testt/broadcastblock", 832288060, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 25, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 78, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, 
"line", "line", 212345235), 78, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function broadcastblock_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18608 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18609) {
      if (e18609 instanceof Error) {
        var e__10059__auto__ = e18609;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18609;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18608;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "broadcastblock", "testt/broadcastblock", 832288060, null), testt.broadcastblock);
testt.blocksyncEmptyBase = function blocksyncEmptyBase() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.blocksyncEmptyBase);
};
testt.blocksyncEmptyBase = cljs.core.with_meta.call(null, testt.blocksyncEmptyBase, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 29, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 82, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 82, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "blocksyncEmptyBase", "testt/blocksyncEmptyBase", -1921112901, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 29, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 82, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, 
"line", "line", 212345235), 82, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function blocksyncEmptyBase_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18612 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18613) {
      if (e18613 instanceof Error) {
        var e__10059__auto__ = e18613;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18613;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18612;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "blocksyncEmptyBase", "testt/blocksyncEmptyBase", -1921112901, null), testt.blocksyncEmptyBase);
testt.getblocks = function getblocks() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.getblocks);
};
testt.getblocks = cljs.core.with_meta.call(null, testt.getblocks, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 87, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 87, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "getblocks", "testt/getblocks", -381015714, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 20, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 87, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", 
"line", 212345235), 87, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function getblocks_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18616 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18617) {
      if (e18617 instanceof Error) {
        var e__10059__auto__ = e18617;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18617;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18616;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "getblocks", "testt/getblocks", -381015714, null), testt.getblocks);
testt.blocksyncLowerBase = function blocksyncLowerBase() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.blocksyncLowerBase);
};
testt.blocksyncLowerBase = cljs.core.with_meta.call(null, testt.blocksyncLowerBase, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 29, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 90, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 90, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "blocksyncLowerBase", "testt/blocksyncLowerBase", 738512228, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 29, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 90, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, 
"line", "line", 212345235), 90, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function blocksyncLowerBase_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18620 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18621) {
      if (e18621 instanceof Error) {
        var e__10059__auto__ = e18621;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18621;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18620;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "blocksyncLowerBase", "testt/blocksyncLowerBase", 738512228, null), testt.blocksyncLowerBase);
testt.sendblocks = function sendblocks() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.sendblocks);
};
testt.sendblocks = cljs.core.with_meta.call(null, testt.sendblocks, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 21, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 95, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 95, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "sendblocks", "testt/sendblocks", 1505981122, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 21, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 95, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", 
"line", 212345235), 95, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function sendblocks_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18624 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18625) {
      if (e18625 instanceof Error) {
        var e__10059__auto__ = e18625;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18625;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18624;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "sendblocks", "testt/sendblocks", 1505981122, null), testt.sendblocks);
testt.dumpDatabase = function dumpDatabase() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.dumpDatabase);
};
testt.dumpDatabase = cljs.core.with_meta.call(null, testt.dumpDatabase, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 23, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 98, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 98, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "dumpDatabase", "testt/dumpDatabase", -599414213, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 23, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 98, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, 
"line", "line", 212345235), 98, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function dumpDatabase_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18628 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return database.dumpdb.call(null);
    } catch (e18629) {
      if (e18629 instanceof Error) {
        var e__10059__auto__ = e18629;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18629;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18628;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "dumpDatabase", "testt/dumpDatabase", -599414213, null), testt.dumpDatabase);
testt.blocksyncHigherBaseHasBlockInDB = function blocksyncHigherBaseHasBlockInDB() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.blocksyncHigherBaseHasBlockInDB);
};
testt.blocksyncHigherBaseHasBlockInDB = cljs.core.with_meta.call(null, testt.blocksyncHigherBaseHasBlockInDB, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 42, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 102, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 102, new cljs.core.Keyword(null, "file", "file", -1269645878), 
"/home/user/Buyan/app/test/test.cljs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "blocksyncHigherBaseHasBlockInDB", "testt/blocksyncHigherBaseHasBlockInDB", -194653638, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 42, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 102, new cljs.core.Keyword(null, 
"column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 102, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function blocksyncHigherBaseHasBlockInDB_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18632 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18633) {
      if (e18633 instanceof Error) {
        var e__10059__auto__ = e18633;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18633;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18632;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "blocksyncHigherBaseHasBlockInDB", "testt/blocksyncHigherBaseHasBlockInDB", -194653638, null), testt.blocksyncHigherBaseHasBlockInDB);
testt.blocksyncHigherBaseDoesNotHaveBlockInDB = function blocksyncHigherBaseDoesNotHaveBlockInDB() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.blocksyncHigherBaseDoesNotHaveBlockInDB);
};
testt.blocksyncHigherBaseDoesNotHaveBlockInDB = cljs.core.with_meta.call(null, testt.blocksyncHigherBaseDoesNotHaveBlockInDB, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 50, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 105, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 105, new cljs.core.Keyword(null, "file", 
"file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "blocksyncHigherBaseDoesNotHaveBlockInDB", "testt/blocksyncHigherBaseDoesNotHaveBlockInDB", -511054535, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 50, new cljs.core.Keyword(null, "end-line", "end-line", 
1837326455), 105, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 105, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function blocksyncHigherBaseDoesNotHaveBlockInDB_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18636 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18637) {
      if (e18637 instanceof Error) {
        var e__10059__auto__ = e18637;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18637;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18636;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "blocksyncHigherBaseDoesNotHaveBlockInDB", "testt/blocksyncHigherBaseDoesNotHaveBlockInDB", -511054535, null), testt.blocksyncHigherBaseDoesNotHaveBlockInDB);
testt.blocksyncForkBase = function blocksyncForkBase() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.blocksyncForkBase);
};
testt.blocksyncForkBase = cljs.core.with_meta.call(null, testt.blocksyncForkBase, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 28, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 108, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 108, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "blocksyncForkBase", "testt/blocksyncForkBase", -156235619, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 28, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 108, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, 
"line", "line", 212345235), 108, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function blocksyncForkBase_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18640 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      return null;
    } catch (e18641) {
      if (e18641 instanceof Error) {
        var e__10059__auto__ = e18641;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18641;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18640;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "blocksyncForkBase", "testt/blocksyncForkBase", -156235619, null), testt.blocksyncForkBase);
testt.somewhat_less_wat = function somewhat_less_wat() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.somewhat_less_wat);
};
testt.somewhat_less_wat = cljs.core.with_meta.call(null, testt.somewhat_less_wat, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 29, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 111, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 111, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "somewhat-less-wat", "testt/somewhat-less-wat", -231905664, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 29, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 111, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, 
"line", "line", 212345235), 111, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function somewhat_less_wat_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18647 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      var _test_ctx__$1 = _test_ctx;
      var async_QMARK___10058__auto____$1 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx__$1)));
      var _STAR_test_ctx_STAR_18649 = cemerick.cljs.test._STAR_test_ctx_STAR_;
      cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto____$1) ? null : _test_ctx__$1;
      try {
        try {
          try {
            var values__10078__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.PersistentArrayMap.EMPTY + cljs.core.PersistentVector.EMPTY), "{}[]");
            var result__10079__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10078__auto__);
            if (result__10079__auto__ instanceof cemerick.cljs.test.TestContext) {
              throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
            } else {
            }
            if (cljs.core.truth_(result__10079__auto__)) {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "{}[]", cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentVector.EMPTY)), 
              new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10078__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "{}[]", cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentVector.EMPTY)), 
              new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10078__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            return result__10079__auto__;
          } catch (e18651) {
            if (e18651 instanceof Error) {
              var t__10115__auto__ = e18651;
              return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "{}[]", cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.PersistentArrayMap.EMPTY, cljs.core.PersistentVector.EMPTY)), 
              new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10115__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              throw e18651;
            }
          }
        } catch (e18650) {
          if (e18650 instanceof Error) {
            var e__10059__auto__ = e18650;
            if (cljs.core.truth_(async_QMARK___10058__auto____$1)) {
              return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1, e__10059__auto__);
            } else {
              throw e__10059__auto__;
            }
          } else {
            throw e18650;
          }
        }
      } finally {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18649;
      }
    } catch (e18648) {
      if (e18648 instanceof Error) {
        var e__10059__auto__ = e18648;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18648;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18647;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "somewhat-less-wat", "testt/somewhat-less-wat", -231905664, null), testt.somewhat_less_wat);
testt.javascript_allows_div0 = function javascript_allows_div0() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), testt.javascript_allows_div0);
};
testt.javascript_allows_div0 = cljs.core.with_meta.call(null, testt.javascript_allows_div0, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 115, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, "line", "line", 212345235), 115, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "javascript-allows-div0", "testt/javascript-allows-div0", 1346947229, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 115, new cljs.core.Keyword(null, "column", "column", 2078222095), 11, new cljs.core.Keyword(null, 
"line", "line", 212345235), 115, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function javascript_allows_div0_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18657 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      var _test_ctx__$1 = _test_ctx;
      var async_QMARK___10058__auto____$1 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx__$1)));
      var _STAR_test_ctx_STAR_18659 = cemerick.cljs.test._STAR_test_ctx_STAR_;
      cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto____$1) ? null : _test_ctx__$1;
      try {
        try {
          try {
            var values__10078__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (1 | 0) / (0 | 0)), 1 / 0), Infinity);
            var result__10079__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10078__auto__);
            if (result__10079__auto__ instanceof cemerick.cljs.test.TestContext) {
              throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
            } else {
            }
            if (cljs.core.truth_(result__10079__auto__)) {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol("js", "Infinity", "js/Infinity", 2039810812, null), cljs.core.list(new cljs.core.Symbol(null, "/", "/", -1371932971, 
              null), 1, 0), cljs.core.list(new cljs.core.Symbol(null, "/", "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "int", "int", -100885395, null), 1), cljs.core.list(new cljs.core.Symbol(null, "int", "int", -100885395, null), 0))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10078__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol("js", "Infinity", "js/Infinity", 2039810812, null), cljs.core.list(new cljs.core.Symbol(null, "/", "/", -1371932971, 
              null), 1, 0), cljs.core.list(new cljs.core.Symbol(null, "/", "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "int", "int", -100885395, null), 1), cljs.core.list(new cljs.core.Symbol(null, "int", "int", -100885395, null), 0))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10078__auto__)), 
              new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            return result__10079__auto__;
          } catch (e18661) {
            if (e18661 instanceof Error) {
              var t__10115__auto__ = e18661;
              return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol("js", "Infinity", "js/Infinity", 2039810812, null), cljs.core.list(new cljs.core.Symbol(null, "/", "/", 
              -1371932971, null), 1, 0), cljs.core.list(new cljs.core.Symbol(null, "/", "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "int", "int", -100885395, null), 1), cljs.core.list(new cljs.core.Symbol(null, "int", "int", -100885395, null), 0))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10115__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              throw e18661;
            }
          }
        } catch (e18660) {
          if (e18660 instanceof Error) {
            var e__10059__auto__ = e18660;
            if (cljs.core.truth_(async_QMARK___10058__auto____$1)) {
              return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1, e__10059__auto__);
            } else {
              throw e__10059__auto__;
            }
          } else {
            throw e18660;
          }
        }
      } finally {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18659;
      }
    } catch (e18658) {
      if (e18658 instanceof Error) {
        var e__10059__auto__ = e18658;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18658;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18657;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "javascript-allows-div0", "testt/javascript-allows-div0", 1346947229, null), testt.javascript_allows_div0);
testt.pennies__GT_dollar_string = function pennies__GT_dollar_string(pennies) {
  if (cljs.core.integer_QMARK_.call(null, pennies)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null), new cljs.core.Symbol(null, "pennies", "pennies", -807392060, null))))].join(""));
  }
  return[cljs.core.str("$"), cljs.core.str(pennies / 100 | 0), cljs.core.str("."), cljs.core.str(cljs.core.mod.call(null, pennies, 100))].join("");
};
testt.pennies__GT_dollar_string = cljs.core.with_meta.call(null, testt.pennies__GT_dollar_string, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 33, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 119, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 119, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], 
null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("testt", "pennies-\x3edollar-string", "testt/pennies-\x3edollar-string", 2113176316, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 33, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 119, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, 
new cljs.core.Keyword(null, "line", "line", 212345235), 119, new cljs.core.Keyword(null, "file", "file", -1269645878), "/home/user/Buyan/app/test/test.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function pennies__GT_dollar_string_test(test_ctx__10143__auto__) {
  var _test_ctx = test_ctx__10143__auto__;
  var async_QMARK___10058__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_18668 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto__) ? null : _test_ctx;
  try {
    try {
      try {
        cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(_test_ctx), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)], null), cljs.core.conj, "assertions are nice");
        var _test_ctx__$1 = _test_ctx;
        var async_QMARK___10058__auto____$1 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx__$1)));
        var _STAR_test_ctx_STAR_18670 = cemerick.cljs.test._STAR_test_ctx_STAR_;
        cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10058__auto____$1) ? null : _test_ctx__$1;
        try {
          try {
            try {
              try {
                testt.pennies__GT_dollar_string.call(null, 564.2);
                return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /integer?/, cljs.core.list(new cljs.core.Symbol(null, 
                "pennies-\x3edollar-string", "pennies-\x3edollar-string", 1142609118, null), 564.2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } catch (e18673) {
                if (e18673 instanceof Error) {
                  var e__10109__auto__ = e18673;
                  var m__10110__auto___18674 = e__10109__auto__.message;
                  if (cljs.core.truth_(cljs.core.re_find.call(null, /integer?/, m__10110__auto___18674))) {
                    cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /integer?/, cljs.core.list(new cljs.core.Symbol(null, 
                    "pennies-\x3edollar-string", "pennies-\x3edollar-string", 1142609118, null), 564.2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__10109__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
                  } else {
                    cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /integer?/, cljs.core.list(new cljs.core.Symbol(null, 
                    "pennies-\x3edollar-string", "pennies-\x3edollar-string", 1142609118, null), 564.2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__10109__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
                  }
                  return e__10109__auto__;
                } else {
                  throw e18673;
                }
              }
            } catch (e18672) {
              if (e18672 instanceof Error) {
                var t__10115__auto__ = e18672;
                return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /integer?/, cljs.core.list(new cljs.core.Symbol(null, 
                "pennies-\x3edollar-string", "pennies-\x3edollar-string", 1142609118, null), 564.2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10115__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                throw e18672;
              }
            }
          } catch (e18671) {
            if (e18671 instanceof Error) {
              var e__10059__auto__ = e18671;
              if (cljs.core.truth_(async_QMARK___10058__auto____$1)) {
                return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1, e__10059__auto__);
              } else {
                throw e__10059__auto__;
              }
            } else {
              throw e18671;
            }
          }
        } finally {
          cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18670;
        }
      } finally {
        cljs.core.swap_BANG_.call(null, (new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(_test_ctx), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)], null), cljs.core.pop);
      }
    } catch (e18669) {
      if (e18669 instanceof Error) {
        var e__10059__auto__ = e18669;
        if (cljs.core.truth_(async_QMARK___10058__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10059__auto__);
        } else {
          throw e__10059__auto__;
        }
      } else {
        throw e18669;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_18668;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "testt", "testt", -1437552360, null), new cljs.core.Symbol("testt", "pennies-\x3edollar-string", "testt/pennies-\x3edollar-string", 2113176316, null), testt.pennies__GT_dollar_string);
goog.provide("renderStrategy");
goog.require("cljs.core");
goog.require("html");
renderStrategy.run = function run(renderer) {
  return html.run.call(null);
};
goog.provide("pouchDB");
goog.require("cljs.core");
pouchDB.flushdb = cljs.core.PersistentVector.EMPTY;
pouchDB.dumpdb = cljs.core.PersistentVector.EMPTY;
pouchDB.dbase = function() {
  var obj11970 = {};
  return obj11970;
}();
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj26990 = {};
  return obj26990;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3913__auto__ = reader;
    if (and__3913__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4569__auto__ = reader == null ? null : reader;
    return function() {
      var or__3925__auto__ = cljs.reader.read_char[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.reader.read_char["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3913__auto__ = reader;
    if (and__3913__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4569__auto__ = reader == null ? null : reader;
    return function() {
      var or__3925__auto__ = cljs.reader.unread[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.reader.unread["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3925__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      var G__26991__i = 0, G__26991__a = new Array(arguments.length - 1);
      while (G__26991__i < G__26991__a.length) {
        G__26991__a[G__26991__i] = arguments[G__26991__i + 1];
        ++G__26991__i;
      }
      msg = new cljs.core.IndexedSeq(G__26991__a, 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__26992) {
    var rdr = cljs.core.first(arglist__26992);
    var msg = cljs.core.rest(arglist__26992);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3913__auto__ = !(ch === "#");
  if (and__3913__auto__) {
    var and__3913__auto____$1 = !(ch === "'");
    if (and__3913__auto____$1) {
      var and__3913__auto____$2 = !(ch === ":");
      if (and__3913__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3913__auto____$2;
      }
    } else {
      return and__3913__auto____$1;
    }
  } else {
    return and__3913__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__26993 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__26994 = cljs.reader.read_char.call(null, rdr);
      sb = G__26993;
      ch = G__26994;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.call(null, ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__26995 = cljs.reader.read_char.call(null, rdr);
      ch = G__26995;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__26996 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__26996;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__26997 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__26997;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3925__auto__ = ch == null;
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3925__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__26998 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__26999 = cljs.reader.read_char.call(null, reader);
      buffer = G__26998;
      ch = G__26999;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__27000 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__27001 = cljs.reader.read_char.call(null, reader);
        buffer = G__27000;
        ch = G__27001;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__27002 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__27003 = cljs.reader.read_char.call(null, reader);
          buffer = G__27002;
          ch = G__27003;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__27008 = function() {
            var G__27006 = buffer;
            G__27006.append(nch);
            return G__27006;
          }();
          var G__27009 = cljs.reader.read_char.call(null, reader);
          buffer = G__27008;
          ch = G__27009;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__27010 = function() {
            var G__27007 = buffer;
            G__27007.append(ch);
            return G__27007;
          }();
          var G__27011 = cljs.reader.read_char.call(null, reader);
          buffer = G__27010;
          ch = G__27011;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__3913__auto__)) {
      return!(token.length === 1);
    } else {
      return and__3913__auto__;
    }
  }())) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__27013 = o;
    if (G__27013) {
      var bit__4606__auto__ = G__27013.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4606__auto__ || G__27013.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__27013.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__27013);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__27013);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__27014 = reader;
        var G__27015 = eof_is_error;
        var G__27016 = sentinel;
        var G__27017 = is_recursive;
        reader = G__27014;
        eof_is_error = G__27015;
        sentinel = G__27016;
        is_recursive = G__27017;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__27018 = cljs.reader.read_comment.call(null, reader, ch);
          var G__27019 = eof_is_error;
          var G__27020 = sentinel;
          var G__27021 = is_recursive;
          reader = G__27018;
          eof_is_error = G__27019;
          sentinel = G__27020;
          is_recursive = G__27021;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__27022 = reader;
            var G__27023 = eof_is_error;
            var G__27024 = sentinel;
            var G__27025 = is_recursive;
            reader = G__27022;
            eof_is_error = G__27023;
            sentinel = G__27024;
            is_recursive = G__27025;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__27026 = b.append("0");
          b = G__27026;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__27028 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__27028, 0, null);
  var years = cljs.core.nth.call(null, vec__27028, 1, null);
  var months = cljs.core.nth.call(null, vec__27028, 2, null);
  var days = cljs.core.nth.call(null, vec__27028, 3, null);
  var hours = cljs.core.nth.call(null, vec__27028, 4, null);
  var minutes = cljs.core.nth.call(null, vec__27028, 5, null);
  var seconds = cljs.core.nth.call(null, vec__27028, 6, null);
  var fraction = cljs.core.nth.call(null, vec__27028, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__27028, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__27028, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__27028, 10, null);
  var v = vec__27028;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3925__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3925__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3925__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3925__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3925__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3925__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3925__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3925__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__27030 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__27030, 0, null);
    var months = cljs.core.nth.call(null, vec__27030, 1, null);
    var days = cljs.core.nth.call(null, vec__27030, 2, null);
    var hours = cljs.core.nth.call(null, vec__27030, 3, null);
    var minutes = cljs.core.nth.call(null, vec__27030, 4, null);
    var seconds = cljs.core.nth.call(null, vec__27030, 5, null);
    var ms = cljs.core.nth.call(null, vec__27030, 6, null);
    var offset = cljs.core.nth.call(null, vec__27030, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__27043_27055 = cljs.core.seq.call(null, form);
    var chunk__27044_27056 = null;
    var count__27045_27057 = 0;
    var i__27046_27058 = 0;
    while (true) {
      if (i__27046_27058 < count__27045_27057) {
        var x_27059 = cljs.core._nth.call(null, chunk__27044_27056, i__27046_27058);
        arr.push(x_27059);
        var G__27060 = seq__27043_27055;
        var G__27061 = chunk__27044_27056;
        var G__27062 = count__27045_27057;
        var G__27063 = i__27046_27058 + 1;
        seq__27043_27055 = G__27060;
        chunk__27044_27056 = G__27061;
        count__27045_27057 = G__27062;
        i__27046_27058 = G__27063;
        continue;
      } else {
        var temp__4126__auto___27064 = cljs.core.seq.call(null, seq__27043_27055);
        if (temp__4126__auto___27064) {
          var seq__27043_27065__$1 = temp__4126__auto___27064;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__27043_27065__$1)) {
            var c__4712__auto___27066 = cljs.core.chunk_first.call(null, seq__27043_27065__$1);
            var G__27067 = cljs.core.chunk_rest.call(null, seq__27043_27065__$1);
            var G__27068 = c__4712__auto___27066;
            var G__27069 = cljs.core.count.call(null, c__4712__auto___27066);
            var G__27070 = 0;
            seq__27043_27055 = G__27067;
            chunk__27044_27056 = G__27068;
            count__27045_27057 = G__27069;
            i__27046_27058 = G__27070;
            continue;
          } else {
            var x_27071 = cljs.core.first.call(null, seq__27043_27065__$1);
            arr.push(x_27071);
            var G__27072 = cljs.core.next.call(null, seq__27043_27065__$1);
            var G__27073 = null;
            var G__27074 = 0;
            var G__27075 = 0;
            seq__27043_27055 = G__27072;
            chunk__27044_27056 = G__27073;
            count__27045_27057 = G__27074;
            i__27046_27058 = G__27075;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj27048 = {};
        return obj27048;
      }();
      var seq__27049_27076 = cljs.core.seq.call(null, form);
      var chunk__27050_27077 = null;
      var count__27051_27078 = 0;
      var i__27052_27079 = 0;
      while (true) {
        if (i__27052_27079 < count__27051_27078) {
          var vec__27053_27080 = cljs.core._nth.call(null, chunk__27050_27077, i__27052_27079);
          var k_27081 = cljs.core.nth.call(null, vec__27053_27080, 0, null);
          var v_27082 = cljs.core.nth.call(null, vec__27053_27080, 1, null);
          obj[cljs.core.name.call(null, k_27081)] = v_27082;
          var G__27083 = seq__27049_27076;
          var G__27084 = chunk__27050_27077;
          var G__27085 = count__27051_27078;
          var G__27086 = i__27052_27079 + 1;
          seq__27049_27076 = G__27083;
          chunk__27050_27077 = G__27084;
          count__27051_27078 = G__27085;
          i__27052_27079 = G__27086;
          continue;
        } else {
          var temp__4126__auto___27087 = cljs.core.seq.call(null, seq__27049_27076);
          if (temp__4126__auto___27087) {
            var seq__27049_27088__$1 = temp__4126__auto___27087;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__27049_27088__$1)) {
              var c__4712__auto___27089 = cljs.core.chunk_first.call(null, seq__27049_27088__$1);
              var G__27090 = cljs.core.chunk_rest.call(null, seq__27049_27088__$1);
              var G__27091 = c__4712__auto___27089;
              var G__27092 = cljs.core.count.call(null, c__4712__auto___27089);
              var G__27093 = 0;
              seq__27049_27076 = G__27090;
              chunk__27050_27077 = G__27091;
              count__27051_27078 = G__27092;
              i__27052_27079 = G__27093;
              continue;
            } else {
              var vec__27054_27094 = cljs.core.first.call(null, seq__27049_27088__$1);
              var k_27095 = cljs.core.nth.call(null, vec__27054_27094, 0, null);
              var v_27096 = cljs.core.nth.call(null, vec__27054_27094, 1, null);
              obj[cljs.core.name.call(null, k_27095)] = v_27096;
              var G__27097 = cljs.core.next.call(null, seq__27049_27088__$1);
              var G__27098 = null;
              var G__27099 = 0;
              var G__27100 = 0;
              seq__27049_27076 = G__27097;
              chunk__27050_27077 = G__27098;
              count__27051_27078 = G__27099;
              i__27052_27079 = G__27100;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("servant.worker");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("cljs.core.async");
servant.worker.worker_fn_map = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
servant.worker.register_servant_fn = function register_servant_fn(fn_name, f) {
  return cljs.core.swap_BANG_.call(null, servant.worker.worker_fn_map, cljs.core.assoc, cljs.core.keyword.call(null, fn_name), f);
};
servant.worker.run_function_name = function run_function_name(message_data) {
  var fn_key = cljs.reader.read_string.call(null, message_data["fn"]);
  var f = cljs.core.get.call(null, cljs.core.deref.call(null, servant.worker.worker_fn_map), fn_key);
  var args = message_data["args"];
  return cljs.core.apply.call(null, f, args);
};
servant.worker.post_array_buffer = function post_array_buffer(p__26978) {
  var vec__26980 = p__26978;
  var result = cljs.core.nth.call(null, vec__26980, 0, null);
  var arraybuffers = cljs.core.nth.call(null, vec__26980, 1, null);
  return self.postMessage(result, cljs.core.clj__GT_js.call(null, arraybuffers));
};
servant.worker.decode_message = function decode_message(event) {
  var pred__26984 = cljs.core._EQ_;
  var expr__26985 = event.data["command"];
  if (cljs.core.truth_(pred__26984.call(null, "channel", expr__26985))) {
    return self.postMessage(servant.worker.run_function_name.call(null, event.data));
  } else {
    if (cljs.core.truth_(pred__26984.call(null, "channel-arraybuffer", expr__26985))) {
      return servant.worker.post_array_buffer.call(null, servant.worker.run_function_name.call(null, event.data));
    } else {
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__26985)].join(""));
    }
  }
};
servant.worker.bootstrap = function bootstrap() {
  return self.onmessage = servant.worker.decode_message;
};
goog.provide("servant.core");
goog.require("cljs.core");
goog.require("servant.worker");
goog.require("cljs.core.async");
servant.core.webworker_QMARK_ = function webworker_QMARK_() {
  return void 0 === self.document;
};
servant.core.not_webworker_QMARK_ = cljs.core.complement.call(null, servant.core.webworker_QMARK_);
servant.core.spawn_servants = function spawn_servants(worker_count, worker_script) {
  var servant_channel = cljs.core.async.chan.call(null, worker_count);
  var c__6564__auto___27253 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___27253, servant_channel) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto___27253, servant_channel) {
          return function(state_27224) {
            var state_val_27225 = state_27224[1];
            if (state_val_27225 === 7) {
              var inst_27185 = state_27224[5];
              var inst_27187 = state_27224[6];
              var inst_27184 = state_27224[7];
              var inst_27186 = state_27224[8];
              var inst_27195 = state_27224[2];
              var inst_27196 = inst_27187 + 1;
              var tmp27226 = inst_27185;
              var tmp27227 = inst_27184;
              var tmp27228 = inst_27186;
              var inst_27184__$1 = tmp27227;
              var inst_27185__$1 = tmp27226;
              var inst_27186__$1 = tmp27228;
              var inst_27187__$1 = inst_27196;
              var state_27224__$1 = function() {
                var statearr_27229 = state_27224;
                statearr_27229[9] = inst_27195;
                statearr_27229[5] = inst_27185__$1;
                statearr_27229[6] = inst_27187__$1;
                statearr_27229[7] = inst_27184__$1;
                statearr_27229[8] = inst_27186__$1;
                return statearr_27229;
              }();
              var statearr_27230_27254 = state_27224__$1;
              statearr_27230_27254[2] = null;
              statearr_27230_27254[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_27225 === 1) {
                var inst_27182 = cljs.core.range.call(null, worker_count);
                var inst_27183 = cljs.core.seq.call(null, inst_27182);
                var inst_27184 = inst_27183;
                var inst_27185 = null;
                var inst_27186 = 0;
                var inst_27187 = 0;
                var state_27224__$1 = function() {
                  var statearr_27231 = state_27224;
                  statearr_27231[5] = inst_27185;
                  statearr_27231[6] = inst_27187;
                  statearr_27231[7] = inst_27184;
                  statearr_27231[8] = inst_27186;
                  return statearr_27231;
                }();
                var statearr_27232_27255 = state_27224__$1;
                statearr_27232_27255[2] = null;
                statearr_27232_27255[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_27225 === 4) {
                  var inst_27185 = state_27224[5];
                  var inst_27187 = state_27224[6];
                  var inst_27192 = cljs.core._nth.call(null, inst_27185, inst_27187);
                  var inst_27193 = new Worker(worker_script);
                  var state_27224__$1 = function() {
                    var statearr_27233 = state_27224;
                    statearr_27233[10] = inst_27192;
                    return statearr_27233;
                  }();
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27224__$1, 7, servant_channel, inst_27193);
                } else {
                  if (state_val_27225 === 13) {
                    var inst_27215 = state_27224[2];
                    var state_27224__$1 = state_27224;
                    var statearr_27234_27256 = state_27224__$1;
                    statearr_27234_27256[2] = inst_27215;
                    statearr_27234_27256[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_27225 === 6) {
                      var inst_27220 = state_27224[2];
                      var state_27224__$1 = state_27224;
                      var statearr_27235_27257 = state_27224__$1;
                      statearr_27235_27257[2] = inst_27220;
                      statearr_27235_27257[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_27225 === 3) {
                        var inst_27222 = state_27224[2];
                        var state_27224__$1 = state_27224;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27224__$1, inst_27222);
                      } else {
                        if (state_val_27225 === 12) {
                          var inst_27199 = state_27224[11];
                          var inst_27208 = cljs.core.first.call(null, inst_27199);
                          var inst_27209 = new Worker(worker_script);
                          var state_27224__$1 = function() {
                            var statearr_27236 = state_27224;
                            statearr_27236[12] = inst_27208;
                            return statearr_27236;
                          }();
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27224__$1, 14, servant_channel, inst_27209);
                        } else {
                          if (state_val_27225 === 2) {
                            var inst_27187 = state_27224[6];
                            var inst_27186 = state_27224[8];
                            var inst_27189 = inst_27187 < inst_27186;
                            var inst_27190 = inst_27189;
                            var state_27224__$1 = state_27224;
                            if (cljs.core.truth_(inst_27190)) {
                              var statearr_27237_27258 = state_27224__$1;
                              statearr_27237_27258[1] = 4;
                            } else {
                              var statearr_27238_27259 = state_27224__$1;
                              statearr_27238_27259[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_27225 === 11) {
                              var inst_27199 = state_27224[11];
                              var inst_27203 = cljs.core.chunk_first.call(null, inst_27199);
                              var inst_27204 = cljs.core.chunk_rest.call(null, inst_27199);
                              var inst_27205 = cljs.core.count.call(null, inst_27203);
                              var inst_27184 = inst_27204;
                              var inst_27185 = inst_27203;
                              var inst_27186 = inst_27205;
                              var inst_27187 = 0;
                              var state_27224__$1 = function() {
                                var statearr_27239 = state_27224;
                                statearr_27239[5] = inst_27185;
                                statearr_27239[6] = inst_27187;
                                statearr_27239[7] = inst_27184;
                                statearr_27239[8] = inst_27186;
                                return statearr_27239;
                              }();
                              var statearr_27240_27260 = state_27224__$1;
                              statearr_27240_27260[2] = null;
                              statearr_27240_27260[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_27225 === 9) {
                                var state_27224__$1 = state_27224;
                                var statearr_27241_27261 = state_27224__$1;
                                statearr_27241_27261[2] = null;
                                statearr_27241_27261[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_27225 === 5) {
                                  var inst_27199 = state_27224[11];
                                  var inst_27184 = state_27224[7];
                                  var inst_27199__$1 = cljs.core.seq.call(null, inst_27184);
                                  var state_27224__$1 = function() {
                                    var statearr_27242 = state_27224;
                                    statearr_27242[11] = inst_27199__$1;
                                    return statearr_27242;
                                  }();
                                  if (inst_27199__$1) {
                                    var statearr_27243_27262 = state_27224__$1;
                                    statearr_27243_27262[1] = 8;
                                  } else {
                                    var statearr_27244_27263 = state_27224__$1;
                                    statearr_27244_27263[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_27225 === 14) {
                                    var inst_27199 = state_27224[11];
                                    var inst_27211 = state_27224[2];
                                    var inst_27212 = cljs.core.next.call(null, inst_27199);
                                    var inst_27184 = inst_27212;
                                    var inst_27185 = null;
                                    var inst_27186 = 0;
                                    var inst_27187 = 0;
                                    var state_27224__$1 = function() {
                                      var statearr_27245 = state_27224;
                                      statearr_27245[5] = inst_27185;
                                      statearr_27245[6] = inst_27187;
                                      statearr_27245[7] = inst_27184;
                                      statearr_27245[13] = inst_27211;
                                      statearr_27245[8] = inst_27186;
                                      return statearr_27245;
                                    }();
                                    var statearr_27246_27264 = state_27224__$1;
                                    statearr_27246_27264[2] = null;
                                    statearr_27246_27264[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_27225 === 10) {
                                      var inst_27218 = state_27224[2];
                                      var state_27224__$1 = state_27224;
                                      var statearr_27247_27265 = state_27224__$1;
                                      statearr_27247_27265[2] = inst_27218;
                                      statearr_27247_27265[1] = 6;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_27225 === 8) {
                                        var inst_27199 = state_27224[11];
                                        var inst_27201 = cljs.core.chunked_seq_QMARK_.call(null, inst_27199);
                                        var state_27224__$1 = state_27224;
                                        if (inst_27201) {
                                          var statearr_27248_27266 = state_27224__$1;
                                          statearr_27248_27266[1] = 11;
                                        } else {
                                          var statearr_27249_27267 = state_27224__$1;
                                          statearr_27249_27267[1] = 12;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto___27253, servant_channel);
        return function(switch__6520__auto__, c__6564__auto___27253, servant_channel) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_27251 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_27251[0] = state_machine__6521__auto__;
              statearr_27251[1] = 1;
              return statearr_27251;
            };
            var state_machine__6521__auto____1 = function(state_27224) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_27224);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_27224) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_27224);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto___27253, servant_channel);
      }();
      var state__6566__auto__ = function() {
        var statearr_27252 = f__6565__auto__.call(null);
        statearr_27252[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___27253;
        return statearr_27252;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto___27253, servant_channel));
  return servant_channel;
};
servant.core.kill_servants = function kill_servants(servant_channel, worker_count) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_27389) {
            var state_val_27390 = state_27389[1];
            if (state_val_27390 === 7) {
              var inst_27352 = state_27389[5];
              var inst_27351 = state_27389[6];
              var inst_27350 = state_27389[7];
              var inst_27349 = state_27389[8];
              var inst_27359 = state_27389[2];
              var inst_27360 = inst_27359.terminate();
              var inst_27361 = inst_27352 + 1;
              var tmp27391 = inst_27351;
              var tmp27392 = inst_27350;
              var tmp27393 = inst_27349;
              var inst_27349__$1 = tmp27393;
              var inst_27350__$1 = tmp27392;
              var inst_27351__$1 = tmp27391;
              var inst_27352__$1 = inst_27361;
              var state_27389__$1 = function() {
                var statearr_27394 = state_27389;
                statearr_27394[5] = inst_27352__$1;
                statearr_27394[6] = inst_27351__$1;
                statearr_27394[7] = inst_27350__$1;
                statearr_27394[8] = inst_27349__$1;
                statearr_27394[9] = inst_27360;
                return statearr_27394;
              }();
              var statearr_27395_27418 = state_27389__$1;
              statearr_27395_27418[2] = null;
              statearr_27395_27418[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_27390 === 1) {
                var inst_27347 = cljs.core.range.call(null, worker_count);
                var inst_27348 = cljs.core.seq.call(null, inst_27347);
                var inst_27349 = inst_27348;
                var inst_27350 = null;
                var inst_27351 = 0;
                var inst_27352 = 0;
                var state_27389__$1 = function() {
                  var statearr_27396 = state_27389;
                  statearr_27396[5] = inst_27352;
                  statearr_27396[6] = inst_27351;
                  statearr_27396[7] = inst_27350;
                  statearr_27396[8] = inst_27349;
                  return statearr_27396;
                }();
                var statearr_27397_27419 = state_27389__$1;
                statearr_27397_27419[2] = null;
                statearr_27397_27419[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_27390 === 4) {
                  var inst_27352 = state_27389[5];
                  var inst_27350 = state_27389[7];
                  var inst_27357 = cljs.core._nth.call(null, inst_27350, inst_27352);
                  var state_27389__$1 = function() {
                    var statearr_27398 = state_27389;
                    statearr_27398[10] = inst_27357;
                    return statearr_27398;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27389__$1, 7, servant_channel);
                } else {
                  if (state_val_27390 === 13) {
                    var inst_27380 = state_27389[2];
                    var state_27389__$1 = state_27389;
                    var statearr_27399_27420 = state_27389__$1;
                    statearr_27399_27420[2] = inst_27380;
                    statearr_27399_27420[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_27390 === 6) {
                      var inst_27385 = state_27389[2];
                      var state_27389__$1 = state_27389;
                      var statearr_27400_27421 = state_27389__$1;
                      statearr_27400_27421[2] = inst_27385;
                      statearr_27400_27421[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_27390 === 3) {
                        var inst_27387 = state_27389[2];
                        var state_27389__$1 = state_27389;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27389__$1, inst_27387);
                      } else {
                        if (state_val_27390 === 12) {
                          var inst_27364 = state_27389[11];
                          var inst_27373 = cljs.core.first.call(null, inst_27364);
                          var state_27389__$1 = function() {
                            var statearr_27401 = state_27389;
                            statearr_27401[12] = inst_27373;
                            return statearr_27401;
                          }();
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27389__$1, 14, servant_channel);
                        } else {
                          if (state_val_27390 === 2) {
                            var inst_27352 = state_27389[5];
                            var inst_27351 = state_27389[6];
                            var inst_27354 = inst_27352 < inst_27351;
                            var inst_27355 = inst_27354;
                            var state_27389__$1 = state_27389;
                            if (cljs.core.truth_(inst_27355)) {
                              var statearr_27402_27422 = state_27389__$1;
                              statearr_27402_27422[1] = 4;
                            } else {
                              var statearr_27403_27423 = state_27389__$1;
                              statearr_27403_27423[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_27390 === 11) {
                              var inst_27364 = state_27389[11];
                              var inst_27368 = cljs.core.chunk_first.call(null, inst_27364);
                              var inst_27369 = cljs.core.chunk_rest.call(null, inst_27364);
                              var inst_27370 = cljs.core.count.call(null, inst_27368);
                              var inst_27349 = inst_27369;
                              var inst_27350 = inst_27368;
                              var inst_27351 = inst_27370;
                              var inst_27352 = 0;
                              var state_27389__$1 = function() {
                                var statearr_27404 = state_27389;
                                statearr_27404[5] = inst_27352;
                                statearr_27404[6] = inst_27351;
                                statearr_27404[7] = inst_27350;
                                statearr_27404[8] = inst_27349;
                                return statearr_27404;
                              }();
                              var statearr_27405_27424 = state_27389__$1;
                              statearr_27405_27424[2] = null;
                              statearr_27405_27424[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_27390 === 9) {
                                var state_27389__$1 = state_27389;
                                var statearr_27406_27425 = state_27389__$1;
                                statearr_27406_27425[2] = null;
                                statearr_27406_27425[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_27390 === 5) {
                                  var inst_27364 = state_27389[11];
                                  var inst_27349 = state_27389[8];
                                  var inst_27364__$1 = cljs.core.seq.call(null, inst_27349);
                                  var state_27389__$1 = function() {
                                    var statearr_27407 = state_27389;
                                    statearr_27407[11] = inst_27364__$1;
                                    return statearr_27407;
                                  }();
                                  if (inst_27364__$1) {
                                    var statearr_27408_27426 = state_27389__$1;
                                    statearr_27408_27426[1] = 8;
                                  } else {
                                    var statearr_27409_27427 = state_27389__$1;
                                    statearr_27409_27427[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_27390 === 14) {
                                    var inst_27364 = state_27389[11];
                                    var inst_27375 = state_27389[2];
                                    var inst_27376 = inst_27375.terminate();
                                    var inst_27377 = cljs.core.next.call(null, inst_27364);
                                    var inst_27349 = inst_27377;
                                    var inst_27350 = null;
                                    var inst_27351 = 0;
                                    var inst_27352 = 0;
                                    var state_27389__$1 = function() {
                                      var statearr_27410 = state_27389;
                                      statearr_27410[5] = inst_27352;
                                      statearr_27410[13] = inst_27376;
                                      statearr_27410[6] = inst_27351;
                                      statearr_27410[7] = inst_27350;
                                      statearr_27410[8] = inst_27349;
                                      return statearr_27410;
                                    }();
                                    var statearr_27411_27428 = state_27389__$1;
                                    statearr_27411_27428[2] = null;
                                    statearr_27411_27428[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_27390 === 10) {
                                      var inst_27383 = state_27389[2];
                                      var state_27389__$1 = state_27389;
                                      var statearr_27412_27429 = state_27389__$1;
                                      statearr_27412_27429[2] = inst_27383;
                                      statearr_27412_27429[1] = 6;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_27390 === 8) {
                                        var inst_27364 = state_27389[11];
                                        var inst_27366 = cljs.core.chunked_seq_QMARK_.call(null, inst_27364);
                                        var state_27389__$1 = state_27389;
                                        if (inst_27366) {
                                          var statearr_27413_27430 = state_27389__$1;
                                          statearr_27413_27430[1] = 11;
                                        } else {
                                          var statearr_27414_27431 = state_27389__$1;
                                          statearr_27414_27431[1] = 12;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_27416 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_27416[0] = state_machine__6521__auto__;
              statearr_27416[1] = 1;
              return statearr_27416;
            };
            var state_machine__6521__auto____1 = function(state_27389) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_27389);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_27389) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_27389);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_27417 = f__6565__auto__.call(null);
        statearr_27417[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_27417;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
servant.core.f__GT_key = function f__GT_key(f) {
  return cljs.core.ffirst.call(null, cljs.core.filter.call(null, function(p1__27432_SHARP_) {
    return cljs.core._EQ_.call(null, f, cljs.core.second.call(null, p1__27432_SHARP_));
  }, cljs.core.deref.call(null, servant.worker.worker_fn_map)));
};
servant.core.standard_message = function standard_message(worker, fn_key, args) {
  return worker.postMessage(function() {
    var obj27436 = {"command":"channel", "fn":fn_key, "args":cljs.core.clj__GT_js.call(null, args)};
    return obj27436;
  }());
};
servant.core.array_buffer_message = function array_buffer_message(worker, fn_key, args) {
  var vec__27440 = args;
  var args__$1 = cljs.core.nth.call(null, vec__27440, 0, null);
  var arraybuffers = cljs.core.nth.call(null, vec__27440, 1, null);
  return worker.postMessage(function() {
    var obj27442 = {"command":"channel-arraybuffer", "fn":fn_key, "args":cljs.core.clj__GT_js.call(null, args__$1)};
    return obj27442;
  }(), cljs.core.clj__GT_js.call(null, arraybuffers));
};
servant.core.array_buffer_message_standard_reply = function array_buffer_message_standard_reply(worker, fn_key, args) {
  var vec__27446 = args;
  var args__$1 = cljs.core.nth.call(null, vec__27446, 0, null);
  var arraybuffers = cljs.core.nth.call(null, vec__27446, 1, null);
  return worker.postMessage(function() {
    var obj27448 = {"command":"channel", "fn":fn_key, "args":cljs.core.clj__GT_js.call(null, args__$1)};
    return obj27448;
  }(), cljs.core.clj__GT_js.call(null, arraybuffers));
};
servant.core.servant_thread_with_key = function() {
  var servant_thread_with_key__delegate = function(servant_channel, post_message_fn, fn_key, args) {
    var out_channel = cljs.core.async.chan.call(null, 1);
    var c__6564__auto___27500 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___27500, out_channel) {
      return function() {
        var f__6565__auto__ = function() {
          var switch__6520__auto__ = function(c__6564__auto___27500, out_channel) {
            return function(state_27482) {
              var state_val_27483 = state_27482[1];
              if (state_val_27483 === 2) {
                var inst_27476 = state_27482[2];
                var inst_27477 = cljs.core.pr_str.call(null, fn_key);
                var inst_27478 = post_message_fn.call(null, inst_27476, inst_27477, args);
                var inst_27479 = function() {
                  var worker = inst_27476;
                  return function(worker, inst_27476, inst_27477, inst_27478, state_val_27483, c__6564__auto___27500, out_channel) {
                    return function(p1__27449_SHARP_) {
                      var c__6564__auto____$1 = cljs.core.async.chan.call(null, 1);
                      cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto____$1, worker, inst_27476, inst_27477, inst_27478, state_val_27483, c__6564__auto___27500, out_channel) {
                        return function() {
                          var f__6565__auto__ = function() {
                            var switch__6520__auto__ = function(c__6564__auto____$1, worker, inst_27476, inst_27477, inst_27478, state_val_27483, c__6564__auto___27500, out_channel) {
                              return function(state_27490) {
                                var state_val_27491 = state_27490[1];
                                if (state_val_27491 === 3) {
                                  var inst_27488 = state_27490[2];
                                  var state_27490__$1 = state_27490;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27490__$1, inst_27488);
                                } else {
                                  if (state_val_27491 === 2) {
                                    var inst_27486 = state_27490[2];
                                    var state_27490__$1 = function() {
                                      var statearr_27492 = state_27490;
                                      statearr_27492[5] = inst_27486;
                                      return statearr_27492;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27490__$1, 3, servant_channel, worker);
                                  } else {
                                    if (state_val_27491 === 1) {
                                      var inst_27484 = p1__27449_SHARP_.data;
                                      var state_27490__$1 = state_27490;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27490__$1, 2, out_channel, inst_27484);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              };
                            }(c__6564__auto____$1, worker, inst_27476, inst_27477, inst_27478, state_val_27483, c__6564__auto___27500, out_channel);
                            return function(switch__6520__auto__, c__6564__auto____$1, worker, inst_27476, inst_27477, inst_27478, state_val_27483, c__6564__auto___27500, out_channel) {
                              return function() {
                                var state_machine__6521__auto__ = null;
                                var state_machine__6521__auto____0 = function() {
                                  var statearr_27494 = [null, null, null, null, null, null];
                                  statearr_27494[0] = state_machine__6521__auto__;
                                  statearr_27494[1] = 1;
                                  return statearr_27494;
                                };
                                var state_machine__6521__auto____1 = function(state_27490) {
                                  while (true) {
                                    var result__6522__auto__ = switch__6520__auto__.call(null, state_27490);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                      continue;
                                    } else {
                                      return result__6522__auto__;
                                    }
                                    break;
                                  }
                                };
                                state_machine__6521__auto__ = function(state_27490) {
                                  switch(arguments.length) {
                                    case 0:
                                      return state_machine__6521__auto____0.call(this);
                                    case 1:
                                      return state_machine__6521__auto____1.call(this, state_27490);
                                  }
                                  throw new Error("Invalid arity: " + arguments.length);
                                };
                                state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
                                state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
                                return state_machine__6521__auto__;
                              }();
                            }(switch__6520__auto__, c__6564__auto____$1, worker, inst_27476, inst_27477, inst_27478, state_val_27483, c__6564__auto___27500, out_channel);
                          }();
                          var state__6566__auto__ = function() {
                            var statearr_27495 = f__6565__auto__.call(null);
                            statearr_27495[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto____$1;
                            return statearr_27495;
                          }();
                          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
                        };
                      }(c__6564__auto____$1, worker, inst_27476, inst_27477, inst_27478, state_val_27483, c__6564__auto___27500, out_channel));
                      return c__6564__auto____$1;
                    };
                  }(worker, inst_27476, inst_27477, inst_27478, state_val_27483, c__6564__auto___27500, out_channel);
                }();
                var inst_27480 = inst_27476.addEventListener("message", inst_27479);
                var state_27482__$1 = function() {
                  var statearr_27496 = state_27482;
                  statearr_27496[5] = inst_27478;
                  return statearr_27496;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27482__$1, inst_27480);
              } else {
                if (state_val_27483 === 1) {
                  var state_27482__$1 = state_27482;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27482__$1, 2, servant_channel);
                } else {
                  return null;
                }
              }
            };
          }(c__6564__auto___27500, out_channel);
          return function(switch__6520__auto__, c__6564__auto___27500, out_channel) {
            return function() {
              var state_machine__6521__auto__ = null;
              var state_machine__6521__auto____0 = function() {
                var statearr_27498 = [null, null, null, null, null, null];
                statearr_27498[0] = state_machine__6521__auto__;
                statearr_27498[1] = 1;
                return statearr_27498;
              };
              var state_machine__6521__auto____1 = function(state_27482) {
                while (true) {
                  var result__6522__auto__ = switch__6520__auto__.call(null, state_27482);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6522__auto__;
                  }
                  break;
                }
              };
              state_machine__6521__auto__ = function(state_27482) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6521__auto____0.call(this);
                  case 1:
                    return state_machine__6521__auto____1.call(this, state_27482);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
              state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
              return state_machine__6521__auto__;
            }();
          }(switch__6520__auto__, c__6564__auto___27500, out_channel);
        }();
        var state__6566__auto__ = function() {
          var statearr_27499 = f__6565__auto__.call(null);
          statearr_27499[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___27500;
          return statearr_27499;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
      };
    }(c__6564__auto___27500, out_channel));
    return out_channel;
  };
  var servant_thread_with_key = function(servant_channel, post_message_fn, fn_key, var_args) {
    var args = null;
    if (arguments.length > 3) {
      var G__27501__i = 0, G__27501__a = new Array(arguments.length - 3);
      while (G__27501__i < G__27501__a.length) {
        G__27501__a[G__27501__i] = arguments[G__27501__i + 3];
        ++G__27501__i;
      }
      args = new cljs.core.IndexedSeq(G__27501__a, 0);
    }
    return servant_thread_with_key__delegate.call(this, servant_channel, post_message_fn, fn_key, args);
  };
  servant_thread_with_key.cljs$lang$maxFixedArity = 3;
  servant_thread_with_key.cljs$lang$applyTo = function(arglist__27502) {
    var servant_channel = cljs.core.first(arglist__27502);
    arglist__27502 = cljs.core.next(arglist__27502);
    var post_message_fn = cljs.core.first(arglist__27502);
    arglist__27502 = cljs.core.next(arglist__27502);
    var fn_key = cljs.core.first(arglist__27502);
    var args = cljs.core.rest(arglist__27502);
    return servant_thread_with_key__delegate(servant_channel, post_message_fn, fn_key, args);
  };
  servant_thread_with_key.cljs$core$IFn$_invoke$arity$variadic = servant_thread_with_key__delegate;
  return servant_thread_with_key;
}();
servant.core.servant_thread = function() {
  var servant_thread__delegate = function(servant_channel, post_message_fn, f, args) {
    return cljs.core.apply.call(null, servant.core.servant_thread_with_key, servant_channel, post_message_fn, servant.core.f__GT_key.call(null, f), args);
  };
  var servant_thread = function(servant_channel, post_message_fn, f, var_args) {
    var args = null;
    if (arguments.length > 3) {
      var G__27503__i = 0, G__27503__a = new Array(arguments.length - 3);
      while (G__27503__i < G__27503__a.length) {
        G__27503__a[G__27503__i] = arguments[G__27503__i + 3];
        ++G__27503__i;
      }
      args = new cljs.core.IndexedSeq(G__27503__a, 0);
    }
    return servant_thread__delegate.call(this, servant_channel, post_message_fn, f, args);
  };
  servant_thread.cljs$lang$maxFixedArity = 3;
  servant_thread.cljs$lang$applyTo = function(arglist__27504) {
    var servant_channel = cljs.core.first(arglist__27504);
    arglist__27504 = cljs.core.next(arglist__27504);
    var post_message_fn = cljs.core.first(arglist__27504);
    arglist__27504 = cljs.core.next(arglist__27504);
    var f = cljs.core.first(arglist__27504);
    var args = cljs.core.rest(arglist__27504);
    return servant_thread__delegate(servant_channel, post_message_fn, f, args);
  };
  servant_thread.cljs$core$IFn$_invoke$arity$variadic = servant_thread__delegate;
  return servant_thread;
}();
goog.provide("mining");
goog.require("cljs.core");
goog.require("pubsub");
goog.require("servant.worker");
goog.require("servant.core");
goog.require("cljs.core.async");
mining.hashmine = cljs.core.async.chan.call(null);
mining.hashmine.type = "workerch";
console.log("this runs in the browser");
mining.worker_count = 2;
mining.worker_script = "wrkr.js";
mining.servant_channel = servant.core.spawn_servants.call(null, mining.worker_count, mining.worker_script);
mining.mine = function mine(rootHash) {
  l.og.call(null, new cljs.core.Keyword(null, "mine", "mine", -130428525), "about to mine %s ", rootHash);
  mining.chann = servant.core.servant_thread.call(null, mining.servant_channel, servant.core.standard_message, "none", "newjob", rootHash);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_16171) {
            var state_val_16172 = state_16171[1];
            if (state_val_16172 === 2) {
              var inst_16165 = state_16171[2];
              var inst_16166 = mining.v = inst_16165;
              var inst_16167 = l.og.call(null, new cljs.core.Keyword(null, "mine", "mine", -130428525), "recieved from mining", mining.v);
              var inst_16168 = JSON.parse(mining.v);
              var inst_16169 = mining.pub.call(null, "blockMined", inst_16168);
              var state_16171__$1 = function() {
                var statearr_16173 = state_16171;
                statearr_16173[5] = inst_16166;
                statearr_16173[6] = inst_16167;
                return statearr_16173;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16171__$1, inst_16169);
            } else {
              if (state_val_16172 === 1) {
                var inst_16163 = l.og.call(null, new cljs.core.Keyword(null, "mine", "mine", -130428525), "about to wait for mining to end ");
                var state_16171__$1 = function() {
                  var statearr_16174 = state_16171;
                  statearr_16174[7] = inst_16163;
                  return statearr_16174;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16171__$1, 2, mining.chann);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_16176 = [null, null, null, null, null, null, null, null];
              statearr_16176[0] = state_machine__6521__auto__;
              statearr_16176[1] = 1;
              return statearr_16176;
            };
            var state_machine__6521__auto____1 = function(state_16171) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_16171);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_16171) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_16171);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_16177 = f__6565__auto__.call(null);
        statearr_16177[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_16177;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
goog.provide("plainText");
goog.require("cljs.core");
goog.provide("servantWorkers");
goog.require("cljs.core");
goog.require("servant.worker");
goog.require("servant.core");
servantWorkers.worker_count = 2;
servantWorkers.worker_script = "wrkr.js";
servantWorkers.servant_channel = servant.core.spawn_servants.call(null, servantWorkers.worker_count, servantWorkers.worker_script);
goog.provide("intercomMake");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
intercomMake.makeInv = function makeInv(typ, message) {
  var obj11814 = {"type":"json", "data":JSON.stringify(function() {
    var obj11816 = {"type":"inv", "data":function() {
      var obj11818 = {"type":typ, "vector":message};
      return obj11818;
    }()};
    return obj11816;
  }())};
  return obj11814;
};
intercomMake.makeData = function makeData(typ, message) {
  return null;
};
intercomMake.makeGetVersion = function makeGetVersion(typ, message) {
  return null;
};
intercomMake.makeVersion = function makeVersion(message) {
  var obj11822 = {"type":"version", "data":message};
  return obj11822;
};
intercomMake.makeConn = function makeConn(conn) {
  l.og.call(null, new cljs.core.Keyword(null, "makeConn", "makeConn", 176409920), "make conn ", conn);
  var obj11826 = {"type":"conn", "data":conn};
  return obj11826;
};
intercomMake.makeGetBlock = function makeGetBlock(hash) {
  l.og.call(null, new cljs.core.Keyword(null, "makeGetBlock", "makeGetBlock", -1966015644), "about to make block ", hash);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_11932) {
            var state_val_11933 = state_11932[1];
            if (state_val_11933 === 7) {
              var state_11932__$1 = state_11932;
              var statearr_11934_11953 = state_11932__$1;
              statearr_11934_11953[2] = null;
              statearr_11934_11953[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_11933 === 1) {
                var inst_11892 = [];
                var inst_11893 = {"count":0, "blocks":inst_11892};
                var inst_11894 = inst_11893[intercomMake.hash_stop] = 0;
                var inst_11895 = intercomMake.gtBlock = inst_11893;
                var inst_11896 = app.blockchain.blockchainHeight.call(null, 1);
                var state_11932__$1 = function() {
                  var statearr_11935 = state_11932;
                  statearr_11935[5] = inst_11895;
                  statearr_11935[6] = inst_11894;
                  return statearr_11935;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11932__$1, 2, inst_11896);
              } else {
                if (state_val_11933 === 4) {
                  var inst_11930 = state_11932[2];
                  var state_11932__$1 = function() {
                    var statearr_11936 = state_11932;
                    statearr_11936[7] = inst_11930;
                    return statearr_11936;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11932__$1, intercomMake.gtBlock);
                } else {
                  if (state_val_11933 === 6) {
                    var inst_11901 = state_11932[8];
                    var inst_11917 = inst_11901 < 10;
                    var state_11932__$1 = state_11932;
                    if (cljs.core.truth_(inst_11917)) {
                      var statearr_11937_11954 = state_11932__$1;
                      statearr_11937_11954[1] = 9;
                    } else {
                      var statearr_11938_11955 = state_11932__$1;
                      statearr_11938_11955[1] = 10;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11933 === 3) {
                      var inst_11900 = state_11932[9];
                      var inst_11901 = state_11932[8];
                      var inst_11903 = "new loop " + inst_11900;
                      var inst_11904 = inst_11903 + " ";
                      var inst_11905 = l.og.call(null, new cljs.core.Keyword(null, "makeGetBlock", "makeGetBlock", -1966015644), inst_11904, inst_11901);
                      var inst_11906 = "b" + inst_11900;
                      var inst_11907 = db.g.call(null, inst_11906);
                      var state_11932__$1 = function() {
                        var statearr_11939 = state_11932;
                        statearr_11939[10] = inst_11905;
                        return statearr_11939;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11932__$1, 5, inst_11907);
                    } else {
                      if (state_val_11933 === 2) {
                        var inst_11898 = state_11932[2];
                        var inst_11899 = intercomMake.heightForBlock = inst_11898;
                        var inst_11900 = intercomMake.heightForBlock;
                        var inst_11901 = 0;
                        var state_11932__$1 = function() {
                          var statearr_11940 = state_11932;
                          statearr_11940[11] = inst_11899;
                          statearr_11940[9] = inst_11900;
                          statearr_11940[8] = inst_11901;
                          return statearr_11940;
                        }();
                        var statearr_11941_11956 = state_11932__$1;
                        statearr_11941_11956[2] = null;
                        statearr_11941_11956[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11933 === 11) {
                          var inst_11901 = state_11932[8];
                          var inst_11923 = state_11932[2];
                          var inst_11924 = inst_11901 + 1;
                          var inst_11900 = inst_11923;
                          var inst_11901__$1 = inst_11924;
                          var state_11932__$1 = function() {
                            var statearr_11942 = state_11932;
                            statearr_11942[9] = inst_11900;
                            statearr_11942[8] = inst_11901__$1;
                            return statearr_11942;
                          }();
                          var statearr_11943_11957 = state_11932__$1;
                          statearr_11943_11957[2] = null;
                          statearr_11943_11957[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11933 === 9) {
                            var inst_11900 = state_11932[9];
                            var inst_11919 = inst_11900 - 1;
                            var state_11932__$1 = state_11932;
                            var statearr_11944_11958 = state_11932__$1;
                            statearr_11944_11958[2] = inst_11919;
                            statearr_11944_11958[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11933 === 5) {
                              var inst_11900 = state_11932[9];
                              var inst_11909 = state_11932[2];
                              var inst_11910 = intercomMake.blockg = inst_11909;
                              var inst_11911 = l.og.call(null, new cljs.core.Keyword(null, "makeGetBlock", "makeGetBlock", -1966015644), "curr block ");
                              var inst_11912 = intercomMake.gtBlock.count = inst_11900;
                              var inst_11913 = intercomMake.gtBlock.blocks;
                              var inst_11914 = inst_11913.push(intercomMake.blockg);
                              var inst_11915 = 0 < inst_11900;
                              var state_11932__$1 = function() {
                                var statearr_11945 = state_11932;
                                statearr_11945[12] = inst_11912;
                                statearr_11945[13] = inst_11914;
                                statearr_11945[14] = inst_11910;
                                statearr_11945[15] = inst_11911;
                                return statearr_11945;
                              }();
                              if (cljs.core.truth_(inst_11915)) {
                                var statearr_11946_11959 = state_11932__$1;
                                statearr_11946_11959[1] = 6;
                              } else {
                                var statearr_11947_11960 = state_11932__$1;
                                statearr_11947_11960[1] = 7;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11933 === 10) {
                                var inst_11900 = state_11932[9];
                                var inst_11921 = cljs.core.quot.call(null, inst_11900, 2);
                                var state_11932__$1 = state_11932;
                                var statearr_11948_11961 = state_11932__$1;
                                statearr_11948_11961[2] = inst_11921;
                                statearr_11948_11961[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11933 === 8) {
                                  var inst_11928 = state_11932[2];
                                  var state_11932__$1 = state_11932;
                                  var statearr_11949_11962 = state_11932__$1;
                                  statearr_11949_11962[2] = inst_11928;
                                  statearr_11949_11962[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_11951 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_11951[0] = state_machine__6521__auto__;
              statearr_11951[1] = 1;
              return statearr_11951;
            };
            var state_machine__6521__auto____1 = function(state_11932) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_11932);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_11932) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_11932);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_11952 = f__6565__auto__.call(null);
        statearr_11952[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_11952;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
goog.provide("intercomTakeUtil");
goog.require("cljs.core");
goog.provide("intercomTake");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
intercomTake.sendm = function sendm(peer, payload) {
  l.og.call(null, new cljs.core.Keyword(null, "sendm", "sendm", -1454310736), "sending ", payload);
  l.og.call(null, new cljs.core.Keyword(null, "sendm", "sendm", -1454310736), "peer ", peer);
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15748) {
            var state_val_15749 = state_15748[1];
            if (state_val_15749 === 2) {
              var inst_15746 = state_15748[2];
              var state_15748__$1 = state_15748;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15748__$1, inst_15746);
            } else {
              if (state_val_15749 === 1) {
                var state_15748__$1 = state_15748;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15748__$1, 2, peer, payload);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15751 = [null, null, null, null, null];
              statearr_15751[0] = state_machine__6521__auto__;
              statearr_15751[1] = 1;
              return statearr_15751;
            };
            var state_machine__6521__auto____1 = function(state_15748) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15748);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15748) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15748);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15752 = f__6565__auto__.call(null);
        statearr_15752[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15752;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
intercomTake.takeInv = function takeInv(fullMessage) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15884) {
            var state_val_15885 = state_15884[1];
            if (state_val_15885 === 7) {
              var inst_15851 = state_15884[2];
              var inst_15852 = intercomTake.heightFromBlock.call(null, inst_15851);
              var inst_15853 = intercomTake.blocks.vector;
              var inst_15854 = inst_15853.length;
              var inst_15855 = inst_15852 + inst_15854;
              var inst_15856 = inst_15855 + 1;
              var inst_15857 = intercomTake.newHeight = inst_15856;
              var inst_15858 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "newHeight ", intercomTake.newHeight);
              var inst_15859 = intercomTake.bchainHeight < intercomTake.newHeight;
              var state_15884__$1 = function() {
                var statearr_15886 = state_15884;
                statearr_15886[5] = inst_15858;
                statearr_15886[6] = inst_15857;
                return statearr_15886;
              }();
              if (cljs.core.truth_(inst_15859)) {
                var statearr_15887_15905 = state_15884__$1;
                statearr_15887_15905[1] = 8;
              } else {
                var statearr_15888_15906 = state_15884__$1;
                statearr_15888_15906[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_15885 === 1) {
                var inst_15829 = fullMessage.data;
                var inst_15830 = intercomTake.blocks = inst_15829;
                var inst_15831 = l.og.call(null, new cljs.core.Keyword(null, "takeInv", "takeInv", 1845315889), "now about to handle inv block message ", intercomTake.blocks);
                var inst_15832 = intercomTake.blocks.vector;
                var inst_15833 = inst_15832[0];
                var inst_15834 = blockchain.prevblk.call(null, inst_15833);
                var inst_15835 = blockchain.blockKnown_QMARK_.call(null, inst_15834);
                var state_15884__$1 = function() {
                  var statearr_15889 = state_15884;
                  statearr_15889[7] = inst_15831;
                  statearr_15889[8] = inst_15830;
                  return statearr_15889;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15884__$1, 2, inst_15835);
              } else {
                if (state_val_15885 === 4) {
                  var inst_15868 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "request previous", intercomTake.blocks);
                  var inst_15869 = db.g.call(null, "last");
                  var state_15884__$1 = function() {
                    var statearr_15890 = state_15884;
                    statearr_15890[9] = inst_15868;
                    return statearr_15890;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15884__$1, 11, inst_15869);
                } else {
                  if (state_val_15885 === 13) {
                    var inst_15875 = state_15884[10];
                    var inst_15878 = state_15884[2];
                    var state_15884__$1 = state_15884;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15884__$1, 12, inst_15875, inst_15878);
                  } else {
                    if (state_val_15885 === 6) {
                      var inst_15843 = state_15884[2];
                      var inst_15844 = intercomTake.bchainHeight = inst_15843;
                      var inst_15845 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "blockchainHeight ", intercomTake.bchainHeight);
                      var inst_15846 = intercomTake.blocks.vector;
                      var inst_15847 = inst_15846[0];
                      var inst_15848 = blockchain.prevblk.call(null, inst_15847);
                      var inst_15849 = db.g.call(null, inst_15848);
                      var state_15884__$1 = function() {
                        var statearr_15891 = state_15884;
                        statearr_15891[11] = inst_15845;
                        statearr_15891[12] = inst_15844;
                        return statearr_15891;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15884__$1, 7, inst_15849);
                    } else {
                      if (state_val_15885 === 3) {
                        var inst_15839 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "block is known ");
                        var inst_15840 = "blockchainHeight".call(null);
                        var inst_15841 = cljs.core.apply.call(null, pubsub.sia, inst_15840);
                        var state_15884__$1 = function() {
                          var statearr_15892 = state_15884;
                          statearr_15892[13] = inst_15839;
                          return statearr_15892;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15884__$1, 6, inst_15841);
                      } else {
                        if (state_val_15885 === 12) {
                          var inst_15880 = state_15884[2];
                          var state_15884__$1 = state_15884;
                          var statearr_15893_15907 = state_15884__$1;
                          statearr_15893_15907[2] = inst_15880;
                          statearr_15893_15907[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15885 === 2) {
                            var inst_15837 = state_15884[2];
                            var state_15884__$1 = state_15884;
                            if (cljs.core.truth_(inst_15837)) {
                              var statearr_15894_15908 = state_15884__$1;
                              statearr_15894_15908[1] = 3;
                            } else {
                              var statearr_15895_15909 = state_15884__$1;
                              statearr_15895_15909[1] = 4;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15885 === 11) {
                              var inst_15871 = state_15884[2];
                              var inst_15872 = inst_15871.hash;
                              var inst_15873 = intercomTake.lblock = inst_15872;
                              var inst_15874 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "last block ", intercomTake.lblock);
                              var inst_15875 = fullMessage.peer;
                              var inst_15876 = im.makeGetBlock.call(null, intercomTake.lblock);
                              var state_15884__$1 = function() {
                                var statearr_15896 = state_15884;
                                statearr_15896[14] = inst_15873;
                                statearr_15896[10] = inst_15875;
                                statearr_15896[15] = inst_15874;
                                return statearr_15896;
                              }();
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15884__$1, 13, inst_15876);
                            } else {
                              if (state_val_15885 === 9) {
                                var inst_15864 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "about to drop inv");
                                var state_15884__$1 = state_15884;
                                var statearr_15897_15910 = state_15884__$1;
                                statearr_15897_15910[2] = inst_15864;
                                statearr_15897_15910[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15885 === 5) {
                                  var inst_15882 = state_15884[2];
                                  var state_15884__$1 = function() {
                                    var statearr_15898 = state_15884;
                                    statearr_15898[16] = inst_15882;
                                    return statearr_15898;
                                  }();
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15884__$1, "grind");
                                } else {
                                  if (state_val_15885 === 10) {
                                    var inst_15866 = state_15884[2];
                                    var state_15884__$1 = state_15884;
                                    var statearr_15899_15911 = state_15884__$1;
                                    statearr_15899_15911[2] = inst_15866;
                                    statearr_15899_15911[1] = 5;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_15885 === 8) {
                                      var inst_15861 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "now adding to chain");
                                      var inst_15862 = blockchain.addToChain.call(null, intercomTake.blocks);
                                      var state_15884__$1 = function() {
                                        var statearr_15900 = state_15884;
                                        statearr_15900[17] = inst_15861;
                                        return statearr_15900;
                                      }();
                                      var statearr_15901_15912 = state_15884__$1;
                                      statearr_15901_15912[2] = inst_15862;
                                      statearr_15901_15912[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15903 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_15903[0] = state_machine__6521__auto__;
              statearr_15903[1] = 1;
              return statearr_15903;
            };
            var state_machine__6521__auto____1 = function(state_15884) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15884);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15884) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15884);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15904 = f__6565__auto__.call(null);
        statearr_15904[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15904;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
intercomTake.takeData = function takeData(message) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15933) {
            var state_val_15934 = state_15933[1];
            if (state_val_15934 === 1) {
              var inst_15926 = l.og.call(null, new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312), "take data ", message);
              var inst_15927 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "got inv here ");
              var inst_15928 = intercomTake.v.data;
              var inst_15929 = it.handleInvBlock.call(null, inst_15928, intercomTake.v);
              var inst_15930 = intercomTake.tostate.call(null, "grind");
              var inst_15931 = intercomTake.tostate.call(null, "grind", intercomTake.handleInvBlock);
              var state_15933__$1 = function() {
                var statearr_15935 = state_15933;
                statearr_15935[5] = inst_15929;
                statearr_15935[6] = inst_15930;
                statearr_15935[7] = inst_15927;
                statearr_15935[8] = inst_15926;
                return statearr_15935;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15933__$1, inst_15931);
            } else {
              return null;
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15937 = [null, null, null, null, null, null, null, null, null];
              statearr_15937[0] = state_machine__6521__auto__;
              statearr_15937[1] = 1;
              return statearr_15937;
            };
            var state_machine__6521__auto____1 = function(state_15933) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15933);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15933) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15933);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15938 = f__6565__auto__.call(null);
        statearr_15938[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15938;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
intercomTake.takeGetVersion = function takeGetVersion(message) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15955) {
            var state_val_15956 = state_15955[1];
            if (state_val_15956 === 1) {
              var inst_15950 = intercomTake.v.peer;
              var inst_15951 = intercomTake.sendmsg.call(null, inst_15950, "version", "0");
              var inst_15952 = intercomTake.tostate.call(null, "grind");
              var inst_15953 = l.og.call(null, new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312), "take get version ", message);
              var state_15955__$1 = function() {
                var statearr_15957 = state_15955;
                statearr_15957[5] = inst_15951;
                statearr_15957[6] = inst_15952;
                return statearr_15957;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15955__$1, inst_15953);
            } else {
              return null;
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15959 = [null, null, null, null, null, null, null];
              statearr_15959[0] = state_machine__6521__auto__;
              statearr_15959[1] = 1;
              return statearr_15959;
            };
            var state_machine__6521__auto____1 = function(state_15955) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15955);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15955) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15955);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15960 = f__6565__auto__.call(null);
        statearr_15960[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15960;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
intercomTake.takeVersion = function takeVersion(message) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_15971) {
            var state_val_15972 = state_15971[1];
            if (state_val_15972 === 1) {
              var inst_15969 = l.og.call(null, new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312), "take version ", message);
              var state_15971__$1 = function() {
                var statearr_15973 = state_15971;
                statearr_15973[5] = inst_15969;
                return statearr_15973;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15971__$1, "grind");
            } else {
              return null;
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_15975 = [null, null, null, null, null, null];
              statearr_15975[0] = state_machine__6521__auto__;
              statearr_15975[1] = 1;
              return statearr_15975;
            };
            var state_machine__6521__auto____1 = function(state_15971) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_15971);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_15971) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_15971);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_15976 = f__6565__auto__.call(null);
        statearr_15976[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_15976;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
intercomTake.takeConn = function takeConn(conn) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_16017) {
            var state_val_16018 = state_16017[1];
            if (state_val_16018 === 4) {
              var inst_16015 = state_16017[2];
              var state_16017__$1 = state_16017;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16017__$1, inst_16015);
            } else {
              if (state_val_16018 === 3) {
                var state_16017__$1 = state_16017;
                var statearr_16019_16027 = state_16017__$1;
                statearr_16019_16027[2] = "version";
                statearr_16019_16027[1] = 4;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16018 === 2) {
                  var state_16017__$1 = state_16017;
                  var statearr_16020_16028 = state_16017__$1;
                  statearr_16020_16028[2] = "grind";
                  statearr_16020_16028[1] = 4;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16018 === 1) {
                    var inst_16002 = l.og.call(null, new cljs.core.Keyword(null, "takeConn", "takeConn", -426297678), "take conn ", conn);
                    var inst_16003 = conn.data;
                    var inst_16004 = inst_16003.writec;
                    var inst_16005 = im.makeVersion.call(null, "0");
                    var inst_16006 = intercomTake.sendm.call(null, inst_16004, inst_16005);
                    var inst_16007 = conn.connType;
                    var inst_16008 = l.og.call(null, new cljs.core.Keyword(null, "takeConn", "takeConn", -426297678), "conn type ", inst_16007);
                    var inst_16009 = conn.data;
                    var inst_16010 = inst_16009.connType;
                    var inst_16011 = inst_16010 === "saltan";
                    var state_16017__$1 = function() {
                      var statearr_16021 = state_16017;
                      statearr_16021[5] = inst_16002;
                      statearr_16021[6] = inst_16006;
                      statearr_16021[7] = inst_16008;
                      return statearr_16021;
                    }();
                    if (cljs.core.truth_(inst_16011)) {
                      var statearr_16022_16029 = state_16017__$1;
                      statearr_16022_16029[1] = 2;
                    } else {
                      var statearr_16023_16030 = state_16017__$1;
                      statearr_16023_16030[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_16025 = [null, null, null, null, null, null, null, null];
              statearr_16025[0] = state_machine__6521__auto__;
              statearr_16025[1] = 1;
              return statearr_16025;
            };
            var state_machine__6521__auto____1 = function(state_16017) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_16017);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_16017) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_16017);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_16026 = f__6565__auto__.call(null);
        statearr_16026[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_16026;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
intercomTake.takeGetBlocks = function takeGetBlocks(peer, hash) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_16051) {
            var state_val_16052 = state_16051[1];
            if (state_val_16052 === 2) {
              var inst_16048 = state_16051[2];
              var inst_16049 = l.og.call(null, new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312), "make Get Blck", inst_16048);
              var state_16051__$1 = state_16051;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16051__$1, inst_16049);
            } else {
              if (state_val_16052 === 1) {
                var inst_16044 = l.og.call(null, new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312), "getting data from peer ", peer);
                var inst_16045 = l.og.call(null, new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312), "getting data from hash ", hash);
                var inst_16046 = intercomTake.makeGetBlock.call(null, hash);
                var state_16051__$1 = function() {
                  var statearr_16053 = state_16051;
                  statearr_16053[5] = inst_16045;
                  statearr_16053[6] = inst_16044;
                  return statearr_16053;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16051__$1, 2, inst_16046);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_16055 = [null, null, null, null, null, null, null];
              statearr_16055[0] = state_machine__6521__auto__;
              statearr_16055[1] = 1;
              return statearr_16055;
            };
            var state_machine__6521__auto____1 = function(state_16051) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_16051);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_16051) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_16051);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_16056 = f__6565__auto__.call(null);
        statearr_16056[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_16056;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
goog.provide("routing");
goog.require("cljs.core");
goog.require("intercomMake");
goog.require("blockchain");
goog.require("cljs.core.async");
goog.require("database");
goog.require("intercomTake");
goog.require("crypt");
goog.require("logger");
goog.require("mining");
routing.routea = function routea(rch, sch) {
  return pubsub.rrsa.call(null, rch, sch, "cleandb", function() {
    return database.cleandb.call(null);
  }, "connectTo", function() {
    return database.connectTo.call(null);
  }, "dumpdb", database.dumpdb, "g", function() {
    return database.g.call(null);
  }, "initDBase", function() {
    return database.initDBase.call(null);
  }, "onDatabaseChange", function() {
    return database.onDatabaseChange.call(null);
  }, "p", function() {
    return database.p.call(null);
  }, "ps", function() {
    return database.ps.call(null);
  }, "update", function() {
    return database.update.call(null);
  }, "database", database.reg, "addToChain", function() {
    return blockchain.addToChain.call(null);
  }, "addTransactionToBlock", function() {
    return blockchain.addTransactionToBlock.call(null);
  }, "blockKnown?", function() {
    return blockchain.blockKnown_QMARK_.call(null);
  }, "blockchainHeight", function() {
    return blockchain.blockchainHeight.call(null);
  }, "heightFromBlock", function() {
    return blockchain.heightFromBlock.call(null);
  }, "last?", function() {
    return blockchain.last_QMARK_.call(null);
  }, "log2", function() {
    return blockchain.log2.call(null);
  }, "makeBlock", function() {
    return blockchain.makeBlock.call(null);
  }, "makeBlockHeader", function() {
    return blockchain.makeBlockHeader.call(null);
  }, "makeTransaction", function() {
    return blockchain.makeTransaction.call(null);
  }, "popA", function() {
    return blockchain.popA.call(null);
  }, "prevblk", function() {
    return blockchain.prevblk.call(null);
  }, "removeTransactionFromMemPool", function() {
    return blockchain.removeTransactionFromMemPool.call(null);
  }, "saveBlock", function() {
    return blockchain.saveBlock.call(null);
  }, "broadcastNewBlock", function() {
    return communications.broadcastNewBlock.call(null);
  }, "channelsFromConnection", function() {
    return communications.channelsFromConnection.call(null);
  }, "cryptoCh", function() {
    return communications.cryptoCh.call(null);
  }, "initial", function() {
    return communications.initial.call(null);
  }, "intercomMeta", function() {
    return communications.intercomMeta.call(null);
  }, "onBlockMined", function() {
    return communications.onBlockMined.call(null);
  }, "onConnection", function() {
    return communications.onConnection.call(null);
  }, "onCrypto", function() {
    return communications.onCrypto.call(null);
  }, "onData", function() {
    return communications.onData.call(null);
  }, "onNewConnection", function() {
    return communications.onNewConnection.call(null);
  }, "onOpen", function() {
    return communications.onOpen.call(null);
  }, "onTransaction", function() {
    return communications.onTransaction.call(null);
  }, "sendmsg", function() {
    return communications.sendmsg.call(null);
  }, "setID", function() {
    return communications.setID.call(null);
  }, "setupComm", function() {
    return communications.setupComm.call(null);
  }, "startP2PCommLoop", function() {
    return communications.startP2PCommLoop.call(null);
  }, "arraybtostring", function() {
    return crypt.arraybtostring.call(null);
  }, "bHash", function() {
    return crypt.bHash.call(null);
  }, "encode", function() {
    return crypt.encode.call(null);
  }, "hash", function() {
    return crypt.s256.call(null);
  }, "merkleRoot", function() {
    return crypt.merkleRoot.call(null);
  }, "resultToCh", function() {
    return crypt.resultToCh.call(null);
  }, "s256", function() {
    return crypt.s256.call(null);
  }, "sha256", function() {
    return crypt.sha256.call(null);
  }, "sha256c", function() {
    return crypt.sha256c.call(null);
  }, "shaCallb", function() {
    return crypt.shaCallb.call(null);
  }, "getIntercomState", function() {
    return intercom.getIntercomState.call(null);
  }, "intercomstatemachine", function() {
    return intercom.intercomstatemachine.call(null);
  }, "is?", function() {
    return intercom.is_QMARK_.call(null);
  }, "onMessage", function() {
    return intercom.onMessage.call(null);
  }, "setIntercomState", function() {
    return intercom.setIntercomState.call(null);
  }, "tostateu", function() {
    return intercom.tostateu.call(null);
  }, "typeof?", function() {
    return intercom.typeof_QMARK_.call(null);
  }, "makeConn", function() {
    return intercomMake.makeConn.call(null);
  }, "makeData", function() {
    return intercomMake.makeData.call(null);
  }, "makeGetBlock", function() {
    return intercomMake.makeGetBlock.call(null);
  }, "makeInv", function() {
    return intercomMake.makeGetVersion.call(null);
  }, "makeInv", function() {
    return intercomMake.makeInv.call(null);
  }, "makeVersion", function() {
    return intercomMake.makeVersion.call(null);
  }, "sendm", function() {
    return intercomTake.sendm.call(null);
  }, "takeConn", function() {
    return intercomTake.takeConn.call(null);
  }, "takeData", function() {
    return intercomTake.takeData.call(null);
  }, "takeGetBlocks", function() {
    return intercomTake.takeGetBlocks.call(null);
  }, "takeGetVersion", function() {
    return intercomTake.takeGetVersion.call(null);
  }, "takeInv", function() {
    return intercomTake.takeInv.call(null);
  }, "log", logger.og, "mine", function() {
    return mining.mine.call(null);
  }, "mg", function() {
    return mockdatabase.g.call(null);
  }, "mp", function() {
    return mockdatabase.p.call(null);
  }, "mps", function() {
    return mockdatabase.ps.call(null);
  }, "mupdate", function() {
    return mockdatabase.update.call(null);
  }, "mcleandb", function() {
    return mockdatabasew.cleandb.call(null);
  }, "mdumpdb", function() {
    return mockdatabasew.dumpdb.call(null);
  }, "mg", function() {
    return mockdatabasew.g.call(null);
  }, "minitDBase", function() {
    return mockdatabasew.initDBase.call(null);
  }, "mp", function() {
    return mockdatabasew.p.call(null);
  }, "mps", function() {
    return mockdatabasew.ps.call(null);
  }, "mupdate", function() {
    return mockdatabasew.update.call(null);
  });
};
goog.provide("mockdatabasew");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
mockdatabasew.mdbase = function() {
  var obj17444 = {};
  return obj17444;
}();
mockdatabasew.cleandb = function cleandb() {
  l.og.call(null, new cljs.core.Keyword(null, "cleandb", "cleandb", -510162900), "cleandb ", mockdatabasew.mdbase);
  return m.mdbase = function() {
    var obj17448 = {};
    return obj17448;
  }();
};
mockdatabasew.dumpdb = function dumpdb() {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_17463) {
            var state_val_17464 = state_17463[1];
            if (state_val_17464 === 2) {
              var inst_17461 = state_17463[2];
              var state_17463__$1 = function() {
                var statearr_17465 = state_17463;
                statearr_17465[5] = inst_17461;
                return statearr_17465;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17463__$1, 1);
            } else {
              if (state_val_17464 === 1) {
                var inst_17459 = pubsub.sia.call(null, "log", new cljs.core.Keyword(null, "dumpdb", "dumpdb", 1809492694), "dbase ", mockdatabasew.mdbase);
                var state_17463__$1 = state_17463;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17463__$1, 2, inst_17459);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_17467 = [null, null, null, null, null, null];
              statearr_17467[0] = state_machine__6521__auto__;
              statearr_17467[1] = 1;
              return statearr_17467;
            };
            var state_machine__6521__auto____1 = function(state_17463) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_17463);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_17463) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_17463);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_17468 = f__6565__auto__.call(null);
        statearr_17468[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_17468;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
mockdatabasew.g = function g(k) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_17478) {
            var state_val_17479 = state_17478[1];
            if (state_val_17479 === 1) {
              var inst_17476 = m.g.call(null, k);
              var state_17478__$1 = state_17478;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17478__$1, inst_17476);
            } else {
              return null;
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_17481 = [null, null, null, null, null];
              statearr_17481[0] = state_machine__6521__auto__;
              statearr_17481[1] = 1;
              return statearr_17481;
            };
            var state_machine__6521__auto____1 = function(state_17478) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_17478);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_17478) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_17478);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_17482 = f__6565__auto__.call(null);
        statearr_17482[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_17482;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
mockdatabasew.update = function update(k, v) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_17492) {
            var state_val_17493 = state_17492[1];
            if (state_val_17493 === 1) {
              var inst_17490 = m.update.call(null, k, v);
              var state_17492__$1 = state_17492;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17492__$1, inst_17490);
            } else {
              return null;
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_17495 = [null, null, null, null, null];
              statearr_17495[0] = state_machine__6521__auto__;
              statearr_17495[1] = 1;
              return statearr_17495;
            };
            var state_machine__6521__auto____1 = function(state_17492) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_17492);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_17492) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_17492);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_17496 = f__6565__auto__.call(null);
        statearr_17496[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_17496;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
mockdatabasew.p = function p(k, v) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_17506) {
            var state_val_17507 = state_17506[1];
            if (state_val_17507 === 1) {
              var inst_17504 = m.p.call(null, k, v);
              var state_17506__$1 = state_17506;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17506__$1, inst_17504);
            } else {
              return null;
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_17509 = [null, null, null, null, null];
              statearr_17509[0] = state_machine__6521__auto__;
              statearr_17509[1] = 1;
              return statearr_17509;
            };
            var state_machine__6521__auto____1 = function(state_17506) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_17506);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_17506) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_17506);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_17510 = f__6565__auto__.call(null);
        statearr_17510[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_17510;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
mockdatabasew.ps = function ps(k, v) {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_17520) {
            var state_val_17521 = state_17520[1];
            if (state_val_17521 === 1) {
              var inst_17518 = m.ps.call(null, k, v);
              var state_17520__$1 = state_17520;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17520__$1, inst_17518);
            } else {
              return null;
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_17523 = [null, null, null, null, null];
              statearr_17523[0] = state_machine__6521__auto__;
              statearr_17523[1] = 1;
              return statearr_17523;
            };
            var state_machine__6521__auto____1 = function(state_17520) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_17520);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_17520) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_17520);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_17524 = f__6565__auto__.call(null);
        statearr_17524[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_17524;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
mockdatabasew.initDBase = function initDBase(x) {
  l.og.call(null, new cljs.core.Keyword(null, "initdbwraper2", "initdbwraper2", 161886543), "wrapper", x);
  mockdatabasew.dbase = m.mdbase;
  var c = cljs.core.async.chan.call(null);
  var c__6564__auto___17631 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___17631, c) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto___17631, c) {
          return function(state_17616) {
            var state_val_17617 = state_17616[1];
            if (state_val_17617 === 7) {
              var inst_17595 = state_17616[2];
              var inst_17596 = cljs.core.PersistentVector.EMPTY;
              var inst_17597 = {"header":0, "hash":inst_17595, "transactions":inst_17596};
              var inst_17598 = mockdatabasew.blck = inst_17597;
              var inst_17599 = l.og.call(null, new cljs.core.Keyword(null, "initDBase", "initDBase", -1070074220), "saving ", mockdatabasew.blck);
              var inst_17600 = mockdatabasew.blck.header;
              var inst_17601 = inst_17600.heightFromRoot = 0;
              var inst_17602 = mockdatabasew.ps.call(null, "last", mockdatabasew.blck);
              var state_17616__$1 = function() {
                var statearr_17618 = state_17616;
                statearr_17618[5] = inst_17598;
                statearr_17618[6] = inst_17601;
                statearr_17618[7] = inst_17599;
                return statearr_17618;
              }();
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17616__$1, 8, inst_17602);
            } else {
              if (state_val_17617 === 1) {
                var inst_17578 = mockdatabasew.g.call(null, "last");
                var state_17616__$1 = state_17616;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17616__$1, 2, inst_17578);
              } else {
                if (state_val_17617 === 4) {
                  var inst_17587 = l.og.call(null, new cljs.core.Keyword(null, "initDBase", "initDBase", -1070074220), "nothing in database");
                  var inst_17588 = m.ps.call(null, "height", 0);
                  var state_17616__$1 = function() {
                    var statearr_17619 = state_17616;
                    statearr_17619[8] = inst_17587;
                    return statearr_17619;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17616__$1, 6, inst_17588);
                } else {
                  if (state_val_17617 === 6) {
                    var inst_17590 = state_17616[2];
                    var inst_17593 = crypto.bHash.call(null, 0);
                    var state_17616__$1 = function() {
                      var statearr_17620 = state_17616;
                      statearr_17620[9] = inst_17590;
                      return statearr_17620;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17616__$1, 7, inst_17593);
                  } else {
                    if (state_val_17617 === 3) {
                      var inst_17585 = l.og.call(null, new cljs.core.Keyword(null, "initDBase", "initDBase", -1070074220), "last one from database is ", mockdatabasew.lastone);
                      var state_17616__$1 = state_17616;
                      var statearr_17621_17632 = state_17616__$1;
                      statearr_17621_17632[2] = inst_17585;
                      statearr_17621_17632[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17617 === 2) {
                        var inst_17580 = state_17616[2];
                        var inst_17581 = mockdatabasew.lastone = inst_17580;
                        var inst_17582 = l.og.call(null, new cljs.core.Keyword(null, "initDBase", "initDBase", -1070074220), "about to init");
                        var inst_17583 = l.og.call(null, new cljs.core.Keyword(null, "initDBase", "initDBase", -1070074220), "last one from database ", mockdatabasew.lastone);
                        var state_17616__$1 = function() {
                          var statearr_17622 = state_17616;
                          statearr_17622[10] = inst_17582;
                          statearr_17622[11] = inst_17583;
                          statearr_17622[12] = inst_17581;
                          return statearr_17622;
                        }();
                        if (cljs.core.truth_(mockdatabasew.lastone)) {
                          var statearr_17623_17633 = state_17616__$1;
                          statearr_17623_17633[1] = 3;
                        } else {
                          var statearr_17624_17634 = state_17616__$1;
                          statearr_17624_17634[1] = 4;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17617 === 9) {
                          var inst_17608 = state_17616[2];
                          var inst_17609 = "b" + 0;
                          var inst_17610 = m.ps.call(null, inst_17609, mockdatabasew.blck);
                          var state_17616__$1 = function() {
                            var statearr_17625 = state_17616;
                            statearr_17625[13] = inst_17608;
                            return statearr_17625;
                          }();
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17616__$1, 10, inst_17610);
                        } else {
                          if (state_val_17617 === 5) {
                            var inst_17614 = state_17616[2];
                            var state_17616__$1 = state_17616;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17616__$1, inst_17614);
                          } else {
                            if (state_val_17617 === 10) {
                              var inst_17612 = state_17616[2];
                              var state_17616__$1 = state_17616;
                              var statearr_17626_17635 = state_17616__$1;
                              statearr_17626_17635[2] = inst_17612;
                              statearr_17626_17635[1] = 5;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17617 === 8) {
                                var inst_17604 = state_17616[2];
                                var inst_17605 = mockdatabasew.blck.hash;
                                var inst_17606 = m.ps.call(null, inst_17605, mockdatabasew.blck);
                                var state_17616__$1 = function() {
                                  var statearr_17627 = state_17616;
                                  statearr_17627[14] = inst_17604;
                                  return statearr_17627;
                                }();
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17616__$1, 9, inst_17606);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto___17631, c);
        return function(switch__6520__auto__, c__6564__auto___17631, c) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_17629 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17629[0] = state_machine__6521__auto__;
              statearr_17629[1] = 1;
              return statearr_17629;
            };
            var state_machine__6521__auto____1 = function(state_17616) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_17616);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_17616) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_17616);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto___17631, c);
      }();
      var state__6566__auto__ = function() {
        var statearr_17630 = f__6565__auto__.call(null);
        statearr_17630[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___17631;
        return statearr_17630;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto___17631, c));
  return 1;
};
goog.provide("intercomMakeUtil");
goog.require("cljs.core");
goog.provide("app.main");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
goog.require("logger");
cljs.core.enable_console_print_BANG_.call(null);
app.main.dumpdb = function dumpdb() {
  return pubsub.s.call(null, "dumpdb", "");
};
$(document).on("dumpdb", app.main.dumpdb);
app.main.cleandb = function cleandb() {
  return pubsub.s.call(null, "cleandb", "");
};
$(document).on("cleandb", app.main.cleadb);
app.main.replScratchFunction = function replScratchFunction() {
  pubsub.si.call(null, "dumpdb");
  var c__6564__auto___16077 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto___16077) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto___16077) {
          return function(state_16072) {
            var state_val_16073 = state_16072[1];
            if (state_val_16073 === 2) {
              var inst_16070 = state_16072[2];
              var state_16072__$1 = state_16072;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16072__$1, inst_16070);
            } else {
              if (state_val_16073 === 1) {
                var inst_16068 = pubsub.sia.call(null, "hash", "s");
                var state_16072__$1 = state_16072;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16072__$1, 2, inst_16068);
              } else {
                return null;
              }
            }
          };
        }(c__6564__auto___16077);
        return function(switch__6520__auto__, c__6564__auto___16077) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_16075 = [null, null, null, null, null];
              statearr_16075[0] = state_machine__6521__auto__;
              statearr_16075[1] = 1;
              return statearr_16075;
            };
            var state_machine__6521__auto____1 = function(state_16072) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_16072);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_16072) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_16072);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto___16077);
      }();
      var state__6566__auto__ = function() {
        var statearr_16076 = f__6565__auto__.call(null);
        statearr_16076[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto___16077;
        return statearr_16076;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto___16077));
  app.main.dumpdb.call(null);
  return app.main.cleandb.call(null);
};
app.main.empty_string = "";
app.main.pri = function pri(x) {
  cljs.core.println.call(null, x);
  return 3;
};
app.main.entryy = function entryy() {
  var c__6564__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6564__auto__) {
    return function() {
      var f__6565__auto__ = function() {
        var switch__6520__auto__ = function(c__6564__auto__) {
          return function(state_16136) {
            var state_val_16137 = state_16136[1];
            if (state_val_16137 === 7) {
              var inst_16134 = state_16136[2];
              var state_16136__$1 = state_16136;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16136__$1, inst_16134);
            } else {
              if (state_val_16137 === 6) {
                var inst_16130 = state_16136[2];
                var inst_16131 = logger.og.call(null, new cljs.core.Keyword(null, "main", "main", -2117802661), "2\x3d", inst_16130);
                var inst_16132 = pubsub.sia.call(null, "dumpdb");
                var state_16136__$1 = function() {
                  var statearr_16138 = state_16136;
                  statearr_16138[5] = inst_16131;
                  return statearr_16138;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16136__$1, 7, inst_16132);
              } else {
                if (state_val_16137 === 5) {
                  var inst_16126 = state_16136[2];
                  var inst_16127 = logger.og.call(null, new cljs.core.Keyword(null, "main", "main", -2117802661), "s2\x3d", inst_16126);
                  var inst_16128 = pubsub.sia.call(null, "database", "s");
                  var state_16136__$1 = function() {
                    var statearr_16139 = state_16136;
                    statearr_16139[6] = inst_16127;
                    return statearr_16139;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16136__$1, 6, inst_16128);
                } else {
                  if (state_val_16137 === 4) {
                    var inst_16122 = state_16136[2];
                    var inst_16123 = logger.og.call(null, new cljs.core.Keyword(null, "main", "main", -2117802661), "1\x3d", inst_16122);
                    var inst_16124 = pubsub.sia.call(null, "database", "s", 2);
                    var state_16136__$1 = function() {
                      var statearr_16140 = state_16136;
                      statearr_16140[7] = inst_16123;
                      return statearr_16140;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16136__$1, 5, inst_16124);
                  } else {
                    if (state_val_16137 === 3) {
                      var inst_16118 = state_16136[2];
                      var inst_16119 = logger.og.call(null, new cljs.core.Keyword(null, "main", "main", -2117802661), "s1\x3d", inst_16118);
                      var inst_16120 = pubsub.sia.call(null, "database", "s");
                      var state_16136__$1 = function() {
                        var statearr_16141 = state_16136;
                        statearr_16141[8] = inst_16119;
                        return statearr_16141;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16136__$1, 4, inst_16120);
                    } else {
                      if (state_val_16137 === 2) {
                        var inst_16114 = state_16136[2];
                        var inst_16115 = logger.og.call(null, new cljs.core.Keyword(null, "main", "main", -2117802661), "0\x3d", inst_16114);
                        var inst_16116 = pubsub.sia.call(null, "database", "s", 1);
                        var state_16136__$1 = function() {
                          var statearr_16142 = state_16136;
                          statearr_16142[9] = inst_16115;
                          return statearr_16142;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16136__$1, 3, inst_16116);
                      } else {
                        if (state_val_16137 === 1) {
                          var inst_16112 = pubsub.sia.call(null, "database", "s", 1);
                          var state_16136__$1 = state_16136;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16136__$1, 2, inst_16112);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6564__auto__);
        return function(switch__6520__auto__, c__6564__auto__) {
          return function() {
            var state_machine__6521__auto__ = null;
            var state_machine__6521__auto____0 = function() {
              var statearr_16144 = [null, null, null, null, null, null, null, null, null, null];
              statearr_16144[0] = state_machine__6521__auto__;
              statearr_16144[1] = 1;
              return statearr_16144;
            };
            var state_machine__6521__auto____1 = function(state_16136) {
              while (true) {
                var result__6522__auto__ = switch__6520__auto__.call(null, state_16136);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6522__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6522__auto__;
                }
                break;
              }
            };
            state_machine__6521__auto__ = function(state_16136) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6521__auto____0.call(this);
                case 1:
                  return state_machine__6521__auto____1.call(this, state_16136);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6521__auto____0;
            state_machine__6521__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6521__auto____1;
            return state_machine__6521__auto__;
          }();
        }(switch__6520__auto__, c__6564__auto__);
      }();
      var state__6566__auto__ = function() {
        var statearr_16145 = f__6565__auto__.call(null);
        statearr_16145[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6564__auto__;
        return statearr_16145;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6566__auto__);
    };
  }(c__6564__auto__));
  return c__6564__auto__;
};
window.onload = app.main.entryy;
goog.provide("mockdatabase");
goog.require("cljs.core");
goog.require("cljs.core.async");
mockdatabase.mdbase = function() {
  var obj8363 = {};
  return obj8363;
}();
mockdatabase.g = function g(kie) {
  return mockdatabase.mdbase[kie];
};
mockdatabase.p = function p(kie, v) {
  return mockdatabase.mdbase[kie] = v;
};
mockdatabase.ps = function ps(kie, v) {
  return mockdatabase.mdbase[kie] = v;
};
mockdatabase.update = function update(kie, v) {
  return mockdatabase.mdbase[kie] = v;
};
goog.provide("router");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
router.a = function a(x) {
  var obj15734 = {"a":1};
  return obj15734;
};
