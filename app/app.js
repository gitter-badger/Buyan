if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__15794__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__15793 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__15793) : cljs.core.into_array.call(null, G__15793);
      }());
    };
    var G__15794 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__15795__i = 0, G__15795__a = new Array(arguments.length - 0);
        while (G__15795__i < G__15795__a.length) {
          G__15795__a[G__15795__i] = arguments[G__15795__i + 0];
          ++G__15795__i;
        }
        args = new cljs.core.IndexedSeq(G__15795__a, 0);
      }
      return G__15794__delegate.call(this, args);
    };
    G__15794.cljs$lang$maxFixedArity = 0;
    G__15794.cljs$lang$applyTo = function(arglist__15796) {
      var args = cljs.core.seq(arglist__15796);
      return G__15794__delegate(args);
    };
    G__15794.cljs$core$IFn$_invoke$arity$variadic = G__15794__delegate;
    return G__15794;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__15798 = x;
  return goog.isString(G__15798);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__15800 = x__$1;
    return goog.typeOf(G__15800);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3955__auto__ = ty;
    if (cljs.core.truth_(and__3955__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3955__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__15802 = obj;
    return goog.typeOf(G__15802);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__15804 = Symbol;
  return goog.typeOf(G__15804);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4854__auto___15806 = len;
  var i_15807 = 0;
  while (true) {
    if (i_15807 < n__4854__auto___15806) {
      new_arr[i_15807] = arr[i_15807];
      var G__15808 = i_15807 + 1;
      i_15807 = G__15808;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__15809 = i + 1;
      i = G__15809;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__15818__delegate = function(array, i, idxs) {
      var G__15815 = aget;
      var G__15816 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__15817 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__15815, G__15816, G__15817) : cljs.core.apply.call(null, G__15815, G__15816, G__15817);
    };
    var G__15818 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__15819__i = 0, G__15819__a = new Array(arguments.length - 2);
        while (G__15819__i < G__15819__a.length) {
          G__15819__a[G__15819__i] = arguments[G__15819__i + 2];
          ++G__15819__i;
        }
        idxs = new cljs.core.IndexedSeq(G__15819__a, 0);
      }
      return G__15818__delegate.call(this, array, i, idxs);
    };
    G__15818.cljs$lang$maxFixedArity = 2;
    G__15818.cljs$lang$applyTo = function(arglist__15820) {
      var array = cljs.core.first(arglist__15820);
      arglist__15820 = cljs.core.next(arglist__15820);
      var i = cljs.core.first(arglist__15820);
      var idxs = cljs.core.rest(arglist__15820);
      return G__15818__delegate(array, i, idxs);
    };
    G__15818.cljs$core$IFn$_invoke$arity$variadic = G__15818__delegate;
    return G__15818;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__15821 = null;
        if (arguments.length > 2) {
          var G__15822__i = 0, G__15822__a = new Array(arguments.length - 2);
          while (G__15822__i < G__15822__a.length) {
            G__15822__a[G__15822__i] = arguments[G__15822__i + 2];
            ++G__15822__i;
          }
          G__15821 = new cljs.core.IndexedSeq(G__15822__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__15821);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__15831__delegate = function(array, idx, idx2, idxv) {
      var G__15827 = aset;
      var G__15828 = array[idx];
      var G__15829 = idx2;
      var G__15830 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__15827, G__15828, G__15829, G__15830) : cljs.core.apply.call(null, G__15827, G__15828, G__15829, G__15830);
    };
    var G__15831 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__15832__i = 0, G__15832__a = new Array(arguments.length - 3);
        while (G__15832__i < G__15832__a.length) {
          G__15832__a[G__15832__i] = arguments[G__15832__i + 3];
          ++G__15832__i;
        }
        idxv = new cljs.core.IndexedSeq(G__15832__a, 0);
      }
      return G__15831__delegate.call(this, array, idx, idx2, idxv);
    };
    G__15831.cljs$lang$maxFixedArity = 3;
    G__15831.cljs$lang$applyTo = function(arglist__15833) {
      var array = cljs.core.first(arglist__15833);
      arglist__15833 = cljs.core.next(arglist__15833);
      var idx = cljs.core.first(arglist__15833);
      arglist__15833 = cljs.core.next(arglist__15833);
      var idx2 = cljs.core.first(arglist__15833);
      var idxv = cljs.core.rest(arglist__15833);
      return G__15831__delegate(array, idx, idx2, idxv);
    };
    G__15831.cljs$core$IFn$_invoke$arity$variadic = G__15831__delegate;
    return G__15831;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__15834 = null;
        if (arguments.length > 3) {
          var G__15835__i = 0, G__15835__a = new Array(arguments.length - 3);
          while (G__15835__i < G__15835__a.length) {
            G__15835__a[G__15835__i] = arguments[G__15835__i + 3];
            ++G__15835__i;
          }
          G__15834 = new cljs.core.IndexedSeq(G__15835__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__15834);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__15841 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__15842 = [];
    var G__15843 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__15841, G__15842, G__15843) : cljs.core.reduce.call(null, G__15841, G__15842, G__15843);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__15844__i = 0, G__15844__a = new Array(arguments.length - 2);
      while (G__15844__i < G__15844__a.length) {
        G__15844__a[G__15844__i] = arguments[G__15844__i + 2];
        ++G__15844__i;
      }
      args = new cljs.core.IndexedSeq(G__15844__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__15845) {
    var obj = cljs.core.first(arglist__15845);
    arglist__15845 = cljs.core.next(arglist__15845);
    var s = cljs.core.first(arglist__15845);
    var args = cljs.core.rest(arglist__15845);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj15847 = {};
  return obj15847;
}();
cljs.core.IFn = function() {
  var obj15849 = {};
  return obj15849;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15895 = x__4611__auto__;
          return goog.typeOf(G__15895);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15897 = x__4611__auto__;
          return goog.typeOf(G__15897);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15899 = x__4611__auto__;
          return goog.typeOf(G__15899);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15901 = x__4611__auto__;
          return goog.typeOf(G__15901);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15903 = x__4611__auto__;
          return goog.typeOf(G__15903);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15905 = x__4611__auto__;
          return goog.typeOf(G__15905);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15907 = x__4611__auto__;
          return goog.typeOf(G__15907);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15909 = x__4611__auto__;
          return goog.typeOf(G__15909);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15911 = x__4611__auto__;
          return goog.typeOf(G__15911);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15913 = x__4611__auto__;
          return goog.typeOf(G__15913);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15915 = x__4611__auto__;
          return goog.typeOf(G__15915);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15917 = x__4611__auto__;
          return goog.typeOf(G__15917);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15919 = x__4611__auto__;
          return goog.typeOf(G__15919);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15921 = x__4611__auto__;
          return goog.typeOf(G__15921);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15923 = x__4611__auto__;
          return goog.typeOf(G__15923);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15925 = x__4611__auto__;
          return goog.typeOf(G__15925);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15927 = x__4611__auto__;
          return goog.typeOf(G__15927);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15929 = x__4611__auto__;
          return goog.typeOf(G__15929);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15931 = x__4611__auto__;
          return goog.typeOf(G__15931);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15933 = x__4611__auto__;
          return goog.typeOf(G__15933);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15935 = x__4611__auto__;
          return goog.typeOf(G__15935);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3955__auto__ = this$;
      if (and__3955__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4611__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3967__auto__ = cljs.core._invoke[function() {
          var G__15937 = x__4611__auto__;
          return goog.typeOf(G__15937);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._invoke["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj15939 = {};
  return obj15939;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3955__auto__ = value;
    if (and__3955__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4611__auto__ = value == null ? null : value;
    return function() {
      var or__3967__auto__ = cljs.core._clone[function() {
        var G__15943 = x__4611__auto__;
        return goog.typeOf(G__15943);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._clone["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj15945 = {};
  return obj15945;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._count[function() {
        var G__15949 = x__4611__auto__;
        return goog.typeOf(G__15949);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._count["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj15951 = {};
  return obj15951;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._empty[function() {
        var G__15955 = x__4611__auto__;
        return goog.typeOf(G__15955);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._empty["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj15957 = {};
  return obj15957;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._conj[function() {
        var G__15961 = x__4611__auto__;
        return goog.typeOf(G__15961);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._conj["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj15963 = {};
  return obj15963;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3955__auto__ = coll;
      if (and__3955__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4611__auto__ = coll == null ? null : coll;
      return function() {
        var or__3967__auto__ = cljs.core._nth[function() {
          var G__15969 = x__4611__auto__;
          return goog.typeOf(G__15969);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._nth["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3955__auto__ = coll;
      if (and__3955__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4611__auto__ = coll == null ? null : coll;
      return function() {
        var or__3967__auto__ = cljs.core._nth[function() {
          var G__15971 = x__4611__auto__;
          return goog.typeOf(G__15971);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._nth["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj15973 = {};
  return obj15973;
}();
cljs.core.ISeq = function() {
  var obj15975 = {};
  return obj15975;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._first[function() {
        var G__15979 = x__4611__auto__;
        return goog.typeOf(G__15979);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._first["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._rest[function() {
        var G__15983 = x__4611__auto__;
        return goog.typeOf(G__15983);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._rest["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj15985 = {};
  return obj15985;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._next[function() {
        var G__15989 = x__4611__auto__;
        return goog.typeOf(G__15989);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._next["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj15991 = {};
  return obj15991;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3955__auto__ = o;
      if (and__3955__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4611__auto__ = o == null ? null : o;
      return function() {
        var or__3967__auto__ = cljs.core._lookup[function() {
          var G__15997 = x__4611__auto__;
          return goog.typeOf(G__15997);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._lookup["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3955__auto__ = o;
      if (and__3955__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4611__auto__ = o == null ? null : o;
      return function() {
        var or__3967__auto__ = cljs.core._lookup[function() {
          var G__15999 = x__4611__auto__;
          return goog.typeOf(G__15999);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._lookup["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj16001 = {};
  return obj16001;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__16005 = x__4611__auto__;
        return goog.typeOf(G__16005);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._assoc[function() {
        var G__16009 = x__4611__auto__;
        return goog.typeOf(G__16009);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._assoc["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj16011 = {};
  return obj16011;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._dissoc[function() {
        var G__16015 = x__4611__auto__;
        return goog.typeOf(G__16015);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._dissoc["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj16017 = {};
  return obj16017;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._key[function() {
        var G__16021 = x__4611__auto__;
        return goog.typeOf(G__16021);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._key["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._val[function() {
        var G__16025 = x__4611__auto__;
        return goog.typeOf(G__16025);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._val["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj16027 = {};
  return obj16027;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._disjoin[function() {
        var G__16031 = x__4611__auto__;
        return goog.typeOf(G__16031);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._disjoin["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj16033 = {};
  return obj16033;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._peek[function() {
        var G__16037 = x__4611__auto__;
        return goog.typeOf(G__16037);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._peek["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._pop[function() {
        var G__16041 = x__4611__auto__;
        return goog.typeOf(G__16041);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._pop["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj16043 = {};
  return obj16043;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._assoc_n[function() {
        var G__16047 = x__4611__auto__;
        return goog.typeOf(G__16047);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj16049 = {};
  return obj16049;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3955__auto__ = o;
    if (and__3955__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4611__auto__ = o == null ? null : o;
    return function() {
      var or__3967__auto__ = cljs.core._deref[function() {
        var G__16053 = x__4611__auto__;
        return goog.typeOf(G__16053);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._deref["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj16055 = {};
  return obj16055;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3955__auto__ = o;
    if (and__3955__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4611__auto__ = o == null ? null : o;
    return function() {
      var or__3967__auto__ = cljs.core._deref_with_timeout[function() {
        var G__16059 = x__4611__auto__;
        return goog.typeOf(G__16059);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj16061 = {};
  return obj16061;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3955__auto__ = o;
    if (and__3955__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4611__auto__ = o == null ? null : o;
    return function() {
      var or__3967__auto__ = cljs.core._meta[function() {
        var G__16065 = x__4611__auto__;
        return goog.typeOf(G__16065);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._meta["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj16067 = {};
  return obj16067;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3955__auto__ = o;
    if (and__3955__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4611__auto__ = o == null ? null : o;
    return function() {
      var or__3967__auto__ = cljs.core._with_meta[function() {
        var G__16071 = x__4611__auto__;
        return goog.typeOf(G__16071);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._with_meta["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj16073 = {};
  return obj16073;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3955__auto__ = coll;
      if (and__3955__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4611__auto__ = coll == null ? null : coll;
      return function() {
        var or__3967__auto__ = cljs.core._reduce[function() {
          var G__16079 = x__4611__auto__;
          return goog.typeOf(G__16079);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._reduce["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3955__auto__ = coll;
      if (and__3955__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4611__auto__ = coll == null ? null : coll;
      return function() {
        var or__3967__auto__ = cljs.core._reduce[function() {
          var G__16081 = x__4611__auto__;
          return goog.typeOf(G__16081);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._reduce["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj16083 = {};
  return obj16083;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._kv_reduce[function() {
        var G__16087 = x__4611__auto__;
        return goog.typeOf(G__16087);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj16089 = {};
  return obj16089;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3955__auto__ = o;
    if (and__3955__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4611__auto__ = o == null ? null : o;
    return function() {
      var or__3967__auto__ = cljs.core._equiv[function() {
        var G__16093 = x__4611__auto__;
        return goog.typeOf(G__16093);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._equiv["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj16095 = {};
  return obj16095;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3955__auto__ = o;
    if (and__3955__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4611__auto__ = o == null ? null : o;
    return function() {
      var or__3967__auto__ = cljs.core._hash[function() {
        var G__16099 = x__4611__auto__;
        return goog.typeOf(G__16099);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._hash["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj16101 = {};
  return obj16101;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3955__auto__ = o;
    if (and__3955__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4611__auto__ = o == null ? null : o;
    return function() {
      var or__3967__auto__ = cljs.core._seq[function() {
        var G__16105 = x__4611__auto__;
        return goog.typeOf(G__16105);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._seq["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj16107 = {};
  return obj16107;
}();
cljs.core.IList = function() {
  var obj16109 = {};
  return obj16109;
}();
cljs.core.IRecord = function() {
  var obj16111 = {};
  return obj16111;
}();
cljs.core.IReversible = function() {
  var obj16113 = {};
  return obj16113;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._rseq[function() {
        var G__16117 = x__4611__auto__;
        return goog.typeOf(G__16117);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._rseq["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj16119 = {};
  return obj16119;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._sorted_seq[function() {
        var G__16123 = x__4611__auto__;
        return goog.typeOf(G__16123);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._sorted_seq_from[function() {
        var G__16127 = x__4611__auto__;
        return goog.typeOf(G__16127);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._entry_key[function() {
        var G__16131 = x__4611__auto__;
        return goog.typeOf(G__16131);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._entry_key["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._comparator[function() {
        var G__16135 = x__4611__auto__;
        return goog.typeOf(G__16135);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._comparator["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj16137 = {};
  return obj16137;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3955__auto__ = writer;
    if (and__3955__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4611__auto__ = writer == null ? null : writer;
    return function() {
      var or__3967__auto__ = cljs.core._write[function() {
        var G__16141 = x__4611__auto__;
        return goog.typeOf(G__16141);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._write["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3955__auto__ = writer;
    if (and__3955__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4611__auto__ = writer == null ? null : writer;
    return function() {
      var or__3967__auto__ = cljs.core._flush[function() {
        var G__16145 = x__4611__auto__;
        return goog.typeOf(G__16145);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._flush["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj16147 = {};
  return obj16147;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3955__auto__ = o;
    if (and__3955__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4611__auto__ = o == null ? null : o;
    return function() {
      var or__3967__auto__ = cljs.core._pr_writer[function() {
        var G__16151 = x__4611__auto__;
        return goog.typeOf(G__16151);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj16153 = {};
  return obj16153;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3955__auto__ = d;
    if (and__3955__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4611__auto__ = d == null ? null : d;
    return function() {
      var or__3967__auto__ = cljs.core._realized_QMARK_[function() {
        var G__16157 = x__4611__auto__;
        return goog.typeOf(G__16157);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj16159 = {};
  return obj16159;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3955__auto__ = this$;
    if (and__3955__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4611__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3967__auto__ = cljs.core._notify_watches[function() {
        var G__16163 = x__4611__auto__;
        return goog.typeOf(G__16163);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3955__auto__ = this$;
    if (and__3955__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4611__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3967__auto__ = cljs.core._add_watch[function() {
        var G__16167 = x__4611__auto__;
        return goog.typeOf(G__16167);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._add_watch["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3955__auto__ = this$;
    if (and__3955__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4611__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3967__auto__ = cljs.core._remove_watch[function() {
        var G__16171 = x__4611__auto__;
        return goog.typeOf(G__16171);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj16173 = {};
  return obj16173;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._as_transient[function() {
        var G__16177 = x__4611__auto__;
        return goog.typeOf(G__16177);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._as_transient["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj16179 = {};
  return obj16179;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3955__auto__ = tcoll;
    if (and__3955__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4611__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3967__auto__ = cljs.core._conj_BANG_[function() {
        var G__16183 = x__4611__auto__;
        return goog.typeOf(G__16183);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3955__auto__ = tcoll;
    if (and__3955__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4611__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3967__auto__ = cljs.core._persistent_BANG_[function() {
        var G__16187 = x__4611__auto__;
        return goog.typeOf(G__16187);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj16189 = {};
  return obj16189;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3955__auto__ = tcoll;
    if (and__3955__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4611__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3967__auto__ = cljs.core._assoc_BANG_[function() {
        var G__16193 = x__4611__auto__;
        return goog.typeOf(G__16193);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj16195 = {};
  return obj16195;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3955__auto__ = tcoll;
    if (and__3955__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4611__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3967__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__16199 = x__4611__auto__;
        return goog.typeOf(G__16199);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj16201 = {};
  return obj16201;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3955__auto__ = tcoll;
    if (and__3955__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4611__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3967__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__16205 = x__4611__auto__;
        return goog.typeOf(G__16205);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3955__auto__ = tcoll;
    if (and__3955__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4611__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3967__auto__ = cljs.core._pop_BANG_[function() {
        var G__16209 = x__4611__auto__;
        return goog.typeOf(G__16209);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj16211 = {};
  return obj16211;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3955__auto__ = tcoll;
    if (and__3955__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4611__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3967__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__16215 = x__4611__auto__;
        return goog.typeOf(G__16215);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj16217 = {};
  return obj16217;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3955__auto__ = x;
    if (and__3955__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4611__auto__ = x == null ? null : x;
    return function() {
      var or__3967__auto__ = cljs.core._compare[function() {
        var G__16221 = x__4611__auto__;
        return goog.typeOf(G__16221);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._compare["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj16223 = {};
  return obj16223;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._drop_first[function() {
        var G__16227 = x__4611__auto__;
        return goog.typeOf(G__16227);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._drop_first["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj16229 = {};
  return obj16229;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._chunked_first[function() {
        var G__16233 = x__4611__auto__;
        return goog.typeOf(G__16233);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._chunked_rest[function() {
        var G__16237 = x__4611__auto__;
        return goog.typeOf(G__16237);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj16239 = {};
  return obj16239;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._chunked_next[function() {
        var G__16243 = x__4611__auto__;
        return goog.typeOf(G__16243);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj16245 = {};
  return obj16245;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3955__auto__ = x;
    if (and__3955__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4611__auto__ = x == null ? null : x;
    return function() {
      var or__3967__auto__ = cljs.core._name[function() {
        var G__16249 = x__4611__auto__;
        return goog.typeOf(G__16249);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._name["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3955__auto__ = x;
    if (and__3955__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4611__auto__ = x == null ? null : x;
    return function() {
      var or__3967__auto__ = cljs.core._namespace[function() {
        var G__16253 = x__4611__auto__;
        return goog.typeOf(G__16253);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._namespace["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj16255 = {};
  return obj16255;
}();
cljs.core.IReset = function() {
  var obj16257 = {};
  return obj16257;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3955__auto__ = o;
    if (and__3955__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4611__auto__ = o == null ? null : o;
    return function() {
      var or__3967__auto__ = cljs.core._reset_BANG_[function() {
        var G__16261 = x__4611__auto__;
        return goog.typeOf(G__16261);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj16263 = {};
  return obj16263;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3955__auto__ = o;
      if (and__3955__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4611__auto__ = o == null ? null : o;
      return function() {
        var or__3967__auto__ = cljs.core._swap_BANG_[function() {
          var G__16273 = x__4611__auto__;
          return goog.typeOf(G__16273);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3955__auto__ = o;
      if (and__3955__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4611__auto__ = o == null ? null : o;
      return function() {
        var or__3967__auto__ = cljs.core._swap_BANG_[function() {
          var G__16275 = x__4611__auto__;
          return goog.typeOf(G__16275);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3955__auto__ = o;
      if (and__3955__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4611__auto__ = o == null ? null : o;
      return function() {
        var or__3967__auto__ = cljs.core._swap_BANG_[function() {
          var G__16277 = x__4611__auto__;
          return goog.typeOf(G__16277);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3955__auto__ = o;
      if (and__3955__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4611__auto__ = o == null ? null : o;
      return function() {
        var or__3967__auto__ = cljs.core._swap_BANG_[function() {
          var G__16279 = x__4611__auto__;
          return goog.typeOf(G__16279);
        }()];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj16281 = {};
  return obj16281;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3955__auto__ = o;
    if (and__3955__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4611__auto__ = o == null ? null : o;
    return function() {
      var or__3967__auto__ = cljs.core._vreset_BANG_[function() {
        var G__16285 = x__4611__auto__;
        return goog.typeOf(G__16285);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj16287 = {};
  return obj16287;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3955__auto__ = coll;
    if (and__3955__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4611__auto__ = coll == null ? null : coll;
    return function() {
      var or__3967__auto__ = cljs.core._iterator[function() {
        var G__16291 = x__4611__auto__;
        return goog.typeOf(G__16291);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._iterator["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__16294 = 4294967295;
  var G__16295 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__16294, G__16295) : Math.imul.call(null, G__16294, G__16295);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__16298 = a;
    var G__16299 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__16298, G__16299) : Math.imul.call(null, G__16298, G__16299);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__16300 = i + 2;
        var G__16301 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__16300;
        h1 = G__16301;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj16303 = {};
  return obj16303;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__16304 = i + 1;
          var G__16305 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__16304;
          hash = G__16305;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj16309 = {};
      return obj16309;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__16312 = o;
    if (G__16312) {
      var bit__4641__auto__ = G__16312.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4641__auto__ || G__16312.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__16313 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16313) : Math.floor.call(null, G__16313);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3955__auto__ = cljs.core.not(a.ns);
      if (and__3955__auto__) {
        return b.ns;
      } else {
        return and__3955__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__16320 = a.ns;
            var G__16321 = b.ns;
            return goog.array.defaultCompare(G__16320, G__16321);
          }();
          if (0 === nsc) {
            var G__16322 = a.name;
            var G__16323 = b.name;
            return goog.array.defaultCompare(G__16322, G__16323);
          } else {
            return nsc;
          }
        }
      } else {
        var G__16324 = a.name;
        var G__16325 = b.name;
        return goog.array.defaultCompare(G__16324, G__16325);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4388__auto__ = self__._hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__16327 = null;
  var G__16327__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__16327__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__16327 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16327__2.call(this, self__, coll);
      case 3:
        return G__16327__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16327.cljs$core$IFn$_invoke$arity$2 = G__16327__2;
  G__16327.cljs$core$IFn$_invoke$arity$3 = G__16327__3;
  return G__16327;
}();
cljs.core.Symbol.prototype.apply = function(self__, args16326) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16326)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__16375 = null;
  var G__16375__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__16375__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__16375__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__16375__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__16375__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__16375__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__16375__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__16375__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__16375__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__16375__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__16375__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__16375__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__16375__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__16375__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__16375__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__16375__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__16375__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__16375__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__16375__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__16375__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__16375__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__16375__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16331 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__16332 = a;
    var G__16333 = b;
    var G__16334 = c;
    var G__16335 = d;
    var G__16336 = e;
    var G__16337 = f;
    var G__16338 = g;
    var G__16339 = h;
    var G__16340 = i;
    var G__16341 = j;
    var G__16342 = k;
    var G__16343 = l;
    var G__16344 = m;
    var G__16345 = n;
    var G__16346 = o;
    var G__16347 = p;
    var G__16348 = q;
    var G__16349 = r;
    var G__16350 = s;
    var G__16351 = t;
    var G__16352 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__16331, G__16332, G__16333, G__16334, G__16335, G__16336, G__16337, G__16338, G__16339, G__16340, G__16341, G__16342, G__16343, G__16344, G__16345, G__16346, G__16347, G__16348, G__16349, G__16350, G__16351, G__16352) : cljs.core.apply.call(null, G__16331, G__16332, G__16333, G__16334, G__16335, G__16336, G__16337, G__16338, G__16339, G__16340, G__16341, G__16342, G__16343, G__16344, G__16345, 
    G__16346, G__16347, G__16348, G__16349, G__16350, G__16351, G__16352);
  };
  G__16375 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__16375__1.call(this, self__);
      case 2:
        return G__16375__2.call(this, self__, a);
      case 3:
        return G__16375__3.call(this, self__, a, b);
      case 4:
        return G__16375__4.call(this, self__, a, b, c);
      case 5:
        return G__16375__5.call(this, self__, a, b, c, d);
      case 6:
        return G__16375__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__16375__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__16375__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__16375__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__16375__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__16375__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__16375__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__16375__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__16375__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__16375__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__16375__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__16375__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__16375__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__16375__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__16375__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__16375__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__16375__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16375.cljs$core$IFn$_invoke$arity$1 = G__16375__1;
  G__16375.cljs$core$IFn$_invoke$arity$2 = G__16375__2;
  G__16375.cljs$core$IFn$_invoke$arity$3 = G__16375__3;
  G__16375.cljs$core$IFn$_invoke$arity$4 = G__16375__4;
  G__16375.cljs$core$IFn$_invoke$arity$5 = G__16375__5;
  G__16375.cljs$core$IFn$_invoke$arity$6 = G__16375__6;
  G__16375.cljs$core$IFn$_invoke$arity$7 = G__16375__7;
  G__16375.cljs$core$IFn$_invoke$arity$8 = G__16375__8;
  G__16375.cljs$core$IFn$_invoke$arity$9 = G__16375__9;
  G__16375.cljs$core$IFn$_invoke$arity$10 = G__16375__10;
  G__16375.cljs$core$IFn$_invoke$arity$11 = G__16375__11;
  G__16375.cljs$core$IFn$_invoke$arity$12 = G__16375__12;
  G__16375.cljs$core$IFn$_invoke$arity$13 = G__16375__13;
  G__16375.cljs$core$IFn$_invoke$arity$14 = G__16375__14;
  G__16375.cljs$core$IFn$_invoke$arity$15 = G__16375__15;
  G__16375.cljs$core$IFn$_invoke$arity$16 = G__16375__16;
  G__16375.cljs$core$IFn$_invoke$arity$17 = G__16375__17;
  G__16375.cljs$core$IFn$_invoke$arity$18 = G__16375__18;
  G__16375.cljs$core$IFn$_invoke$arity$19 = G__16375__19;
  G__16375.cljs$core$IFn$_invoke$arity$20 = G__16375__20;
  G__16375.cljs$core$IFn$_invoke$arity$21 = G__16375__21;
  G__16375.cljs$core$IFn$_invoke$arity$22 = G__16375__22;
  return G__16375;
}();
cljs.core.Var.prototype.apply = function(self__, args16330) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16330)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__16353 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__16354 = a;
  var G__16355 = b;
  var G__16356 = c;
  var G__16357 = d;
  var G__16358 = e;
  var G__16359 = f;
  var G__16360 = g;
  var G__16361 = h;
  var G__16362 = i;
  var G__16363 = j;
  var G__16364 = k;
  var G__16365 = l;
  var G__16366 = m;
  var G__16367 = n;
  var G__16368 = o;
  var G__16369 = p;
  var G__16370 = q;
  var G__16371 = r;
  var G__16372 = s;
  var G__16373 = t;
  var G__16374 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__16353, G__16354, G__16355, G__16356, G__16357, G__16358, G__16359, G__16360, G__16361, G__16362, G__16363, G__16364, G__16365, G__16366, G__16367, G__16368, G__16369, G__16370, G__16371, G__16372, G__16373, G__16374) : cljs.core.apply.call(null, G__16353, G__16354, G__16355, G__16356, G__16357, G__16358, G__16359, G__16360, G__16361, G__16362, G__16363, G__16364, G__16365, G__16366, G__16367, 
  G__16368, G__16369, G__16370, G__16371, G__16372, G__16373, G__16374);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__16377 = x;
  if (G__16377) {
    var bit__4648__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3967__auto__ = bit__4648__auto__;
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return G__16377.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__16377.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__16377);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__16377);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__16379 = value;
  if (G__16379) {
    var bit__4648__auto__ = G__16379.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4648__auto__ || G__16379.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__16379.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__16379);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__16379);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__16381 = coll;
      if (G__16381) {
        var bit__4641__auto__ = G__16381.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4641__auto__ || G__16381.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__16383 = coll;
      if (G__16383) {
        var bit__4641__auto__ = G__16383.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4641__auto__ || G__16383.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__16385 = coll;
      if (G__16385) {
        var bit__4641__auto__ = G__16385.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4641__auto__ || G__16385.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__16387 = coll;
      if (G__16387) {
        var bit__4641__auto__ = G__16387.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4641__auto__ || G__16387.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__16392__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__16393 = y;
            var G__16394 = cljs.core.first(more);
            var G__16395 = cljs.core.next(more);
            x = G__16393;
            y = G__16394;
            more = G__16395;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__16392 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__16396__i = 0, G__16396__a = new Array(arguments.length - 2);
        while (G__16396__i < G__16396__a.length) {
          G__16396__a[G__16396__i] = arguments[G__16396__i + 2];
          ++G__16396__i;
        }
        more = new cljs.core.IndexedSeq(G__16396__a, 0);
      }
      return G__16392__delegate.call(this, x, y, more);
    };
    G__16392.cljs$lang$maxFixedArity = 2;
    G__16392.cljs$lang$applyTo = function(arglist__16397) {
      var x = cljs.core.first(arglist__16397);
      arglist__16397 = cljs.core.next(arglist__16397);
      var y = cljs.core.first(arglist__16397);
      var more = cljs.core.rest(arglist__16397);
      return G__16392__delegate(x, y, more);
    };
    G__16392.cljs$core$IFn$_invoke$arity$variadic = G__16392__delegate;
    return G__16392;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__16398 = null;
        if (arguments.length > 2) {
          var G__16399__i = 0, G__16399__a = new Array(arguments.length - 2);
          while (G__16399__i < G__16399__a.length) {
            G__16399__a[G__16399__i] = arguments[G__16399__i + 2];
            ++G__16399__i;
          }
          G__16398 = new cljs.core.IndexedSeq(G__16399__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__16398);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__16400 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__16400) : cljs.core.es6_iterator_seq.call(null, G__16400);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__16401 = n + 1;
      var G__16402 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__16403 = cljs.core.next(coll__$1);
      n = G__16401;
      hash_code = G__16402;
      coll__$1 = G__16403;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__16404 = n + 1;
      var G__16405 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__16406 = cljs.core.next(coll__$1);
      n = G__16404;
      hash_code = G__16405;
      coll__$1 = G__16406;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__16407 = o;
  return goog.getUid(G__16407);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__16409 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16409) : cljs.core.deref.call(null, G__16409);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__16416 = val;
            var G__16417 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16416, G__16417) : f.call(null, G__16416, G__16417);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__16422 = nval;
            var G__16423 = n + 1;
            val = G__16422;
            n = G__16423;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__16418 = val__$1;
          var G__16419 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16418, G__16419) : f.call(null, G__16418, G__16419);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__16424 = nval;
          var G__16425 = n + 1;
          val__$1 = G__16424;
          n = G__16425;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__16420 = val__$1;
          var G__16421 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16420, G__16421) : f.call(null, G__16420, G__16421);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__16426 = nval;
          var G__16427 = n + 1;
          val__$1 = G__16426;
          n = G__16427;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__16434 = val;
            var G__16435 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16434, G__16435) : f.call(null, G__16434, G__16435);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__16440 = nval;
            var G__16441 = n + 1;
            val = G__16440;
            n = G__16441;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__16436 = val__$1;
          var G__16437 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16436, G__16437) : f.call(null, G__16436, G__16437);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__16442 = nval;
          var G__16443 = n + 1;
          val__$1 = G__16442;
          n = G__16443;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__16438 = val__$1;
          var G__16439 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16438, G__16439) : f.call(null, G__16438, G__16439);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__16444 = nval;
          var G__16445 = n + 1;
          val__$1 = G__16444;
          n = G__16445;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__16447 = x;
  if (G__16447) {
    var bit__4648__auto__ = G__16447.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4648__auto__ || G__16447.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__16447.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__16447);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__16447);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__16449 = x;
  if (G__16449) {
    var bit__4648__auto__ = G__16449.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4648__auto__ || G__16449.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__16449.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__16449);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__16449);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__16450 = coll__$1;
  var G__16451 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__16450, G__16451) : cljs.core.equiv_sequential.call(null, G__16450, G__16451);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__16452 = o;
  var G__16453 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__16452, G__16453) : cljs.core.cons.call(null, G__16452, G__16453);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__16456 = coll__$1;
  var G__16457 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__16456, G__16457) : cljs.core.equiv_sequential.call(null, G__16456, G__16457);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__16458 = cljs.core.List.EMPTY;
  var G__16459 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__16458, G__16459) : cljs.core.with_meta.call(null, G__16458, G__16459);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__16460 = f;
  var G__16461 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__16460, G__16461) : cljs.core.seq_reduce.call(null, G__16460, G__16461);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__16462 = f;
  var G__16463 = start;
  var G__16464 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__16462, G__16463, G__16464) : cljs.core.seq_reduce.call(null, G__16462, G__16463, G__16464);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__16465 = o;
  var G__16466 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__16465, G__16466) : cljs.core.cons.call(null, G__16465, G__16466);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__16467 = sn;
      s = G__16467;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__16472__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__16473 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__16474 = cljs.core.first(xs);
          var G__16475 = cljs.core.next(xs);
          coll = G__16473;
          x = G__16474;
          xs = G__16475;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__16472 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__16476__i = 0, G__16476__a = new Array(arguments.length - 2);
        while (G__16476__i < G__16476__a.length) {
          G__16476__a[G__16476__i] = arguments[G__16476__i + 2];
          ++G__16476__i;
        }
        xs = new cljs.core.IndexedSeq(G__16476__a, 0);
      }
      return G__16472__delegate.call(this, coll, x, xs);
    };
    G__16472.cljs$lang$maxFixedArity = 2;
    G__16472.cljs$lang$applyTo = function(arglist__16477) {
      var coll = cljs.core.first(arglist__16477);
      arglist__16477 = cljs.core.next(arglist__16477);
      var x = cljs.core.first(arglist__16477);
      var xs = cljs.core.rest(arglist__16477);
      return G__16472__delegate(coll, x, xs);
    };
    G__16472.cljs$core$IFn$_invoke$arity$variadic = G__16472__delegate;
    return G__16472;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__16478 = null;
        if (arguments.length > 2) {
          var G__16479__i = 0, G__16479__a = new Array(arguments.length - 2);
          while (G__16479__i < G__16479__a.length) {
            G__16479__a[G__16479__i] = arguments[G__16479__i + 2];
            ++G__16479__i;
          }
          G__16478 = new cljs.core.IndexedSeq(G__16479__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__16478);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__16480 = cljs.core.next(s);
      var G__16481 = acc + 1;
      s = G__16480;
      acc = G__16481;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__16483 = coll;
      if (G__16483) {
        var bit__4641__auto__ = G__16483.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4641__auto__ || G__16483.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__16484 = cljs.core.next(coll);
              var G__16485 = n - 1;
              coll = G__16484;
              n = G__16485;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__16486 = cljs.core.next(coll);
              var G__16487 = n - 1;
              var G__16488 = not_found;
              coll = G__16486;
              n = G__16487;
              not_found = G__16488;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__16493 = coll;
          if (G__16493) {
            var bit__4641__auto__ = G__16493.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4641__auto__ || G__16493.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__16494 = coll;
                  if (G__16494) {
                    var bit__4648__auto__ = G__16494.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4648__auto__ || G__16494.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__16494.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__16494);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__16494);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__16495 = coll;
          if (G__16495) {
            var bit__4641__auto__ = G__16495.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4641__auto__ || G__16495.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__16496 = coll;
                  if (G__16496) {
                    var bit__4648__auto__ = G__16496.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4648__auto__ || G__16496.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__16496.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__16496);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__16496);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__16497 = n__$1 - 1;
      var G__16498 = cljs.core.rest(xs);
      n__$1 = G__16497;
      xs = G__16498;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__16501 = o;
        if (G__16501) {
          var bit__4641__auto__ = G__16501.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4641__auto__ || G__16501.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__16502 = o;
        if (G__16502) {
          var bit__4641__auto__ = G__16502.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4641__auto__ || G__16502.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__16506__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__16507 = ret;
          var G__16508 = cljs.core.first(kvs);
          var G__16509 = cljs.core.second(kvs);
          var G__16510 = cljs.core.nnext(kvs);
          coll = G__16507;
          k = G__16508;
          v = G__16509;
          kvs = G__16510;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__16506 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__16511__i = 0, G__16511__a = new Array(arguments.length - 3);
        while (G__16511__i < G__16511__a.length) {
          G__16511__a[G__16511__i] = arguments[G__16511__i + 3];
          ++G__16511__i;
        }
        kvs = new cljs.core.IndexedSeq(G__16511__a, 0);
      }
      return G__16506__delegate.call(this, coll, k, v, kvs);
    };
    G__16506.cljs$lang$maxFixedArity = 3;
    G__16506.cljs$lang$applyTo = function(arglist__16512) {
      var coll = cljs.core.first(arglist__16512);
      arglist__16512 = cljs.core.next(arglist__16512);
      var k = cljs.core.first(arglist__16512);
      arglist__16512 = cljs.core.next(arglist__16512);
      var v = cljs.core.first(arglist__16512);
      var kvs = cljs.core.rest(arglist__16512);
      return G__16506__delegate(coll, k, v, kvs);
    };
    G__16506.cljs$core$IFn$_invoke$arity$variadic = G__16506__delegate;
    return G__16506;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__16513 = null;
        if (arguments.length > 3) {
          var G__16514__i = 0, G__16514__a = new Array(arguments.length - 3);
          while (G__16514__i < G__16514__a.length) {
            G__16514__a[G__16514__i] = arguments[G__16514__i + 3];
            ++G__16514__i;
          }
          G__16513 = new cljs.core.IndexedSeq(G__16514__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__16513);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__16517__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__16518 = ret;
            var G__16519 = cljs.core.first(ks);
            var G__16520 = cljs.core.next(ks);
            coll = G__16518;
            k = G__16519;
            ks = G__16520;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__16517 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__16521__i = 0, G__16521__a = new Array(arguments.length - 2);
        while (G__16521__i < G__16521__a.length) {
          G__16521__a[G__16521__i] = arguments[G__16521__i + 2];
          ++G__16521__i;
        }
        ks = new cljs.core.IndexedSeq(G__16521__a, 0);
      }
      return G__16517__delegate.call(this, coll, k, ks);
    };
    G__16517.cljs$lang$maxFixedArity = 2;
    G__16517.cljs$lang$applyTo = function(arglist__16522) {
      var coll = cljs.core.first(arglist__16522);
      arglist__16522 = cljs.core.next(arglist__16522);
      var k = cljs.core.first(arglist__16522);
      var ks = cljs.core.rest(arglist__16522);
      return G__16517__delegate(coll, k, ks);
    };
    G__16517.cljs$core$IFn$_invoke$arity$variadic = G__16517__delegate;
    return G__16517;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__16523 = null;
        if (arguments.length > 2) {
          var G__16524__i = 0, G__16524__a = new Array(arguments.length - 2);
          while (G__16524__i < G__16524__a.length) {
            G__16524__a[G__16524__i] = arguments[G__16524__i + 2];
            ++G__16524__i;
          }
          G__16523 = new cljs.core.IndexedSeq(G__16524__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__16523);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3967__auto__ = function() {
    var G__16529 = f;
    return goog.isFunction(G__16529);
  }();
  if (cljs.core.truth_(or__3967__auto__)) {
    return or__3967__auto__;
  } else {
    var G__16530 = f;
    if (G__16530) {
      var bit__4648__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3967__auto____$1 = bit__4648__auto__;
        if (cljs.core.truth_(or__3967__auto____$1)) {
          return or__3967__auto____$1;
        } else {
          return G__16530.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__16530.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__16530);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__16530);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__16996 = null;
  var G__16996__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__16996__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16532 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__16532) : self__.afn.call(null, G__16532);
  };
  var G__16996__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16533 = a;
    var G__16534 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__16533, G__16534) : self__.afn.call(null, G__16533, G__16534);
  };
  var G__16996__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16535 = a;
    var G__16536 = b;
    var G__16537 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__16535, G__16536, G__16537) : self__.afn.call(null, G__16535, G__16536, G__16537);
  };
  var G__16996__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16538 = a;
    var G__16539 = b;
    var G__16540 = c;
    var G__16541 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__16538, G__16539, G__16540, G__16541) : self__.afn.call(null, G__16538, G__16539, G__16540, G__16541);
  };
  var G__16996__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16542 = a;
    var G__16543 = b;
    var G__16544 = c;
    var G__16545 = d;
    var G__16546 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__16542, G__16543, G__16544, G__16545, G__16546) : self__.afn.call(null, G__16542, G__16543, G__16544, G__16545, G__16546);
  };
  var G__16996__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16547 = a;
    var G__16548 = b;
    var G__16549 = c;
    var G__16550 = d;
    var G__16551 = e;
    var G__16552 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__16547, G__16548, G__16549, G__16550, G__16551, G__16552) : self__.afn.call(null, G__16547, G__16548, G__16549, G__16550, G__16551, G__16552);
  };
  var G__16996__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16553 = a;
    var G__16554 = b;
    var G__16555 = c;
    var G__16556 = d;
    var G__16557 = e;
    var G__16558 = f;
    var G__16559 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__16553, G__16554, G__16555, G__16556, G__16557, G__16558, G__16559) : self__.afn.call(null, G__16553, G__16554, G__16555, G__16556, G__16557, G__16558, G__16559);
  };
  var G__16996__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16560 = a;
    var G__16561 = b;
    var G__16562 = c;
    var G__16563 = d;
    var G__16564 = e;
    var G__16565 = f;
    var G__16566 = g;
    var G__16567 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__16560, G__16561, G__16562, G__16563, G__16564, G__16565, G__16566, G__16567) : self__.afn.call(null, G__16560, G__16561, G__16562, G__16563, G__16564, G__16565, G__16566, G__16567);
  };
  var G__16996__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16568 = a;
    var G__16569 = b;
    var G__16570 = c;
    var G__16571 = d;
    var G__16572 = e;
    var G__16573 = f;
    var G__16574 = g;
    var G__16575 = h;
    var G__16576 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__16568, G__16569, G__16570, G__16571, G__16572, G__16573, G__16574, G__16575, G__16576) : self__.afn.call(null, G__16568, G__16569, G__16570, G__16571, G__16572, G__16573, G__16574, G__16575, G__16576);
  };
  var G__16996__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16577 = a;
    var G__16578 = b;
    var G__16579 = c;
    var G__16580 = d;
    var G__16581 = e;
    var G__16582 = f;
    var G__16583 = g;
    var G__16584 = h;
    var G__16585 = i;
    var G__16586 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__16577, G__16578, G__16579, G__16580, G__16581, G__16582, G__16583, G__16584, G__16585, G__16586) : self__.afn.call(null, G__16577, G__16578, G__16579, G__16580, G__16581, G__16582, G__16583, G__16584, G__16585, G__16586);
  };
  var G__16996__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16587 = a;
    var G__16588 = b;
    var G__16589 = c;
    var G__16590 = d;
    var G__16591 = e;
    var G__16592 = f;
    var G__16593 = g;
    var G__16594 = h;
    var G__16595 = i;
    var G__16596 = j;
    var G__16597 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__16587, G__16588, G__16589, G__16590, G__16591, G__16592, G__16593, G__16594, G__16595, G__16596, G__16597) : self__.afn.call(null, G__16587, G__16588, G__16589, G__16590, G__16591, G__16592, G__16593, G__16594, G__16595, G__16596, G__16597);
  };
  var G__16996__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16598 = a;
    var G__16599 = b;
    var G__16600 = c;
    var G__16601 = d;
    var G__16602 = e;
    var G__16603 = f;
    var G__16604 = g;
    var G__16605 = h;
    var G__16606 = i;
    var G__16607 = j;
    var G__16608 = k;
    var G__16609 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__16598, G__16599, G__16600, G__16601, G__16602, G__16603, G__16604, G__16605, G__16606, G__16607, G__16608, G__16609) : self__.afn.call(null, G__16598, G__16599, G__16600, G__16601, G__16602, G__16603, G__16604, G__16605, G__16606, G__16607, G__16608, G__16609);
  };
  var G__16996__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16610 = a;
    var G__16611 = b;
    var G__16612 = c;
    var G__16613 = d;
    var G__16614 = e;
    var G__16615 = f;
    var G__16616 = g;
    var G__16617 = h;
    var G__16618 = i;
    var G__16619 = j;
    var G__16620 = k;
    var G__16621 = l;
    var G__16622 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__16610, G__16611, G__16612, G__16613, G__16614, G__16615, G__16616, G__16617, G__16618, G__16619, G__16620, G__16621, G__16622) : self__.afn.call(null, G__16610, G__16611, G__16612, G__16613, G__16614, G__16615, G__16616, G__16617, G__16618, G__16619, G__16620, G__16621, G__16622);
  };
  var G__16996__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16623 = a;
    var G__16624 = b;
    var G__16625 = c;
    var G__16626 = d;
    var G__16627 = e;
    var G__16628 = f;
    var G__16629 = g;
    var G__16630 = h;
    var G__16631 = i;
    var G__16632 = j;
    var G__16633 = k;
    var G__16634 = l;
    var G__16635 = m;
    var G__16636 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__16623, G__16624, G__16625, G__16626, G__16627, G__16628, G__16629, G__16630, G__16631, G__16632, G__16633, G__16634, G__16635, G__16636) : self__.afn.call(null, G__16623, G__16624, G__16625, G__16626, G__16627, G__16628, G__16629, G__16630, G__16631, G__16632, G__16633, G__16634, G__16635, G__16636);
  };
  var G__16996__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16637 = a;
    var G__16638 = b;
    var G__16639 = c;
    var G__16640 = d;
    var G__16641 = e;
    var G__16642 = f;
    var G__16643 = g;
    var G__16644 = h;
    var G__16645 = i;
    var G__16646 = j;
    var G__16647 = k;
    var G__16648 = l;
    var G__16649 = m;
    var G__16650 = n;
    var G__16651 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__16637, G__16638, G__16639, G__16640, G__16641, G__16642, G__16643, G__16644, G__16645, G__16646, G__16647, G__16648, G__16649, G__16650, G__16651) : self__.afn.call(null, G__16637, G__16638, G__16639, G__16640, G__16641, G__16642, G__16643, G__16644, G__16645, G__16646, G__16647, G__16648, G__16649, G__16650, G__16651);
  };
  var G__16996__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16652 = a;
    var G__16653 = b;
    var G__16654 = c;
    var G__16655 = d;
    var G__16656 = e;
    var G__16657 = f;
    var G__16658 = g;
    var G__16659 = h;
    var G__16660 = i;
    var G__16661 = j;
    var G__16662 = k;
    var G__16663 = l;
    var G__16664 = m;
    var G__16665 = n;
    var G__16666 = o;
    var G__16667 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__16652, G__16653, G__16654, G__16655, G__16656, G__16657, G__16658, G__16659, G__16660, G__16661, G__16662, G__16663, G__16664, G__16665, G__16666, G__16667) : self__.afn.call(null, G__16652, G__16653, G__16654, G__16655, G__16656, G__16657, G__16658, G__16659, G__16660, G__16661, G__16662, G__16663, G__16664, G__16665, G__16666, G__16667);
  };
  var G__16996__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16668 = a;
    var G__16669 = b;
    var G__16670 = c;
    var G__16671 = d;
    var G__16672 = e;
    var G__16673 = f;
    var G__16674 = g;
    var G__16675 = h;
    var G__16676 = i;
    var G__16677 = j;
    var G__16678 = k;
    var G__16679 = l;
    var G__16680 = m;
    var G__16681 = n;
    var G__16682 = o;
    var G__16683 = p;
    var G__16684 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__16668, G__16669, G__16670, G__16671, G__16672, G__16673, G__16674, G__16675, G__16676, G__16677, G__16678, G__16679, G__16680, G__16681, G__16682, G__16683, G__16684) : self__.afn.call(null, G__16668, G__16669, G__16670, G__16671, G__16672, G__16673, G__16674, G__16675, G__16676, G__16677, G__16678, G__16679, G__16680, G__16681, G__16682, G__16683, G__16684);
  };
  var G__16996__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16685 = a;
    var G__16686 = b;
    var G__16687 = c;
    var G__16688 = d;
    var G__16689 = e;
    var G__16690 = f;
    var G__16691 = g;
    var G__16692 = h;
    var G__16693 = i;
    var G__16694 = j;
    var G__16695 = k;
    var G__16696 = l;
    var G__16697 = m;
    var G__16698 = n;
    var G__16699 = o;
    var G__16700 = p;
    var G__16701 = q;
    var G__16702 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__16685, G__16686, G__16687, G__16688, G__16689, G__16690, G__16691, G__16692, G__16693, G__16694, G__16695, G__16696, G__16697, G__16698, G__16699, G__16700, G__16701, G__16702) : self__.afn.call(null, G__16685, G__16686, G__16687, G__16688, G__16689, G__16690, G__16691, G__16692, G__16693, G__16694, G__16695, G__16696, G__16697, G__16698, G__16699, G__16700, G__16701, G__16702);
  };
  var G__16996__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16703 = a;
    var G__16704 = b;
    var G__16705 = c;
    var G__16706 = d;
    var G__16707 = e;
    var G__16708 = f;
    var G__16709 = g;
    var G__16710 = h;
    var G__16711 = i;
    var G__16712 = j;
    var G__16713 = k;
    var G__16714 = l;
    var G__16715 = m;
    var G__16716 = n;
    var G__16717 = o;
    var G__16718 = p;
    var G__16719 = q;
    var G__16720 = r;
    var G__16721 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__16703, G__16704, G__16705, G__16706, G__16707, G__16708, G__16709, G__16710, G__16711, G__16712, G__16713, G__16714, G__16715, G__16716, G__16717, G__16718, G__16719, G__16720, G__16721) : self__.afn.call(null, G__16703, G__16704, G__16705, G__16706, G__16707, G__16708, G__16709, G__16710, G__16711, G__16712, G__16713, G__16714, G__16715, G__16716, G__16717, G__16718, G__16719, G__16720, G__16721);
  };
  var G__16996__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16722 = a;
    var G__16723 = b;
    var G__16724 = c;
    var G__16725 = d;
    var G__16726 = e;
    var G__16727 = f;
    var G__16728 = g;
    var G__16729 = h;
    var G__16730 = i;
    var G__16731 = j;
    var G__16732 = k;
    var G__16733 = l;
    var G__16734 = m;
    var G__16735 = n;
    var G__16736 = o;
    var G__16737 = p;
    var G__16738 = q;
    var G__16739 = r;
    var G__16740 = s;
    var G__16741 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__16722, G__16723, G__16724, G__16725, G__16726, G__16727, G__16728, G__16729, G__16730, G__16731, G__16732, G__16733, G__16734, G__16735, G__16736, G__16737, G__16738, G__16739, G__16740, G__16741) : self__.afn.call(null, G__16722, G__16723, G__16724, G__16725, G__16726, G__16727, G__16728, G__16729, G__16730, G__16731, G__16732, G__16733, G__16734, G__16735, G__16736, G__16737, G__16738, G__16739, 
    G__16740, G__16741);
  };
  var G__16996__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__16742 = self__.afn;
    var G__16743 = a;
    var G__16744 = b;
    var G__16745 = c;
    var G__16746 = d;
    var G__16747 = e;
    var G__16748 = f;
    var G__16749 = g;
    var G__16750 = h;
    var G__16751 = i;
    var G__16752 = j;
    var G__16753 = k;
    var G__16754 = l;
    var G__16755 = m;
    var G__16756 = n;
    var G__16757 = o;
    var G__16758 = p;
    var G__16759 = q;
    var G__16760 = r;
    var G__16761 = s;
    var G__16762 = t;
    var G__16763 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__16742, G__16743, G__16744, G__16745, G__16746, G__16747, G__16748, G__16749, G__16750, G__16751, G__16752, G__16753, G__16754, G__16755, G__16756, G__16757, G__16758, G__16759, G__16760, G__16761, G__16762, G__16763) : cljs.core.apply.call(null, G__16742, G__16743, G__16744, G__16745, G__16746, G__16747, G__16748, G__16749, G__16750, G__16751, G__16752, G__16753, G__16754, G__16755, G__16756, 
    G__16757, G__16758, G__16759, G__16760, G__16761, G__16762, G__16763);
  };
  G__16996 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__16996__1.call(this, self__);
      case 2:
        return G__16996__2.call(this, self__, a);
      case 3:
        return G__16996__3.call(this, self__, a, b);
      case 4:
        return G__16996__4.call(this, self__, a, b, c);
      case 5:
        return G__16996__5.call(this, self__, a, b, c, d);
      case 6:
        return G__16996__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__16996__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__16996__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__16996__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__16996__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__16996__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__16996__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__16996__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__16996__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__16996__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__16996__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__16996__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__16996__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__16996__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__16996__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__16996__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__16996__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16996.cljs$core$IFn$_invoke$arity$1 = G__16996__1;
  G__16996.cljs$core$IFn$_invoke$arity$2 = G__16996__2;
  G__16996.cljs$core$IFn$_invoke$arity$3 = G__16996__3;
  G__16996.cljs$core$IFn$_invoke$arity$4 = G__16996__4;
  G__16996.cljs$core$IFn$_invoke$arity$5 = G__16996__5;
  G__16996.cljs$core$IFn$_invoke$arity$6 = G__16996__6;
  G__16996.cljs$core$IFn$_invoke$arity$7 = G__16996__7;
  G__16996.cljs$core$IFn$_invoke$arity$8 = G__16996__8;
  G__16996.cljs$core$IFn$_invoke$arity$9 = G__16996__9;
  G__16996.cljs$core$IFn$_invoke$arity$10 = G__16996__10;
  G__16996.cljs$core$IFn$_invoke$arity$11 = G__16996__11;
  G__16996.cljs$core$IFn$_invoke$arity$12 = G__16996__12;
  G__16996.cljs$core$IFn$_invoke$arity$13 = G__16996__13;
  G__16996.cljs$core$IFn$_invoke$arity$14 = G__16996__14;
  G__16996.cljs$core$IFn$_invoke$arity$15 = G__16996__15;
  G__16996.cljs$core$IFn$_invoke$arity$16 = G__16996__16;
  G__16996.cljs$core$IFn$_invoke$arity$17 = G__16996__17;
  G__16996.cljs$core$IFn$_invoke$arity$18 = G__16996__18;
  G__16996.cljs$core$IFn$_invoke$arity$19 = G__16996__19;
  G__16996.cljs$core$IFn$_invoke$arity$20 = G__16996__20;
  G__16996.cljs$core$IFn$_invoke$arity$21 = G__16996__21;
  G__16996.cljs$core$IFn$_invoke$arity$22 = G__16996__22;
  return G__16996;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args16531) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16531)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__16764 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__16764) : self__.afn.call(null, G__16764);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__16765 = a;
  var G__16766 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__16765, G__16766) : self__.afn.call(null, G__16765, G__16766);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__16767 = a;
  var G__16768 = b;
  var G__16769 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__16767, G__16768, G__16769) : self__.afn.call(null, G__16767, G__16768, G__16769);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__16770 = a;
  var G__16771 = b;
  var G__16772 = c;
  var G__16773 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__16770, G__16771, G__16772, G__16773) : self__.afn.call(null, G__16770, G__16771, G__16772, G__16773);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__16774 = a;
  var G__16775 = b;
  var G__16776 = c;
  var G__16777 = d;
  var G__16778 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__16774, G__16775, G__16776, G__16777, G__16778) : self__.afn.call(null, G__16774, G__16775, G__16776, G__16777, G__16778);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__16779 = a;
  var G__16780 = b;
  var G__16781 = c;
  var G__16782 = d;
  var G__16783 = e;
  var G__16784 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__16779, G__16780, G__16781, G__16782, G__16783, G__16784) : self__.afn.call(null, G__16779, G__16780, G__16781, G__16782, G__16783, G__16784);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__16785 = a;
  var G__16786 = b;
  var G__16787 = c;
  var G__16788 = d;
  var G__16789 = e;
  var G__16790 = f;
  var G__16791 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__16785, G__16786, G__16787, G__16788, G__16789, G__16790, G__16791) : self__.afn.call(null, G__16785, G__16786, G__16787, G__16788, G__16789, G__16790, G__16791);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__16792 = a;
  var G__16793 = b;
  var G__16794 = c;
  var G__16795 = d;
  var G__16796 = e;
  var G__16797 = f;
  var G__16798 = g;
  var G__16799 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__16792, G__16793, G__16794, G__16795, G__16796, G__16797, G__16798, G__16799) : self__.afn.call(null, G__16792, G__16793, G__16794, G__16795, G__16796, G__16797, G__16798, G__16799);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__16800 = a;
  var G__16801 = b;
  var G__16802 = c;
  var G__16803 = d;
  var G__16804 = e;
  var G__16805 = f;
  var G__16806 = g;
  var G__16807 = h;
  var G__16808 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__16800, G__16801, G__16802, G__16803, G__16804, G__16805, G__16806, G__16807, G__16808) : self__.afn.call(null, G__16800, G__16801, G__16802, G__16803, G__16804, G__16805, G__16806, G__16807, G__16808);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__16809 = a;
  var G__16810 = b;
  var G__16811 = c;
  var G__16812 = d;
  var G__16813 = e;
  var G__16814 = f;
  var G__16815 = g;
  var G__16816 = h;
  var G__16817 = i;
  var G__16818 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__16809, G__16810, G__16811, G__16812, G__16813, G__16814, G__16815, G__16816, G__16817, G__16818) : self__.afn.call(null, G__16809, G__16810, G__16811, G__16812, G__16813, G__16814, G__16815, G__16816, G__16817, G__16818);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__16819 = a;
  var G__16820 = b;
  var G__16821 = c;
  var G__16822 = d;
  var G__16823 = e;
  var G__16824 = f;
  var G__16825 = g;
  var G__16826 = h;
  var G__16827 = i;
  var G__16828 = j;
  var G__16829 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__16819, G__16820, G__16821, G__16822, G__16823, G__16824, G__16825, G__16826, G__16827, G__16828, G__16829) : self__.afn.call(null, G__16819, G__16820, G__16821, G__16822, G__16823, G__16824, G__16825, G__16826, G__16827, G__16828, G__16829);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__16830 = a;
  var G__16831 = b;
  var G__16832 = c;
  var G__16833 = d;
  var G__16834 = e;
  var G__16835 = f;
  var G__16836 = g;
  var G__16837 = h;
  var G__16838 = i;
  var G__16839 = j;
  var G__16840 = k;
  var G__16841 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__16830, G__16831, G__16832, G__16833, G__16834, G__16835, G__16836, G__16837, G__16838, G__16839, G__16840, G__16841) : self__.afn.call(null, G__16830, G__16831, G__16832, G__16833, G__16834, G__16835, G__16836, G__16837, G__16838, G__16839, G__16840, G__16841);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__16842 = a;
  var G__16843 = b;
  var G__16844 = c;
  var G__16845 = d;
  var G__16846 = e;
  var G__16847 = f;
  var G__16848 = g;
  var G__16849 = h;
  var G__16850 = i;
  var G__16851 = j;
  var G__16852 = k;
  var G__16853 = l;
  var G__16854 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__16842, G__16843, G__16844, G__16845, G__16846, G__16847, G__16848, G__16849, G__16850, G__16851, G__16852, G__16853, G__16854) : self__.afn.call(null, G__16842, G__16843, G__16844, G__16845, G__16846, G__16847, G__16848, G__16849, G__16850, G__16851, G__16852, G__16853, G__16854);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__16855 = a;
  var G__16856 = b;
  var G__16857 = c;
  var G__16858 = d;
  var G__16859 = e;
  var G__16860 = f;
  var G__16861 = g;
  var G__16862 = h;
  var G__16863 = i;
  var G__16864 = j;
  var G__16865 = k;
  var G__16866 = l;
  var G__16867 = m;
  var G__16868 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__16855, G__16856, G__16857, G__16858, G__16859, G__16860, G__16861, G__16862, G__16863, G__16864, G__16865, G__16866, G__16867, G__16868) : self__.afn.call(null, G__16855, G__16856, G__16857, G__16858, G__16859, G__16860, G__16861, G__16862, G__16863, G__16864, G__16865, G__16866, G__16867, G__16868);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__16869 = a;
  var G__16870 = b;
  var G__16871 = c;
  var G__16872 = d;
  var G__16873 = e;
  var G__16874 = f;
  var G__16875 = g;
  var G__16876 = h;
  var G__16877 = i;
  var G__16878 = j;
  var G__16879 = k;
  var G__16880 = l;
  var G__16881 = m;
  var G__16882 = n;
  var G__16883 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__16869, G__16870, G__16871, G__16872, G__16873, G__16874, G__16875, G__16876, G__16877, G__16878, G__16879, G__16880, G__16881, G__16882, G__16883) : self__.afn.call(null, G__16869, G__16870, G__16871, G__16872, G__16873, G__16874, G__16875, G__16876, G__16877, G__16878, G__16879, G__16880, G__16881, G__16882, G__16883);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__16884 = a;
  var G__16885 = b;
  var G__16886 = c;
  var G__16887 = d;
  var G__16888 = e;
  var G__16889 = f;
  var G__16890 = g;
  var G__16891 = h;
  var G__16892 = i;
  var G__16893 = j;
  var G__16894 = k;
  var G__16895 = l;
  var G__16896 = m;
  var G__16897 = n;
  var G__16898 = o;
  var G__16899 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__16884, G__16885, G__16886, G__16887, G__16888, G__16889, G__16890, G__16891, G__16892, G__16893, G__16894, G__16895, G__16896, G__16897, G__16898, G__16899) : self__.afn.call(null, G__16884, G__16885, G__16886, G__16887, G__16888, G__16889, G__16890, G__16891, G__16892, G__16893, G__16894, G__16895, G__16896, G__16897, G__16898, G__16899);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__16900 = a;
  var G__16901 = b;
  var G__16902 = c;
  var G__16903 = d;
  var G__16904 = e;
  var G__16905 = f;
  var G__16906 = g;
  var G__16907 = h;
  var G__16908 = i;
  var G__16909 = j;
  var G__16910 = k;
  var G__16911 = l;
  var G__16912 = m;
  var G__16913 = n;
  var G__16914 = o;
  var G__16915 = p;
  var G__16916 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__16900, G__16901, G__16902, G__16903, G__16904, G__16905, G__16906, G__16907, G__16908, G__16909, G__16910, G__16911, G__16912, G__16913, G__16914, G__16915, G__16916) : self__.afn.call(null, G__16900, G__16901, G__16902, G__16903, G__16904, G__16905, G__16906, G__16907, G__16908, G__16909, G__16910, G__16911, G__16912, G__16913, G__16914, G__16915, G__16916);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__16917 = a;
  var G__16918 = b;
  var G__16919 = c;
  var G__16920 = d;
  var G__16921 = e;
  var G__16922 = f;
  var G__16923 = g;
  var G__16924 = h;
  var G__16925 = i;
  var G__16926 = j;
  var G__16927 = k;
  var G__16928 = l;
  var G__16929 = m;
  var G__16930 = n;
  var G__16931 = o;
  var G__16932 = p;
  var G__16933 = q;
  var G__16934 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__16917, G__16918, G__16919, G__16920, G__16921, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927, G__16928, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934) : self__.afn.call(null, G__16917, G__16918, G__16919, G__16920, G__16921, G__16922, G__16923, G__16924, G__16925, G__16926, G__16927, G__16928, G__16929, G__16930, G__16931, G__16932, G__16933, G__16934);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__16935 = a;
  var G__16936 = b;
  var G__16937 = c;
  var G__16938 = d;
  var G__16939 = e;
  var G__16940 = f;
  var G__16941 = g;
  var G__16942 = h;
  var G__16943 = i;
  var G__16944 = j;
  var G__16945 = k;
  var G__16946 = l;
  var G__16947 = m;
  var G__16948 = n;
  var G__16949 = o;
  var G__16950 = p;
  var G__16951 = q;
  var G__16952 = r;
  var G__16953 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__16935, G__16936, G__16937, G__16938, G__16939, G__16940, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949, G__16950, G__16951, G__16952, G__16953) : self__.afn.call(null, G__16935, G__16936, G__16937, G__16938, G__16939, G__16940, G__16941, G__16942, G__16943, G__16944, G__16945, G__16946, G__16947, G__16948, G__16949, G__16950, G__16951, G__16952, G__16953);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__16954 = a;
  var G__16955 = b;
  var G__16956 = c;
  var G__16957 = d;
  var G__16958 = e;
  var G__16959 = f;
  var G__16960 = g;
  var G__16961 = h;
  var G__16962 = i;
  var G__16963 = j;
  var G__16964 = k;
  var G__16965 = l;
  var G__16966 = m;
  var G__16967 = n;
  var G__16968 = o;
  var G__16969 = p;
  var G__16970 = q;
  var G__16971 = r;
  var G__16972 = s;
  var G__16973 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960, G__16961, G__16962, G__16963, G__16964, G__16965, G__16966, G__16967, G__16968, G__16969, G__16970, G__16971, G__16972, G__16973) : self__.afn.call(null, G__16954, G__16955, G__16956, G__16957, G__16958, G__16959, G__16960, G__16961, G__16962, G__16963, G__16964, G__16965, G__16966, G__16967, G__16968, G__16969, G__16970, G__16971, G__16972, 
  G__16973);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__16974 = self__.afn;
  var G__16975 = a;
  var G__16976 = b;
  var G__16977 = c;
  var G__16978 = d;
  var G__16979 = e;
  var G__16980 = f;
  var G__16981 = g;
  var G__16982 = h;
  var G__16983 = i;
  var G__16984 = j;
  var G__16985 = k;
  var G__16986 = l;
  var G__16987 = m;
  var G__16988 = n;
  var G__16989 = o;
  var G__16990 = p;
  var G__16991 = q;
  var G__16992 = r;
  var G__16993 = s;
  var G__16994 = t;
  var G__16995 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__16974, G__16975, G__16976, G__16977, G__16978, G__16979, G__16980, G__16981, G__16982, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, G__16989, G__16990, G__16991, G__16992, G__16993, G__16994, G__16995) : cljs.core.apply.call(null, G__16974, G__16975, G__16976, G__16977, G__16978, G__16979, G__16980, G__16981, G__16982, G__16983, G__16984, G__16985, G__16986, G__16987, G__16988, 
  G__16989, G__16990, G__16991, G__16992, G__16993, G__16994, G__16995);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__17000 = o;
    if (G__17000) {
      var bit__4648__auto__ = G__17000.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4648__auto__ || G__17000.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__17000.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__17000);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__17000);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3955__auto__ = !(o == null);
    if (and__3955__auto__) {
      var G__17004 = o;
      if (G__17004) {
        var bit__4648__auto__ = G__17004.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4648__auto__ || G__17004.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__17004.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__17004);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__17004);
      }
    } else {
      return and__3955__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__17007__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__17008 = ret;
            var G__17009 = cljs.core.first(ks);
            var G__17010 = cljs.core.next(ks);
            coll = G__17008;
            k = G__17009;
            ks = G__17010;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__17007 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__17011__i = 0, G__17011__a = new Array(arguments.length - 2);
        while (G__17011__i < G__17011__a.length) {
          G__17011__a[G__17011__i] = arguments[G__17011__i + 2];
          ++G__17011__i;
        }
        ks = new cljs.core.IndexedSeq(G__17011__a, 0);
      }
      return G__17007__delegate.call(this, coll, k, ks);
    };
    G__17007.cljs$lang$maxFixedArity = 2;
    G__17007.cljs$lang$applyTo = function(arglist__17012) {
      var coll = cljs.core.first(arglist__17012);
      arglist__17012 = cljs.core.next(arglist__17012);
      var k = cljs.core.first(arglist__17012);
      var ks = cljs.core.rest(arglist__17012);
      return G__17007__delegate(coll, k, ks);
    };
    G__17007.cljs$core$IFn$_invoke$arity$variadic = G__17007__delegate;
    return G__17007;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__17013 = null;
        if (arguments.length > 2) {
          var G__17014__i = 0, G__17014__a = new Array(arguments.length - 2);
          while (G__17014__i < G__17014__a.length) {
            G__17014__a[G__17014__i] = arguments[G__17014__i + 2];
            ++G__17014__i;
          }
          G__17013 = new cljs.core.IndexedSeq(G__17014__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__17013);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17016 = x;
    if (G__17016) {
      var bit__4648__auto__ = G__17016.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4648__auto__ || G__17016.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__17016.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__17016);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__17016);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17018 = x;
    if (G__17018) {
      var bit__4648__auto__ = G__17018.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4648__auto__ || G__17018.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__17018.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__17018);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__17018);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__17020 = x;
  if (G__17020) {
    var bit__4648__auto__ = G__17020.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4648__auto__ || G__17020.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__17020.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__17020);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__17020);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__17022 = x;
  if (G__17022) {
    var bit__4648__auto__ = G__17022.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4648__auto__ || G__17022.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__17022.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__17022);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__17022);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__17024 = x;
  if (G__17024) {
    var bit__4648__auto__ = G__17024.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4648__auto__ || G__17024.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__17024.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__17024);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__17024);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__17026 = x;
  if (G__17026) {
    var bit__4648__auto__ = G__17026.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4648__auto__ || G__17026.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__17026.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__17026);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__17026);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__17028 = x;
    if (G__17028) {
      var bit__4648__auto__ = G__17028.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4648__auto__ || G__17028.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__17028.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__17028);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__17028);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__17030 = x;
  if (G__17030) {
    var bit__4648__auto__ = G__17030.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4648__auto__ || G__17030.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__17030.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__17030);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__17030);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__17032 = x;
  if (G__17032) {
    var bit__4641__auto__ = G__17032.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4641__auto__ || G__17032.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj17038 = {};
    return obj17038;
  };
  var js_obj__1 = function() {
    var G__17041__delegate = function(keyvals) {
      var G__17039 = goog.object.create;
      var G__17040 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__17039, G__17040) : cljs.core.apply.call(null, G__17039, G__17040);
    };
    var G__17041 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__17042__i = 0, G__17042__a = new Array(arguments.length - 0);
        while (G__17042__i < G__17042__a.length) {
          G__17042__a[G__17042__i] = arguments[G__17042__i + 0];
          ++G__17042__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__17042__a, 0);
      }
      return G__17041__delegate.call(this, keyvals);
    };
    G__17041.cljs$lang$maxFixedArity = 0;
    G__17041.cljs$lang$applyTo = function(arglist__17043) {
      var keyvals = cljs.core.seq(arglist__17043);
      return G__17041__delegate(keyvals);
    };
    G__17041.cljs$core$IFn$_invoke$arity$variadic = G__17041__delegate;
    return G__17041;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__17044 = null;
        if (arguments.length > 0) {
          var G__17045__i = 0, G__17045__a = new Array(arguments.length - 0);
          while (G__17045__i < G__17045__a.length) {
            G__17045__a[G__17045__i] = arguments[G__17045__i + 0];
            ++G__17045__i;
          }
          G__17044 = new cljs.core.IndexedSeq(G__17045__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__17044);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__17048_17050 = obj;
  var G__17049_17051 = function(G__17048_17050, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__17048_17050, keys);
  goog.object.forEach(G__17048_17050, G__17049_17051);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__17052 = i__$1 + 1;
      var G__17053 = j__$1 + 1;
      var G__17054 = len__$1 - 1;
      i__$1 = G__17052;
      j__$1 = G__17053;
      len__$1 = G__17054;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__17055 = i__$1 - 1;
      var G__17056 = j__$1 - 1;
      var G__17057 = len__$1 - 1;
      i__$1 = G__17055;
      j__$1 = G__17056;
      len__$1 = G__17057;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj17059 = {};
  return obj17059;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__17061 = s;
    if (G__17061) {
      var bit__4648__auto__ = G__17061.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4648__auto__ || G__17061.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__17061.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17061);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__17061);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__17063 = s;
  if (G__17063) {
    var bit__4648__auto__ = G__17063.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4648__auto__ || G__17063.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__17063.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__17063);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__17063);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3967__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3967__auto__) {
    return or__3967__auto__;
  } else {
    var G__17067 = f;
    if (G__17067) {
      var bit__4648__auto__ = G__17067.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4648__auto__ || G__17067.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__17067.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__17067);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__17067);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__17080 = n;
    return isNaN(G__17080);
  }()) && !(n === Infinity) && function() {
    var G__17081 = n;
    return parseFloat(G__17081);
  }() === function() {
    var G__17082 = n;
    var G__17083 = 10;
    return parseInt(G__17082, G__17083);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__17084__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__17085 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__17086 = etc;
              s = G__17085;
              xs = G__17086;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__17084 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17087__i = 0, G__17087__a = new Array(arguments.length - 2);
        while (G__17087__i < G__17087__a.length) {
          G__17087__a[G__17087__i] = arguments[G__17087__i + 2];
          ++G__17087__i;
        }
        more = new cljs.core.IndexedSeq(G__17087__a, 0);
      }
      return G__17084__delegate.call(this, x, y, more);
    };
    G__17084.cljs$lang$maxFixedArity = 2;
    G__17084.cljs$lang$applyTo = function(arglist__17088) {
      var x = cljs.core.first(arglist__17088);
      arglist__17088 = cljs.core.next(arglist__17088);
      var y = cljs.core.first(arglist__17088);
      var more = cljs.core.rest(arglist__17088);
      return G__17084__delegate(x, y, more);
    };
    G__17084.cljs$core$IFn$_invoke$arity$variadic = G__17084__delegate;
    return G__17084;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__17089 = null;
        if (arguments.length > 2) {
          var G__17090__i = 0, G__17090__a = new Array(arguments.length - 2);
          while (G__17090__i < G__17090__a.length) {
            G__17090__a[G__17090__i] = arguments[G__17090__i + 2];
            ++G__17090__i;
          }
          G__17089 = new cljs.core.IndexedSeq(G__17090__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17089);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__17094 = x;
            if (G__17094) {
              var bit__4641__auto__ = G__17094.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4641__auto__ || G__17094.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__17095 = x;
            var G__17096 = y;
            return goog.array.defaultCompare(G__17095, G__17096);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__17101 = xs;
        var G__17102 = ys;
        var G__17103 = len;
        var G__17104 = n + 1;
        xs = G__17101;
        ys = G__17102;
        len = G__17103;
        n = G__17104;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__17109 = x;
        var G__17110 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17109, G__17110) : f.call(null, G__17109, G__17110);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__17111 = y;
            var G__17112 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17111, G__17112) : f.call(null, G__17111, G__17112);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__17118 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__17118) : cljs.core.to_array.call(null, G__17118);
      }();
      var G__17119_17121 = a;
      var G__17120_17122 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__17119_17121, G__17120_17122);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__17128 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17128) : keyfn.call(null, G__17128);
      }(), function() {
        var G__17129 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17129) : keyfn.call(null, G__17129);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__17135 = f;
      var G__17136 = cljs.core.first(s);
      var G__17137 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__17135, G__17136, G__17137) : cljs.core.reduce.call(null, G__17135, G__17136, G__17137);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__17138 = val__$1;
          var G__17139 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17138, G__17139) : f.call(null, G__17138, G__17139);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__17140 = nval;
          var G__17141 = cljs.core.next(coll__$1);
          val__$1 = G__17140;
          coll__$1 = G__17141;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__17145 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__17145) : cljs.core.to_array.call(null, G__17145);
  }();
  var G__17146_17148 = a;
  goog.array.shuffle(G__17146_17148);
  var G__17147 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__17147) : cljs.core.vec.call(null, G__17147);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__17151 = coll;
      if (G__17151) {
        var bit__4641__auto__ = G__17151.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4641__auto__ || G__17151.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__17152 = coll;
      if (G__17152) {
        var bit__4641__auto__ = G__17152.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4641__auto__ || G__17152.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__17161 = null;
      var G__17161__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__17161__1 = function(x) {
        var G__17158 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__17158) : cf.call(null, G__17158);
      };
      var G__17161__2 = function(x, y) {
        var G__17159 = x;
        var G__17160 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17159, G__17160) : f.call(null, G__17159, G__17160);
      };
      G__17161 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__17161__0.call(this);
          case 1:
            return G__17161__1.call(this, x);
          case 2:
            return G__17161__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17161.cljs$core$IFn$_invoke$arity$0 = G__17161__0;
      G__17161.cljs$core$IFn$_invoke$arity$1 = G__17161__1;
      G__17161.cljs$core$IFn$_invoke$arity$2 = G__17161__2;
      return G__17161;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__17168 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__17168) : xform.call(null, G__17168);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__17169 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__17169) : f__$1.call(null, G__17169);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__17170__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__17170 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17171__i = 0, G__17171__a = new Array(arguments.length - 2);
        while (G__17171__i < G__17171__a.length) {
          G__17171__a[G__17171__i] = arguments[G__17171__i + 2];
          ++G__17171__i;
        }
        more = new cljs.core.IndexedSeq(G__17171__a, 0);
      }
      return G__17170__delegate.call(this, x, y, more);
    };
    G__17170.cljs$lang$maxFixedArity = 2;
    G__17170.cljs$lang$applyTo = function(arglist__17172) {
      var x = cljs.core.first(arglist__17172);
      arglist__17172 = cljs.core.next(arglist__17172);
      var y = cljs.core.first(arglist__17172);
      var more = cljs.core.rest(arglist__17172);
      return G__17170__delegate(x, y, more);
    };
    G__17170.cljs$core$IFn$_invoke$arity$variadic = G__17170__delegate;
    return G__17170;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__17173 = null;
        if (arguments.length > 2) {
          var G__17174__i = 0, G__17174__a = new Array(arguments.length - 2);
          while (G__17174__i < G__17174__a.length) {
            G__17174__a[G__17174__i] = arguments[G__17174__i + 2];
            ++G__17174__i;
          }
          G__17173 = new cljs.core.IndexedSeq(G__17174__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17173);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__17175__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__17175 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17176__i = 0, G__17176__a = new Array(arguments.length - 2);
        while (G__17176__i < G__17176__a.length) {
          G__17176__a[G__17176__i] = arguments[G__17176__i + 2];
          ++G__17176__i;
        }
        more = new cljs.core.IndexedSeq(G__17176__a, 0);
      }
      return G__17175__delegate.call(this, x, y, more);
    };
    G__17175.cljs$lang$maxFixedArity = 2;
    G__17175.cljs$lang$applyTo = function(arglist__17177) {
      var x = cljs.core.first(arglist__17177);
      arglist__17177 = cljs.core.next(arglist__17177);
      var y = cljs.core.first(arglist__17177);
      var more = cljs.core.rest(arglist__17177);
      return G__17175__delegate(x, y, more);
    };
    G__17175.cljs$core$IFn$_invoke$arity$variadic = G__17175__delegate;
    return G__17175;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__17178 = null;
        if (arguments.length > 2) {
          var G__17179__i = 0, G__17179__a = new Array(arguments.length - 2);
          while (G__17179__i < G__17179__a.length) {
            G__17179__a[G__17179__i] = arguments[G__17179__i + 2];
            ++G__17179__i;
          }
          G__17178 = new cljs.core.IndexedSeq(G__17179__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17178);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__17180__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__17180 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17181__i = 0, G__17181__a = new Array(arguments.length - 2);
        while (G__17181__i < G__17181__a.length) {
          G__17181__a[G__17181__i] = arguments[G__17181__i + 2];
          ++G__17181__i;
        }
        more = new cljs.core.IndexedSeq(G__17181__a, 0);
      }
      return G__17180__delegate.call(this, x, y, more);
    };
    G__17180.cljs$lang$maxFixedArity = 2;
    G__17180.cljs$lang$applyTo = function(arglist__17182) {
      var x = cljs.core.first(arglist__17182);
      arglist__17182 = cljs.core.next(arglist__17182);
      var y = cljs.core.first(arglist__17182);
      var more = cljs.core.rest(arglist__17182);
      return G__17180__delegate(x, y, more);
    };
    G__17180.cljs$core$IFn$_invoke$arity$variadic = G__17180__delegate;
    return G__17180;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__17183 = null;
        if (arguments.length > 2) {
          var G__17184__i = 0, G__17184__a = new Array(arguments.length - 2);
          while (G__17184__i < G__17184__a.length) {
            G__17184__a[G__17184__i] = arguments[G__17184__i + 2];
            ++G__17184__i;
          }
          G__17183 = new cljs.core.IndexedSeq(G__17184__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17183);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__17189__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__17189 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17190__i = 0, G__17190__a = new Array(arguments.length - 2);
        while (G__17190__i < G__17190__a.length) {
          G__17190__a[G__17190__i] = arguments[G__17190__i + 2];
          ++G__17190__i;
        }
        more = new cljs.core.IndexedSeq(G__17190__a, 0);
      }
      return G__17189__delegate.call(this, x, y, more);
    };
    G__17189.cljs$lang$maxFixedArity = 2;
    G__17189.cljs$lang$applyTo = function(arglist__17191) {
      var x = cljs.core.first(arglist__17191);
      arglist__17191 = cljs.core.next(arglist__17191);
      var y = cljs.core.first(arglist__17191);
      var more = cljs.core.rest(arglist__17191);
      return G__17189__delegate(x, y, more);
    };
    G__17189.cljs$core$IFn$_invoke$arity$variadic = G__17189__delegate;
    return G__17189;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__17192 = null;
        if (arguments.length > 2) {
          var G__17193__i = 0, G__17193__a = new Array(arguments.length - 2);
          while (G__17193__i < G__17193__a.length) {
            G__17193__a[G__17193__i] = arguments[G__17193__i + 2];
            ++G__17193__i;
          }
          G__17192 = new cljs.core.IndexedSeq(G__17193__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17192);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__17194__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__17195 = y;
            var G__17196 = cljs.core.first(more);
            var G__17197 = cljs.core.next(more);
            x = G__17195;
            y = G__17196;
            more = G__17197;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17194 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17198__i = 0, G__17198__a = new Array(arguments.length - 2);
        while (G__17198__i < G__17198__a.length) {
          G__17198__a[G__17198__i] = arguments[G__17198__i + 2];
          ++G__17198__i;
        }
        more = new cljs.core.IndexedSeq(G__17198__a, 0);
      }
      return G__17194__delegate.call(this, x, y, more);
    };
    G__17194.cljs$lang$maxFixedArity = 2;
    G__17194.cljs$lang$applyTo = function(arglist__17199) {
      var x = cljs.core.first(arglist__17199);
      arglist__17199 = cljs.core.next(arglist__17199);
      var y = cljs.core.first(arglist__17199);
      var more = cljs.core.rest(arglist__17199);
      return G__17194__delegate(x, y, more);
    };
    G__17194.cljs$core$IFn$_invoke$arity$variadic = G__17194__delegate;
    return G__17194;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__17200 = null;
        if (arguments.length > 2) {
          var G__17201__i = 0, G__17201__a = new Array(arguments.length - 2);
          while (G__17201__i < G__17201__a.length) {
            G__17201__a[G__17201__i] = arguments[G__17201__i + 2];
            ++G__17201__i;
          }
          G__17200 = new cljs.core.IndexedSeq(G__17201__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17200);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__17202__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__17203 = y;
            var G__17204 = cljs.core.first(more);
            var G__17205 = cljs.core.next(more);
            x = G__17203;
            y = G__17204;
            more = G__17205;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17202 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17206__i = 0, G__17206__a = new Array(arguments.length - 2);
        while (G__17206__i < G__17206__a.length) {
          G__17206__a[G__17206__i] = arguments[G__17206__i + 2];
          ++G__17206__i;
        }
        more = new cljs.core.IndexedSeq(G__17206__a, 0);
      }
      return G__17202__delegate.call(this, x, y, more);
    };
    G__17202.cljs$lang$maxFixedArity = 2;
    G__17202.cljs$lang$applyTo = function(arglist__17207) {
      var x = cljs.core.first(arglist__17207);
      arglist__17207 = cljs.core.next(arglist__17207);
      var y = cljs.core.first(arglist__17207);
      var more = cljs.core.rest(arglist__17207);
      return G__17202__delegate(x, y, more);
    };
    G__17202.cljs$core$IFn$_invoke$arity$variadic = G__17202__delegate;
    return G__17202;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__17208 = null;
        if (arguments.length > 2) {
          var G__17209__i = 0, G__17209__a = new Array(arguments.length - 2);
          while (G__17209__i < G__17209__a.length) {
            G__17209__a[G__17209__i] = arguments[G__17209__i + 2];
            ++G__17209__i;
          }
          G__17208 = new cljs.core.IndexedSeq(G__17209__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17208);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__17210__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__17211 = y;
            var G__17212 = cljs.core.first(more);
            var G__17213 = cljs.core.next(more);
            x = G__17211;
            y = G__17212;
            more = G__17213;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17210 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17214__i = 0, G__17214__a = new Array(arguments.length - 2);
        while (G__17214__i < G__17214__a.length) {
          G__17214__a[G__17214__i] = arguments[G__17214__i + 2];
          ++G__17214__i;
        }
        more = new cljs.core.IndexedSeq(G__17214__a, 0);
      }
      return G__17210__delegate.call(this, x, y, more);
    };
    G__17210.cljs$lang$maxFixedArity = 2;
    G__17210.cljs$lang$applyTo = function(arglist__17215) {
      var x = cljs.core.first(arglist__17215);
      arglist__17215 = cljs.core.next(arglist__17215);
      var y = cljs.core.first(arglist__17215);
      var more = cljs.core.rest(arglist__17215);
      return G__17210__delegate(x, y, more);
    };
    G__17210.cljs$core$IFn$_invoke$arity$variadic = G__17210__delegate;
    return G__17210;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__17216 = null;
        if (arguments.length > 2) {
          var G__17217__i = 0, G__17217__a = new Array(arguments.length - 2);
          while (G__17217__i < G__17217__a.length) {
            G__17217__a[G__17217__i] = arguments[G__17217__i + 2];
            ++G__17217__i;
          }
          G__17216 = new cljs.core.IndexedSeq(G__17217__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17216);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__17218__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__17219 = y;
            var G__17220 = cljs.core.first(more);
            var G__17221 = cljs.core.next(more);
            x = G__17219;
            y = G__17220;
            more = G__17221;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17218 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17222__i = 0, G__17222__a = new Array(arguments.length - 2);
        while (G__17222__i < G__17222__a.length) {
          G__17222__a[G__17222__i] = arguments[G__17222__i + 2];
          ++G__17222__i;
        }
        more = new cljs.core.IndexedSeq(G__17222__a, 0);
      }
      return G__17218__delegate.call(this, x, y, more);
    };
    G__17218.cljs$lang$maxFixedArity = 2;
    G__17218.cljs$lang$applyTo = function(arglist__17223) {
      var x = cljs.core.first(arglist__17223);
      arglist__17223 = cljs.core.next(arglist__17223);
      var y = cljs.core.first(arglist__17223);
      var more = cljs.core.rest(arglist__17223);
      return G__17218__delegate(x, y, more);
    };
    G__17218.cljs$core$IFn$_invoke$arity$variadic = G__17218__delegate;
    return G__17218;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__17224 = null;
        if (arguments.length > 2) {
          var G__17225__i = 0, G__17225__a = new Array(arguments.length - 2);
          while (G__17225__i < G__17225__a.length) {
            G__17225__a[G__17225__i] = arguments[G__17225__i + 2];
            ++G__17225__i;
          }
          G__17224 = new cljs.core.IndexedSeq(G__17225__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17224);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4284__auto__ = x;
    var y__4285__auto__ = y;
    return x__4284__auto__ > y__4285__auto__ ? x__4284__auto__ : y__4285__auto__;
  };
  var max__3 = function() {
    var G__17226__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__4284__auto__ = x;
        var y__4285__auto__ = y;
        return x__4284__auto__ > y__4285__auto__ ? x__4284__auto__ : y__4285__auto__;
      }(), more);
    };
    var G__17226 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17227__i = 0, G__17227__a = new Array(arguments.length - 2);
        while (G__17227__i < G__17227__a.length) {
          G__17227__a[G__17227__i] = arguments[G__17227__i + 2];
          ++G__17227__i;
        }
        more = new cljs.core.IndexedSeq(G__17227__a, 0);
      }
      return G__17226__delegate.call(this, x, y, more);
    };
    G__17226.cljs$lang$maxFixedArity = 2;
    G__17226.cljs$lang$applyTo = function(arglist__17228) {
      var x = cljs.core.first(arglist__17228);
      arglist__17228 = cljs.core.next(arglist__17228);
      var y = cljs.core.first(arglist__17228);
      var more = cljs.core.rest(arglist__17228);
      return G__17226__delegate(x, y, more);
    };
    G__17226.cljs$core$IFn$_invoke$arity$variadic = G__17226__delegate;
    return G__17226;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__17229 = null;
        if (arguments.length > 2) {
          var G__17230__i = 0, G__17230__a = new Array(arguments.length - 2);
          while (G__17230__i < G__17230__a.length) {
            G__17230__a[G__17230__i] = arguments[G__17230__i + 2];
            ++G__17230__i;
          }
          G__17229 = new cljs.core.IndexedSeq(G__17230__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17229);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4291__auto__ = x;
    var y__4292__auto__ = y;
    return x__4291__auto__ < y__4292__auto__ ? x__4291__auto__ : y__4292__auto__;
  };
  var min__3 = function() {
    var G__17231__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__4291__auto__ = x;
        var y__4292__auto__ = y;
        return x__4291__auto__ < y__4292__auto__ ? x__4291__auto__ : y__4292__auto__;
      }(), more);
    };
    var G__17231 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17232__i = 0, G__17232__a = new Array(arguments.length - 2);
        while (G__17232__i < G__17232__a.length) {
          G__17232__a[G__17232__i] = arguments[G__17232__i + 2];
          ++G__17232__i;
        }
        more = new cljs.core.IndexedSeq(G__17232__a, 0);
      }
      return G__17231__delegate.call(this, x, y, more);
    };
    G__17231.cljs$lang$maxFixedArity = 2;
    G__17231.cljs$lang$applyTo = function(arglist__17233) {
      var x = cljs.core.first(arglist__17233);
      arglist__17233 = cljs.core.next(arglist__17233);
      var y = cljs.core.first(arglist__17233);
      var more = cljs.core.rest(arglist__17233);
      return G__17231__delegate(x, y, more);
    };
    G__17231.cljs$core$IFn$_invoke$arity$variadic = G__17231__delegate;
    return G__17231;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__17234 = null;
        if (arguments.length > 2) {
          var G__17235__i = 0, G__17235__a = new Array(arguments.length - 2);
          while (G__17235__i < G__17235__a.length) {
            G__17235__a[G__17235__i] = arguments[G__17235__i + 2];
            ++G__17235__i;
          }
          G__17234 = new cljs.core.IndexedSeq(G__17235__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17234);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__17236__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__17236 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17237__i = 0, G__17237__a = new Array(arguments.length - 2);
        while (G__17237__i < G__17237__a.length) {
          G__17237__a[G__17237__i] = arguments[G__17237__i + 2];
          ++G__17237__i;
        }
        more = new cljs.core.IndexedSeq(G__17237__a, 0);
      }
      return G__17236__delegate.call(this, x, y, more);
    };
    G__17236.cljs$lang$maxFixedArity = 2;
    G__17236.cljs$lang$applyTo = function(arglist__17238) {
      var x = cljs.core.first(arglist__17238);
      arglist__17238 = cljs.core.next(arglist__17238);
      var y = cljs.core.first(arglist__17238);
      var more = cljs.core.rest(arglist__17238);
      return G__17236__delegate(x, y, more);
    };
    G__17236.cljs$core$IFn$_invoke$arity$variadic = G__17236__delegate;
    return G__17236;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__17239 = null;
        if (arguments.length > 2) {
          var G__17240__i = 0, G__17240__a = new Array(arguments.length - 2);
          while (G__17240__i < G__17240__a.length) {
            G__17240__a[G__17240__i] = arguments[G__17240__i + 2];
            ++G__17240__i;
          }
          G__17239 = new cljs.core.IndexedSeq(G__17240__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17239);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__17241__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__17241 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17242__i = 0, G__17242__a = new Array(arguments.length - 2);
        while (G__17242__i < G__17242__a.length) {
          G__17242__a[G__17242__i] = arguments[G__17242__i + 2];
          ++G__17242__i;
        }
        more = new cljs.core.IndexedSeq(G__17242__a, 0);
      }
      return G__17241__delegate.call(this, x, y, more);
    };
    G__17241.cljs$lang$maxFixedArity = 2;
    G__17241.cljs$lang$applyTo = function(arglist__17243) {
      var x = cljs.core.first(arglist__17243);
      arglist__17243 = cljs.core.next(arglist__17243);
      var y = cljs.core.first(arglist__17243);
      var more = cljs.core.rest(arglist__17243);
      return G__17241__delegate(x, y, more);
    };
    G__17241.cljs$core$IFn$_invoke$arity$variadic = G__17241__delegate;
    return G__17241;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__17244 = null;
        if (arguments.length > 2) {
          var G__17245__i = 0, G__17245__a = new Array(arguments.length - 2);
          while (G__17245__i < G__17245__a.length) {
            G__17245__a[G__17245__i] = arguments[G__17245__i + 2];
            ++G__17245__i;
          }
          G__17244 = new cljs.core.IndexedSeq(G__17245__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17244);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__17250__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__17250 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17251__i = 0, G__17251__a = new Array(arguments.length - 2);
        while (G__17251__i < G__17251__a.length) {
          G__17251__a[G__17251__i] = arguments[G__17251__i + 2];
          ++G__17251__i;
        }
        more = new cljs.core.IndexedSeq(G__17251__a, 0);
      }
      return G__17250__delegate.call(this, x, y, more);
    };
    G__17250.cljs$lang$maxFixedArity = 2;
    G__17250.cljs$lang$applyTo = function(arglist__17252) {
      var x = cljs.core.first(arglist__17252);
      arglist__17252 = cljs.core.next(arglist__17252);
      var y = cljs.core.first(arglist__17252);
      var more = cljs.core.rest(arglist__17252);
      return G__17250__delegate(x, y, more);
    };
    G__17250.cljs$core$IFn$_invoke$arity$variadic = G__17250__delegate;
    return G__17250;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__17253 = null;
        if (arguments.length > 2) {
          var G__17254__i = 0, G__17254__a = new Array(arguments.length - 2);
          while (G__17254__i < G__17254__a.length) {
            G__17254__a[G__17254__i] = arguments[G__17254__i + 2];
            ++G__17254__i;
          }
          G__17253 = new cljs.core.IndexedSeq(G__17254__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17253);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__17255__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__17255 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17256__i = 0, G__17256__a = new Array(arguments.length - 2);
        while (G__17256__i < G__17256__a.length) {
          G__17256__a[G__17256__i] = arguments[G__17256__i + 2];
          ++G__17256__i;
        }
        more = new cljs.core.IndexedSeq(G__17256__a, 0);
      }
      return G__17255__delegate.call(this, x, y, more);
    };
    G__17255.cljs$lang$maxFixedArity = 2;
    G__17255.cljs$lang$applyTo = function(arglist__17257) {
      var x = cljs.core.first(arglist__17257);
      arglist__17257 = cljs.core.next(arglist__17257);
      var y = cljs.core.first(arglist__17257);
      var more = cljs.core.rest(arglist__17257);
      return G__17255__delegate(x, y, more);
    };
    G__17255.cljs$core$IFn$_invoke$arity$variadic = G__17255__delegate;
    return G__17255;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__17258 = null;
        if (arguments.length > 2) {
          var G__17259__i = 0, G__17259__a = new Array(arguments.length - 2);
          while (G__17259__i < G__17259__a.length) {
            G__17259__a[G__17259__i] = arguments[G__17259__i + 2];
            ++G__17259__i;
          }
          G__17258 = new cljs.core.IndexedSeq(G__17259__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17258);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__17260__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__17260 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17261__i = 0, G__17261__a = new Array(arguments.length - 2);
        while (G__17261__i < G__17261__a.length) {
          G__17261__a[G__17261__i] = arguments[G__17261__i + 2];
          ++G__17261__i;
        }
        more = new cljs.core.IndexedSeq(G__17261__a, 0);
      }
      return G__17260__delegate.call(this, x, y, more);
    };
    G__17260.cljs$lang$maxFixedArity = 2;
    G__17260.cljs$lang$applyTo = function(arglist__17262) {
      var x = cljs.core.first(arglist__17262);
      arglist__17262 = cljs.core.next(arglist__17262);
      var y = cljs.core.first(arglist__17262);
      var more = cljs.core.rest(arglist__17262);
      return G__17260__delegate(x, y, more);
    };
    G__17260.cljs$core$IFn$_invoke$arity$variadic = G__17260__delegate;
    return G__17260;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__17263 = null;
        if (arguments.length > 2) {
          var G__17264__i = 0, G__17264__a = new Array(arguments.length - 2);
          while (G__17264__i < G__17264__a.length) {
            G__17264__a[G__17264__i] = arguments[G__17264__i + 2];
            ++G__17264__i;
          }
          G__17263 = new cljs.core.IndexedSeq(G__17264__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17263);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__17267 = x;
  var G__17268 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__17267, G__17268) : cljs.core.mod.call(null, G__17267, G__17268);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__17269__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__17269 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17270__i = 0, G__17270__a = new Array(arguments.length - 2);
        while (G__17270__i < G__17270__a.length) {
          G__17270__a[G__17270__i] = arguments[G__17270__i + 2];
          ++G__17270__i;
        }
        more = new cljs.core.IndexedSeq(G__17270__a, 0);
      }
      return G__17269__delegate.call(this, x, y, more);
    };
    G__17269.cljs$lang$maxFixedArity = 2;
    G__17269.cljs$lang$applyTo = function(arglist__17271) {
      var x = cljs.core.first(arglist__17271);
      arglist__17271 = cljs.core.next(arglist__17271);
      var y = cljs.core.first(arglist__17271);
      var more = cljs.core.rest(arglist__17271);
      return G__17269__delegate(x, y, more);
    };
    G__17269.cljs$core$IFn$_invoke$arity$variadic = G__17269__delegate;
    return G__17269;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__17272 = null;
        if (arguments.length > 2) {
          var G__17273__i = 0, G__17273__a = new Array(arguments.length - 2);
          while (G__17273__i < G__17273__a.length) {
            G__17273__a[G__17273__i] = arguments[G__17273__i + 2];
            ++G__17273__i;
          }
          G__17272 = new cljs.core.IndexedSeq(G__17273__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17272);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__17274__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__17274 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17275__i = 0, G__17275__a = new Array(arguments.length - 2);
        while (G__17275__i < G__17275__a.length) {
          G__17275__a[G__17275__i] = arguments[G__17275__i + 2];
          ++G__17275__i;
        }
        more = new cljs.core.IndexedSeq(G__17275__a, 0);
      }
      return G__17274__delegate.call(this, x, y, more);
    };
    G__17274.cljs$lang$maxFixedArity = 2;
    G__17274.cljs$lang$applyTo = function(arglist__17276) {
      var x = cljs.core.first(arglist__17276);
      arglist__17276 = cljs.core.next(arglist__17276);
      var y = cljs.core.first(arglist__17276);
      var more = cljs.core.rest(arglist__17276);
      return G__17274__delegate(x, y, more);
    };
    G__17274.cljs$core$IFn$_invoke$arity$variadic = G__17274__delegate;
    return G__17274;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__17277 = null;
        if (arguments.length > 2) {
          var G__17278__i = 0, G__17278__a = new Array(arguments.length - 2);
          while (G__17278__i < G__17278__a.length) {
            G__17278__a[G__17278__i] = arguments[G__17278__i + 2];
            ++G__17278__i;
          }
          G__17277 = new cljs.core.IndexedSeq(G__17278__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17277);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__17281 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__17281) : Math.floor.call(null, G__17281);
  } else {
    var G__17282 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__17282) : Math.ceil.call(null, G__17282);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__17283__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__17283 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17284__i = 0, G__17284__a = new Array(arguments.length - 2);
        while (G__17284__i < G__17284__a.length) {
          G__17284__a[G__17284__i] = arguments[G__17284__i + 2];
          ++G__17284__i;
        }
        more = new cljs.core.IndexedSeq(G__17284__a, 0);
      }
      return G__17283__delegate.call(this, x, y, more);
    };
    G__17283.cljs$lang$maxFixedArity = 2;
    G__17283.cljs$lang$applyTo = function(arglist__17285) {
      var x = cljs.core.first(arglist__17285);
      arglist__17285 = cljs.core.next(arglist__17285);
      var y = cljs.core.first(arglist__17285);
      var more = cljs.core.rest(arglist__17285);
      return G__17283__delegate(x, y, more);
    };
    G__17283.cljs$core$IFn$_invoke$arity$variadic = G__17283__delegate;
    return G__17283;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__17286 = null;
        if (arguments.length > 2) {
          var G__17287__i = 0, G__17287__a = new Array(arguments.length - 2);
          while (G__17287__i < G__17287__a.length) {
            G__17287__a[G__17287__i] = arguments[G__17287__i + 2];
            ++G__17287__i;
          }
          G__17286 = new cljs.core.IndexedSeq(G__17287__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17286);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__17288__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__17288 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17289__i = 0, G__17289__a = new Array(arguments.length - 2);
        while (G__17289__i < G__17289__a.length) {
          G__17289__a[G__17289__i] = arguments[G__17289__i + 2];
          ++G__17289__i;
        }
        more = new cljs.core.IndexedSeq(G__17289__a, 0);
      }
      return G__17288__delegate.call(this, x, y, more);
    };
    G__17288.cljs$lang$maxFixedArity = 2;
    G__17288.cljs$lang$applyTo = function(arglist__17290) {
      var x = cljs.core.first(arglist__17290);
      arglist__17290 = cljs.core.next(arglist__17290);
      var y = cljs.core.first(arglist__17290);
      var more = cljs.core.rest(arglist__17290);
      return G__17288__delegate(x, y, more);
    };
    G__17288.cljs$core$IFn$_invoke$arity$variadic = G__17288__delegate;
    return G__17288;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__17291 = null;
        if (arguments.length > 2) {
          var G__17292__i = 0, G__17292__a = new Array(arguments.length - 2);
          while (G__17292__i < G__17292__a.length) {
            G__17292__a[G__17292__i] = arguments[G__17292__i + 2];
            ++G__17292__i;
          }
          G__17291 = new cljs.core.IndexedSeq(G__17292__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17291);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__17293__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__17293 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17294__i = 0, G__17294__a = new Array(arguments.length - 2);
        while (G__17294__i < G__17294__a.length) {
          G__17294__a[G__17294__i] = arguments[G__17294__i + 2];
          ++G__17294__i;
        }
        more = new cljs.core.IndexedSeq(G__17294__a, 0);
      }
      return G__17293__delegate.call(this, x, y, more);
    };
    G__17293.cljs$lang$maxFixedArity = 2;
    G__17293.cljs$lang$applyTo = function(arglist__17295) {
      var x = cljs.core.first(arglist__17295);
      arglist__17295 = cljs.core.next(arglist__17295);
      var y = cljs.core.first(arglist__17295);
      var more = cljs.core.rest(arglist__17295);
      return G__17293__delegate(x, y, more);
    };
    G__17293.cljs$core$IFn$_invoke$arity$variadic = G__17293__delegate;
    return G__17293;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__17296 = null;
        if (arguments.length > 2) {
          var G__17297__i = 0, G__17297__a = new Array(arguments.length - 2);
          while (G__17297__i < G__17297__a.length) {
            G__17297__a[G__17297__i] = arguments[G__17297__i + 2];
            ++G__17297__i;
          }
          G__17296 = new cljs.core.IndexedSeq(G__17297__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17296);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__17298__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__17298 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17299__i = 0, G__17299__a = new Array(arguments.length - 2);
        while (G__17299__i < G__17299__a.length) {
          G__17299__a[G__17299__i] = arguments[G__17299__i + 2];
          ++G__17299__i;
        }
        more = new cljs.core.IndexedSeq(G__17299__a, 0);
      }
      return G__17298__delegate.call(this, x, y, more);
    };
    G__17298.cljs$lang$maxFixedArity = 2;
    G__17298.cljs$lang$applyTo = function(arglist__17300) {
      var x = cljs.core.first(arglist__17300);
      arglist__17300 = cljs.core.next(arglist__17300);
      var y = cljs.core.first(arglist__17300);
      var more = cljs.core.rest(arglist__17300);
      return G__17298__delegate(x, y, more);
    };
    G__17298.cljs$core$IFn$_invoke$arity$variadic = G__17298__delegate;
    return G__17298;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__17301 = null;
        if (arguments.length > 2) {
          var G__17302__i = 0, G__17302__a = new Array(arguments.length - 2);
          while (G__17302__i < G__17302__a.length) {
            G__17302__a[G__17302__i] = arguments[G__17302__i + 2];
            ++G__17302__i;
          }
          G__17301 = new cljs.core.IndexedSeq(G__17302__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17301);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__17307__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__17308 = y;
            var G__17309 = cljs.core.first(more);
            var G__17310 = cljs.core.next(more);
            x = G__17308;
            y = G__17309;
            more = G__17310;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__17307 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17311__i = 0, G__17311__a = new Array(arguments.length - 2);
        while (G__17311__i < G__17311__a.length) {
          G__17311__a[G__17311__i] = arguments[G__17311__i + 2];
          ++G__17311__i;
        }
        more = new cljs.core.IndexedSeq(G__17311__a, 0);
      }
      return G__17307__delegate.call(this, x, y, more);
    };
    G__17307.cljs$lang$maxFixedArity = 2;
    G__17307.cljs$lang$applyTo = function(arglist__17312) {
      var x = cljs.core.first(arglist__17312);
      arglist__17312 = cljs.core.next(arglist__17312);
      var y = cljs.core.first(arglist__17312);
      var more = cljs.core.rest(arglist__17312);
      return G__17307__delegate(x, y, more);
    };
    G__17307.cljs$core$IFn$_invoke$arity$variadic = G__17307__delegate;
    return G__17307;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__17313 = null;
        if (arguments.length > 2) {
          var G__17314__i = 0, G__17314__a = new Array(arguments.length - 2);
          while (G__17314__i < G__17314__a.length) {
            G__17314__a[G__17314__i] = arguments[G__17314__i + 2];
            ++G__17314__i;
          }
          G__17313 = new cljs.core.IndexedSeq(G__17314__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17313);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__17315 = n__$1 - 1;
      var G__17316 = cljs.core.next(xs);
      n__$1 = G__17315;
      xs = G__17316;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__17320 = x;
      return goog.string.buildString(G__17320);
    }
  };
  var str__2 = function() {
    var G__17321__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__17322 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__17323 = cljs.core.next(more);
          sb = G__17322;
          more = G__17323;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__17321 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__17324__i = 0, G__17324__a = new Array(arguments.length - 1);
        while (G__17324__i < G__17324__a.length) {
          G__17324__a[G__17324__i] = arguments[G__17324__i + 1];
          ++G__17324__i;
        }
        ys = new cljs.core.IndexedSeq(G__17324__a, 0);
      }
      return G__17321__delegate.call(this, x, ys);
    };
    G__17321.cljs$lang$maxFixedArity = 1;
    G__17321.cljs$lang$applyTo = function(arglist__17325) {
      var x = cljs.core.first(arglist__17325);
      var ys = cljs.core.rest(arglist__17325);
      return G__17321__delegate(x, ys);
    };
    G__17321.cljs$core$IFn$_invoke$arity$variadic = G__17321__delegate;
    return G__17321;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__17326 = null;
        if (arguments.length > 1) {
          var G__17327__i = 0, G__17327__a = new Array(arguments.length - 1);
          while (G__17327__i < G__17327__a.length) {
            G__17327__a[G__17327__i] = arguments[G__17327__i + 1];
            ++G__17327__i;
          }
          G__17326 = new cljs.core.IndexedSeq(G__17327__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__17326);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__17328 = cljs.core.next(xs);
            var G__17329 = cljs.core.next(ys);
            xs = G__17328;
            ys = G__17329;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__17330 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__17331 = cljs.core.next(s);
        res = G__17330;
        s = G__17331;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__17336 = (h + (cljs.core.hash(function() {
        var G__17334 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__17334) : cljs.core.key.call(null, G__17334);
      }()) ^ cljs.core.hash(function() {
        var G__17335 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__17335) : cljs.core.val.call(null, G__17335);
      }()))) % 4503599627370496;
      var G__17337 = cljs.core.next(s);
      h = G__17336;
      s = G__17337;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__17338 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__17339 = cljs.core.next(s__$1);
      h = G__17338;
      s__$1 = G__17339;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__17350_17360 = cljs.core.seq(fn_map);
  var chunk__17351_17361 = null;
  var count__17352_17362 = 0;
  var i__17353_17363 = 0;
  while (true) {
    if (i__17353_17363 < count__17352_17362) {
      var vec__17354_17364 = chunk__17351_17361.cljs$core$IIndexed$_nth$arity$2(null, i__17353_17363);
      var key_name_17365 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17354_17364, 0, null);
      var f_17366 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17354_17364, 1, null);
      var str_name_17367 = function() {
        var G__17355 = key_name_17365;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__17355) : cljs.core.name.call(null, G__17355);
      }();
      obj[str_name_17367] = f_17366;
      var G__17368 = seq__17350_17360;
      var G__17369 = chunk__17351_17361;
      var G__17370 = count__17352_17362;
      var G__17371 = i__17353_17363 + 1;
      seq__17350_17360 = G__17368;
      chunk__17351_17361 = G__17369;
      count__17352_17362 = G__17370;
      i__17353_17363 = G__17371;
      continue;
    } else {
      var temp__4126__auto___17372 = cljs.core.seq(seq__17350_17360);
      if (temp__4126__auto___17372) {
        var seq__17350_17373__$1 = temp__4126__auto___17372;
        if (cljs.core.chunked_seq_QMARK_(seq__17350_17373__$1)) {
          var c__4754__auto___17374 = function() {
            var G__17356 = seq__17350_17373__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__17356) : cljs.core.chunk_first.call(null, G__17356);
          }();
          var G__17375 = function() {
            var G__17357 = seq__17350_17373__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__17357) : cljs.core.chunk_rest.call(null, G__17357);
          }();
          var G__17376 = c__4754__auto___17374;
          var G__17377 = cljs.core.count(c__4754__auto___17374);
          var G__17378 = 0;
          seq__17350_17360 = G__17375;
          chunk__17351_17361 = G__17376;
          count__17352_17362 = G__17377;
          i__17353_17363 = G__17378;
          continue;
        } else {
          var vec__17358_17379 = cljs.core.first(seq__17350_17373__$1);
          var key_name_17380 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17358_17379, 0, null);
          var f_17381 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17358_17379, 1, null);
          var str_name_17382 = function() {
            var G__17359 = key_name_17380;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__17359) : cljs.core.name.call(null, G__17359);
          }();
          obj[str_name_17382] = f_17381;
          var G__17383 = cljs.core.next(seq__17350_17373__$1);
          var G__17384 = null;
          var G__17385 = 0;
          var G__17386 = 0;
          seq__17350_17360 = G__17383;
          chunk__17351_17361 = G__17384;
          count__17352_17362 = G__17385;
          i__17353_17363 = G__17386;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__17388 = coll;
  if (G__17388) {
    var bit__4648__auto__ = G__17388.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4648__auto__ || G__17388.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__17388.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__17388);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__17388);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__17389 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__17389;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__17390 = i - 1;
        var G__17391 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__17390;
        r = G__17391;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__17392__i = 0, G__17392__a = new Array(arguments.length - 0);
      while (G__17392__i < G__17392__a.length) {
        G__17392__a[G__17392__i] = arguments[G__17392__i + 0];
        ++G__17392__i;
      }
      xs = new cljs.core.IndexedSeq(G__17392__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__17393) {
    var xs = cljs.core.seq(arglist__17393);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3967__auto__ = coll == null;
    if (or__3967__auto__) {
      return or__3967__auto__;
    } else {
      var G__17397 = coll;
      if (G__17397) {
        var bit__4641__auto__ = G__17397.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4641__auto__ || G__17397.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__17399 = x;
  if (G__17399) {
    var bit__4648__auto__ = G__17399.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4648__auto__ || G__17399.cljs$core$IList$) {
      return true;
    } else {
      if (!G__17399.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__17399);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__17399);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3955__auto__ = cljs.core.not(a.ns);
      if (and__3955__auto__) {
        return b.ns;
      } else {
        return and__3955__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__17406 = a.ns;
            var G__17407 = b.ns;
            return goog.array.defaultCompare(G__17406, G__17407);
          }();
          if (0 === nsc) {
            var G__17408 = a.name;
            var G__17409 = b.name;
            return goog.array.defaultCompare(G__17408, G__17409);
          } else {
            return nsc;
          }
        }
      } else {
        var G__17410 = a.name;
        var G__17411 = b.name;
        return goog.array.defaultCompare(G__17410, G__17411);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4388__auto__ = self__._hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__17413 = null;
  var G__17413__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__17413__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__17413 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17413__2.call(this, self__, coll);
      case 3:
        return G__17413__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17413.cljs$core$IFn$_invoke$arity$2 = G__17413__2;
  G__17413.cljs$core$IFn$_invoke$arity$3 = G__17413__3;
  return G__17413;
}();
cljs.core.Keyword.prototype.apply = function(self__, args17412) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17412)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__17415 = x;
    if (G__17415) {
      var bit__4641__auto__ = G__17415.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4641__auto__ || G__17415.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__17417 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__17417) : cljs.core.name.call(null, G__17417);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__17418 = ls.sval();
        ls = G__17418;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__17420 = s;
    if (G__17420) {
      var bit__4641__auto__ = G__17420.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4641__auto__ || G__17420.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__17421 = cljs.core.next(s__$1);
      s__$1 = G__17421;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_17422 = 0;
  var xs_17423 = cljs.core.seq(coll);
  while (true) {
    if (xs_17423) {
      ret[i_17422] = cljs.core.to_array(cljs.core.first(xs_17423));
      var G__17424 = i_17422 + 1;
      var G__17425 = cljs.core.next(xs_17423);
      i_17422 = G__17424;
      xs_17423 = G__17425;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__17428 = i + 1;
          var G__17429 = cljs.core.next(s__$1);
          i = G__17428;
          s__$1 = G__17429;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4854__auto___17430 = size;
      var i_17431 = 0;
      while (true) {
        if (i_17431 < n__4854__auto___17430) {
          a[i_17431] = init_val_or_seq;
          var G__17432 = i_17431 + 1;
          i_17431 = G__17432;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__17435 = i + 1;
          var G__17436 = cljs.core.next(s__$1);
          i = G__17435;
          s__$1 = G__17436;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4854__auto___17437 = size;
      var i_17438 = 0;
      while (true) {
        if (i_17438 < n__4854__auto___17437) {
          a[i_17438] = init_val_or_seq;
          var G__17439 = i_17438 + 1;
          i_17438 = G__17439;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__17442 = i + 1;
          var G__17443 = cljs.core.next(s__$1);
          i = G__17442;
          s__$1 = G__17443;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4854__auto___17444 = size;
      var i_17445 = 0;
      while (true) {
        if (i_17445 < n__4854__auto___17444) {
          a[i_17445] = init_val_or_seq;
          var G__17446 = i_17445 + 1;
          i_17445 = G__17446;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__17449 = i + 1;
          var G__17450 = cljs.core.next(s__$1);
          i = G__17449;
          s__$1 = G__17450;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4854__auto___17451 = size;
      var i_17452 = 0;
      while (true) {
        if (i_17452 < n__4854__auto___17451) {
          a[i_17452] = init_val_or_seq;
          var G__17453 = i_17452 + 1;
          i_17452 = G__17453;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__17454 = cljs.core.next(s__$1);
        var G__17455 = i - 1;
        var G__17456 = sum + 1;
        s__$1 = G__17454;
        i = G__17455;
        sum = G__17456;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__17476__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__17476 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__17477__i = 0, G__17477__a = new Array(arguments.length - 2);
        while (G__17477__i < G__17477__a.length) {
          G__17477__a[G__17477__i] = arguments[G__17477__i + 2];
          ++G__17477__i;
        }
        zs = new cljs.core.IndexedSeq(G__17477__a, 0);
      }
      return G__17476__delegate.call(this, x, y, zs);
    };
    G__17476.cljs$lang$maxFixedArity = 2;
    G__17476.cljs$lang$applyTo = function(arglist__17478) {
      var x = cljs.core.first(arglist__17478);
      arglist__17478 = cljs.core.next(arglist__17478);
      var y = cljs.core.first(arglist__17478);
      var zs = cljs.core.rest(arglist__17478);
      return G__17476__delegate(x, y, zs);
    };
    G__17476.cljs$core$IFn$_invoke$arity$variadic = G__17476__delegate;
    return G__17476;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__17479 = null;
        if (arguments.length > 2) {
          var G__17480__i = 0, G__17480__a = new Array(arguments.length - 2);
          while (G__17480__i < G__17480__a.length) {
            G__17480__a[G__17480__i] = arguments[G__17480__i + 2];
            ++G__17480__i;
          }
          G__17479 = new cljs.core.IndexedSeq(G__17480__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17479);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__17481__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__17481 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__17482__i = 0, G__17482__a = new Array(arguments.length - 4);
        while (G__17482__i < G__17482__a.length) {
          G__17482__a[G__17482__i] = arguments[G__17482__i + 4];
          ++G__17482__i;
        }
        more = new cljs.core.IndexedSeq(G__17482__a, 0);
      }
      return G__17481__delegate.call(this, a, b, c, d, more);
    };
    G__17481.cljs$lang$maxFixedArity = 4;
    G__17481.cljs$lang$applyTo = function(arglist__17483) {
      var a = cljs.core.first(arglist__17483);
      arglist__17483 = cljs.core.next(arglist__17483);
      var b = cljs.core.first(arglist__17483);
      arglist__17483 = cljs.core.next(arglist__17483);
      var c = cljs.core.first(arglist__17483);
      arglist__17483 = cljs.core.next(arglist__17483);
      var d = cljs.core.first(arglist__17483);
      var more = cljs.core.rest(arglist__17483);
      return G__17481__delegate(a, b, c, d, more);
    };
    G__17481.cljs$core$IFn$_invoke$arity$variadic = G__17481__delegate;
    return G__17481;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__17484 = null;
        if (arguments.length > 4) {
          var G__17485__i = 0, G__17485__a = new Array(arguments.length - 4);
          while (G__17485__i < G__17485__a.length) {
            G__17485__a[G__17485__i] = arguments[G__17485__i + 4];
            ++G__17485__i;
          }
          G__17484 = new cljs.core.IndexedSeq(G__17485__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__17484);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__17486__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__17487 = ntcoll;
          var G__17488 = cljs.core.first(vals);
          var G__17489 = cljs.core.next(vals);
          tcoll = G__17487;
          val = G__17488;
          vals = G__17489;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17486 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__17490__i = 0, G__17490__a = new Array(arguments.length - 2);
        while (G__17490__i < G__17490__a.length) {
          G__17490__a[G__17490__i] = arguments[G__17490__i + 2];
          ++G__17490__i;
        }
        vals = new cljs.core.IndexedSeq(G__17490__a, 0);
      }
      return G__17486__delegate.call(this, tcoll, val, vals);
    };
    G__17486.cljs$lang$maxFixedArity = 2;
    G__17486.cljs$lang$applyTo = function(arglist__17491) {
      var tcoll = cljs.core.first(arglist__17491);
      arglist__17491 = cljs.core.next(arglist__17491);
      var val = cljs.core.first(arglist__17491);
      var vals = cljs.core.rest(arglist__17491);
      return G__17486__delegate(tcoll, val, vals);
    };
    G__17486.cljs$core$IFn$_invoke$arity$variadic = G__17486__delegate;
    return G__17486;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__17492 = null;
        if (arguments.length > 2) {
          var G__17493__i = 0, G__17493__a = new Array(arguments.length - 2);
          while (G__17493__i < G__17493__a.length) {
            G__17493__a[G__17493__i] = arguments[G__17493__i + 2];
            ++G__17493__i;
          }
          G__17492 = new cljs.core.IndexedSeq(G__17493__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__17492);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__17494__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__17495 = ntcoll;
          var G__17496 = cljs.core.first(kvs);
          var G__17497 = cljs.core.second(kvs);
          var G__17498 = cljs.core.nnext(kvs);
          tcoll = G__17495;
          key = G__17496;
          val = G__17497;
          kvs = G__17498;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17494 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__17499__i = 0, G__17499__a = new Array(arguments.length - 3);
        while (G__17499__i < G__17499__a.length) {
          G__17499__a[G__17499__i] = arguments[G__17499__i + 3];
          ++G__17499__i;
        }
        kvs = new cljs.core.IndexedSeq(G__17499__a, 0);
      }
      return G__17494__delegate.call(this, tcoll, key, val, kvs);
    };
    G__17494.cljs$lang$maxFixedArity = 3;
    G__17494.cljs$lang$applyTo = function(arglist__17500) {
      var tcoll = cljs.core.first(arglist__17500);
      arglist__17500 = cljs.core.next(arglist__17500);
      var key = cljs.core.first(arglist__17500);
      arglist__17500 = cljs.core.next(arglist__17500);
      var val = cljs.core.first(arglist__17500);
      var kvs = cljs.core.rest(arglist__17500);
      return G__17494__delegate(tcoll, key, val, kvs);
    };
    G__17494.cljs$core$IFn$_invoke$arity$variadic = G__17494__delegate;
    return G__17494;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__17501 = null;
        if (arguments.length > 3) {
          var G__17502__i = 0, G__17502__a = new Array(arguments.length - 3);
          while (G__17502__i < G__17502__a.length) {
            G__17502__a[G__17502__i] = arguments[G__17502__i + 3];
            ++G__17502__i;
          }
          G__17501 = new cljs.core.IndexedSeq(G__17502__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__17501);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__17503__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__17504 = ntcoll;
          var G__17505 = cljs.core.first(ks);
          var G__17506 = cljs.core.next(ks);
          tcoll = G__17504;
          key = G__17505;
          ks = G__17506;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17503 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__17507__i = 0, G__17507__a = new Array(arguments.length - 2);
        while (G__17507__i < G__17507__a.length) {
          G__17507__a[G__17507__i] = arguments[G__17507__i + 2];
          ++G__17507__i;
        }
        ks = new cljs.core.IndexedSeq(G__17507__a, 0);
      }
      return G__17503__delegate.call(this, tcoll, key, ks);
    };
    G__17503.cljs$lang$maxFixedArity = 2;
    G__17503.cljs$lang$applyTo = function(arglist__17508) {
      var tcoll = cljs.core.first(arglist__17508);
      arglist__17508 = cljs.core.next(arglist__17508);
      var key = cljs.core.first(arglist__17508);
      var ks = cljs.core.rest(arglist__17508);
      return G__17503__delegate(tcoll, key, ks);
    };
    G__17503.cljs$core$IFn$_invoke$arity$variadic = G__17503__delegate;
    return G__17503;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__17509 = null;
        if (arguments.length > 2) {
          var G__17510__i = 0, G__17510__a = new Array(arguments.length - 2);
          while (G__17510__i < G__17510__a.length) {
            G__17510__a[G__17510__i] = arguments[G__17510__i + 2];
            ++G__17510__i;
          }
          G__17509 = new cljs.core.IndexedSeq(G__17510__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__17509);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__17511__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__17512 = ntcoll;
          var G__17513 = cljs.core.first(vals);
          var G__17514 = cljs.core.next(vals);
          tcoll = G__17512;
          val = G__17513;
          vals = G__17514;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__17511 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__17515__i = 0, G__17515__a = new Array(arguments.length - 2);
        while (G__17515__i < G__17515__a.length) {
          G__17515__a[G__17515__i] = arguments[G__17515__i + 2];
          ++G__17515__i;
        }
        vals = new cljs.core.IndexedSeq(G__17515__a, 0);
      }
      return G__17511__delegate.call(this, tcoll, val, vals);
    };
    G__17511.cljs$lang$maxFixedArity = 2;
    G__17511.cljs$lang$applyTo = function(arglist__17516) {
      var tcoll = cljs.core.first(arglist__17516);
      arglist__17516 = cljs.core.next(arglist__17516);
      var val = cljs.core.first(arglist__17516);
      var vals = cljs.core.rest(arglist__17516);
      return G__17511__delegate(tcoll, val, vals);
    };
    G__17511.cljs$core$IFn$_invoke$arity$variadic = G__17511__delegate;
    return G__17511;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__17517 = null;
        if (arguments.length > 2) {
          var G__17518__i = 0, G__17518__a = new Array(arguments.length - 2);
          while (G__17518__i < G__17518__a.length) {
            G__17518__a[G__17518__i] = arguments[G__17518__i + 2];
            ++G__17518__i;
          }
          G__17517 = new cljs.core.IndexedSeq(G__17518__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__17517);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4898 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4898);
      } else {
        var G__17729 = a4898;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17729) : f.call(null, G__17729);
      }
    } else {
      var b4899 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4898, b4899);
        } else {
          var G__17730 = a4898;
          var G__17731 = b4899;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17730, G__17731) : f.call(null, G__17730, G__17731);
        }
      } else {
        var c4900 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4898, b4899, c4900);
          } else {
            var G__17732 = a4898;
            var G__17733 = b4899;
            var G__17734 = c4900;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17732, G__17733, G__17734) : f.call(null, G__17732, G__17733, G__17734);
          }
        } else {
          var d4901 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4898, b4899, c4900, d4901);
            } else {
              var G__17735 = a4898;
              var G__17736 = b4899;
              var G__17737 = c4900;
              var G__17738 = d4901;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17735, G__17736, G__17737, G__17738) : f.call(null, G__17735, G__17736, G__17737, G__17738);
            }
          } else {
            var e4902 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4898, b4899, c4900, d4901, e4902);
              } else {
                var G__17739 = a4898;
                var G__17740 = b4899;
                var G__17741 = c4900;
                var G__17742 = d4901;
                var G__17743 = e4902;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__17739, G__17740, G__17741, G__17742, G__17743) : f.call(null, G__17739, G__17740, G__17741, G__17742, G__17743);
              }
            } else {
              var f4903 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4898, b4899, c4900, d4901, e4902, f4903);
                } else {
                  var G__17744 = a4898;
                  var G__17745 = b4899;
                  var G__17746 = c4900;
                  var G__17747 = d4901;
                  var G__17748 = e4902;
                  var G__17749 = f4903;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__17744, G__17745, G__17746, G__17747, G__17748, G__17749) : f.call(null, G__17744, G__17745, G__17746, G__17747, G__17748, G__17749);
                }
              } else {
                var g4904 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4898, b4899, c4900, d4901, e4902, f4903, g4904);
                  } else {
                    var G__17750 = a4898;
                    var G__17751 = b4899;
                    var G__17752 = c4900;
                    var G__17753 = d4901;
                    var G__17754 = e4902;
                    var G__17755 = f4903;
                    var G__17756 = g4904;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__17750, G__17751, G__17752, G__17753, G__17754, G__17755, G__17756) : f.call(null, G__17750, G__17751, G__17752, G__17753, G__17754, G__17755, G__17756);
                  }
                } else {
                  var h4905 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905);
                    } else {
                      var G__17757 = a4898;
                      var G__17758 = b4899;
                      var G__17759 = c4900;
                      var G__17760 = d4901;
                      var G__17761 = e4902;
                      var G__17762 = f4903;
                      var G__17763 = g4904;
                      var G__17764 = h4905;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__17757, G__17758, G__17759, G__17760, G__17761, G__17762, G__17763, G__17764) : f.call(null, G__17757, G__17758, G__17759, G__17760, G__17761, G__17762, G__17763, G__17764);
                    }
                  } else {
                    var i4906 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905, i4906);
                      } else {
                        var G__17765 = a4898;
                        var G__17766 = b4899;
                        var G__17767 = c4900;
                        var G__17768 = d4901;
                        var G__17769 = e4902;
                        var G__17770 = f4903;
                        var G__17771 = g4904;
                        var G__17772 = h4905;
                        var G__17773 = i4906;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__17765, G__17766, G__17767, G__17768, G__17769, G__17770, G__17771, G__17772, G__17773) : f.call(null, G__17765, G__17766, G__17767, G__17768, G__17769, G__17770, G__17771, G__17772, G__17773);
                      }
                    } else {
                      var j4907 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905, i4906, j4907);
                        } else {
                          var G__17774 = a4898;
                          var G__17775 = b4899;
                          var G__17776 = c4900;
                          var G__17777 = d4901;
                          var G__17778 = e4902;
                          var G__17779 = f4903;
                          var G__17780 = g4904;
                          var G__17781 = h4905;
                          var G__17782 = i4906;
                          var G__17783 = j4907;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__17774, G__17775, G__17776, G__17777, G__17778, G__17779, G__17780, G__17781, G__17782, G__17783) : f.call(null, G__17774, G__17775, G__17776, G__17777, G__17778, G__17779, G__17780, G__17781, G__17782, G__17783);
                        }
                      } else {
                        var k4908 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905, i4906, j4907, k4908);
                          } else {
                            var G__17784 = a4898;
                            var G__17785 = b4899;
                            var G__17786 = c4900;
                            var G__17787 = d4901;
                            var G__17788 = e4902;
                            var G__17789 = f4903;
                            var G__17790 = g4904;
                            var G__17791 = h4905;
                            var G__17792 = i4906;
                            var G__17793 = j4907;
                            var G__17794 = k4908;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__17784, G__17785, G__17786, G__17787, G__17788, G__17789, G__17790, G__17791, G__17792, G__17793, G__17794) : f.call(null, G__17784, G__17785, G__17786, G__17787, G__17788, G__17789, G__17790, G__17791, G__17792, G__17793, G__17794);
                          }
                        } else {
                          var l4909 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905, i4906, j4907, k4908, l4909);
                            } else {
                              var G__17795 = a4898;
                              var G__17796 = b4899;
                              var G__17797 = c4900;
                              var G__17798 = d4901;
                              var G__17799 = e4902;
                              var G__17800 = f4903;
                              var G__17801 = g4904;
                              var G__17802 = h4905;
                              var G__17803 = i4906;
                              var G__17804 = j4907;
                              var G__17805 = k4908;
                              var G__17806 = l4909;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__17795, G__17796, G__17797, G__17798, G__17799, G__17800, G__17801, G__17802, G__17803, G__17804, G__17805, G__17806) : f.call(null, G__17795, G__17796, G__17797, G__17798, G__17799, G__17800, G__17801, G__17802, G__17803, G__17804, G__17805, G__17806);
                            }
                          } else {
                            var m4910 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905, i4906, j4907, k4908, l4909, m4910);
                              } else {
                                var G__17807 = a4898;
                                var G__17808 = b4899;
                                var G__17809 = c4900;
                                var G__17810 = d4901;
                                var G__17811 = e4902;
                                var G__17812 = f4903;
                                var G__17813 = g4904;
                                var G__17814 = h4905;
                                var G__17815 = i4906;
                                var G__17816 = j4907;
                                var G__17817 = k4908;
                                var G__17818 = l4909;
                                var G__17819 = m4910;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__17807, G__17808, G__17809, G__17810, G__17811, G__17812, G__17813, G__17814, G__17815, G__17816, G__17817, G__17818, G__17819) : f.call(null, G__17807, G__17808, G__17809, G__17810, G__17811, G__17812, G__17813, G__17814, G__17815, G__17816, G__17817, G__17818, G__17819);
                              }
                            } else {
                              var n4911 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905, i4906, j4907, k4908, l4909, m4910, n4911);
                                } else {
                                  var G__17820 = a4898;
                                  var G__17821 = b4899;
                                  var G__17822 = c4900;
                                  var G__17823 = d4901;
                                  var G__17824 = e4902;
                                  var G__17825 = f4903;
                                  var G__17826 = g4904;
                                  var G__17827 = h4905;
                                  var G__17828 = i4906;
                                  var G__17829 = j4907;
                                  var G__17830 = k4908;
                                  var G__17831 = l4909;
                                  var G__17832 = m4910;
                                  var G__17833 = n4911;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__17820, G__17821, G__17822, G__17823, G__17824, G__17825, G__17826, G__17827, G__17828, G__17829, G__17830, G__17831, G__17832, G__17833) : f.call(null, G__17820, G__17821, G__17822, G__17823, G__17824, G__17825, G__17826, G__17827, G__17828, G__17829, G__17830, G__17831, G__17832, G__17833);
                                }
                              } else {
                                var o4912 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905, i4906, j4907, k4908, l4909, m4910, n4911, o4912);
                                  } else {
                                    var G__17834 = a4898;
                                    var G__17835 = b4899;
                                    var G__17836 = c4900;
                                    var G__17837 = d4901;
                                    var G__17838 = e4902;
                                    var G__17839 = f4903;
                                    var G__17840 = g4904;
                                    var G__17841 = h4905;
                                    var G__17842 = i4906;
                                    var G__17843 = j4907;
                                    var G__17844 = k4908;
                                    var G__17845 = l4909;
                                    var G__17846 = m4910;
                                    var G__17847 = n4911;
                                    var G__17848 = o4912;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__17834, G__17835, G__17836, G__17837, G__17838, G__17839, G__17840, G__17841, G__17842, G__17843, G__17844, G__17845, G__17846, G__17847, G__17848) : f.call(null, G__17834, G__17835, G__17836, G__17837, G__17838, G__17839, G__17840, G__17841, G__17842, G__17843, G__17844, G__17845, G__17846, G__17847, G__17848);
                                  }
                                } else {
                                  var p4913 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905, i4906, j4907, k4908, l4909, m4910, n4911, o4912, p4913);
                                    } else {
                                      var G__17849 = a4898;
                                      var G__17850 = b4899;
                                      var G__17851 = c4900;
                                      var G__17852 = d4901;
                                      var G__17853 = e4902;
                                      var G__17854 = f4903;
                                      var G__17855 = g4904;
                                      var G__17856 = h4905;
                                      var G__17857 = i4906;
                                      var G__17858 = j4907;
                                      var G__17859 = k4908;
                                      var G__17860 = l4909;
                                      var G__17861 = m4910;
                                      var G__17862 = n4911;
                                      var G__17863 = o4912;
                                      var G__17864 = p4913;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__17849, G__17850, G__17851, G__17852, G__17853, G__17854, G__17855, G__17856, G__17857, G__17858, G__17859, G__17860, G__17861, G__17862, G__17863, G__17864) : f.call(null, G__17849, G__17850, G__17851, G__17852, G__17853, G__17854, G__17855, G__17856, G__17857, G__17858, G__17859, G__17860, G__17861, G__17862, G__17863, G__17864);
                                    }
                                  } else {
                                    var q4914 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905, i4906, j4907, k4908, l4909, m4910, n4911, o4912, p4913, q4914);
                                      } else {
                                        var G__17865 = a4898;
                                        var G__17866 = b4899;
                                        var G__17867 = c4900;
                                        var G__17868 = d4901;
                                        var G__17869 = e4902;
                                        var G__17870 = f4903;
                                        var G__17871 = g4904;
                                        var G__17872 = h4905;
                                        var G__17873 = i4906;
                                        var G__17874 = j4907;
                                        var G__17875 = k4908;
                                        var G__17876 = l4909;
                                        var G__17877 = m4910;
                                        var G__17878 = n4911;
                                        var G__17879 = o4912;
                                        var G__17880 = p4913;
                                        var G__17881 = q4914;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__17865, G__17866, G__17867, G__17868, G__17869, G__17870, G__17871, G__17872, G__17873, G__17874, G__17875, G__17876, G__17877, G__17878, G__17879, G__17880, G__17881) : f.call(null, G__17865, G__17866, G__17867, G__17868, G__17869, G__17870, G__17871, G__17872, G__17873, G__17874, G__17875, G__17876, G__17877, G__17878, G__17879, G__17880, G__17881);
                                      }
                                    } else {
                                      var r4915 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905, i4906, j4907, k4908, l4909, m4910, n4911, o4912, p4913, q4914, r4915);
                                        } else {
                                          var G__17882 = a4898;
                                          var G__17883 = b4899;
                                          var G__17884 = c4900;
                                          var G__17885 = d4901;
                                          var G__17886 = e4902;
                                          var G__17887 = f4903;
                                          var G__17888 = g4904;
                                          var G__17889 = h4905;
                                          var G__17890 = i4906;
                                          var G__17891 = j4907;
                                          var G__17892 = k4908;
                                          var G__17893 = l4909;
                                          var G__17894 = m4910;
                                          var G__17895 = n4911;
                                          var G__17896 = o4912;
                                          var G__17897 = p4913;
                                          var G__17898 = q4914;
                                          var G__17899 = r4915;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__17882, G__17883, G__17884, G__17885, G__17886, G__17887, G__17888, G__17889, G__17890, G__17891, G__17892, G__17893, G__17894, G__17895, G__17896, G__17897, G__17898, G__17899) : f.call(null, G__17882, G__17883, G__17884, G__17885, G__17886, G__17887, G__17888, G__17889, G__17890, G__17891, G__17892, G__17893, G__17894, G__17895, G__17896, G__17897, G__17898, G__17899);
                                        }
                                      } else {
                                        var s4916 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905, i4906, j4907, k4908, l4909, m4910, n4911, o4912, p4913, q4914, r4915, s4916);
                                          } else {
                                            var G__17900 = a4898;
                                            var G__17901 = b4899;
                                            var G__17902 = c4900;
                                            var G__17903 = d4901;
                                            var G__17904 = e4902;
                                            var G__17905 = f4903;
                                            var G__17906 = g4904;
                                            var G__17907 = h4905;
                                            var G__17908 = i4906;
                                            var G__17909 = j4907;
                                            var G__17910 = k4908;
                                            var G__17911 = l4909;
                                            var G__17912 = m4910;
                                            var G__17913 = n4911;
                                            var G__17914 = o4912;
                                            var G__17915 = p4913;
                                            var G__17916 = q4914;
                                            var G__17917 = r4915;
                                            var G__17918 = s4916;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__17900, G__17901, G__17902, G__17903, G__17904, G__17905, G__17906, G__17907, G__17908, G__17909, G__17910, G__17911, G__17912, G__17913, G__17914, G__17915, G__17916, G__17917, G__17918) : f.call(null, G__17900, G__17901, G__17902, G__17903, G__17904, G__17905, G__17906, G__17907, G__17908, G__17909, G__17910, G__17911, G__17912, G__17913, G__17914, G__17915, G__17916, G__17917, 
                                            G__17918);
                                          }
                                        } else {
                                          var t4917 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4898, b4899, c4900, d4901, e4902, f4903, g4904, h4905, i4906, j4907, k4908, l4909, m4910, n4911, o4912, p4913, q4914, r4915, s4916, t4917);
                                            } else {
                                              var G__17919 = a4898;
                                              var G__17920 = b4899;
                                              var G__17921 = c4900;
                                              var G__17922 = d4901;
                                              var G__17923 = e4902;
                                              var G__17924 = f4903;
                                              var G__17925 = g4904;
                                              var G__17926 = h4905;
                                              var G__17927 = i4906;
                                              var G__17928 = j4907;
                                              var G__17929 = k4908;
                                              var G__17930 = l4909;
                                              var G__17931 = m4910;
                                              var G__17932 = n4911;
                                              var G__17933 = o4912;
                                              var G__17934 = p4913;
                                              var G__17935 = q4914;
                                              var G__17936 = r4915;
                                              var G__17937 = s4916;
                                              var G__17938 = t4917;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__17919, G__17920, G__17921, G__17922, G__17923, G__17924, G__17925, G__17926, G__17927, G__17928, G__17929, G__17930, G__17931, G__17932, G__17933, G__17934, G__17935, G__17936, G__17937, G__17938) : f.call(null, G__17919, G__17920, G__17921, G__17922, G__17923, G__17924, G__17925, G__17926, G__17927, G__17928, G__17929, G__17930, G__17931, G__17932, G__17933, G__17934, G__17935, 
                                              G__17936, G__17937, G__17938);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__17939__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__17939 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__17940__i = 0, G__17940__a = new Array(arguments.length - 5);
        while (G__17940__i < G__17940__a.length) {
          G__17940__a[G__17940__i] = arguments[G__17940__i + 5];
          ++G__17940__i;
        }
        args = new cljs.core.IndexedSeq(G__17940__a, 0);
      }
      return G__17939__delegate.call(this, f, a, b, c, d, args);
    };
    G__17939.cljs$lang$maxFixedArity = 5;
    G__17939.cljs$lang$applyTo = function(arglist__17941) {
      var f = cljs.core.first(arglist__17941);
      arglist__17941 = cljs.core.next(arglist__17941);
      var a = cljs.core.first(arglist__17941);
      arglist__17941 = cljs.core.next(arglist__17941);
      var b = cljs.core.first(arglist__17941);
      arglist__17941 = cljs.core.next(arglist__17941);
      var c = cljs.core.first(arglist__17941);
      arglist__17941 = cljs.core.next(arglist__17941);
      var d = cljs.core.first(arglist__17941);
      var args = cljs.core.rest(arglist__17941);
      return G__17939__delegate(f, a, b, c, d, args);
    };
    G__17939.cljs$core$IFn$_invoke$arity$variadic = G__17939__delegate;
    return G__17939;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__17942 = null;
        if (arguments.length > 5) {
          var G__17943__i = 0, G__17943__a = new Array(arguments.length - 5);
          while (G__17943__i < G__17943__a.length) {
            G__17943__a[G__17943__i] = arguments[G__17943__i + 5];
            ++G__17943__i;
          }
          G__17942 = new cljs.core.IndexedSeq(G__17943__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__17942);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__17959 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17959) : f.call(null, G__17959);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__17960 = cljs.core.meta(obj);
      var G__17961 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17960, G__17961) : f.call(null, G__17960, G__17961);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__17962 = cljs.core.meta(obj);
      var G__17963 = a;
      var G__17964 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17962, G__17963, G__17964) : f.call(null, G__17962, G__17963, G__17964);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__17965 = cljs.core.meta(obj);
      var G__17966 = a;
      var G__17967 = b;
      var G__17968 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__17965, G__17966, G__17967, G__17968) : f.call(null, G__17965, G__17966, G__17967, G__17968);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__17969 = cljs.core.meta(obj);
      var G__17970 = a;
      var G__17971 = b;
      var G__17972 = c;
      var G__17973 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__17969, G__17970, G__17971, G__17972, G__17973) : f.call(null, G__17969, G__17970, G__17971, G__17972, G__17973);
    }());
  };
  var vary_meta__7 = function() {
    var G__17974__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__17974 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__17975__i = 0, G__17975__a = new Array(arguments.length - 6);
        while (G__17975__i < G__17975__a.length) {
          G__17975__a[G__17975__i] = arguments[G__17975__i + 6];
          ++G__17975__i;
        }
        args = new cljs.core.IndexedSeq(G__17975__a, 0);
      }
      return G__17974__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__17974.cljs$lang$maxFixedArity = 6;
    G__17974.cljs$lang$applyTo = function(arglist__17976) {
      var obj = cljs.core.first(arglist__17976);
      arglist__17976 = cljs.core.next(arglist__17976);
      var f = cljs.core.first(arglist__17976);
      arglist__17976 = cljs.core.next(arglist__17976);
      var a = cljs.core.first(arglist__17976);
      arglist__17976 = cljs.core.next(arglist__17976);
      var b = cljs.core.first(arglist__17976);
      arglist__17976 = cljs.core.next(arglist__17976);
      var c = cljs.core.first(arglist__17976);
      arglist__17976 = cljs.core.next(arglist__17976);
      var d = cljs.core.first(arglist__17976);
      var args = cljs.core.rest(arglist__17976);
      return G__17974__delegate(obj, f, a, b, c, d, args);
    };
    G__17974.cljs$core$IFn$_invoke$arity$variadic = G__17974__delegate;
    return G__17974;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__17977 = null;
        if (arguments.length > 6) {
          var G__17978__i = 0, G__17978__a = new Array(arguments.length - 6);
          while (G__17978__i < G__17978__a.length) {
            G__17978__a[G__17978__i] = arguments[G__17978__i + 6];
            ++G__17978__i;
          }
          G__17977 = new cljs.core.IndexedSeq(G__17978__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__17977);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__17979__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__17979 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__17980__i = 0, G__17980__a = new Array(arguments.length - 2);
        while (G__17980__i < G__17980__a.length) {
          G__17980__a[G__17980__i] = arguments[G__17980__i + 2];
          ++G__17980__i;
        }
        more = new cljs.core.IndexedSeq(G__17980__a, 0);
      }
      return G__17979__delegate.call(this, x, y, more);
    };
    G__17979.cljs$lang$maxFixedArity = 2;
    G__17979.cljs$lang$applyTo = function(arglist__17981) {
      var x = cljs.core.first(arglist__17981);
      arglist__17981 = cljs.core.next(arglist__17981);
      var y = cljs.core.first(arglist__17981);
      var more = cljs.core.rest(arglist__17981);
      return G__17979__delegate(x, y, more);
    };
    G__17979.cljs$core$IFn$_invoke$arity$variadic = G__17979__delegate;
    return G__17979;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__17982 = null;
        if (arguments.length > 2) {
          var G__17983__i = 0, G__17983__a = new Array(arguments.length - 2);
          while (G__17983__i < G__17983__a.length) {
            G__17983__a[G__17983__i] = arguments[G__17983__i + 2];
            ++G__17983__i;
          }
          G__17982 = new cljs.core.IndexedSeq(G__17983__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__17982);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t17987 !== "undefined") {
  } else {
    cljs.core.t17987 = function(nil_iter, meta17988) {
      this.nil_iter = nil_iter;
      this.meta17988 = meta17988;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t17987.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t17987.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t17987.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t17987.prototype.cljs$core$IMeta$_meta$arity$1 = function(_17989) {
      var self__ = this;
      var _17989__$1 = this;
      return self__.meta17988;
    };
    cljs.core.t17987.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_17989, meta17988__$1) {
      var self__ = this;
      var _17989__$1 = this;
      return new cljs.core.t17987(self__.nil_iter, meta17988__$1);
    };
    cljs.core.t17987.cljs$lang$type = true;
    cljs.core.t17987.cljs$lang$ctorStr = "cljs.core/t17987";
    cljs.core.t17987.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
      return cljs.core._write(writer__4555__auto__, "cljs.core/t17987");
    };
    cljs.core.__GT_t17987 = function __GT_t17987(nil_iter__$1, meta17988) {
      return new cljs.core.t17987(nil_iter__$1, meta17988);
    };
  }
  return new cljs.core.t17987(nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3955__auto__ = !(lt.stepper == null);
      if (and__3955__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3955__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__17990 = lt;
        var G__17991 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__17990, G__17991) : self__.xform.call(null, G__17990, G__17991);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__17992 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__17992) : self__.xform.call(null, G__17992);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__17994 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__17994) : xform.call(null, G__17994);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__17996 = cljs.core.next(iters__$1);
        iters__$1 = G__17996;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4854__auto___17997 = self__.iters.length;
  var i_17998 = 0;
  while (true) {
    if (i_17998 < n__4854__auto___17997) {
      self__.nexts[i_17998] = self__.iters[i_17998].next();
      var G__17999 = i_17998 + 1;
      i_17998 = G__17999;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3955__auto__ = !(lt.stepper == null);
      if (and__3955__auto__) {
        return this$.hasNext();
      } else {
        return and__3955__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__17995 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__17995) : self__.xform.call(null, G__17995);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__18004 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__18004) : xform.call(null, G__18004);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__18005_18009 = cljs.core.seq(colls);
  var chunk__18006_18010 = null;
  var count__18007_18011 = 0;
  var i__18008_18012 = 0;
  while (true) {
    if (i__18008_18012 < count__18007_18011) {
      var coll_18013 = chunk__18006_18010.cljs$core$IIndexed$_nth$arity$2(null, i__18008_18012);
      iters.push(cljs.core.iter(coll_18013));
      var G__18014 = seq__18005_18009;
      var G__18015 = chunk__18006_18010;
      var G__18016 = count__18007_18011;
      var G__18017 = i__18008_18012 + 1;
      seq__18005_18009 = G__18014;
      chunk__18006_18010 = G__18015;
      count__18007_18011 = G__18016;
      i__18008_18012 = G__18017;
      continue;
    } else {
      var temp__4126__auto___18018 = cljs.core.seq(seq__18005_18009);
      if (temp__4126__auto___18018) {
        var seq__18005_18019__$1 = temp__4126__auto___18018;
        if (cljs.core.chunked_seq_QMARK_(seq__18005_18019__$1)) {
          var c__4754__auto___18020 = cljs.core.chunk_first(seq__18005_18019__$1);
          var G__18021 = cljs.core.chunk_rest(seq__18005_18019__$1);
          var G__18022 = c__4754__auto___18020;
          var G__18023 = cljs.core.count(c__4754__auto___18020);
          var G__18024 = 0;
          seq__18005_18009 = G__18021;
          chunk__18006_18010 = G__18022;
          count__18007_18011 = G__18023;
          i__18008_18012 = G__18024;
          continue;
        } else {
          var coll_18025 = cljs.core.first(seq__18005_18019__$1);
          iters.push(cljs.core.iter(coll_18025));
          var G__18026 = cljs.core.next(seq__18005_18019__$1);
          var G__18027 = null;
          var G__18028 = 0;
          var G__18029 = 0;
          seq__18005_18009 = G__18026;
          chunk__18006_18010 = G__18027;
          count__18007_18011 = G__18028;
          i__18008_18012 = G__18029;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3967__auto__ = cljs.core.seq(coll);
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__18030__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__18030 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__18031__i = 0, G__18031__a = new Array(arguments.length - 2);
        while (G__18031__i < G__18031__a.length) {
          G__18031__a[G__18031__i] = arguments[G__18031__i + 2];
          ++G__18031__i;
        }
        colls = new cljs.core.IndexedSeq(G__18031__a, 0);
      }
      return G__18030__delegate.call(this, xform, coll, colls);
    };
    G__18030.cljs$lang$maxFixedArity = 2;
    G__18030.cljs$lang$applyTo = function(arglist__18032) {
      var xform = cljs.core.first(arglist__18032);
      arglist__18032 = cljs.core.next(arglist__18032);
      var coll = cljs.core.first(arglist__18032);
      var colls = cljs.core.rest(arglist__18032);
      return G__18030__delegate(xform, coll, colls);
    };
    G__18030.cljs$core$IFn$_invoke$arity$variadic = G__18030__delegate;
    return G__18030;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__18033 = null;
        if (arguments.length > 2) {
          var G__18034__i = 0, G__18034__a = new Array(arguments.length - 2);
          while (G__18034__i < G__18034__a.length) {
            G__18034__a[G__18034__i] = arguments[G__18034__i + 2];
            ++G__18034__i;
          }
          G__18033 = new cljs.core.IndexedSeq(G__18034__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__18033);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__18036 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18036) : pred.call(null, G__18036);
      }())) {
        var G__18037 = pred;
        var G__18038 = cljs.core.next(coll);
        pred = G__18037;
        coll = G__18038;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3967__auto__ = function() {
        var G__18042 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__18042) : pred.call(null, G__18042);
      }();
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        var G__18043 = pred;
        var G__18044 = cljs.core.next(coll);
        pred = G__18043;
        coll = G__18044;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__18051 = null;
    var G__18051__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__18051__1 = function(x) {
      return cljs.core.not(function() {
        var G__18048 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18048) : f.call(null, G__18048);
      }());
    };
    var G__18051__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__18049 = x;
        var G__18050 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18049, G__18050) : f.call(null, G__18049, G__18050);
      }());
    };
    var G__18051__3 = function() {
      var G__18052__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__18052 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__18053__i = 0, G__18053__a = new Array(arguments.length - 2);
          while (G__18053__i < G__18053__a.length) {
            G__18053__a[G__18053__i] = arguments[G__18053__i + 2];
            ++G__18053__i;
          }
          zs = new cljs.core.IndexedSeq(G__18053__a, 0);
        }
        return G__18052__delegate.call(this, x, y, zs);
      };
      G__18052.cljs$lang$maxFixedArity = 2;
      G__18052.cljs$lang$applyTo = function(arglist__18054) {
        var x = cljs.core.first(arglist__18054);
        arglist__18054 = cljs.core.next(arglist__18054);
        var y = cljs.core.first(arglist__18054);
        var zs = cljs.core.rest(arglist__18054);
        return G__18052__delegate(x, y, zs);
      };
      G__18052.cljs$core$IFn$_invoke$arity$variadic = G__18052__delegate;
      return G__18052;
    }();
    G__18051 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__18051__0.call(this);
        case 1:
          return G__18051__1.call(this, x);
        case 2:
          return G__18051__2.call(this, x, y);
        default:
          var G__18055 = null;
          if (arguments.length > 2) {
            var G__18056__i = 0, G__18056__a = new Array(arguments.length - 2);
            while (G__18056__i < G__18056__a.length) {
              G__18056__a[G__18056__i] = arguments[G__18056__i + 2];
              ++G__18056__i;
            }
            G__18055 = new cljs.core.IndexedSeq(G__18056__a, 0);
          }
          return G__18051__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__18055);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__18051.cljs$lang$maxFixedArity = 2;
    G__18051.cljs$lang$applyTo = G__18051__3.cljs$lang$applyTo;
    G__18051.cljs$core$IFn$_invoke$arity$0 = G__18051__0;
    G__18051.cljs$core$IFn$_invoke$arity$1 = G__18051__1;
    G__18051.cljs$core$IFn$_invoke$arity$2 = G__18051__2;
    G__18051.cljs$core$IFn$_invoke$arity$variadic = G__18051__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__18051;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__18057__delegate = function(args) {
      return x;
    };
    var G__18057 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__18058__i = 0, G__18058__a = new Array(arguments.length - 0);
        while (G__18058__i < G__18058__a.length) {
          G__18058__a[G__18058__i] = arguments[G__18058__i + 0];
          ++G__18058__i;
        }
        args = new cljs.core.IndexedSeq(G__18058__a, 0);
      }
      return G__18057__delegate.call(this, args);
    };
    G__18057.cljs$lang$maxFixedArity = 0;
    G__18057.cljs$lang$applyTo = function(arglist__18059) {
      var args = cljs.core.seq(arglist__18059);
      return G__18057__delegate(args);
    };
    G__18057.cljs$core$IFn$_invoke$arity$variadic = G__18057__delegate;
    return G__18057;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__18114 = null;
      var G__18114__0 = function() {
        var G__18087 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18087) : f.call(null, G__18087);
      };
      var G__18114__1 = function(x) {
        var G__18088 = function() {
          var G__18089 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18089) : g.call(null, G__18089);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18088) : f.call(null, G__18088);
      };
      var G__18114__2 = function(x, y) {
        var G__18090 = function() {
          var G__18091 = x;
          var G__18092 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__18091, G__18092) : g.call(null, G__18091, G__18092);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18090) : f.call(null, G__18090);
      };
      var G__18114__3 = function(x, y, z) {
        var G__18093 = function() {
          var G__18094 = x;
          var G__18095 = y;
          var G__18096 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__18094, G__18095, G__18096) : g.call(null, G__18094, G__18095, G__18096);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18093) : f.call(null, G__18093);
      };
      var G__18114__4 = function() {
        var G__18115__delegate = function(x, y, z, args) {
          var G__18097 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18097) : f.call(null, G__18097);
        };
        var G__18115 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18116__i = 0, G__18116__a = new Array(arguments.length - 3);
            while (G__18116__i < G__18116__a.length) {
              G__18116__a[G__18116__i] = arguments[G__18116__i + 3];
              ++G__18116__i;
            }
            args = new cljs.core.IndexedSeq(G__18116__a, 0);
          }
          return G__18115__delegate.call(this, x, y, z, args);
        };
        G__18115.cljs$lang$maxFixedArity = 3;
        G__18115.cljs$lang$applyTo = function(arglist__18117) {
          var x = cljs.core.first(arglist__18117);
          arglist__18117 = cljs.core.next(arglist__18117);
          var y = cljs.core.first(arglist__18117);
          arglist__18117 = cljs.core.next(arglist__18117);
          var z = cljs.core.first(arglist__18117);
          var args = cljs.core.rest(arglist__18117);
          return G__18115__delegate(x, y, z, args);
        };
        G__18115.cljs$core$IFn$_invoke$arity$variadic = G__18115__delegate;
        return G__18115;
      }();
      G__18114 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18114__0.call(this);
          case 1:
            return G__18114__1.call(this, x);
          case 2:
            return G__18114__2.call(this, x, y);
          case 3:
            return G__18114__3.call(this, x, y, z);
          default:
            var G__18118 = null;
            if (arguments.length > 3) {
              var G__18119__i = 0, G__18119__a = new Array(arguments.length - 3);
              while (G__18119__i < G__18119__a.length) {
                G__18119__a[G__18119__i] = arguments[G__18119__i + 3];
                ++G__18119__i;
              }
              G__18118 = new cljs.core.IndexedSeq(G__18119__a, 0);
            }
            return G__18114__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18118);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18114.cljs$lang$maxFixedArity = 3;
      G__18114.cljs$lang$applyTo = G__18114__4.cljs$lang$applyTo;
      G__18114.cljs$core$IFn$_invoke$arity$0 = G__18114__0;
      G__18114.cljs$core$IFn$_invoke$arity$1 = G__18114__1;
      G__18114.cljs$core$IFn$_invoke$arity$2 = G__18114__2;
      G__18114.cljs$core$IFn$_invoke$arity$3 = G__18114__3;
      G__18114.cljs$core$IFn$_invoke$arity$variadic = G__18114__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18114;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__18120 = null;
      var G__18120__0 = function() {
        var G__18098 = function() {
          var G__18099 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18099) : g.call(null, G__18099);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18098) : f.call(null, G__18098);
      };
      var G__18120__1 = function(x) {
        var G__18100 = function() {
          var G__18101 = function() {
            var G__18102 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__18102) : h.call(null, G__18102);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18101) : g.call(null, G__18101);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18100) : f.call(null, G__18100);
      };
      var G__18120__2 = function(x, y) {
        var G__18103 = function() {
          var G__18104 = function() {
            var G__18105 = x;
            var G__18106 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__18105, G__18106) : h.call(null, G__18105, G__18106);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18104) : g.call(null, G__18104);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18103) : f.call(null, G__18103);
      };
      var G__18120__3 = function(x, y, z) {
        var G__18107 = function() {
          var G__18108 = function() {
            var G__18109 = x;
            var G__18110 = y;
            var G__18111 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__18109, G__18110, G__18111) : h.call(null, G__18109, G__18110, G__18111);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18108) : g.call(null, G__18108);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18107) : f.call(null, G__18107);
      };
      var G__18120__4 = function() {
        var G__18121__delegate = function(x, y, z, args) {
          var G__18112 = function() {
            var G__18113 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__18113) : g.call(null, G__18113);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18112) : f.call(null, G__18112);
        };
        var G__18121 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18122__i = 0, G__18122__a = new Array(arguments.length - 3);
            while (G__18122__i < G__18122__a.length) {
              G__18122__a[G__18122__i] = arguments[G__18122__i + 3];
              ++G__18122__i;
            }
            args = new cljs.core.IndexedSeq(G__18122__a, 0);
          }
          return G__18121__delegate.call(this, x, y, z, args);
        };
        G__18121.cljs$lang$maxFixedArity = 3;
        G__18121.cljs$lang$applyTo = function(arglist__18123) {
          var x = cljs.core.first(arglist__18123);
          arglist__18123 = cljs.core.next(arglist__18123);
          var y = cljs.core.first(arglist__18123);
          arglist__18123 = cljs.core.next(arglist__18123);
          var z = cljs.core.first(arglist__18123);
          var args = cljs.core.rest(arglist__18123);
          return G__18121__delegate(x, y, z, args);
        };
        G__18121.cljs$core$IFn$_invoke$arity$variadic = G__18121__delegate;
        return G__18121;
      }();
      G__18120 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18120__0.call(this);
          case 1:
            return G__18120__1.call(this, x);
          case 2:
            return G__18120__2.call(this, x, y);
          case 3:
            return G__18120__3.call(this, x, y, z);
          default:
            var G__18124 = null;
            if (arguments.length > 3) {
              var G__18125__i = 0, G__18125__a = new Array(arguments.length - 3);
              while (G__18125__i < G__18125__a.length) {
                G__18125__a[G__18125__i] = arguments[G__18125__i + 3];
                ++G__18125__i;
              }
              G__18124 = new cljs.core.IndexedSeq(G__18125__a, 0);
            }
            return G__18120__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18124);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18120.cljs$lang$maxFixedArity = 3;
      G__18120.cljs$lang$applyTo = G__18120__4.cljs$lang$applyTo;
      G__18120.cljs$core$IFn$_invoke$arity$0 = G__18120__0;
      G__18120.cljs$core$IFn$_invoke$arity$1 = G__18120__1;
      G__18120.cljs$core$IFn$_invoke$arity$2 = G__18120__2;
      G__18120.cljs$core$IFn$_invoke$arity$3 = G__18120__3;
      G__18120.cljs$core$IFn$_invoke$arity$variadic = G__18120__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18120;
    }();
  };
  var comp__4 = function() {
    var G__18126__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__18127__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__18128 = cljs.core.first(fs__$2).call(null, ret);
                var G__18129 = cljs.core.next(fs__$2);
                ret = G__18128;
                fs__$2 = G__18129;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__18127 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__18130__i = 0, G__18130__a = new Array(arguments.length - 0);
              while (G__18130__i < G__18130__a.length) {
                G__18130__a[G__18130__i] = arguments[G__18130__i + 0];
                ++G__18130__i;
              }
              args = new cljs.core.IndexedSeq(G__18130__a, 0);
            }
            return G__18127__delegate.call(this, args);
          };
          G__18127.cljs$lang$maxFixedArity = 0;
          G__18127.cljs$lang$applyTo = function(arglist__18131) {
            var args = cljs.core.seq(arglist__18131);
            return G__18127__delegate(args);
          };
          G__18127.cljs$core$IFn$_invoke$arity$variadic = G__18127__delegate;
          return G__18127;
        }();
      }(fs__$1);
    };
    var G__18126 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__18132__i = 0, G__18132__a = new Array(arguments.length - 3);
        while (G__18132__i < G__18132__a.length) {
          G__18132__a[G__18132__i] = arguments[G__18132__i + 3];
          ++G__18132__i;
        }
        fs = new cljs.core.IndexedSeq(G__18132__a, 0);
      }
      return G__18126__delegate.call(this, f1, f2, f3, fs);
    };
    G__18126.cljs$lang$maxFixedArity = 3;
    G__18126.cljs$lang$applyTo = function(arglist__18133) {
      var f1 = cljs.core.first(arglist__18133);
      arglist__18133 = cljs.core.next(arglist__18133);
      var f2 = cljs.core.first(arglist__18133);
      arglist__18133 = cljs.core.next(arglist__18133);
      var f3 = cljs.core.first(arglist__18133);
      var fs = cljs.core.rest(arglist__18133);
      return G__18126__delegate(f1, f2, f3, fs);
    };
    G__18126.cljs$core$IFn$_invoke$arity$variadic = G__18126__delegate;
    return G__18126;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__18134 = null;
        if (arguments.length > 3) {
          var G__18135__i = 0, G__18135__a = new Array(arguments.length - 3);
          while (G__18135__i < G__18135__a.length) {
            G__18135__a[G__18135__i] = arguments[G__18135__i + 3];
            ++G__18135__i;
          }
          G__18134 = new cljs.core.IndexedSeq(G__18135__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__18134);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__18220 = null;
      var G__18220__0 = function() {
        var G__18178 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18178) : f.call(null, G__18178);
      };
      var G__18220__1 = function(x) {
        var G__18179 = arg1;
        var G__18180 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18179, G__18180) : f.call(null, G__18179, G__18180);
      };
      var G__18220__2 = function(x, y) {
        var G__18181 = arg1;
        var G__18182 = x;
        var G__18183 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18181, G__18182, G__18183) : f.call(null, G__18181, G__18182, G__18183);
      };
      var G__18220__3 = function(x, y, z) {
        var G__18184 = arg1;
        var G__18185 = x;
        var G__18186 = y;
        var G__18187 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18184, G__18185, G__18186, G__18187) : f.call(null, G__18184, G__18185, G__18186, G__18187);
      };
      var G__18220__4 = function() {
        var G__18221__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__18221 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18222__i = 0, G__18222__a = new Array(arguments.length - 3);
            while (G__18222__i < G__18222__a.length) {
              G__18222__a[G__18222__i] = arguments[G__18222__i + 3];
              ++G__18222__i;
            }
            args = new cljs.core.IndexedSeq(G__18222__a, 0);
          }
          return G__18221__delegate.call(this, x, y, z, args);
        };
        G__18221.cljs$lang$maxFixedArity = 3;
        G__18221.cljs$lang$applyTo = function(arglist__18223) {
          var x = cljs.core.first(arglist__18223);
          arglist__18223 = cljs.core.next(arglist__18223);
          var y = cljs.core.first(arglist__18223);
          arglist__18223 = cljs.core.next(arglist__18223);
          var z = cljs.core.first(arglist__18223);
          var args = cljs.core.rest(arglist__18223);
          return G__18221__delegate(x, y, z, args);
        };
        G__18221.cljs$core$IFn$_invoke$arity$variadic = G__18221__delegate;
        return G__18221;
      }();
      G__18220 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18220__0.call(this);
          case 1:
            return G__18220__1.call(this, x);
          case 2:
            return G__18220__2.call(this, x, y);
          case 3:
            return G__18220__3.call(this, x, y, z);
          default:
            var G__18224 = null;
            if (arguments.length > 3) {
              var G__18225__i = 0, G__18225__a = new Array(arguments.length - 3);
              while (G__18225__i < G__18225__a.length) {
                G__18225__a[G__18225__i] = arguments[G__18225__i + 3];
                ++G__18225__i;
              }
              G__18224 = new cljs.core.IndexedSeq(G__18225__a, 0);
            }
            return G__18220__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18224);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18220.cljs$lang$maxFixedArity = 3;
      G__18220.cljs$lang$applyTo = G__18220__4.cljs$lang$applyTo;
      G__18220.cljs$core$IFn$_invoke$arity$0 = G__18220__0;
      G__18220.cljs$core$IFn$_invoke$arity$1 = G__18220__1;
      G__18220.cljs$core$IFn$_invoke$arity$2 = G__18220__2;
      G__18220.cljs$core$IFn$_invoke$arity$3 = G__18220__3;
      G__18220.cljs$core$IFn$_invoke$arity$variadic = G__18220__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18220;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__18226 = null;
      var G__18226__0 = function() {
        var G__18188 = arg1;
        var G__18189 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18188, G__18189) : f.call(null, G__18188, G__18189);
      };
      var G__18226__1 = function(x) {
        var G__18190 = arg1;
        var G__18191 = arg2;
        var G__18192 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18190, G__18191, G__18192) : f.call(null, G__18190, G__18191, G__18192);
      };
      var G__18226__2 = function(x, y) {
        var G__18193 = arg1;
        var G__18194 = arg2;
        var G__18195 = x;
        var G__18196 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18193, G__18194, G__18195, G__18196) : f.call(null, G__18193, G__18194, G__18195, G__18196);
      };
      var G__18226__3 = function(x, y, z) {
        var G__18197 = arg1;
        var G__18198 = arg2;
        var G__18199 = x;
        var G__18200 = y;
        var G__18201 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18197, G__18198, G__18199, G__18200, G__18201) : f.call(null, G__18197, G__18198, G__18199, G__18200, G__18201);
      };
      var G__18226__4 = function() {
        var G__18227__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__18227 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18228__i = 0, G__18228__a = new Array(arguments.length - 3);
            while (G__18228__i < G__18228__a.length) {
              G__18228__a[G__18228__i] = arguments[G__18228__i + 3];
              ++G__18228__i;
            }
            args = new cljs.core.IndexedSeq(G__18228__a, 0);
          }
          return G__18227__delegate.call(this, x, y, z, args);
        };
        G__18227.cljs$lang$maxFixedArity = 3;
        G__18227.cljs$lang$applyTo = function(arglist__18229) {
          var x = cljs.core.first(arglist__18229);
          arglist__18229 = cljs.core.next(arglist__18229);
          var y = cljs.core.first(arglist__18229);
          arglist__18229 = cljs.core.next(arglist__18229);
          var z = cljs.core.first(arglist__18229);
          var args = cljs.core.rest(arglist__18229);
          return G__18227__delegate(x, y, z, args);
        };
        G__18227.cljs$core$IFn$_invoke$arity$variadic = G__18227__delegate;
        return G__18227;
      }();
      G__18226 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18226__0.call(this);
          case 1:
            return G__18226__1.call(this, x);
          case 2:
            return G__18226__2.call(this, x, y);
          case 3:
            return G__18226__3.call(this, x, y, z);
          default:
            var G__18230 = null;
            if (arguments.length > 3) {
              var G__18231__i = 0, G__18231__a = new Array(arguments.length - 3);
              while (G__18231__i < G__18231__a.length) {
                G__18231__a[G__18231__i] = arguments[G__18231__i + 3];
                ++G__18231__i;
              }
              G__18230 = new cljs.core.IndexedSeq(G__18231__a, 0);
            }
            return G__18226__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18230);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18226.cljs$lang$maxFixedArity = 3;
      G__18226.cljs$lang$applyTo = G__18226__4.cljs$lang$applyTo;
      G__18226.cljs$core$IFn$_invoke$arity$0 = G__18226__0;
      G__18226.cljs$core$IFn$_invoke$arity$1 = G__18226__1;
      G__18226.cljs$core$IFn$_invoke$arity$2 = G__18226__2;
      G__18226.cljs$core$IFn$_invoke$arity$3 = G__18226__3;
      G__18226.cljs$core$IFn$_invoke$arity$variadic = G__18226__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18226;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__18232 = null;
      var G__18232__0 = function() {
        var G__18202 = arg1;
        var G__18203 = arg2;
        var G__18204 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18202, G__18203, G__18204) : f.call(null, G__18202, G__18203, G__18204);
      };
      var G__18232__1 = function(x) {
        var G__18205 = arg1;
        var G__18206 = arg2;
        var G__18207 = arg3;
        var G__18208 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18205, G__18206, G__18207, G__18208) : f.call(null, G__18205, G__18206, G__18207, G__18208);
      };
      var G__18232__2 = function(x, y) {
        var G__18209 = arg1;
        var G__18210 = arg2;
        var G__18211 = arg3;
        var G__18212 = x;
        var G__18213 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__18209, G__18210, G__18211, G__18212, G__18213) : f.call(null, G__18209, G__18210, G__18211, G__18212, G__18213);
      };
      var G__18232__3 = function(x, y, z) {
        var G__18214 = arg1;
        var G__18215 = arg2;
        var G__18216 = arg3;
        var G__18217 = x;
        var G__18218 = y;
        var G__18219 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__18214, G__18215, G__18216, G__18217, G__18218, G__18219) : f.call(null, G__18214, G__18215, G__18216, G__18217, G__18218, G__18219);
      };
      var G__18232__4 = function() {
        var G__18233__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__18233 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18234__i = 0, G__18234__a = new Array(arguments.length - 3);
            while (G__18234__i < G__18234__a.length) {
              G__18234__a[G__18234__i] = arguments[G__18234__i + 3];
              ++G__18234__i;
            }
            args = new cljs.core.IndexedSeq(G__18234__a, 0);
          }
          return G__18233__delegate.call(this, x, y, z, args);
        };
        G__18233.cljs$lang$maxFixedArity = 3;
        G__18233.cljs$lang$applyTo = function(arglist__18235) {
          var x = cljs.core.first(arglist__18235);
          arglist__18235 = cljs.core.next(arglist__18235);
          var y = cljs.core.first(arglist__18235);
          arglist__18235 = cljs.core.next(arglist__18235);
          var z = cljs.core.first(arglist__18235);
          var args = cljs.core.rest(arglist__18235);
          return G__18233__delegate(x, y, z, args);
        };
        G__18233.cljs$core$IFn$_invoke$arity$variadic = G__18233__delegate;
        return G__18233;
      }();
      G__18232 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__18232__0.call(this);
          case 1:
            return G__18232__1.call(this, x);
          case 2:
            return G__18232__2.call(this, x, y);
          case 3:
            return G__18232__3.call(this, x, y, z);
          default:
            var G__18236 = null;
            if (arguments.length > 3) {
              var G__18237__i = 0, G__18237__a = new Array(arguments.length - 3);
              while (G__18237__i < G__18237__a.length) {
                G__18237__a[G__18237__i] = arguments[G__18237__i + 3];
                ++G__18237__i;
              }
              G__18236 = new cljs.core.IndexedSeq(G__18237__a, 0);
            }
            return G__18232__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18236);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18232.cljs$lang$maxFixedArity = 3;
      G__18232.cljs$lang$applyTo = G__18232__4.cljs$lang$applyTo;
      G__18232.cljs$core$IFn$_invoke$arity$0 = G__18232__0;
      G__18232.cljs$core$IFn$_invoke$arity$1 = G__18232__1;
      G__18232.cljs$core$IFn$_invoke$arity$2 = G__18232__2;
      G__18232.cljs$core$IFn$_invoke$arity$3 = G__18232__3;
      G__18232.cljs$core$IFn$_invoke$arity$variadic = G__18232__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18232;
    }();
  };
  var partial__5 = function() {
    var G__18238__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__18239__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__18239 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__18240__i = 0, G__18240__a = new Array(arguments.length - 0);
            while (G__18240__i < G__18240__a.length) {
              G__18240__a[G__18240__i] = arguments[G__18240__i + 0];
              ++G__18240__i;
            }
            args = new cljs.core.IndexedSeq(G__18240__a, 0);
          }
          return G__18239__delegate.call(this, args);
        };
        G__18239.cljs$lang$maxFixedArity = 0;
        G__18239.cljs$lang$applyTo = function(arglist__18241) {
          var args = cljs.core.seq(arglist__18241);
          return G__18239__delegate(args);
        };
        G__18239.cljs$core$IFn$_invoke$arity$variadic = G__18239__delegate;
        return G__18239;
      }();
    };
    var G__18238 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__18242__i = 0, G__18242__a = new Array(arguments.length - 4);
        while (G__18242__i < G__18242__a.length) {
          G__18242__a[G__18242__i] = arguments[G__18242__i + 4];
          ++G__18242__i;
        }
        more = new cljs.core.IndexedSeq(G__18242__a, 0);
      }
      return G__18238__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__18238.cljs$lang$maxFixedArity = 4;
    G__18238.cljs$lang$applyTo = function(arglist__18243) {
      var f = cljs.core.first(arglist__18243);
      arglist__18243 = cljs.core.next(arglist__18243);
      var arg1 = cljs.core.first(arglist__18243);
      arglist__18243 = cljs.core.next(arglist__18243);
      var arg2 = cljs.core.first(arglist__18243);
      arglist__18243 = cljs.core.next(arglist__18243);
      var arg3 = cljs.core.first(arglist__18243);
      var more = cljs.core.rest(arglist__18243);
      return G__18238__delegate(f, arg1, arg2, arg3, more);
    };
    G__18238.cljs$core$IFn$_invoke$arity$variadic = G__18238__delegate;
    return G__18238;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__18244 = null;
        if (arguments.length > 4) {
          var G__18245__i = 0, G__18245__a = new Array(arguments.length - 4);
          while (G__18245__i < G__18245__a.length) {
            G__18245__a[G__18245__i] = arguments[G__18245__i + 4];
            ++G__18245__i;
          }
          G__18244 = new cljs.core.IndexedSeq(G__18245__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__18244);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__18278 = null;
      var G__18278__1 = function(a) {
        var G__18262 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18262) : f.call(null, G__18262);
      };
      var G__18278__2 = function(a, b) {
        var G__18263 = a == null ? x : a;
        var G__18264 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18263, G__18264) : f.call(null, G__18263, G__18264);
      };
      var G__18278__3 = function(a, b, c) {
        var G__18265 = a == null ? x : a;
        var G__18266 = b;
        var G__18267 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18265, G__18266, G__18267) : f.call(null, G__18265, G__18266, G__18267);
      };
      var G__18278__4 = function() {
        var G__18279__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__18279 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__18280__i = 0, G__18280__a = new Array(arguments.length - 3);
            while (G__18280__i < G__18280__a.length) {
              G__18280__a[G__18280__i] = arguments[G__18280__i + 3];
              ++G__18280__i;
            }
            ds = new cljs.core.IndexedSeq(G__18280__a, 0);
          }
          return G__18279__delegate.call(this, a, b, c, ds);
        };
        G__18279.cljs$lang$maxFixedArity = 3;
        G__18279.cljs$lang$applyTo = function(arglist__18281) {
          var a = cljs.core.first(arglist__18281);
          arglist__18281 = cljs.core.next(arglist__18281);
          var b = cljs.core.first(arglist__18281);
          arglist__18281 = cljs.core.next(arglist__18281);
          var c = cljs.core.first(arglist__18281);
          var ds = cljs.core.rest(arglist__18281);
          return G__18279__delegate(a, b, c, ds);
        };
        G__18279.cljs$core$IFn$_invoke$arity$variadic = G__18279__delegate;
        return G__18279;
      }();
      G__18278 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__18278__1.call(this, a);
          case 2:
            return G__18278__2.call(this, a, b);
          case 3:
            return G__18278__3.call(this, a, b, c);
          default:
            var G__18282 = null;
            if (arguments.length > 3) {
              var G__18283__i = 0, G__18283__a = new Array(arguments.length - 3);
              while (G__18283__i < G__18283__a.length) {
                G__18283__a[G__18283__i] = arguments[G__18283__i + 3];
                ++G__18283__i;
              }
              G__18282 = new cljs.core.IndexedSeq(G__18283__a, 0);
            }
            return G__18278__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__18282);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18278.cljs$lang$maxFixedArity = 3;
      G__18278.cljs$lang$applyTo = G__18278__4.cljs$lang$applyTo;
      G__18278.cljs$core$IFn$_invoke$arity$1 = G__18278__1;
      G__18278.cljs$core$IFn$_invoke$arity$2 = G__18278__2;
      G__18278.cljs$core$IFn$_invoke$arity$3 = G__18278__3;
      G__18278.cljs$core$IFn$_invoke$arity$variadic = G__18278__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18278;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__18284 = null;
      var G__18284__2 = function(a, b) {
        var G__18268 = a == null ? x : a;
        var G__18269 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18268, G__18269) : f.call(null, G__18268, G__18269);
      };
      var G__18284__3 = function(a, b, c) {
        var G__18270 = a == null ? x : a;
        var G__18271 = b == null ? y : b;
        var G__18272 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18270, G__18271, G__18272) : f.call(null, G__18270, G__18271, G__18272);
      };
      var G__18284__4 = function() {
        var G__18285__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__18285 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__18286__i = 0, G__18286__a = new Array(arguments.length - 3);
            while (G__18286__i < G__18286__a.length) {
              G__18286__a[G__18286__i] = arguments[G__18286__i + 3];
              ++G__18286__i;
            }
            ds = new cljs.core.IndexedSeq(G__18286__a, 0);
          }
          return G__18285__delegate.call(this, a, b, c, ds);
        };
        G__18285.cljs$lang$maxFixedArity = 3;
        G__18285.cljs$lang$applyTo = function(arglist__18287) {
          var a = cljs.core.first(arglist__18287);
          arglist__18287 = cljs.core.next(arglist__18287);
          var b = cljs.core.first(arglist__18287);
          arglist__18287 = cljs.core.next(arglist__18287);
          var c = cljs.core.first(arglist__18287);
          var ds = cljs.core.rest(arglist__18287);
          return G__18285__delegate(a, b, c, ds);
        };
        G__18285.cljs$core$IFn$_invoke$arity$variadic = G__18285__delegate;
        return G__18285;
      }();
      G__18284 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__18284__2.call(this, a, b);
          case 3:
            return G__18284__3.call(this, a, b, c);
          default:
            var G__18288 = null;
            if (arguments.length > 3) {
              var G__18289__i = 0, G__18289__a = new Array(arguments.length - 3);
              while (G__18289__i < G__18289__a.length) {
                G__18289__a[G__18289__i] = arguments[G__18289__i + 3];
                ++G__18289__i;
              }
              G__18288 = new cljs.core.IndexedSeq(G__18289__a, 0);
            }
            return G__18284__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__18288);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18284.cljs$lang$maxFixedArity = 3;
      G__18284.cljs$lang$applyTo = G__18284__4.cljs$lang$applyTo;
      G__18284.cljs$core$IFn$_invoke$arity$2 = G__18284__2;
      G__18284.cljs$core$IFn$_invoke$arity$3 = G__18284__3;
      G__18284.cljs$core$IFn$_invoke$arity$variadic = G__18284__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18284;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__18290 = null;
      var G__18290__2 = function(a, b) {
        var G__18273 = a == null ? x : a;
        var G__18274 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18273, G__18274) : f.call(null, G__18273, G__18274);
      };
      var G__18290__3 = function(a, b, c) {
        var G__18275 = a == null ? x : a;
        var G__18276 = b == null ? y : b;
        var G__18277 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18275, G__18276, G__18277) : f.call(null, G__18275, G__18276, G__18277);
      };
      var G__18290__4 = function() {
        var G__18291__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__18291 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__18292__i = 0, G__18292__a = new Array(arguments.length - 3);
            while (G__18292__i < G__18292__a.length) {
              G__18292__a[G__18292__i] = arguments[G__18292__i + 3];
              ++G__18292__i;
            }
            ds = new cljs.core.IndexedSeq(G__18292__a, 0);
          }
          return G__18291__delegate.call(this, a, b, c, ds);
        };
        G__18291.cljs$lang$maxFixedArity = 3;
        G__18291.cljs$lang$applyTo = function(arglist__18293) {
          var a = cljs.core.first(arglist__18293);
          arglist__18293 = cljs.core.next(arglist__18293);
          var b = cljs.core.first(arglist__18293);
          arglist__18293 = cljs.core.next(arglist__18293);
          var c = cljs.core.first(arglist__18293);
          var ds = cljs.core.rest(arglist__18293);
          return G__18291__delegate(a, b, c, ds);
        };
        G__18291.cljs$core$IFn$_invoke$arity$variadic = G__18291__delegate;
        return G__18291;
      }();
      G__18290 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__18290__2.call(this, a, b);
          case 3:
            return G__18290__3.call(this, a, b, c);
          default:
            var G__18294 = null;
            if (arguments.length > 3) {
              var G__18295__i = 0, G__18295__a = new Array(arguments.length - 3);
              while (G__18295__i < G__18295__a.length) {
                G__18295__a[G__18295__i] = arguments[G__18295__i + 3];
                ++G__18295__i;
              }
              G__18294 = new cljs.core.IndexedSeq(G__18295__a, 0);
            }
            return G__18290__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__18294);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__18290.cljs$lang$maxFixedArity = 3;
      G__18290.cljs$lang$applyTo = G__18290__4.cljs$lang$applyTo;
      G__18290.cljs$core$IFn$_invoke$arity$2 = G__18290__2;
      G__18290.cljs$core$IFn$_invoke$arity$3 = G__18290__3;
      G__18290.cljs$core$IFn$_invoke$arity$variadic = G__18290__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__18290;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__18326 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__18326) : cljs.core.volatile_BANG_.call(null, G__18326);
      }();
      return function(i) {
        return function() {
          var G__18356 = null;
          var G__18356__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__18356__1 = function(result) {
            var G__18327 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18327) : rf.call(null, G__18327);
          };
          var G__18356__2 = function(result, input) {
            var G__18328 = result;
            var G__18329 = function() {
              var G__18330 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__18331 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18330, G__18331) : f.call(null, G__18330, G__18331);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18328, G__18329) : rf.call(null, G__18328, G__18329);
          };
          G__18356 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18356__0.call(this);
              case 1:
                return G__18356__1.call(this, result);
              case 2:
                return G__18356__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18356.cljs$core$IFn$_invoke$arity$0 = G__18356__0;
          G__18356.cljs$core$IFn$_invoke$arity$1 = G__18356__1;
          G__18356.cljs$core$IFn$_invoke$arity$2 = G__18356__2;
          return G__18356;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4854__auto___18357 = size;
            var i_18358 = 0;
            while (true) {
              if (i_18358 < n__4854__auto___18357) {
                cljs.core.chunk_append(b, function() {
                  var G__18352 = idx + i_18358;
                  var G__18353 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_18358);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18352, G__18353) : f.call(null, G__18352, G__18353);
                }());
                var G__18359 = i_18358 + 1;
                i_18358 = G__18359;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__18354 = idx;
              var G__18355 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18354, G__18355) : f.call(null, G__18354, G__18355);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__18378 = null;
        var G__18378__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__18378__1 = function(result) {
          var G__18372 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18372) : rf.call(null, G__18372);
        };
        var G__18378__2 = function(result, input) {
          var v = function() {
            var G__18373 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18373) : f.call(null, G__18373);
          }();
          if (v == null) {
            return result;
          } else {
            var G__18374 = result;
            var G__18375 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18374, G__18375) : rf.call(null, G__18374, G__18375);
          }
        };
        G__18378 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__18378__0.call(this);
            case 1:
              return G__18378__1.call(this, result);
            case 2:
              return G__18378__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__18378.cljs$core$IFn$_invoke$arity$0 = G__18378__0;
        G__18378.cljs$core$IFn$_invoke$arity$1 = G__18378__1;
        G__18378.cljs$core$IFn$_invoke$arity$2 = G__18378__2;
        return G__18378;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4854__auto___18379 = size;
          var i_18380 = 0;
          while (true) {
            if (i_18380 < n__4854__auto___18379) {
              var x_18381 = function() {
                var G__18376 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_18380);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18376) : f.call(null, G__18376);
              }();
              if (x_18381 == null) {
              } else {
                cljs.core.chunk_append(b, x_18381);
              }
              var G__18382 = i_18380 + 1;
              i_18380 = G__18382;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__18377 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18377) : f.call(null, G__18377);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__18383 = this$__$1;
  return goog.getUid(G__18383);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__18384 = cljs.core.seq(self__.watches);
  var chunk__18385 = null;
  var count__18386 = 0;
  var i__18387 = 0;
  while (true) {
    if (i__18387 < count__18386) {
      var vec__18388 = chunk__18385.cljs$core$IIndexed$_nth$arity$2(null, i__18387);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18388, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18388, 1, null);
      var G__18389_18398 = key;
      var G__18390_18399 = this$__$1;
      var G__18391_18400 = oldval;
      var G__18392_18401 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18389_18398, G__18390_18399, G__18391_18400, G__18392_18401) : f.call(null, G__18389_18398, G__18390_18399, G__18391_18400, G__18392_18401);
      var G__18402 = seq__18384;
      var G__18403 = chunk__18385;
      var G__18404 = count__18386;
      var G__18405 = i__18387 + 1;
      seq__18384 = G__18402;
      chunk__18385 = G__18403;
      count__18386 = G__18404;
      i__18387 = G__18405;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__18384);
      if (temp__4126__auto__) {
        var seq__18384__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__18384__$1)) {
          var c__4754__auto__ = cljs.core.chunk_first(seq__18384__$1);
          var G__18406 = cljs.core.chunk_rest(seq__18384__$1);
          var G__18407 = c__4754__auto__;
          var G__18408 = cljs.core.count(c__4754__auto__);
          var G__18409 = 0;
          seq__18384 = G__18406;
          chunk__18385 = G__18407;
          count__18386 = G__18408;
          i__18387 = G__18409;
          continue;
        } else {
          var vec__18393 = cljs.core.first(seq__18384__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18393, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__18393, 1, null);
          var G__18394_18410 = key;
          var G__18395_18411 = this$__$1;
          var G__18396_18412 = oldval;
          var G__18397_18413 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__18394_18410, G__18395_18411, G__18396_18412, G__18397_18413) : f.call(null, G__18394_18410, G__18395_18411, G__18396_18412, G__18397_18413);
          var G__18414 = cljs.core.next(seq__18384__$1);
          var G__18415 = null;
          var G__18416 = 0;
          var G__18417 = 0;
          seq__18384 = G__18414;
          chunk__18385 = G__18415;
          count__18386 = G__18416;
          i__18387 = G__18417;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__18421__delegate = function(x, p__18418) {
      var map__18420 = p__18418;
      var map__18420__$1 = cljs.core.seq_QMARK_(map__18420) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__18420) : map__18420;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__18420__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__18420__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__18421 = function(x, var_args) {
      var p__18418 = null;
      if (arguments.length > 1) {
        var G__18422__i = 0, G__18422__a = new Array(arguments.length - 1);
        while (G__18422__i < G__18422__a.length) {
          G__18422__a[G__18422__i] = arguments[G__18422__i + 1];
          ++G__18422__i;
        }
        p__18418 = new cljs.core.IndexedSeq(G__18422__a, 0);
      }
      return G__18421__delegate.call(this, x, p__18418);
    };
    G__18421.cljs$lang$maxFixedArity = 1;
    G__18421.cljs$lang$applyTo = function(arglist__18423) {
      var x = cljs.core.first(arglist__18423);
      var p__18418 = cljs.core.rest(arglist__18423);
      return G__18421__delegate(x, p__18418);
    };
    G__18421.cljs$core$IFn$_invoke$arity$variadic = G__18421__delegate;
    return G__18421;
  }();
  atom = function(x, var_args) {
    var p__18418 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__18424 = null;
        if (arguments.length > 1) {
          var G__18425__i = 0, G__18425__a = new Array(arguments.length - 1);
          while (G__18425__i < G__18425__a.length) {
            G__18425__a[G__18425__i] = arguments[G__18425__i + 1];
            ++G__18425__i;
          }
          G__18424 = new cljs.core.IndexedSeq(G__18425__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__18424);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__18428 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__18428) : validate.call(null, G__18428);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__18429 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__18429) : cljs.core.pr_str.call(null, G__18429);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__18436 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__18436) : f.call(null, G__18436);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__18437 = a.state;
        var G__18438 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18437, G__18438) : f.call(null, G__18437, G__18438);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__18439 = a.state;
        var G__18440 = x;
        var G__18441 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__18439, G__18440, G__18441) : f.call(null, G__18439, G__18440, G__18441);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__18442__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__18442 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__18443__i = 0, G__18443__a = new Array(arguments.length - 4);
        while (G__18443__i < G__18443__a.length) {
          G__18443__a[G__18443__i] = arguments[G__18443__i + 4];
          ++G__18443__i;
        }
        more = new cljs.core.IndexedSeq(G__18443__a, 0);
      }
      return G__18442__delegate.call(this, a, f, x, y, more);
    };
    G__18442.cljs$lang$maxFixedArity = 4;
    G__18442.cljs$lang$applyTo = function(arglist__18444) {
      var a = cljs.core.first(arglist__18444);
      arglist__18444 = cljs.core.next(arglist__18444);
      var f = cljs.core.first(arglist__18444);
      arglist__18444 = cljs.core.next(arglist__18444);
      var x = cljs.core.first(arglist__18444);
      arglist__18444 = cljs.core.next(arglist__18444);
      var y = cljs.core.first(arglist__18444);
      var more = cljs.core.rest(arglist__18444);
      return G__18442__delegate(a, f, x, y, more);
    };
    G__18442.cljs$core$IFn$_invoke$arity$variadic = G__18442__delegate;
    return G__18442;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__18445 = null;
        if (arguments.length > 4) {
          var G__18446__i = 0, G__18446__a = new Array(arguments.length - 4);
          while (G__18446__i < G__18446__a.length) {
            G__18446__a[G__18446__i] = arguments[G__18446__i + 4];
            ++G__18446__i;
          }
          G__18445 = new cljs.core.IndexedSeq(G__18446__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__18445);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__18513 = null;
          var G__18513__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__18513__1 = function(result) {
            var G__18480 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__18480) : rf.call(null, G__18480);
          };
          var G__18513__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__18481 = i;
              var G__18482 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18481, G__18482) : f.call(null, G__18481, G__18482);
            }();
            if (v == null) {
              return result;
            } else {
              var G__18483 = result;
              var G__18484 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__18483, G__18484) : rf.call(null, G__18483, G__18484);
            }
          };
          G__18513 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__18513__0.call(this);
              case 1:
                return G__18513__1.call(this, result);
              case 2:
                return G__18513__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__18513.cljs$core$IFn$_invoke$arity$0 = G__18513__0;
          G__18513.cljs$core$IFn$_invoke$arity$1 = G__18513__1;
          G__18513.cljs$core$IFn$_invoke$arity$2 = G__18513__2;
          return G__18513;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4854__auto___18514 = size;
            var i_18515 = 0;
            while (true) {
              if (i_18515 < n__4854__auto___18514) {
                var x_18516 = function() {
                  var G__18509 = idx + i_18515;
                  var G__18510 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_18515);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18509, G__18510) : f.call(null, G__18509, G__18510);
                }();
                if (x_18516 == null) {
                } else {
                  cljs.core.chunk_append(b, x_18516);
                }
                var G__18517 = i_18515 + 1;
                i_18515 = G__18517;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__18511 = idx;
              var G__18512 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18511, G__18512) : f.call(null, G__18511, G__18512);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__18731 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18731) : p.call(null, G__18731);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3955__auto__ = function() {
            var G__18733 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18733) : p.call(null, G__18733);
          }();
          if (cljs.core.truth_(and__3955__auto__)) {
            var G__18734 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18734) : p.call(null, G__18734);
          } else {
            return and__3955__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3955__auto__ = function() {
            var G__18736 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18736) : p.call(null, G__18736);
          }();
          if (cljs.core.truth_(and__3955__auto__)) {
            var and__3955__auto____$1 = function() {
              var G__18738 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18738) : p.call(null, G__18738);
            }();
            if (cljs.core.truth_(and__3955__auto____$1)) {
              var G__18739 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__18739) : p.call(null, G__18739);
            } else {
              return and__3955__auto____$1;
            }
          } else {
            return and__3955__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__18908__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__18908 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18909__i = 0, G__18909__a = new Array(arguments.length - 3);
            while (G__18909__i < G__18909__a.length) {
              G__18909__a[G__18909__i] = arguments[G__18909__i + 3];
              ++G__18909__i;
            }
            args = new cljs.core.IndexedSeq(G__18909__a, 0);
          }
          return G__18908__delegate.call(this, x, y, z, args);
        };
        G__18908.cljs$lang$maxFixedArity = 3;
        G__18908.cljs$lang$applyTo = function(arglist__18910) {
          var x = cljs.core.first(arglist__18910);
          arglist__18910 = cljs.core.next(arglist__18910);
          var y = cljs.core.first(arglist__18910);
          arglist__18910 = cljs.core.next(arglist__18910);
          var z = cljs.core.first(arglist__18910);
          var args = cljs.core.rest(arglist__18910);
          return G__18908__delegate(x, y, z, args);
        };
        G__18908.cljs$core$IFn$_invoke$arity$variadic = G__18908__delegate;
        return G__18908;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__18911 = null;
            if (arguments.length > 3) {
              var G__18912__i = 0, G__18912__a = new Array(arguments.length - 3);
              while (G__18912__i < G__18912__a.length) {
                G__18912__a[G__18912__i] = arguments[G__18912__i + 3];
                ++G__18912__i;
              }
              G__18911 = new cljs.core.IndexedSeq(G__18912__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18911);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3955__auto__ = function() {
            var G__18771 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18771) : p1.call(null, G__18771);
          }();
          if (cljs.core.truth_(and__3955__auto__)) {
            var G__18772 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18772) : p2.call(null, G__18772);
          } else {
            return and__3955__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3955__auto__ = function() {
            var G__18774 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18774) : p1.call(null, G__18774);
          }();
          if (cljs.core.truth_(and__3955__auto__)) {
            var and__3955__auto____$1 = function() {
              var G__18776 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18776) : p1.call(null, G__18776);
            }();
            if (cljs.core.truth_(and__3955__auto____$1)) {
              var and__3955__auto____$2 = function() {
                var G__18778 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18778) : p2.call(null, G__18778);
              }();
              if (cljs.core.truth_(and__3955__auto____$2)) {
                var G__18779 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18779) : p2.call(null, G__18779);
              } else {
                return and__3955__auto____$2;
              }
            } else {
              return and__3955__auto____$1;
            }
          } else {
            return and__3955__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3955__auto__ = function() {
            var G__18781 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18781) : p1.call(null, G__18781);
          }();
          if (cljs.core.truth_(and__3955__auto__)) {
            var and__3955__auto____$1 = function() {
              var G__18783 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18783) : p1.call(null, G__18783);
            }();
            if (cljs.core.truth_(and__3955__auto____$1)) {
              var and__3955__auto____$2 = function() {
                var G__18785 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18785) : p1.call(null, G__18785);
              }();
              if (cljs.core.truth_(and__3955__auto____$2)) {
                var and__3955__auto____$3 = function() {
                  var G__18787 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18787) : p2.call(null, G__18787);
                }();
                if (cljs.core.truth_(and__3955__auto____$3)) {
                  var and__3955__auto____$4 = function() {
                    var G__18789 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18789) : p2.call(null, G__18789);
                  }();
                  if (cljs.core.truth_(and__3955__auto____$4)) {
                    var G__18790 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18790) : p2.call(null, G__18790);
                  } else {
                    return and__3955__auto____$4;
                  }
                } else {
                  return and__3955__auto____$3;
                }
              } else {
                return and__3955__auto____$2;
              }
            } else {
              return and__3955__auto____$1;
            }
          } else {
            return and__3955__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__18913__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__18518_SHARP_) {
            var and__3955__auto__ = function() {
              var G__18795 = p1__18518_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18795) : p1.call(null, G__18795);
            }();
            if (cljs.core.truth_(and__3955__auto__)) {
              var G__18796 = p1__18518_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18796) : p2.call(null, G__18796);
            } else {
              return and__3955__auto__;
            }
          }, args));
        };
        var G__18913 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18914__i = 0, G__18914__a = new Array(arguments.length - 3);
            while (G__18914__i < G__18914__a.length) {
              G__18914__a[G__18914__i] = arguments[G__18914__i + 3];
              ++G__18914__i;
            }
            args = new cljs.core.IndexedSeq(G__18914__a, 0);
          }
          return G__18913__delegate.call(this, x, y, z, args);
        };
        G__18913.cljs$lang$maxFixedArity = 3;
        G__18913.cljs$lang$applyTo = function(arglist__18915) {
          var x = cljs.core.first(arglist__18915);
          arglist__18915 = cljs.core.next(arglist__18915);
          var y = cljs.core.first(arglist__18915);
          arglist__18915 = cljs.core.next(arglist__18915);
          var z = cljs.core.first(arglist__18915);
          var args = cljs.core.rest(arglist__18915);
          return G__18913__delegate(x, y, z, args);
        };
        G__18913.cljs$core$IFn$_invoke$arity$variadic = G__18913__delegate;
        return G__18913;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__18916 = null;
            if (arguments.length > 3) {
              var G__18917__i = 0, G__18917__a = new Array(arguments.length - 3);
              while (G__18917__i < G__18917__a.length) {
                G__18917__a[G__18917__i] = arguments[G__18917__i + 3];
                ++G__18917__i;
              }
              G__18916 = new cljs.core.IndexedSeq(G__18917__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18916);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3955__auto__ = function() {
            var G__18842 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18842) : p1.call(null, G__18842);
          }();
          if (cljs.core.truth_(and__3955__auto__)) {
            var and__3955__auto____$1 = function() {
              var G__18844 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18844) : p2.call(null, G__18844);
            }();
            if (cljs.core.truth_(and__3955__auto____$1)) {
              var G__18845 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18845) : p3.call(null, G__18845);
            } else {
              return and__3955__auto____$1;
            }
          } else {
            return and__3955__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3955__auto__ = function() {
            var G__18847 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18847) : p1.call(null, G__18847);
          }();
          if (cljs.core.truth_(and__3955__auto__)) {
            var and__3955__auto____$1 = function() {
              var G__18849 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18849) : p2.call(null, G__18849);
            }();
            if (cljs.core.truth_(and__3955__auto____$1)) {
              var and__3955__auto____$2 = function() {
                var G__18851 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18851) : p3.call(null, G__18851);
              }();
              if (cljs.core.truth_(and__3955__auto____$2)) {
                var and__3955__auto____$3 = function() {
                  var G__18853 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18853) : p1.call(null, G__18853);
                }();
                if (cljs.core.truth_(and__3955__auto____$3)) {
                  var and__3955__auto____$4 = function() {
                    var G__18855 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18855) : p2.call(null, G__18855);
                  }();
                  if (cljs.core.truth_(and__3955__auto____$4)) {
                    var G__18856 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18856) : p3.call(null, G__18856);
                  } else {
                    return and__3955__auto____$4;
                  }
                } else {
                  return and__3955__auto____$3;
                }
              } else {
                return and__3955__auto____$2;
              }
            } else {
              return and__3955__auto____$1;
            }
          } else {
            return and__3955__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3955__auto__ = function() {
            var G__18858 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18858) : p1.call(null, G__18858);
          }();
          if (cljs.core.truth_(and__3955__auto__)) {
            var and__3955__auto____$1 = function() {
              var G__18860 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18860) : p2.call(null, G__18860);
            }();
            if (cljs.core.truth_(and__3955__auto____$1)) {
              var and__3955__auto____$2 = function() {
                var G__18862 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18862) : p3.call(null, G__18862);
              }();
              if (cljs.core.truth_(and__3955__auto____$2)) {
                var and__3955__auto____$3 = function() {
                  var G__18864 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18864) : p1.call(null, G__18864);
                }();
                if (cljs.core.truth_(and__3955__auto____$3)) {
                  var and__3955__auto____$4 = function() {
                    var G__18866 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18866) : p2.call(null, G__18866);
                  }();
                  if (cljs.core.truth_(and__3955__auto____$4)) {
                    var and__3955__auto____$5 = function() {
                      var G__18868 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18868) : p3.call(null, G__18868);
                    }();
                    if (cljs.core.truth_(and__3955__auto____$5)) {
                      var and__3955__auto____$6 = function() {
                        var G__18870 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18870) : p1.call(null, G__18870);
                      }();
                      if (cljs.core.truth_(and__3955__auto____$6)) {
                        var and__3955__auto____$7 = function() {
                          var G__18872 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18872) : p2.call(null, G__18872);
                        }();
                        if (cljs.core.truth_(and__3955__auto____$7)) {
                          var G__18873 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18873) : p3.call(null, G__18873);
                        } else {
                          return and__3955__auto____$7;
                        }
                      } else {
                        return and__3955__auto____$6;
                      }
                    } else {
                      return and__3955__auto____$5;
                    }
                  } else {
                    return and__3955__auto____$4;
                  }
                } else {
                  return and__3955__auto____$3;
                }
              } else {
                return and__3955__auto____$2;
              }
            } else {
              return and__3955__auto____$1;
            }
          } else {
            return and__3955__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__18918__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__18519_SHARP_) {
            var and__3955__auto__ = function() {
              var G__18880 = p1__18519_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__18880) : p1.call(null, G__18880);
            }();
            if (cljs.core.truth_(and__3955__auto__)) {
              var and__3955__auto____$1 = function() {
                var G__18882 = p1__18519_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__18882) : p2.call(null, G__18882);
              }();
              if (cljs.core.truth_(and__3955__auto____$1)) {
                var G__18883 = p1__18519_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__18883) : p3.call(null, G__18883);
              } else {
                return and__3955__auto____$1;
              }
            } else {
              return and__3955__auto__;
            }
          }, args));
        };
        var G__18918 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__18919__i = 0, G__18919__a = new Array(arguments.length - 3);
            while (G__18919__i < G__18919__a.length) {
              G__18919__a[G__18919__i] = arguments[G__18919__i + 3];
              ++G__18919__i;
            }
            args = new cljs.core.IndexedSeq(G__18919__a, 0);
          }
          return G__18918__delegate.call(this, x, y, z, args);
        };
        G__18918.cljs$lang$maxFixedArity = 3;
        G__18918.cljs$lang$applyTo = function(arglist__18920) {
          var x = cljs.core.first(arglist__18920);
          arglist__18920 = cljs.core.next(arglist__18920);
          var y = cljs.core.first(arglist__18920);
          arglist__18920 = cljs.core.next(arglist__18920);
          var z = cljs.core.first(arglist__18920);
          var args = cljs.core.rest(arglist__18920);
          return G__18918__delegate(x, y, z, args);
        };
        G__18918.cljs$core$IFn$_invoke$arity$variadic = G__18918__delegate;
        return G__18918;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__18921 = null;
            if (arguments.length > 3) {
              var G__18922__i = 0, G__18922__a = new Array(arguments.length - 3);
              while (G__18922__i < G__18922__a.length) {
                G__18922__a[G__18922__i] = arguments[G__18922__i + 3];
                ++G__18922__i;
              }
              G__18921 = new cljs.core.IndexedSeq(G__18922__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18921);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__18923__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__18520_SHARP_) {
                var G__18899 = x;
                return p1__18520_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18520_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18899) : p1__18520_SHARP_.call(null, G__18899);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__18521_SHARP_) {
                var and__3955__auto__ = function() {
                  var G__18901 = x;
                  return p1__18521_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18521_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18901) : p1__18521_SHARP_.call(null, G__18901);
                }();
                if (cljs.core.truth_(and__3955__auto__)) {
                  var G__18902 = y;
                  return p1__18521_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18521_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18902) : p1__18521_SHARP_.call(null, G__18902);
                } else {
                  return and__3955__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__18522_SHARP_) {
                var and__3955__auto__ = function() {
                  var G__18904 = x;
                  return p1__18522_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18522_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18904) : p1__18522_SHARP_.call(null, G__18904);
                }();
                if (cljs.core.truth_(and__3955__auto__)) {
                  var and__3955__auto____$1 = function() {
                    var G__18906 = y;
                    return p1__18522_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18522_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18906) : p1__18522_SHARP_.call(null, G__18906);
                  }();
                  if (cljs.core.truth_(and__3955__auto____$1)) {
                    var G__18907 = z;
                    return p1__18522_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18522_SHARP_.cljs$core$IFn$_invoke$arity$1(G__18907) : p1__18522_SHARP_.call(null, G__18907);
                  } else {
                    return and__3955__auto____$1;
                  }
                } else {
                  return and__3955__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__18924__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__18523_SHARP_) {
                  return cljs.core.every_QMARK_(p1__18523_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__18924 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__18925__i = 0, G__18925__a = new Array(arguments.length - 3);
                while (G__18925__i < G__18925__a.length) {
                  G__18925__a[G__18925__i] = arguments[G__18925__i + 3];
                  ++G__18925__i;
                }
                args = new cljs.core.IndexedSeq(G__18925__a, 0);
              }
              return G__18924__delegate.call(this, x, y, z, args);
            };
            G__18924.cljs$lang$maxFixedArity = 3;
            G__18924.cljs$lang$applyTo = function(arglist__18926) {
              var x = cljs.core.first(arglist__18926);
              arglist__18926 = cljs.core.next(arglist__18926);
              var y = cljs.core.first(arglist__18926);
              arglist__18926 = cljs.core.next(arglist__18926);
              var z = cljs.core.first(arglist__18926);
              var args = cljs.core.rest(arglist__18926);
              return G__18924__delegate(x, y, z, args);
            };
            G__18924.cljs$core$IFn$_invoke$arity$variadic = G__18924__delegate;
            return G__18924;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__18927 = null;
                if (arguments.length > 3) {
                  var G__18928__i = 0, G__18928__a = new Array(arguments.length - 3);
                  while (G__18928__i < G__18928__a.length) {
                    G__18928__a[G__18928__i] = arguments[G__18928__i + 3];
                    ++G__18928__i;
                  }
                  G__18927 = new cljs.core.IndexedSeq(G__18928__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__18927);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__18923 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__18929__i = 0, G__18929__a = new Array(arguments.length - 3);
        while (G__18929__i < G__18929__a.length) {
          G__18929__a[G__18929__i] = arguments[G__18929__i + 3];
          ++G__18929__i;
        }
        ps = new cljs.core.IndexedSeq(G__18929__a, 0);
      }
      return G__18923__delegate.call(this, p1, p2, p3, ps);
    };
    G__18923.cljs$lang$maxFixedArity = 3;
    G__18923.cljs$lang$applyTo = function(arglist__18930) {
      var p1 = cljs.core.first(arglist__18930);
      arglist__18930 = cljs.core.next(arglist__18930);
      var p2 = cljs.core.first(arglist__18930);
      arglist__18930 = cljs.core.next(arglist__18930);
      var p3 = cljs.core.first(arglist__18930);
      var ps = cljs.core.rest(arglist__18930);
      return G__18923__delegate(p1, p2, p3, ps);
    };
    G__18923.cljs$core$IFn$_invoke$arity$variadic = G__18923__delegate;
    return G__18923;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__18931 = null;
        if (arguments.length > 3) {
          var G__18932__i = 0, G__18932__a = new Array(arguments.length - 3);
          while (G__18932__i < G__18932__a.length) {
            G__18932__a[G__18932__i] = arguments[G__18932__i + 3];
            ++G__18932__i;
          }
          G__18931 = new cljs.core.IndexedSeq(G__18932__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__18931);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__19138 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19138) : p.call(null, G__19138);
      };
      var sp1__2 = function(x, y) {
        var or__3967__auto__ = function() {
          var G__19140 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19140) : p.call(null, G__19140);
        }();
        if (cljs.core.truth_(or__3967__auto__)) {
          return or__3967__auto__;
        } else {
          var G__19141 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19141) : p.call(null, G__19141);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3967__auto__ = function() {
          var G__19143 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19143) : p.call(null, G__19143);
        }();
        if (cljs.core.truth_(or__3967__auto__)) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = function() {
            var G__19145 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19145) : p.call(null, G__19145);
          }();
          if (cljs.core.truth_(or__3967__auto____$1)) {
            return or__3967__auto____$1;
          } else {
            var G__19146 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__19146) : p.call(null, G__19146);
          }
        }
      };
      var sp1__4 = function() {
        var G__19307__delegate = function(x, y, z, args) {
          var or__3967__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3967__auto__)) {
            return or__3967__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__19307 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19308__i = 0, G__19308__a = new Array(arguments.length - 3);
            while (G__19308__i < G__19308__a.length) {
              G__19308__a[G__19308__i] = arguments[G__19308__i + 3];
              ++G__19308__i;
            }
            args = new cljs.core.IndexedSeq(G__19308__a, 0);
          }
          return G__19307__delegate.call(this, x, y, z, args);
        };
        G__19307.cljs$lang$maxFixedArity = 3;
        G__19307.cljs$lang$applyTo = function(arglist__19309) {
          var x = cljs.core.first(arglist__19309);
          arglist__19309 = cljs.core.next(arglist__19309);
          var y = cljs.core.first(arglist__19309);
          arglist__19309 = cljs.core.next(arglist__19309);
          var z = cljs.core.first(arglist__19309);
          var args = cljs.core.rest(arglist__19309);
          return G__19307__delegate(x, y, z, args);
        };
        G__19307.cljs$core$IFn$_invoke$arity$variadic = G__19307__delegate;
        return G__19307;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__19310 = null;
            if (arguments.length > 3) {
              var G__19311__i = 0, G__19311__a = new Array(arguments.length - 3);
              while (G__19311__i < G__19311__a.length) {
                G__19311__a[G__19311__i] = arguments[G__19311__i + 3];
                ++G__19311__i;
              }
              G__19310 = new cljs.core.IndexedSeq(G__19311__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19310);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3967__auto__ = function() {
          var G__19178 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19178) : p1.call(null, G__19178);
        }();
        if (cljs.core.truth_(or__3967__auto__)) {
          return or__3967__auto__;
        } else {
          var G__19179 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19179) : p2.call(null, G__19179);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3967__auto__ = function() {
          var G__19181 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19181) : p1.call(null, G__19181);
        }();
        if (cljs.core.truth_(or__3967__auto__)) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = function() {
            var G__19183 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19183) : p1.call(null, G__19183);
          }();
          if (cljs.core.truth_(or__3967__auto____$1)) {
            return or__3967__auto____$1;
          } else {
            var or__3967__auto____$2 = function() {
              var G__19185 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19185) : p2.call(null, G__19185);
            }();
            if (cljs.core.truth_(or__3967__auto____$2)) {
              return or__3967__auto____$2;
            } else {
              var G__19186 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19186) : p2.call(null, G__19186);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3967__auto__ = function() {
          var G__19188 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19188) : p1.call(null, G__19188);
        }();
        if (cljs.core.truth_(or__3967__auto__)) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = function() {
            var G__19190 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19190) : p1.call(null, G__19190);
          }();
          if (cljs.core.truth_(or__3967__auto____$1)) {
            return or__3967__auto____$1;
          } else {
            var or__3967__auto____$2 = function() {
              var G__19192 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19192) : p1.call(null, G__19192);
            }();
            if (cljs.core.truth_(or__3967__auto____$2)) {
              return or__3967__auto____$2;
            } else {
              var or__3967__auto____$3 = function() {
                var G__19194 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19194) : p2.call(null, G__19194);
              }();
              if (cljs.core.truth_(or__3967__auto____$3)) {
                return or__3967__auto____$3;
              } else {
                var or__3967__auto____$4 = function() {
                  var G__19196 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19196) : p2.call(null, G__19196);
                }();
                if (cljs.core.truth_(or__3967__auto____$4)) {
                  return or__3967__auto____$4;
                } else {
                  var G__19197 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19197) : p2.call(null, G__19197);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__19312__delegate = function(x, y, z, args) {
          var or__3967__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3967__auto__)) {
            return or__3967__auto__;
          } else {
            return cljs.core.some(function(or__3967__auto__) {
              return function(p1__18933_SHARP_) {
                var or__3967__auto____$1 = function() {
                  var G__19199 = p1__18933_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19199) : p1.call(null, G__19199);
                }();
                if (cljs.core.truth_(or__3967__auto____$1)) {
                  return or__3967__auto____$1;
                } else {
                  var G__19200 = p1__18933_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19200) : p2.call(null, G__19200);
                }
              };
            }(or__3967__auto__), args);
          }
        };
        var G__19312 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19313__i = 0, G__19313__a = new Array(arguments.length - 3);
            while (G__19313__i < G__19313__a.length) {
              G__19313__a[G__19313__i] = arguments[G__19313__i + 3];
              ++G__19313__i;
            }
            args = new cljs.core.IndexedSeq(G__19313__a, 0);
          }
          return G__19312__delegate.call(this, x, y, z, args);
        };
        G__19312.cljs$lang$maxFixedArity = 3;
        G__19312.cljs$lang$applyTo = function(arglist__19314) {
          var x = cljs.core.first(arglist__19314);
          arglist__19314 = cljs.core.next(arglist__19314);
          var y = cljs.core.first(arglist__19314);
          arglist__19314 = cljs.core.next(arglist__19314);
          var z = cljs.core.first(arglist__19314);
          var args = cljs.core.rest(arglist__19314);
          return G__19312__delegate(x, y, z, args);
        };
        G__19312.cljs$core$IFn$_invoke$arity$variadic = G__19312__delegate;
        return G__19312;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__19315 = null;
            if (arguments.length > 3) {
              var G__19316__i = 0, G__19316__a = new Array(arguments.length - 3);
              while (G__19316__i < G__19316__a.length) {
                G__19316__a[G__19316__i] = arguments[G__19316__i + 3];
                ++G__19316__i;
              }
              G__19315 = new cljs.core.IndexedSeq(G__19316__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19315);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3967__auto__ = function() {
          var G__19246 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19246) : p1.call(null, G__19246);
        }();
        if (cljs.core.truth_(or__3967__auto__)) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = function() {
            var G__19248 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19248) : p2.call(null, G__19248);
          }();
          if (cljs.core.truth_(or__3967__auto____$1)) {
            return or__3967__auto____$1;
          } else {
            var G__19249 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19249) : p3.call(null, G__19249);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3967__auto__ = function() {
          var G__19251 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19251) : p1.call(null, G__19251);
        }();
        if (cljs.core.truth_(or__3967__auto__)) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = function() {
            var G__19253 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19253) : p2.call(null, G__19253);
          }();
          if (cljs.core.truth_(or__3967__auto____$1)) {
            return or__3967__auto____$1;
          } else {
            var or__3967__auto____$2 = function() {
              var G__19255 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19255) : p3.call(null, G__19255);
            }();
            if (cljs.core.truth_(or__3967__auto____$2)) {
              return or__3967__auto____$2;
            } else {
              var or__3967__auto____$3 = function() {
                var G__19257 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19257) : p1.call(null, G__19257);
              }();
              if (cljs.core.truth_(or__3967__auto____$3)) {
                return or__3967__auto____$3;
              } else {
                var or__3967__auto____$4 = function() {
                  var G__19259 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19259) : p2.call(null, G__19259);
                }();
                if (cljs.core.truth_(or__3967__auto____$4)) {
                  return or__3967__auto____$4;
                } else {
                  var G__19260 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19260) : p3.call(null, G__19260);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3967__auto__ = function() {
          var G__19262 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19262) : p1.call(null, G__19262);
        }();
        if (cljs.core.truth_(or__3967__auto__)) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = function() {
            var G__19264 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19264) : p2.call(null, G__19264);
          }();
          if (cljs.core.truth_(or__3967__auto____$1)) {
            return or__3967__auto____$1;
          } else {
            var or__3967__auto____$2 = function() {
              var G__19266 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19266) : p3.call(null, G__19266);
            }();
            if (cljs.core.truth_(or__3967__auto____$2)) {
              return or__3967__auto____$2;
            } else {
              var or__3967__auto____$3 = function() {
                var G__19268 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19268) : p1.call(null, G__19268);
              }();
              if (cljs.core.truth_(or__3967__auto____$3)) {
                return or__3967__auto____$3;
              } else {
                var or__3967__auto____$4 = function() {
                  var G__19270 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19270) : p2.call(null, G__19270);
                }();
                if (cljs.core.truth_(or__3967__auto____$4)) {
                  return or__3967__auto____$4;
                } else {
                  var or__3967__auto____$5 = function() {
                    var G__19272 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19272) : p3.call(null, G__19272);
                  }();
                  if (cljs.core.truth_(or__3967__auto____$5)) {
                    return or__3967__auto____$5;
                  } else {
                    var or__3967__auto____$6 = function() {
                      var G__19274 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19274) : p1.call(null, G__19274);
                    }();
                    if (cljs.core.truth_(or__3967__auto____$6)) {
                      return or__3967__auto____$6;
                    } else {
                      var or__3967__auto____$7 = function() {
                        var G__19276 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19276) : p2.call(null, G__19276);
                      }();
                      if (cljs.core.truth_(or__3967__auto____$7)) {
                        return or__3967__auto____$7;
                      } else {
                        var G__19277 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19277) : p3.call(null, G__19277);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__19317__delegate = function(x, y, z, args) {
          var or__3967__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3967__auto__)) {
            return or__3967__auto__;
          } else {
            return cljs.core.some(function(or__3967__auto__) {
              return function(p1__18934_SHARP_) {
                var or__3967__auto____$1 = function() {
                  var G__19279 = p1__18934_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__19279) : p1.call(null, G__19279);
                }();
                if (cljs.core.truth_(or__3967__auto____$1)) {
                  return or__3967__auto____$1;
                } else {
                  var or__3967__auto____$2 = function() {
                    var G__19281 = p1__18934_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__19281) : p2.call(null, G__19281);
                  }();
                  if (cljs.core.truth_(or__3967__auto____$2)) {
                    return or__3967__auto____$2;
                  } else {
                    var G__19282 = p1__18934_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__19282) : p3.call(null, G__19282);
                  }
                }
              };
            }(or__3967__auto__), args);
          }
        };
        var G__19317 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__19318__i = 0, G__19318__a = new Array(arguments.length - 3);
            while (G__19318__i < G__19318__a.length) {
              G__19318__a[G__19318__i] = arguments[G__19318__i + 3];
              ++G__19318__i;
            }
            args = new cljs.core.IndexedSeq(G__19318__a, 0);
          }
          return G__19317__delegate.call(this, x, y, z, args);
        };
        G__19317.cljs$lang$maxFixedArity = 3;
        G__19317.cljs$lang$applyTo = function(arglist__19319) {
          var x = cljs.core.first(arglist__19319);
          arglist__19319 = cljs.core.next(arglist__19319);
          var y = cljs.core.first(arglist__19319);
          arglist__19319 = cljs.core.next(arglist__19319);
          var z = cljs.core.first(arglist__19319);
          var args = cljs.core.rest(arglist__19319);
          return G__19317__delegate(x, y, z, args);
        };
        G__19317.cljs$core$IFn$_invoke$arity$variadic = G__19317__delegate;
        return G__19317;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__19320 = null;
            if (arguments.length > 3) {
              var G__19321__i = 0, G__19321__a = new Array(arguments.length - 3);
              while (G__19321__i < G__19321__a.length) {
                G__19321__a[G__19321__i] = arguments[G__19321__i + 3];
                ++G__19321__i;
              }
              G__19320 = new cljs.core.IndexedSeq(G__19321__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19320);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__19322__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__18935_SHARP_) {
                var G__19298 = x;
                return p1__18935_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18935_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19298) : p1__18935_SHARP_.call(null, G__19298);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__18936_SHARP_) {
                var or__3967__auto__ = function() {
                  var G__19300 = x;
                  return p1__18936_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18936_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19300) : p1__18936_SHARP_.call(null, G__19300);
                }();
                if (cljs.core.truth_(or__3967__auto__)) {
                  return or__3967__auto__;
                } else {
                  var G__19301 = y;
                  return p1__18936_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18936_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19301) : p1__18936_SHARP_.call(null, G__19301);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__18937_SHARP_) {
                var or__3967__auto__ = function() {
                  var G__19303 = x;
                  return p1__18937_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18937_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19303) : p1__18937_SHARP_.call(null, G__19303);
                }();
                if (cljs.core.truth_(or__3967__auto__)) {
                  return or__3967__auto__;
                } else {
                  var or__3967__auto____$1 = function() {
                    var G__19305 = y;
                    return p1__18937_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18937_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19305) : p1__18937_SHARP_.call(null, G__19305);
                  }();
                  if (cljs.core.truth_(or__3967__auto____$1)) {
                    return or__3967__auto____$1;
                  } else {
                    var G__19306 = z;
                    return p1__18937_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__18937_SHARP_.cljs$core$IFn$_invoke$arity$1(G__19306) : p1__18937_SHARP_.call(null, G__19306);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__19323__delegate = function(x, y, z, args) {
              var or__3967__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3967__auto__)) {
                return or__3967__auto__;
              } else {
                return cljs.core.some(function(or__3967__auto__, ps__$1) {
                  return function(p1__18938_SHARP_) {
                    return cljs.core.some(p1__18938_SHARP_, args);
                  };
                }(or__3967__auto__, ps__$1), ps__$1);
              }
            };
            var G__19323 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__19324__i = 0, G__19324__a = new Array(arguments.length - 3);
                while (G__19324__i < G__19324__a.length) {
                  G__19324__a[G__19324__i] = arguments[G__19324__i + 3];
                  ++G__19324__i;
                }
                args = new cljs.core.IndexedSeq(G__19324__a, 0);
              }
              return G__19323__delegate.call(this, x, y, z, args);
            };
            G__19323.cljs$lang$maxFixedArity = 3;
            G__19323.cljs$lang$applyTo = function(arglist__19325) {
              var x = cljs.core.first(arglist__19325);
              arglist__19325 = cljs.core.next(arglist__19325);
              var y = cljs.core.first(arglist__19325);
              arglist__19325 = cljs.core.next(arglist__19325);
              var z = cljs.core.first(arglist__19325);
              var args = cljs.core.rest(arglist__19325);
              return G__19323__delegate(x, y, z, args);
            };
            G__19323.cljs$core$IFn$_invoke$arity$variadic = G__19323__delegate;
            return G__19323;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__19326 = null;
                if (arguments.length > 3) {
                  var G__19327__i = 0, G__19327__a = new Array(arguments.length - 3);
                  while (G__19327__i < G__19327__a.length) {
                    G__19327__a[G__19327__i] = arguments[G__19327__i + 3];
                    ++G__19327__i;
                  }
                  G__19326 = new cljs.core.IndexedSeq(G__19327__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__19326);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__19322 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__19328__i = 0, G__19328__a = new Array(arguments.length - 3);
        while (G__19328__i < G__19328__a.length) {
          G__19328__a[G__19328__i] = arguments[G__19328__i + 3];
          ++G__19328__i;
        }
        ps = new cljs.core.IndexedSeq(G__19328__a, 0);
      }
      return G__19322__delegate.call(this, p1, p2, p3, ps);
    };
    G__19322.cljs$lang$maxFixedArity = 3;
    G__19322.cljs$lang$applyTo = function(arglist__19329) {
      var p1 = cljs.core.first(arglist__19329);
      arglist__19329 = cljs.core.next(arglist__19329);
      var p2 = cljs.core.first(arglist__19329);
      arglist__19329 = cljs.core.next(arglist__19329);
      var p3 = cljs.core.first(arglist__19329);
      var ps = cljs.core.rest(arglist__19329);
      return G__19322__delegate(p1, p2, p3, ps);
    };
    G__19322.cljs$core$IFn$_invoke$arity$variadic = G__19322__delegate;
    return G__19322;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__19330 = null;
        if (arguments.length > 3) {
          var G__19331__i = 0, G__19331__a = new Array(arguments.length - 3);
          while (G__19331__i < G__19331__a.length) {
            G__19331__a[G__19331__i] = arguments[G__19331__i + 3];
            ++G__19331__i;
          }
          G__19330 = new cljs.core.IndexedSeq(G__19331__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__19330);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__19386 = null;
        var G__19386__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19386__1 = function(result) {
          var G__19372 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19372) : rf.call(null, G__19372);
        };
        var G__19386__2 = function(result, input) {
          var G__19373 = result;
          var G__19374 = function() {
            var G__19375 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19375) : f.call(null, G__19375);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19373, G__19374) : rf.call(null, G__19373, G__19374);
        };
        var G__19386__3 = function() {
          var G__19387__delegate = function(result, input, inputs) {
            var G__19376 = result;
            var G__19377 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19376, G__19377) : rf.call(null, G__19376, G__19377);
          };
          var G__19387 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__19388__i = 0, G__19388__a = new Array(arguments.length - 2);
              while (G__19388__i < G__19388__a.length) {
                G__19388__a[G__19388__i] = arguments[G__19388__i + 2];
                ++G__19388__i;
              }
              inputs = new cljs.core.IndexedSeq(G__19388__a, 0);
            }
            return G__19387__delegate.call(this, result, input, inputs);
          };
          G__19387.cljs$lang$maxFixedArity = 2;
          G__19387.cljs$lang$applyTo = function(arglist__19389) {
            var result = cljs.core.first(arglist__19389);
            arglist__19389 = cljs.core.next(arglist__19389);
            var input = cljs.core.first(arglist__19389);
            var inputs = cljs.core.rest(arglist__19389);
            return G__19387__delegate(result, input, inputs);
          };
          G__19387.cljs$core$IFn$_invoke$arity$variadic = G__19387__delegate;
          return G__19387;
        }();
        G__19386 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__19386__0.call(this);
            case 1:
              return G__19386__1.call(this, result);
            case 2:
              return G__19386__2.call(this, result, input);
            default:
              var G__19390 = null;
              if (arguments.length > 2) {
                var G__19391__i = 0, G__19391__a = new Array(arguments.length - 2);
                while (G__19391__i < G__19391__a.length) {
                  G__19391__a[G__19391__i] = arguments[G__19391__i + 2];
                  ++G__19391__i;
                }
                G__19390 = new cljs.core.IndexedSeq(G__19391__a, 0);
              }
              return G__19386__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__19390);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19386.cljs$lang$maxFixedArity = 2;
        G__19386.cljs$lang$applyTo = G__19386__3.cljs$lang$applyTo;
        G__19386.cljs$core$IFn$_invoke$arity$0 = G__19386__0;
        G__19386.cljs$core$IFn$_invoke$arity$1 = G__19386__1;
        G__19386.cljs$core$IFn$_invoke$arity$2 = G__19386__2;
        G__19386.cljs$core$IFn$_invoke$arity$variadic = G__19386__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__19386;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4854__auto___19392 = size;
          var i_19393 = 0;
          while (true) {
            if (i_19393 < n__4854__auto___19392) {
              cljs.core.chunk_append(b, function() {
                var G__19378 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19393);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19378) : f.call(null, G__19378);
              }());
              var G__19394 = i_19393 + 1;
              i_19393 = G__19394;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__19379 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19379) : f.call(null, G__19379);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__19380 = cljs.core.first(s1);
          var G__19381 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19380, G__19381) : f.call(null, G__19380, G__19381);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__19382 = cljs.core.first(s1);
          var G__19383 = cljs.core.first(s2);
          var G__19384 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19382, G__19383, G__19384) : f.call(null, G__19382, G__19383, G__19384);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__19395__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__19332_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__19332_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__19395 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__19396__i = 0, G__19396__a = new Array(arguments.length - 4);
        while (G__19396__i < G__19396__a.length) {
          G__19396__a[G__19396__i] = arguments[G__19396__i + 4];
          ++G__19396__i;
        }
        colls = new cljs.core.IndexedSeq(G__19396__a, 0);
      }
      return G__19395__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__19395.cljs$lang$maxFixedArity = 4;
    G__19395.cljs$lang$applyTo = function(arglist__19397) {
      var f = cljs.core.first(arglist__19397);
      arglist__19397 = cljs.core.next(arglist__19397);
      var c1 = cljs.core.first(arglist__19397);
      arglist__19397 = cljs.core.next(arglist__19397);
      var c2 = cljs.core.first(arglist__19397);
      arglist__19397 = cljs.core.next(arglist__19397);
      var c3 = cljs.core.first(arglist__19397);
      var colls = cljs.core.rest(arglist__19397);
      return G__19395__delegate(f, c1, c2, c3, colls);
    };
    G__19395.cljs$core$IFn$_invoke$arity$variadic = G__19395__delegate;
    return G__19395;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__19398 = null;
        if (arguments.length > 4) {
          var G__19399__i = 0, G__19399__a = new Array(arguments.length - 4);
          while (G__19399__i < G__19399__a.length) {
            G__19399__a[G__19399__i] = arguments[G__19399__i + 4];
            ++G__19399__i;
          }
          G__19398 = new cljs.core.IndexedSeq(G__19399__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__19398);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__19408 = null;
          var G__19408__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__19408__1 = function(result) {
            var G__19405 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19405) : rf.call(null, G__19405);
          };
          var G__19408__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__19406 = result;
              var G__19407 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19406, G__19407) : rf.call(null, G__19406, G__19407);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__19408 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19408__0.call(this);
              case 1:
                return G__19408__1.call(this, result);
              case 2:
                return G__19408__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19408.cljs$core$IFn$_invoke$arity$0 = G__19408__0;
          G__19408.cljs$core$IFn$_invoke$arity$1 = G__19408__1;
          G__19408.cljs$core$IFn$_invoke$arity$2 = G__19408__2;
          return G__19408;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__19415 = null;
          var G__19415__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__19415__1 = function(result) {
            var G__19412 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19412) : rf.call(null, G__19412);
          };
          var G__19415__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__19413 = result;
              var G__19414 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19413, G__19414) : rf.call(null, G__19413, G__19414);
            }
          };
          G__19415 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19415__0.call(this);
              case 1:
                return G__19415__1.call(this, result);
              case 2:
                return G__19415__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19415.cljs$core$IFn$_invoke$arity$0 = G__19415__0;
          G__19415.cljs$core$IFn$_invoke$arity$1 = G__19415__1;
          G__19415.cljs$core$IFn$_invoke$arity$2 = G__19415__2;
          return G__19415;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__19416 = n__$1 - 1;
          var G__19417 = cljs.core.rest(s);
          n__$1 = G__19416;
          coll__$1 = G__19417;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__19420 = cljs.core.next(s);
      var G__19421 = cljs.core.next(lead);
      s = G__19420;
      lead = G__19421;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__19434 = null;
          var G__19434__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__19434__1 = function(result) {
            var G__19428 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19428) : rf.call(null, G__19428);
          };
          var G__19434__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3955__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3955__auto__)) {
                var G__19429 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19429) : pred.call(null, G__19429);
              } else {
                return and__3955__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__19430 = result;
              var G__19431 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19430, G__19431) : rf.call(null, G__19430, G__19431);
            }
          };
          G__19434 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19434__0.call(this);
              case 1:
                return G__19434__1.call(this, result);
              case 2:
                return G__19434__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19434.cljs$core$IFn$_invoke$arity$0 = G__19434__0;
          G__19434.cljs$core$IFn$_invoke$arity$1 = G__19434__1;
          G__19434.cljs$core$IFn$_invoke$arity$2 = G__19434__2;
          return G__19434;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3955__auto__ = s;
          if (and__3955__auto__) {
            var G__19433 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__19433) : pred__$1.call(null, G__19433);
          } else {
            return and__3955__auto__;
          }
        }())) {
          var G__19435 = pred__$1;
          var G__19436 = cljs.core.rest(s);
          pred__$1 = G__19435;
          coll__$1 = G__19436;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__19445 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19445) : f.call(null, G__19445);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__19448__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__19448 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__19449__i = 0, G__19449__a = new Array(arguments.length - 2);
        while (G__19449__i < G__19449__a.length) {
          G__19449__a[G__19449__i] = arguments[G__19449__i + 2];
          ++G__19449__i;
        }
        colls = new cljs.core.IndexedSeq(G__19449__a, 0);
      }
      return G__19448__delegate.call(this, c1, c2, colls);
    };
    G__19448.cljs$lang$maxFixedArity = 2;
    G__19448.cljs$lang$applyTo = function(arglist__19450) {
      var c1 = cljs.core.first(arglist__19450);
      arglist__19450 = cljs.core.next(arglist__19450);
      var c2 = cljs.core.first(arglist__19450);
      var colls = cljs.core.rest(arglist__19450);
      return G__19448__delegate(c1, c2, colls);
    };
    G__19448.cljs$core$IFn$_invoke$arity$variadic = G__19448__delegate;
    return G__19448;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__19451 = null;
        if (arguments.length > 2) {
          var G__19452__i = 0, G__19452__a = new Array(arguments.length - 2);
          while (G__19452__i < G__19452__a.length) {
            G__19452__a[G__19452__i] = arguments[G__19452__i + 2];
            ++G__19452__i;
          }
          G__19451 = new cljs.core.IndexedSeq(G__19452__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__19451);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__19467 = null;
          var G__19467__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__19467__1 = function(result) {
            var G__19460 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19460) : rf.call(null, G__19460);
          };
          var G__19467__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__19461 = result;
                var G__19462 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19461, G__19462) : rf.call(null, G__19461, G__19462);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__19463 = sepr;
                var G__19464 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19463, G__19464) : rf.call(null, G__19463, G__19464);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__19465 = result;
              var G__19466 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19465, G__19466) : rf.call(null, G__19465, G__19466);
            }
          };
          G__19467 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19467__0.call(this);
              case 1:
                return G__19467__1.call(this, result);
              case 2:
                return G__19467__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19467.cljs$core$IFn$_invoke$arity$0 = G__19467__0;
          G__19467.cljs$core$IFn$_invoke$arity$1 = G__19467__1;
          G__19467.cljs$core$IFn$_invoke$arity$2 = G__19467__2;
          return G__19467;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__19476__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__19476 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__19477__i = 0, G__19477__a = new Array(arguments.length - 1);
        while (G__19477__i < G__19477__a.length) {
          G__19477__a[G__19477__i] = arguments[G__19477__i + 1];
          ++G__19477__i;
        }
        colls = new cljs.core.IndexedSeq(G__19477__a, 0);
      }
      return G__19476__delegate.call(this, f, colls);
    };
    G__19476.cljs$lang$maxFixedArity = 1;
    G__19476.cljs$lang$applyTo = function(arglist__19478) {
      var f = cljs.core.first(arglist__19478);
      var colls = cljs.core.rest(arglist__19478);
      return G__19476__delegate(f, colls);
    };
    G__19476.cljs$core$IFn$_invoke$arity$variadic = G__19476__delegate;
    return G__19476;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__19479 = null;
        if (arguments.length > 1) {
          var G__19480__i = 0, G__19480__a = new Array(arguments.length - 1);
          while (G__19480__i < G__19480__a.length) {
            G__19480__a[G__19480__i] = arguments[G__19480__i + 1];
            ++G__19480__i;
          }
          G__19479 = new cljs.core.IndexedSeq(G__19480__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__19479);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__19499 = null;
        var G__19499__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__19499__1 = function(result) {
          var G__19493 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__19493) : rf.call(null, G__19493);
        };
        var G__19499__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__19494 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19494) : pred.call(null, G__19494);
          }())) {
            var G__19495 = result;
            var G__19496 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__19495, G__19496) : rf.call(null, G__19495, G__19496);
          } else {
            return result;
          }
        };
        G__19499 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19499__0.call(this);
            case 1:
              return G__19499__1.call(this, result);
            case 2:
              return G__19499__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19499.cljs$core$IFn$_invoke$arity$0 = G__19499__0;
        G__19499.cljs$core$IFn$_invoke$arity$1 = G__19499__1;
        G__19499.cljs$core$IFn$_invoke$arity$2 = G__19499__2;
        return G__19499;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4854__auto___19500 = size;
          var i_19501 = 0;
          while (true) {
            if (i_19501 < n__4854__auto___19500) {
              if (cljs.core.truth_(function() {
                var G__19497 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19501);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19497) : pred.call(null, G__19497);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_19501));
              } else {
              }
              var G__19502 = i_19501 + 1;
              i_19501 = G__19502;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__19498 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19498) : pred.call(null, G__19498);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__19509 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__19509) : branch_QMARK_.call(null, G__19509);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__19510 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__19510) : children.call(null, G__19510);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__19511_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__19511_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__19514 = to;
        if (G__19514) {
          var bit__4641__auto__ = G__19514.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4641__auto__ || G__19514.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__19515 = to;
      if (G__19515) {
        var bit__4641__auto__ = G__19515.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4641__auto__ || G__19515.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__19517 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19517) : f.call(null, G__19517);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__19518__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__19518 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__19519__i = 0, G__19519__a = new Array(arguments.length - 4);
        while (G__19519__i < G__19519__a.length) {
          G__19519__a[G__19519__i] = arguments[G__19519__i + 4];
          ++G__19519__i;
        }
        colls = new cljs.core.IndexedSeq(G__19519__a, 0);
      }
      return G__19518__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__19518.cljs$lang$maxFixedArity = 4;
    G__19518.cljs$lang$applyTo = function(arglist__19520) {
      var f = cljs.core.first(arglist__19520);
      arglist__19520 = cljs.core.next(arglist__19520);
      var c1 = cljs.core.first(arglist__19520);
      arglist__19520 = cljs.core.next(arglist__19520);
      var c2 = cljs.core.first(arglist__19520);
      arglist__19520 = cljs.core.next(arglist__19520);
      var c3 = cljs.core.first(arglist__19520);
      var colls = cljs.core.rest(arglist__19520);
      return G__19518__delegate(f, c1, c2, c3, colls);
    };
    G__19518.cljs$core$IFn$_invoke$arity$variadic = G__19518__delegate;
    return G__19518;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__19521 = null;
        if (arguments.length > 4) {
          var G__19522__i = 0, G__19522__a = new Array(arguments.length - 4);
          while (G__19522__i < G__19522__a.length) {
            G__19522__a[G__19522__i] = arguments[G__19522__i + 4];
            ++G__19522__i;
          }
          G__19521 = new cljs.core.IndexedSeq(G__19522__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__19521);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__19524 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__19524) : pred.call(null, G__19524);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__19539 = m__$1;
          if (G__19539) {
            var bit__4648__auto__ = G__19539.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4648__auto__ || G__19539.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__19539.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__19539);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__19539);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__19540 = sentinel;
            var G__19541 = m__$2;
            var G__19542 = cljs.core.next(ks__$1);
            sentinel = G__19540;
            m__$1 = G__19541;
            ks__$1 = G__19542;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__19543, v) {
  var vec__19548 = p__19543;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19548, 0, null);
  var ks = cljs.core.nthnext(vec__19548, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__19549, f) {
    var vec__19587 = p__19549;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19587, 0, null);
    var ks = cljs.core.nthnext(vec__19587, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__19588 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19588) : f.call(null, G__19588);
      }());
    }
  };
  var update_in__4 = function(m, p__19550, f, a) {
    var vec__19589 = p__19550;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19589, 0, null);
    var ks = cljs.core.nthnext(vec__19589, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__19590 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__19591 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19590, G__19591) : f.call(null, G__19590, G__19591);
      }());
    }
  };
  var update_in__5 = function(m, p__19551, f, a, b) {
    var vec__19592 = p__19551;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19592, 0, null);
    var ks = cljs.core.nthnext(vec__19592, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__19593 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__19594 = a;
        var G__19595 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19593, G__19594, G__19595) : f.call(null, G__19593, G__19594, G__19595);
      }());
    }
  };
  var update_in__6 = function(m, p__19552, f, a, b, c) {
    var vec__19596 = p__19552;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19596, 0, null);
    var ks = cljs.core.nthnext(vec__19596, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__19597 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__19598 = a;
        var G__19599 = b;
        var G__19600 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19597, G__19598, G__19599, G__19600) : f.call(null, G__19597, G__19598, G__19599, G__19600);
      }());
    }
  };
  var update_in__7 = function() {
    var G__19602__delegate = function(m, p__19553, f, a, b, c, args) {
      var vec__19601 = p__19553;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19601, 0, null);
      var ks = cljs.core.nthnext(vec__19601, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__19602 = function(m, p__19553, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__19603__i = 0, G__19603__a = new Array(arguments.length - 6);
        while (G__19603__i < G__19603__a.length) {
          G__19603__a[G__19603__i] = arguments[G__19603__i + 6];
          ++G__19603__i;
        }
        args = new cljs.core.IndexedSeq(G__19603__a, 0);
      }
      return G__19602__delegate.call(this, m, p__19553, f, a, b, c, args);
    };
    G__19602.cljs$lang$maxFixedArity = 6;
    G__19602.cljs$lang$applyTo = function(arglist__19604) {
      var m = cljs.core.first(arglist__19604);
      arglist__19604 = cljs.core.next(arglist__19604);
      var p__19553 = cljs.core.first(arglist__19604);
      arglist__19604 = cljs.core.next(arglist__19604);
      var f = cljs.core.first(arglist__19604);
      arglist__19604 = cljs.core.next(arglist__19604);
      var a = cljs.core.first(arglist__19604);
      arglist__19604 = cljs.core.next(arglist__19604);
      var b = cljs.core.first(arglist__19604);
      arglist__19604 = cljs.core.next(arglist__19604);
      var c = cljs.core.first(arglist__19604);
      var args = cljs.core.rest(arglist__19604);
      return G__19602__delegate(m, p__19553, f, a, b, c, args);
    };
    G__19602.cljs$core$IFn$_invoke$arity$variadic = G__19602__delegate;
    return G__19602;
  }();
  update_in = function(m, p__19553, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__19553, f);
      case 4:
        return update_in__4.call(this, m, p__19553, f, a);
      case 5:
        return update_in__5.call(this, m, p__19553, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__19553, f, a, b, c);
      default:
        var G__19605 = null;
        if (arguments.length > 6) {
          var G__19606__i = 0, G__19606__a = new Array(arguments.length - 6);
          while (G__19606__i < G__19606__a.length) {
            G__19606__a[G__19606__i] = arguments[G__19606__i + 6];
            ++G__19606__i;
          }
          G__19605 = new cljs.core.IndexedSeq(G__19606__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__19553, f, a, b, c, G__19605);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19617 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__19617) : f.call(null, G__19617);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19618 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19619 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19618, G__19619) : f.call(null, G__19618, G__19619);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19620 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19621 = x;
      var G__19622 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19620, G__19621, G__19622) : f.call(null, G__19620, G__19621, G__19622);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__19623 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__19624 = x;
      var G__19625 = y;
      var G__19626 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__19623, G__19624, G__19625, G__19626) : f.call(null, G__19623, G__19624, G__19625, G__19626);
    }());
  };
  var update__7 = function() {
    var G__19627__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__19627 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__19628__i = 0, G__19628__a = new Array(arguments.length - 6);
        while (G__19628__i < G__19628__a.length) {
          G__19628__a[G__19628__i] = arguments[G__19628__i + 6];
          ++G__19628__i;
        }
        more = new cljs.core.IndexedSeq(G__19628__a, 0);
      }
      return G__19627__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__19627.cljs$lang$maxFixedArity = 6;
    G__19627.cljs$lang$applyTo = function(arglist__19629) {
      var m = cljs.core.first(arglist__19629);
      arglist__19629 = cljs.core.next(arglist__19629);
      var k = cljs.core.first(arglist__19629);
      arglist__19629 = cljs.core.next(arglist__19629);
      var f = cljs.core.first(arglist__19629);
      arglist__19629 = cljs.core.next(arglist__19629);
      var x = cljs.core.first(arglist__19629);
      arglist__19629 = cljs.core.next(arglist__19629);
      var y = cljs.core.first(arglist__19629);
      arglist__19629 = cljs.core.next(arglist__19629);
      var z = cljs.core.first(arglist__19629);
      var more = cljs.core.rest(arglist__19629);
      return G__19627__delegate(m, k, f, x, y, z, more);
    };
    G__19627.cljs$core$IFn$_invoke$arity$variadic = G__19627__delegate;
    return G__19627;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__19630 = null;
        if (arguments.length > 6) {
          var G__19631__i = 0, G__19631__a = new Array(arguments.length - 6);
          while (G__19631__i < G__19631__a.length) {
            G__19631__a[G__19631__i] = arguments[G__19631__i + 6];
            ++G__19631__i;
          }
          G__19630 = new cljs.core.IndexedSeq(G__19631__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__19630);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__19632 = ll - 5;
      var G__19633 = r;
      ll = G__19632;
      ret = G__19633;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__19638 = cljs.core.pv_aget(node, 0);
      var G__19639 = level - 5;
      node = G__19638;
      level = G__19639;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__19640 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__19641 = level - 5;
        node = G__19640;
        level = G__19641;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__19651 = init__$2;
              var G__19652 = j + i;
              var G__19653 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19651, G__19652, G__19653) : f.call(null, G__19651, G__19652, G__19653);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__19664 = j + 1;
              var G__19665 = init__$3;
              j = G__19664;
              init__$2 = G__19665;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19654 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19654) : cljs.core.deref.call(null, G__19654);
      } else {
        var G__19666 = i + len;
        var G__19667 = init__$2;
        i = G__19666;
        init__$1 = G__19667;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__19655 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__19655) : cljs.core.tv_editable_root.call(null, G__19655);
  }(), function() {
    var G__19656 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__19656) : cljs.core.tv_editable_tail.call(null, G__19656);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__19657 = init__$2;
              var G__19658 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19657, G__19658) : f.call(null, G__19657, G__19658);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__19668 = j + 1;
              var G__19669 = init__$3;
              j = G__19668;
              init__$2 = G__19669;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19659 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19659) : cljs.core.deref.call(null, G__19659);
      } else {
        var G__19670 = i + len;
        var G__19671 = init__$2;
        i = G__19670;
        init__$1 = G__19671;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__19660 = coll__$1;
      var G__19661 = cljs.core.first_array_for_longvec(coll__$1);
      var G__19662 = 0;
      var G__19663 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19660, G__19661, G__19662, G__19663) : cljs.core.chunked_seq.call(null, G__19660, G__19661, G__19662, G__19663);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4854__auto___19672 = len;
    var i_19673 = 0;
    while (true) {
      if (i_19673 < n__4854__auto___19672) {
        new_tail[i_19673] = self__.tail[i_19673];
        var G__19674 = i_19673 + 1;
        i_19673 = G__19674;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__19675 = null;
  var G__19675__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__19675__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__19675 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19675__2.call(this, self__, k);
      case 3:
        return G__19675__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19675.cljs$core$IFn$_invoke$arity$2 = G__19675__2;
  G__19675.cljs$core$IFn$_invoke$arity$3 = G__19675__3;
  return G__19675;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args19650) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19650)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__19676 = i + 1;
        var G__19677 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__19676;
        out = G__19677;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__19678__i = 0, G__19678__a = new Array(arguments.length - 0);
      while (G__19678__i < G__19678__a.length) {
        G__19678__a[G__19678__i] = arguments[G__19678__i + 0];
        ++G__19678__i;
      }
      args = new cljs.core.IndexedSeq(G__19678__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__19679) {
    var args = cljs.core.seq(arglist__19679);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__19680 = self__.vec;
      var G__19681 = self__.node;
      var G__19682 = self__.i;
      var G__19683 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19680, G__19681, G__19682, G__19683) : cljs.core.chunked_seq.call(null, G__19680, G__19681, G__19682, G__19683);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__19684 = self__.vec;
    var G__19685 = self__.i + self__.off;
    var G__19686 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__19684, G__19685, G__19686) : cljs.core.subvec.call(null, G__19684, G__19685, G__19686);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__19687 = self__.vec;
    var G__19688 = self__.i + self__.off;
    var G__19689 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__19687, G__19688, G__19689) : cljs.core.subvec.call(null, G__19687, G__19688, G__19689);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__19690 = self__.vec;
      var G__19691 = self__.node;
      var G__19692 = self__.i;
      var G__19693 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19690, G__19691, G__19692, G__19693) : cljs.core.chunked_seq.call(null, G__19690, G__19691, G__19692, G__19693);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__19694 = self__.vec;
    var G__19695 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__19696 = end;
    var G__19697 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19694, G__19695, G__19696, G__19697) : cljs.core.chunked_seq.call(null, G__19694, G__19695, G__19696, G__19697);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__19698 = self__.vec;
  var G__19699 = self__.node;
  var G__19700 = self__.i;
  var G__19701 = self__.off;
  var G__19702 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__19698, G__19699, G__19700, G__19701, G__19702) : cljs.core.chunked_seq.call(null, G__19698, G__19699, G__19700, G__19701, G__19702);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__19703 = self__.vec;
    var G__19704 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__19705 = end;
    var G__19706 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__19703, G__19704, G__19705, G__19706) : cljs.core.chunked_seq.call(null, G__19703, G__19704, G__19705, G__19706);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__19708 = self__.meta;
  var G__19709 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__19710 = self__.start;
  var G__19711 = function() {
    var x__4284__auto__ = self__.end;
    var y__4285__auto__ = v_pos + 1;
    return x__4284__auto__ > y__4285__auto__ ? x__4284__auto__ : y__4285__auto__;
  }();
  var G__19712 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19708, G__19709, G__19710, G__19711, G__19712) : cljs.core.build_subvec.call(null, G__19708, G__19709, G__19710, G__19711, G__19712);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__19713 = self__.meta;
    var G__19714 = self__.v;
    var G__19715 = self__.start;
    var G__19716 = self__.end - 1;
    var G__19717 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19713, G__19714, G__19715, G__19716, G__19717) : cljs.core.build_subvec.call(null, G__19713, G__19714, G__19715, G__19716, G__19717);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__19719 = meta__$1;
  var G__19720 = self__.v;
  var G__19721 = self__.start;
  var G__19722 = self__.end;
  var G__19723 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19719, G__19720, G__19721, G__19722, G__19723) : cljs.core.build_subvec.call(null, G__19719, G__19720, G__19721, G__19722, G__19723);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__19724 = self__.meta;
  var G__19725 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__19726 = self__.start;
  var G__19727 = self__.end + 1;
  var G__19728 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__19724, G__19725, G__19726, G__19727, G__19728) : cljs.core.build_subvec.call(null, G__19724, G__19725, G__19726, G__19727, G__19728);
};
cljs.core.Subvec.prototype.call = function() {
  var G__19729 = null;
  var G__19729__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__19729__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__19729 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19729__2.call(this, self__, k);
      case 3:
        return G__19729__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19729.cljs$core$IFn$_invoke$arity$2 = G__19729__2;
  G__19729.cljs$core$IFn$_invoke$arity$3 = G__19729__3;
  return G__19729;
}();
cljs.core.Subvec.prototype.apply = function(self__, args19707) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19707)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__19730 = meta;
      var G__19731 = v.v;
      var G__19732 = v.start + start;
      var G__19733 = v.start + end;
      var G__19734 = __hash;
      meta = G__19730;
      v = G__19731;
      start = G__19732;
      end = G__19733;
      __hash = G__19734;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj19741 = {};
    return obj19741;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__19749 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__19750 = level - 5;
        node = G__19749;
        level = G__19750;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__19754 = null;
  var G__19754__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19754__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19754 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19754__2.call(this, self__, k);
      case 3:
        return G__19754__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19754.cljs$core$IFn$_invoke$arity$2 = G__19754__2;
  G__19754.cljs$core$IFn$_invoke$arity$3 = G__19754__3;
  return G__19754;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args19751) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19751)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3967__auto__ = self__.front;
    if (cljs.core.truth_(or__3967__auto__)) {
      return or__3967__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3967__auto__ = self__.rear;
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__19755 = i + incr;
        i = G__19755;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__19756 = i + 1;
      var G__19757 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__19756;
      out = G__19757;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj19761 = {};
    return obj19761;
  }();
  var l = ks.length;
  var i_19762 = 0;
  while (true) {
    if (i_19762 < l) {
      var k_19763 = ks[i_19762];
      new_obj[k_19763] = obj[k_19763];
      var G__19764 = i_19762 + 1;
      i_19762 = G__19764;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3955__auto__ = function() {
      var G__19768 = k;
      return goog.isString(G__19768);
    }();
    if (cljs.core.truth_(and__3955__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3955__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__19769 = init__$1;
        var G__19770 = k;
        var G__19771 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19769, G__19770, G__19771) : f.call(null, G__19769, G__19770, G__19771);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19772 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19772) : cljs.core.deref.call(null, G__19772);
      } else {
        var G__19778 = cljs.core.rest(keys__$1);
        var G__19779 = init__$2;
        keys__$1 = G__19778;
        init__$1 = G__19779;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3955__auto__ = function() {
      var G__19774 = k;
      return goog.isString(G__19774);
    }();
    if (cljs.core.truth_(and__3955__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3955__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__19775 = k;
    return goog.isString(G__19775);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3955__auto__ = function() {
      var G__19777 = k;
      return goog.isString(G__19777);
    }();
    if (cljs.core.truth_(and__3955__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3955__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__19765_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__19765_SHARP_, self__.strobj[p1__19765_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__19780 = null;
  var G__19780__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19780__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19780 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19780__2.call(this, self__, k);
      case 3:
        return G__19780__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19780.cljs$core$IFn$_invoke$arity$2 = G__19780__2;
  G__19780.cljs$core$IFn$_invoke$arity$3 = G__19780__3;
  return G__19780;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args19766) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19766)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj19782 = {};
  return obj19782;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__19783 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19783, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19783, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__19784 = i + 2;
        i = G__19784;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__19785 = i + 2;
        i = G__19785;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__19786 = i + 2;
        i = G__19786;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__19787 = i + 2;
        i = G__19787;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__19788 = i + 2;
        i = G__19788;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3967__auto__ = function() {
        var G__19792 = k;
        return goog.isString(G__19792);
      }();
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_19793 = 0;
  while (true) {
    if (i_19793 < l) {
      narr[i_19793] = arr[i_19793];
      var G__19794 = i_19793 + 1;
      i_19793 = G__19794;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__19796 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__19796) : cljs.core.keys.call(null, G__19796);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__19797 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__19797) : cljs.core.vals.call(null, G__19797);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19798 = cljs.core.seq(coll);
  var chunk__19799 = null;
  var count__19800 = 0;
  var i__19801 = 0;
  while (true) {
    if (i__19801 < count__19800) {
      var vec__19802 = chunk__19799.cljs$core$IIndexed$_nth$arity$2(null, i__19801);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19802, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19802, 1, null);
      var G__19803_19816 = v;
      var G__19804_19817 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19803_19816, G__19804_19817) : f.call(null, G__19803_19816, G__19804_19817);
      var G__19818 = seq__19798;
      var G__19819 = chunk__19799;
      var G__19820 = count__19800;
      var G__19821 = i__19801 + 1;
      seq__19798 = G__19818;
      chunk__19799 = G__19819;
      count__19800 = G__19820;
      i__19801 = G__19821;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__19798);
      if (temp__4126__auto__) {
        var seq__19798__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__19798__$1)) {
          var c__4754__auto__ = cljs.core.chunk_first(seq__19798__$1);
          var G__19822 = cljs.core.chunk_rest(seq__19798__$1);
          var G__19823 = c__4754__auto__;
          var G__19824 = cljs.core.count(c__4754__auto__);
          var G__19825 = 0;
          seq__19798 = G__19822;
          chunk__19799 = G__19823;
          count__19800 = G__19824;
          i__19801 = G__19825;
          continue;
        } else {
          var vec__19805 = cljs.core.first(seq__19798__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19805, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19805, 1, null);
          var G__19806_19826 = v;
          var G__19807_19827 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19806_19826, G__19807_19827) : f.call(null, G__19806_19826, G__19807_19827);
          var G__19828 = cljs.core.next(seq__19798__$1);
          var G__19829 = null;
          var G__19830 = 0;
          var G__19831 = 0;
          seq__19798 = G__19828;
          chunk__19799 = G__19829;
          count__19800 = G__19830;
          i__19801 = G__19831;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__19808 = init__$1;
        var G__19809 = self__.arr[i];
        var G__19810 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19808, G__19809, G__19810) : f.call(null, G__19808, G__19809, G__19810);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19811 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19811) : cljs.core.deref.call(null, G__19811);
      } else {
        var G__19832 = i + 2;
        var G__19833 = init__$2;
        i = G__19832;
        init__$1 = G__19833;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__19812 = other;
    if (G__19812) {
      var bit__4641__auto__ = G__19812.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4641__auto__ || G__19812.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__19834 = i + 2;
              i = G__19834;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj19814 = {};
    return obj19814;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__19835 = s + 2;
            var G__19836 = d;
            s = G__19835;
            d = G__19836;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__19837 = s + 2;
            var G__19838 = d + 2;
            s = G__19837;
            d = G__19838;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__19815 = cljs.core.aclone(self__.arr);
        G__19815[idx + 1] = v;
        return G__19815;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__19839 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__19840 = cljs.core.next(es);
          ret = G__19839;
          es = G__19840;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__19841 = null;
  var G__19841__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19841__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19841 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19841__2.call(this, self__, k);
      case 3:
        return G__19841__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19841.cljs$core$IFn$_invoke$arity$2 = G__19841__2;
  G__19841.cljs$core$IFn$_invoke$arity$3 = G__19841__3;
  return G__19841;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args19795) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19795)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__19842 = i + 2;
        var G__19843 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__19842;
        ret = G__19843;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__19844_19852 = self__.arr;
      G__19844_19852.pop();
      G__19844_19852.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__19845 = self__.len;
          var G__19846 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__19845, G__19846) : cljs.core.array__GT_transient_hash_map.call(null, G__19845, G__19846);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__19847 = o;
      if (G__19847) {
        var bit__4648__auto__ = G__19847.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4648__auto__ || G__19847.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__19847.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__19847);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__19847);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__19848 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19848) : cljs.core.key.call(null, G__19848);
      }(), function() {
        var G__19849 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19849) : cljs.core.val.call(null, G__19849);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__19853 = cljs.core.next(es);
          var G__19854 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__19850 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19850) : cljs.core.key.call(null, G__19850);
          }(), function() {
            var G__19851 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19851) : cljs.core.val.call(null, G__19851);
          }());
          es = G__19853;
          tcoll__$2 = G__19854;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__19855 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__19856 = i + 2;
      out = G__19855;
      i = G__19856;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__19859 = cljs.core.aclone(arr);
    G__19859[i] = a;
    return G__19859;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__19860 = cljs.core.aclone(arr);
    G__19860[i] = a;
    G__19860[j] = b;
    return G__19860;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__19865 = init__$1;
          var G__19866 = k;
          var G__19867 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19865, G__19866, G__19867) : f.call(null, G__19865, G__19866, G__19867);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__19868 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19868) : cljs.core.deref.call(null, G__19868);
      } else {
        var G__19869 = i + 2;
        var G__19870 = init__$2;
        i = G__19869;
        init__$1 = G__19870;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__19871 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__19871) : cljs.core.create_inode_seq.call(null, G__19871);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_19885 = 0;
        var j_19886 = 0;
        while (true) {
          if (i_19885 < 32) {
            if ((self__.bitmap >>> i_19885 & 1) === 0) {
              var G__19887 = i_19885 + 1;
              var G__19888 = j_19886;
              i_19885 = G__19887;
              j_19886 = G__19888;
              continue;
            } else {
              nodes[i_19885] = !(self__.arr[j_19886] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_19886]), self__.arr[j_19886], self__.arr[j_19886 + 1], added_leaf_QMARK_) : self__.arr[j_19886 + 1];
              var G__19889 = i_19885 + 1;
              var G__19890 = j_19886 + 2;
              i_19885 = G__19889;
              j_19886 = G__19890;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__19872 = edit__$1;
          var G__19873 = shift + 5;
          var G__19874 = key_or_nil;
          var G__19875 = val_or_node;
          var G__19876 = hash;
          var G__19877 = key;
          var G__19878 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__19872, G__19873, G__19874, G__19875, G__19876, G__19877, G__19878) : cljs.core.create_node.call(null, G__19872, G__19873, G__19874, G__19875, G__19876, G__19877, G__19878);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_19891 = 0;
      var j_19892 = 0;
      while (true) {
        if (i_19891 < 32) {
          if ((self__.bitmap >>> i_19891 & 1) === 0) {
            var G__19893 = i_19891 + 1;
            var G__19894 = j_19892;
            i_19891 = G__19893;
            j_19892 = G__19894;
            continue;
          } else {
            nodes[i_19891] = !(self__.arr[j_19892] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_19892]), self__.arr[j_19892], self__.arr[j_19892 + 1], added_leaf_QMARK_) : self__.arr[j_19892 + 1];
            var G__19895 = i_19891 + 1;
            var G__19896 = j_19892 + 2;
            i_19891 = G__19895;
            j_19892 = G__19896;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__19879 = shift + 5;
          var G__19880 = key_or_nil;
          var G__19881 = val_or_node;
          var G__19882 = hash;
          var G__19883 = key;
          var G__19884 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__19879, G__19880, G__19881, G__19882, G__19883, G__19884) : cljs.core.create_node.call(null, G__19879, G__19880, G__19881, G__19882, G__19883, G__19884);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__19897 = i + 1;
        var G__19898 = j + 2;
        var G__19899 = bitmap | 1 << i;
        i = G__19897;
        j = G__19898;
        bitmap = G__19899;
        continue;
      } else {
        var G__19900 = i + 1;
        var G__19901 = j;
        var G__19902 = bitmap;
        i = G__19900;
        j = G__19901;
        bitmap = G__19902;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__19903 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__19903) : cljs.core.create_array_node_seq.call(null, G__19903);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__19904 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19904) : cljs.core.deref.call(null, G__19904);
        } else {
          var G__19905 = i + 1;
          var G__19906 = init__$2;
          i = G__19905;
          init__$1 = G__19906;
          continue;
        }
      } else {
        var G__19907 = i + 1;
        var G__19908 = init__$1;
        i = G__19907;
        init__$1 = G__19908;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__19909 = i + 2;
        i = G__19909;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__19910 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__19910) : cljs.core.create_inode_seq.call(null, G__19910);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__19911 = self__.nodes;
    var G__19912 = self__.i + 2;
    var G__19913 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__19911, G__19912, G__19913) : cljs.core.create_inode_seq.call(null, G__19911, G__19912, G__19913);
  } else {
    var G__19914 = self__.nodes;
    var G__19915 = self__.i;
    var G__19916 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__19914, G__19915, G__19916) : cljs.core.create_inode_seq.call(null, G__19914, G__19915, G__19916);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__19920 = j + 2;
                j = G__19920;
                continue;
              }
            } else {
              var G__19921 = j + 2;
              j = G__19921;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__19922 = null;
  var G__19923 = self__.nodes;
  var G__19924 = self__.i;
  var G__19925 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__19922, G__19923, G__19924, G__19925) : cljs.core.create_array_node_seq.call(null, G__19922, G__19923, G__19924, G__19925);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__19930 = j + 1;
              j = G__19930;
              continue;
            }
          } else {
            var G__19931 = j + 1;
            j = G__19931;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__19933 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__19933) : cljs.core.keys.call(null, G__19933);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__19934 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__19934) : cljs.core.vals.call(null, G__19934);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__19935 = cljs.core.seq(coll);
  var chunk__19936 = null;
  var count__19937 = 0;
  var i__19938 = 0;
  while (true) {
    if (i__19938 < count__19937) {
      var vec__19939 = chunk__19936.cljs$core$IIndexed$_nth$arity$2(null, i__19938);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19939, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19939, 1, null);
      var G__19940_19951 = v;
      var G__19941_19952 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19940_19951, G__19941_19952) : f.call(null, G__19940_19951, G__19941_19952);
      var G__19953 = seq__19935;
      var G__19954 = chunk__19936;
      var G__19955 = count__19937;
      var G__19956 = i__19938 + 1;
      seq__19935 = G__19953;
      chunk__19936 = G__19954;
      count__19937 = G__19955;
      i__19938 = G__19956;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__19935);
      if (temp__4126__auto__) {
        var seq__19935__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__19935__$1)) {
          var c__4754__auto__ = cljs.core.chunk_first(seq__19935__$1);
          var G__19957 = cljs.core.chunk_rest(seq__19935__$1);
          var G__19958 = c__4754__auto__;
          var G__19959 = cljs.core.count(c__4754__auto__);
          var G__19960 = 0;
          seq__19935 = G__19957;
          chunk__19936 = G__19958;
          count__19937 = G__19959;
          i__19938 = G__19960;
          continue;
        } else {
          var vec__19942 = cljs.core.first(seq__19935__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19942, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19942, 1, null);
          var G__19943_19961 = v;
          var G__19944_19962 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19943_19961, G__19944_19962) : f.call(null, G__19943_19961, G__19944_19962);
          var G__19963 = cljs.core.next(seq__19935__$1);
          var G__19964 = null;
          var G__19965 = 0;
          var G__19966 = 0;
          seq__19935 = G__19963;
          chunk__19936 = G__19964;
          count__19937 = G__19965;
          i__19938 = G__19966;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__19945 = init;
    var G__19946 = null;
    var G__19947 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19945, G__19946, G__19947) : f.call(null, G__19945, G__19946, G__19947);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__19948 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19948) : cljs.core.deref.call(null, G__19948);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj19950 = {};
    return obj19950;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__19967 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__19968 = cljs.core.next(es);
          ret = G__19967;
          es = G__19968;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__19969 = null;
  var G__19969__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19969__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19969 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19969__2.call(this, self__, k);
      case 3:
        return G__19969__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19969.cljs$core$IFn$_invoke$arity$2 = G__19969__2;
  G__19969.cljs$core$IFn$_invoke$arity$3 = G__19969__3;
  return G__19969;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args19932) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args19932)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__19970 = i + 2;
      var G__19971 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__19970;
      ret = G__19971;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__19972 = i + 1;
      var G__19973 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__19972;
      out = G__19973;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__19974 = o;
      if (G__19974) {
        var bit__4648__auto__ = G__19974.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4648__auto__ || G__19974.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__19974.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__19974);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__19974);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__19975 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19975) : cljs.core.key.call(null, G__19975);
      }(), function() {
        var G__19976 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19976) : cljs.core.val.call(null, G__19976);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__19979 = cljs.core.next(es);
          var G__19980 = tcoll__$1.assoc_BANG_(function() {
            var G__19977 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19977) : cljs.core.key.call(null, G__19977);
          }(), function() {
            var G__19978 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19978) : cljs.core.val.call(null, G__19978);
          }());
          es = G__19979;
          tcoll__$1 = G__19980;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__19981 = ascending_QMARK_ ? t.left : t.right;
      var G__19982 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__19981;
      stack__$1 = G__19982;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__19995 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19995) : cljs.core.deref.call(null, G__19995);
  } else {
    var init__$2 = function() {
      var G__19996 = init__$1;
      var G__19997 = node.key;
      var G__19998 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__19996, G__19997, G__19998) : f.call(null, G__19996, G__19997, G__19998);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__19999 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19999) : cljs.core.deref.call(null, G__19999);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__20000 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20000) : cljs.core.deref.call(null, G__20000);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__20002 = null;
  var G__20002__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20002__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20002 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20002__2.call(this, self__, k);
      case 3:
        return G__20002__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20002.cljs$core$IFn$_invoke$arity$2 = G__20002__2;
  G__20002.cljs$core$IFn$_invoke$arity$3 = G__20002__3;
  return G__20002;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args20001) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20001)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__20004 = null;
  var G__20004__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20004__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20004 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20004__2.call(this, self__, k);
      case 3:
        return G__20004__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20004.cljs$core$IFn$_invoke$arity$2 = G__20004__2;
  G__20004.cljs$core$IFn$_invoke$arity$3 = G__20004__3;
  return G__20004;
}();
cljs.core.RedNode.prototype.apply = function(self__, args20003) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20003)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__20017 = k;
      var G__20018 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20017, G__20018) : comp.call(null, G__20017, G__20018);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app__$1 = tree_map_append(left.right, right.left);
          if (app__$1 instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app__$1.key, app__$1.val, new cljs.core.RedNode(left.key, left.val, left.left, app__$1.left, null), new cljs.core.RedNode(right.key, right.val, app__$1.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__$1, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app__$1 = tree_map_append(left.right, right.left);
          if (app__$1 instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app__$1.key, app__$1.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__$1.left, null), new cljs.core.BlackNode(right.key, right.val, app__$1.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__$1, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__20037 = k;
      var G__20038 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20037, G__20038) : comp.call(null, G__20037, G__20038);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__20049 = k;
    var G__20050 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20049, G__20050) : comp.call(null, G__20049, G__20050);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20052 = cljs.core.seq(coll);
  var chunk__20053 = null;
  var count__20054 = 0;
  var i__20055 = 0;
  while (true) {
    if (i__20055 < count__20054) {
      var vec__20056 = chunk__20053.cljs$core$IIndexed$_nth$arity$2(null, i__20055);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20056, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20056, 1, null);
      var G__20057_20069 = v;
      var G__20058_20070 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20057_20069, G__20058_20070) : f.call(null, G__20057_20069, G__20058_20070);
      var G__20071 = seq__20052;
      var G__20072 = chunk__20053;
      var G__20073 = count__20054;
      var G__20074 = i__20055 + 1;
      seq__20052 = G__20071;
      chunk__20053 = G__20072;
      count__20054 = G__20073;
      i__20055 = G__20074;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20052);
      if (temp__4126__auto__) {
        var seq__20052__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20052__$1)) {
          var c__4754__auto__ = cljs.core.chunk_first(seq__20052__$1);
          var G__20075 = cljs.core.chunk_rest(seq__20052__$1);
          var G__20076 = c__4754__auto__;
          var G__20077 = cljs.core.count(c__4754__auto__);
          var G__20078 = 0;
          seq__20052 = G__20075;
          chunk__20053 = G__20076;
          count__20054 = G__20077;
          i__20055 = G__20078;
          continue;
        } else {
          var vec__20059 = cljs.core.first(seq__20052__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20059, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20059, 1, null);
          var G__20060_20079 = v;
          var G__20061_20080 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20060_20079, G__20061_20080) : f.call(null, G__20060_20079, G__20061_20080);
          var G__20081 = cljs.core.next(seq__20052__$1);
          var G__20082 = null;
          var G__20083 = 0;
          var G__20084 = 0;
          seq__20052 = G__20081;
          chunk__20053 = G__20082;
          count__20054 = G__20083;
          i__20055 = G__20084;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20062 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__20062) : cljs.core.keys.call(null, G__20062);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__20063 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__20063) : cljs.core.vals.call(null, G__20063);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__20064 = k;
        var G__20065 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__20064, G__20065) : self__.comp.call(null, G__20064, G__20065);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__20085 = t.left;
          t = G__20085;
          continue;
        } else {
          var G__20086 = t.right;
          t = G__20086;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__20087 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__20088 = cljs.core.next(es);
          ret = G__20087;
          es = G__20088;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__20089 = null;
  var G__20089__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20089__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20089 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20089__2.call(this, self__, k);
      case 3:
        return G__20089__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20089.cljs$core$IFn$_invoke$arity$2 = G__20089__2;
  G__20089.cljs$core$IFn$_invoke$arity$3 = G__20089__3;
  return G__20089;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args20051) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20051)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__20066 = k;
          var G__20067 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__20066, G__20067) : self__.comp.call(null, G__20066, G__20067);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__20090 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__20091 = t.left;
              stack = G__20090;
              t = G__20091;
              continue;
            } else {
              var G__20092 = stack;
              var G__20093 = t.right;
              stack = G__20092;
              t = G__20093;
              continue;
            }
          } else {
            if (c > 0) {
              var G__20094 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__20095 = t.right;
              stack = G__20094;
              t = G__20095;
              continue;
            } else {
              var G__20096 = stack;
              var G__20097 = t.left;
              stack = G__20096;
              t = G__20097;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__20068 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__20068) : cljs.core.key.call(null, G__20068);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__20098 = cljs.core.nnext(in$);
        var G__20099 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__20098;
        out = G__20099;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__20100__i = 0, G__20100__a = new Array(arguments.length - 0);
      while (G__20100__i < G__20100__a.length) {
        G__20100__a[G__20100__i] = arguments[G__20100__i + 0];
        ++G__20100__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20100__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__20101) {
    var keyvals = cljs.core.seq(arglist__20101);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__20102__i = 0, G__20102__a = new Array(arguments.length - 0);
      while (G__20102__i < G__20102__a.length) {
        G__20102__a[G__20102__i] = arguments[G__20102__i + 0];
        ++G__20102__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20102__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__20103) {
    var keyvals = cljs.core.seq(arglist__20103);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj20107 = {};
      return obj20107;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__20108 = cljs.core.nnext(kvs);
        kvs = G__20108;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__20109__i = 0, G__20109__a = new Array(arguments.length - 0);
      while (G__20109__i < G__20109__a.length) {
        G__20109__a[G__20109__i] = arguments[G__20109__i + 0];
        ++G__20109__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20109__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__20110) {
    var keyvals = cljs.core.seq(arglist__20110);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__20111 = cljs.core.nnext(in$);
        var G__20112 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__20111;
        out = G__20112;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__20113__i = 0, G__20113__a = new Array(arguments.length - 0);
      while (G__20113__i < G__20113__a.length) {
        G__20113__a[G__20113__i] = arguments[G__20113__i + 0];
        ++G__20113__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20113__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__20114) {
    var keyvals = cljs.core.seq(arglist__20114);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__20115 = cljs.core.nnext(in$);
        var G__20116 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__20115;
        out = G__20116;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__20117__i = 0, G__20117__a = new Array(arguments.length - 1);
      while (G__20117__i < G__20117__a.length) {
        G__20117__a[G__20117__i] = arguments[G__20117__i + 1];
        ++G__20117__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__20117__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__20118) {
    var comparator = cljs.core.first(arglist__20118);
    var keyvals = cljs.core.rest(arglist__20118);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20119 = self__.mseq;
    if (G__20119) {
      var bit__4648__auto__ = G__20119.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4648__auto__ || G__20119.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20119.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20119);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20119);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20120 = self__.mseq;
    if (G__20120) {
      var bit__4648__auto__ = G__20120.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4648__auto__ || G__20120.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20120.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20120);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20120);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20121 = self__.mseq;
    if (G__20121) {
      var bit__4648__auto__ = G__20121.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4648__auto__ || G__20121.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20121.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20121);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20121);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20122 = self__.mseq;
    if (G__20122) {
      var bit__4648__auto__ = G__20122.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4648__auto__ || G__20122.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20122.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20122);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__20122);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__20123_SHARP_, p2__20124_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3967__auto__ = p1__20123_SHARP_;
          if (cljs.core.truth_(or__3967__auto__)) {
            return or__3967__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__20124_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__20125__i = 0, G__20125__a = new Array(arguments.length - 0);
      while (G__20125__i < G__20125__a.length) {
        G__20125__a[G__20125__i] = arguments[G__20125__i + 0];
        ++G__20125__i;
      }
      maps = new cljs.core.IndexedSeq(G__20125__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__20126) {
    var maps = cljs.core.seq(arglist__20126);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__20129 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__20130 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20129, G__20130) : f.call(null, G__20129, G__20130);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3967__auto__ = m1;
            if (cljs.core.truth_(or__3967__auto__)) {
              return or__3967__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__20131__i = 0, G__20131__a = new Array(arguments.length - 1);
      while (G__20131__i < G__20131__a.length) {
        G__20131__a[G__20131__i] = arguments[G__20131__i + 1];
        ++G__20131__i;
      }
      maps = new cljs.core.IndexedSeq(G__20131__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__20132) {
    var f = cljs.core.first(arglist__20132);
    var maps = cljs.core.rest(arglist__20132);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__20133 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__20134 = cljs.core.next(keys);
      ret = G__20133;
      keys = G__20134;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20137 = cljs.core.seq(coll);
  var chunk__20138 = null;
  var count__20139 = 0;
  var i__20140 = 0;
  while (true) {
    if (i__20140 < count__20139) {
      var vec__20141 = chunk__20138.cljs$core$IIndexed$_nth$arity$2(null, i__20140);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20141, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20141, 1, null);
      var G__20142_20147 = v;
      var G__20143_20148 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20142_20147, G__20143_20148) : f.call(null, G__20142_20147, G__20143_20148);
      var G__20149 = seq__20137;
      var G__20150 = chunk__20138;
      var G__20151 = count__20139;
      var G__20152 = i__20140 + 1;
      seq__20137 = G__20149;
      chunk__20138 = G__20150;
      count__20139 = G__20151;
      i__20140 = G__20152;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20137);
      if (temp__4126__auto__) {
        var seq__20137__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20137__$1)) {
          var c__4754__auto__ = cljs.core.chunk_first(seq__20137__$1);
          var G__20153 = cljs.core.chunk_rest(seq__20137__$1);
          var G__20154 = c__4754__auto__;
          var G__20155 = cljs.core.count(c__4754__auto__);
          var G__20156 = 0;
          seq__20137 = G__20153;
          chunk__20138 = G__20154;
          count__20139 = G__20155;
          i__20140 = G__20156;
          continue;
        } else {
          var vec__20144 = cljs.core.first(seq__20137__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20144, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20144, 1, null);
          var G__20145_20157 = v;
          var G__20146_20158 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20145_20157, G__20146_20158) : f.call(null, G__20145_20157, G__20146_20158);
          var G__20159 = cljs.core.next(seq__20137__$1);
          var G__20160 = null;
          var G__20161 = 0;
          var G__20162 = 0;
          seq__20137 = G__20159;
          chunk__20138 = G__20160;
          count__20139 = G__20161;
          i__20140 = G__20162;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__20135_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__20135_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__20163 = null;
  var G__20163__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20163__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20163 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20163__2.call(this, self__, k);
      case 3:
        return G__20163__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20163.cljs$core$IFn$_invoke$arity$2 = G__20163__2;
  G__20163.cljs$core$IFn$_invoke$arity$3 = G__20163__3;
  return G__20163;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args20136) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20136)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__20164 = i + 1;
        var G__20165 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__20164;
        out = G__20165;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__20166 = i + 1;
        var G__20167 = cljs.core._conj_BANG_(out, items[i]);
        i = G__20166;
        out = G__20167;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__20169 = null;
  var G__20169__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__20169__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__20169 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20169__2.call(this, self__, k);
      case 3:
        return G__20169__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20169.cljs$core$IFn$_invoke$arity$2 = G__20169__2;
  G__20169.cljs$core$IFn$_invoke$arity$3 = G__20169__3;
  return G__20169;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args20168) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20168)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20172 = cljs.core.seq(coll);
  var chunk__20173 = null;
  var count__20174 = 0;
  var i__20175 = 0;
  while (true) {
    if (i__20175 < count__20174) {
      var vec__20176 = chunk__20173.cljs$core$IIndexed$_nth$arity$2(null, i__20175);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20176, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20176, 1, null);
      var G__20177_20182 = v;
      var G__20178_20183 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20177_20182, G__20178_20183) : f.call(null, G__20177_20182, G__20178_20183);
      var G__20184 = seq__20172;
      var G__20185 = chunk__20173;
      var G__20186 = count__20174;
      var G__20187 = i__20175 + 1;
      seq__20172 = G__20184;
      chunk__20173 = G__20185;
      count__20174 = G__20186;
      i__20175 = G__20187;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20172);
      if (temp__4126__auto__) {
        var seq__20172__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20172__$1)) {
          var c__4754__auto__ = cljs.core.chunk_first(seq__20172__$1);
          var G__20188 = cljs.core.chunk_rest(seq__20172__$1);
          var G__20189 = c__4754__auto__;
          var G__20190 = cljs.core.count(c__4754__auto__);
          var G__20191 = 0;
          seq__20172 = G__20188;
          chunk__20173 = G__20189;
          count__20174 = G__20190;
          i__20175 = G__20191;
          continue;
        } else {
          var vec__20179 = cljs.core.first(seq__20172__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20179, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20179, 1, null);
          var G__20180_20192 = v;
          var G__20181_20193 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20180_20192, G__20181_20193) : f.call(null, G__20180_20192, G__20181_20193);
          var G__20194 = cljs.core.next(seq__20172__$1);
          var G__20195 = null;
          var G__20196 = 0;
          var G__20197 = 0;
          seq__20172 = G__20194;
          chunk__20173 = G__20195;
          count__20174 = G__20196;
          i__20175 = G__20197;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__20170_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__20170_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__20198 = null;
  var G__20198__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20198__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20198 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20198__2.call(this, self__, k);
      case 3:
        return G__20198__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20198.cljs$core$IFn$_invoke$arity$2 = G__20198__2;
  G__20198.cljs$core$IFn$_invoke$arity$3 = G__20198__3;
  return G__20198;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args20171) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20171)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4848__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4848__auto__.length) {
        var G__20199 = i + 1;
        var G__20200 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__20199;
        res = G__20200;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__20201 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__20202 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__20201;
          out = G__20202;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__20203__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__20203 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__20204__i = 0, G__20204__a = new Array(arguments.length - 0);
        while (G__20204__i < G__20204__a.length) {
          G__20204__a[G__20204__i] = arguments[G__20204__i + 0];
          ++G__20204__i;
        }
        keys = new cljs.core.IndexedSeq(G__20204__a, 0);
      }
      return G__20203__delegate.call(this, keys);
    };
    G__20203.cljs$lang$maxFixedArity = 0;
    G__20203.cljs$lang$applyTo = function(arglist__20205) {
      var keys = cljs.core.seq(arglist__20205);
      return G__20203__delegate(keys);
    };
    G__20203.cljs$core$IFn$_invoke$arity$variadic = G__20203__delegate;
    return G__20203;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__20206 = null;
        if (arguments.length > 0) {
          var G__20207__i = 0, G__20207__a = new Array(arguments.length - 0);
          while (G__20207__i < G__20207__a.length) {
            G__20207__a[G__20207__i] = arguments[G__20207__i + 0];
            ++G__20207__i;
          }
          G__20206 = new cljs.core.IndexedSeq(G__20207__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__20206);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__20208__i = 0, G__20208__a = new Array(arguments.length - 0);
      while (G__20208__i < G__20208__a.length) {
        G__20208__a[G__20208__i] = arguments[G__20208__i + 0];
        ++G__20208__i;
      }
      keys = new cljs.core.IndexedSeq(G__20208__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__20209) {
    var keys = cljs.core.seq(arglist__20209);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__20210__i = 0, G__20210__a = new Array(arguments.length - 1);
      while (G__20210__i < G__20210__a.length) {
        G__20210__a[G__20210__i] = arguments[G__20210__i + 1];
        ++G__20210__i;
      }
      keys = new cljs.core.IndexedSeq(G__20210__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__20211) {
    var comparator = cljs.core.first(arglist__20211);
    var keys = cljs.core.rest(arglist__20211);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__20212_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__20212_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__20212_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__20213_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__20213_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__20213_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__20234 = null;
          var G__20234__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20234__1 = function(result) {
            var G__20224 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20224) : rf.call(null, G__20224);
          };
          var G__20234__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__20225 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20225) : cljs.core.deref.call(null, G__20225);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__20226 = result;
              var G__20227 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20226, G__20227) : rf.call(null, G__20226, G__20227);
            }
          };
          G__20234 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20234__0.call(this);
              case 1:
                return G__20234__1.call(this, result);
              case 2:
                return G__20234__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20234.cljs$core$IFn$_invoke$arity$0 = G__20234__0;
          G__20234.cljs$core$IFn$_invoke$arity$1 = G__20234__1;
          G__20234.cljs$core$IFn$_invoke$arity$2 = G__20234__2;
          return G__20234;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__20232, seen__$1) {
          while (true) {
            var vec__20233 = p__20232;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20233, 0, null);
            var xs__$1 = vec__20233;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__20235 = cljs.core.rest(s);
                var G__20236 = seen__$1;
                p__20232 = G__20235;
                seen__$1 = G__20236;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__20237 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__20238 = cljs.core.next(s__$1);
      ret = G__20237;
      s__$1 = G__20238;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__20240 = x;
    if (G__20240) {
      var bit__4641__auto__ = G__20240.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4641__auto__ || G__20240.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__20241 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__20242 = cljs.core.next(ks);
      var G__20243 = cljs.core.next(vs);
      map = G__20241;
      ks = G__20242;
      vs = G__20243;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__20254 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20254) : k.call(null, G__20254);
    }() > function() {
      var G__20255 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20255) : k.call(null, G__20255);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__20256__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20244_SHARP_, p2__20245_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__20244_SHARP_, p2__20245_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__20256 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__20257__i = 0, G__20257__a = new Array(arguments.length - 3);
        while (G__20257__i < G__20257__a.length) {
          G__20257__a[G__20257__i] = arguments[G__20257__i + 3];
          ++G__20257__i;
        }
        more = new cljs.core.IndexedSeq(G__20257__a, 0);
      }
      return G__20256__delegate.call(this, k, x, y, more);
    };
    G__20256.cljs$lang$maxFixedArity = 3;
    G__20256.cljs$lang$applyTo = function(arglist__20258) {
      var k = cljs.core.first(arglist__20258);
      arglist__20258 = cljs.core.next(arglist__20258);
      var x = cljs.core.first(arglist__20258);
      arglist__20258 = cljs.core.next(arglist__20258);
      var y = cljs.core.first(arglist__20258);
      var more = cljs.core.rest(arglist__20258);
      return G__20256__delegate(k, x, y, more);
    };
    G__20256.cljs$core$IFn$_invoke$arity$variadic = G__20256__delegate;
    return G__20256;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__20259 = null;
        if (arguments.length > 3) {
          var G__20260__i = 0, G__20260__a = new Array(arguments.length - 3);
          while (G__20260__i < G__20260__a.length) {
            G__20260__a[G__20260__i] = arguments[G__20260__i + 3];
            ++G__20260__i;
          }
          G__20259 = new cljs.core.IndexedSeq(G__20260__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__20259);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__20271 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20271) : k.call(null, G__20271);
    }() < function() {
      var G__20272 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__20272) : k.call(null, G__20272);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__20273__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20261_SHARP_, p2__20262_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__20261_SHARP_, p2__20262_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__20273 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__20274__i = 0, G__20274__a = new Array(arguments.length - 3);
        while (G__20274__i < G__20274__a.length) {
          G__20274__a[G__20274__i] = arguments[G__20274__i + 3];
          ++G__20274__i;
        }
        more = new cljs.core.IndexedSeq(G__20274__a, 0);
      }
      return G__20273__delegate.call(this, k, x, y, more);
    };
    G__20273.cljs$lang$maxFixedArity = 3;
    G__20273.cljs$lang$applyTo = function(arglist__20275) {
      var k = cljs.core.first(arglist__20275);
      arglist__20275 = cljs.core.next(arglist__20275);
      var x = cljs.core.first(arglist__20275);
      arglist__20275 = cljs.core.next(arglist__20275);
      var y = cljs.core.first(arglist__20275);
      var more = cljs.core.rest(arglist__20275);
      return G__20273__delegate(k, x, y, more);
    };
    G__20273.cljs$core$IFn$_invoke$arity$variadic = G__20273__delegate;
    return G__20273;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__20276 = null;
        if (arguments.length > 3) {
          var G__20277__i = 0, G__20277__a = new Array(arguments.length - 3);
          while (G__20277__i < G__20277__a.length) {
            G__20277__a[G__20277__i] = arguments[G__20277__i + 3];
            ++G__20277__i;
          }
          G__20276 = new cljs.core.IndexedSeq(G__20277__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__20276);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__20294 = null;
          var G__20294__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20294__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__20289 = result;
                var G__20290 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20289, G__20290) : rf.call(null, G__20289, G__20290);
              }());
            }();
            var G__20291 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20291) : rf.call(null, G__20291);
          };
          var G__20294__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__20292 = result;
              var G__20293 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20292, G__20293) : rf.call(null, G__20292, G__20293);
            } else {
              return result;
            }
          };
          G__20294 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20294__0.call(this);
              case 1:
                return G__20294__1.call(this, result);
              case 2:
                return G__20294__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20294.cljs$core$IFn$_invoke$arity$0 = G__20294__0;
          G__20294.cljs$core$IFn$_invoke$arity$1 = G__20294__1;
          G__20294.cljs$core$IFn$_invoke$arity$2 = G__20294__2;
          return G__20294;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__20307 = null;
        var G__20307__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__20307__1 = function(result) {
          var G__20302 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20302) : rf.call(null, G__20302);
        };
        var G__20307__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__20303 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20303) : pred.call(null, G__20303);
          }())) {
            var G__20304 = result;
            var G__20305 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20304, G__20305) : rf.call(null, G__20304, G__20305);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__20307 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20307__0.call(this);
            case 1:
              return G__20307__1.call(this, result);
            case 2:
              return G__20307__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20307.cljs$core$IFn$_invoke$arity$0 = G__20307__0;
        G__20307.cljs$core$IFn$_invoke$arity$1 = G__20307__1;
        G__20307.cljs$core$IFn$_invoke$arity$2 = G__20307__2;
        return G__20307;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__20306 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20306) : pred.call(null, G__20306);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__20312 = function() {
      var G__20314 = cljs.core._entry_key(sc, e);
      var G__20315 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__20314, G__20315) : comp.call(null, G__20314, G__20315);
    }();
    var G__20313 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__20312, G__20313) : test.call(null, G__20312, G__20313);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__20319 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20319, 0, null);
        var s = vec__20319;
        if (cljs.core.truth_(function() {
          var G__20320 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__20320) : include.call(null, G__20320);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__20321 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20321, 0, null);
      var s = vec__20321;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__20325 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20325, 0, null);
        var s = vec__20325;
        if (cljs.core.truth_(function() {
          var G__20326 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__20326) : include.call(null, G__20326);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__20327 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20327, 0, null);
      var s = vec__20327;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__20328 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__20328) : Math.ceil.call(null, G__20328);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4388__auto__ = self__.__hash;
  if (!(h__4388__auto__ == null)) {
    return h__4388__auto__;
  } else {
    var h__4388__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4388__auto____$1;
    return h__4388__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__20329 = ret;
        var G__20330 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20329, G__20330) : f.call(null, G__20329, G__20330);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__20331 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20331) : cljs.core.deref.call(null, G__20331);
      } else {
        var G__20332 = i + self__.step;
        var G__20333 = ret__$1;
        i = G__20332;
        ret = G__20333;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__20351 = null;
          var G__20351__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20351__1 = function(result) {
            var G__20348 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20348) : rf.call(null, G__20348);
          };
          var G__20351__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__20349 = result;
              var G__20350 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20349, G__20350) : rf.call(null, G__20349, G__20350);
            } else {
              return result;
            }
          };
          G__20351 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20351__0.call(this);
              case 1:
                return G__20351__1.call(this, result);
              case 2:
                return G__20351__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20351.cljs$core$IFn$_invoke$arity$0 = G__20351__0;
          G__20351.cljs$core$IFn$_invoke$arity$1 = G__20351__1;
          G__20351.cljs$core$IFn$_invoke$arity$2 = G__20351__2;
          return G__20351;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__20373 = null;
          var G__20373__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20373__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__20364 = result;
                var G__20365 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20364, G__20365) : rf.call(null, G__20364, G__20365);
              }());
            }();
            var G__20366 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20366) : rf.call(null, G__20366);
          };
          var G__20373__2 = function(result, input) {
            var pval = function() {
              var G__20367 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20367) : cljs.core.deref.call(null, G__20367);
            }();
            var val = function() {
              var G__20368 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20368) : f.call(null, G__20368);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__20369 = result;
                var G__20370 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20369, G__20370) : rf.call(null, G__20369, G__20370);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__20373 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20373__0.call(this);
              case 1:
                return G__20373__1.call(this, result);
              case 2:
                return G__20373__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20373.cljs$core$IFn$_invoke$arity$0 = G__20373__0;
          G__20373.cljs$core$IFn$_invoke$arity$1 = G__20373__1;
          G__20373.cljs$core$IFn$_invoke$arity$2 = G__20373__2;
          return G__20373;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__20371 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20371) : f.call(null, G__20371);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__20352_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__20372 = p1__20352_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20372) : f.call(null, G__20372);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__20382 = init;
          var G__20383 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20382, G__20383) : f.call(null, G__20382, G__20383);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__20478 = null;
      var G__20478__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__20478__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20436 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20436) : f.call(null, G__20436);
        }()], null);
      };
      var G__20478__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20437 = x;
          var G__20438 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20437, G__20438) : f.call(null, G__20437, G__20438);
        }()], null);
      };
      var G__20478__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20439 = x;
          var G__20440 = y;
          var G__20441 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20439, G__20440, G__20441) : f.call(null, G__20439, G__20440, G__20441);
        }()], null);
      };
      var G__20478__4 = function() {
        var G__20479__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__20479 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20480__i = 0, G__20480__a = new Array(arguments.length - 3);
            while (G__20480__i < G__20480__a.length) {
              G__20480__a[G__20480__i] = arguments[G__20480__i + 3];
              ++G__20480__i;
            }
            args = new cljs.core.IndexedSeq(G__20480__a, 0);
          }
          return G__20479__delegate.call(this, x, y, z, args);
        };
        G__20479.cljs$lang$maxFixedArity = 3;
        G__20479.cljs$lang$applyTo = function(arglist__20481) {
          var x = cljs.core.first(arglist__20481);
          arglist__20481 = cljs.core.next(arglist__20481);
          var y = cljs.core.first(arglist__20481);
          arglist__20481 = cljs.core.next(arglist__20481);
          var z = cljs.core.first(arglist__20481);
          var args = cljs.core.rest(arglist__20481);
          return G__20479__delegate(x, y, z, args);
        };
        G__20479.cljs$core$IFn$_invoke$arity$variadic = G__20479__delegate;
        return G__20479;
      }();
      G__20478 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20478__0.call(this);
          case 1:
            return G__20478__1.call(this, x);
          case 2:
            return G__20478__2.call(this, x, y);
          case 3:
            return G__20478__3.call(this, x, y, z);
          default:
            var G__20482 = null;
            if (arguments.length > 3) {
              var G__20483__i = 0, G__20483__a = new Array(arguments.length - 3);
              while (G__20483__i < G__20483__a.length) {
                G__20483__a[G__20483__i] = arguments[G__20483__i + 3];
                ++G__20483__i;
              }
              G__20482 = new cljs.core.IndexedSeq(G__20483__a, 0);
            }
            return G__20478__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20482);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20478.cljs$lang$maxFixedArity = 3;
      G__20478.cljs$lang$applyTo = G__20478__4.cljs$lang$applyTo;
      G__20478.cljs$core$IFn$_invoke$arity$0 = G__20478__0;
      G__20478.cljs$core$IFn$_invoke$arity$1 = G__20478__1;
      G__20478.cljs$core$IFn$_invoke$arity$2 = G__20478__2;
      G__20478.cljs$core$IFn$_invoke$arity$3 = G__20478__3;
      G__20478.cljs$core$IFn$_invoke$arity$variadic = G__20478__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20478;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__20484 = null;
      var G__20484__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__20484__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20442 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20442) : f.call(null, G__20442);
        }(), function() {
          var G__20443 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20443) : g.call(null, G__20443);
        }()], null);
      };
      var G__20484__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20444 = x;
          var G__20445 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20444, G__20445) : f.call(null, G__20444, G__20445);
        }(), function() {
          var G__20446 = x;
          var G__20447 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20446, G__20447) : g.call(null, G__20446, G__20447);
        }()], null);
      };
      var G__20484__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20448 = x;
          var G__20449 = y;
          var G__20450 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20448, G__20449, G__20450) : f.call(null, G__20448, G__20449, G__20450);
        }(), function() {
          var G__20451 = x;
          var G__20452 = y;
          var G__20453 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20451, G__20452, G__20453) : g.call(null, G__20451, G__20452, G__20453);
        }()], null);
      };
      var G__20484__4 = function() {
        var G__20485__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__20485 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20486__i = 0, G__20486__a = new Array(arguments.length - 3);
            while (G__20486__i < G__20486__a.length) {
              G__20486__a[G__20486__i] = arguments[G__20486__i + 3];
              ++G__20486__i;
            }
            args = new cljs.core.IndexedSeq(G__20486__a, 0);
          }
          return G__20485__delegate.call(this, x, y, z, args);
        };
        G__20485.cljs$lang$maxFixedArity = 3;
        G__20485.cljs$lang$applyTo = function(arglist__20487) {
          var x = cljs.core.first(arglist__20487);
          arglist__20487 = cljs.core.next(arglist__20487);
          var y = cljs.core.first(arglist__20487);
          arglist__20487 = cljs.core.next(arglist__20487);
          var z = cljs.core.first(arglist__20487);
          var args = cljs.core.rest(arglist__20487);
          return G__20485__delegate(x, y, z, args);
        };
        G__20485.cljs$core$IFn$_invoke$arity$variadic = G__20485__delegate;
        return G__20485;
      }();
      G__20484 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20484__0.call(this);
          case 1:
            return G__20484__1.call(this, x);
          case 2:
            return G__20484__2.call(this, x, y);
          case 3:
            return G__20484__3.call(this, x, y, z);
          default:
            var G__20488 = null;
            if (arguments.length > 3) {
              var G__20489__i = 0, G__20489__a = new Array(arguments.length - 3);
              while (G__20489__i < G__20489__a.length) {
                G__20489__a[G__20489__i] = arguments[G__20489__i + 3];
                ++G__20489__i;
              }
              G__20488 = new cljs.core.IndexedSeq(G__20489__a, 0);
            }
            return G__20484__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20488);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20484.cljs$lang$maxFixedArity = 3;
      G__20484.cljs$lang$applyTo = G__20484__4.cljs$lang$applyTo;
      G__20484.cljs$core$IFn$_invoke$arity$0 = G__20484__0;
      G__20484.cljs$core$IFn$_invoke$arity$1 = G__20484__1;
      G__20484.cljs$core$IFn$_invoke$arity$2 = G__20484__2;
      G__20484.cljs$core$IFn$_invoke$arity$3 = G__20484__3;
      G__20484.cljs$core$IFn$_invoke$arity$variadic = G__20484__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20484;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__20490 = null;
      var G__20490__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__20490__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20454 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20454) : f.call(null, G__20454);
        }(), function() {
          var G__20455 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20455) : g.call(null, G__20455);
        }(), function() {
          var G__20456 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__20456) : h.call(null, G__20456);
        }()], null);
      };
      var G__20490__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20457 = x;
          var G__20458 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20457, G__20458) : f.call(null, G__20457, G__20458);
        }(), function() {
          var G__20459 = x;
          var G__20460 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20459, G__20460) : g.call(null, G__20459, G__20460);
        }(), function() {
          var G__20461 = x;
          var G__20462 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__20461, G__20462) : h.call(null, G__20461, G__20462);
        }()], null);
      };
      var G__20490__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__20463 = x;
          var G__20464 = y;
          var G__20465 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20463, G__20464, G__20465) : f.call(null, G__20463, G__20464, G__20465);
        }(), function() {
          var G__20466 = x;
          var G__20467 = y;
          var G__20468 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20466, G__20467, G__20468) : g.call(null, G__20466, G__20467, G__20468);
        }(), function() {
          var G__20469 = x;
          var G__20470 = y;
          var G__20471 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__20469, G__20470, G__20471) : h.call(null, G__20469, G__20470, G__20471);
        }()], null);
      };
      var G__20490__4 = function() {
        var G__20491__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__20491 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__20492__i = 0, G__20492__a = new Array(arguments.length - 3);
            while (G__20492__i < G__20492__a.length) {
              G__20492__a[G__20492__i] = arguments[G__20492__i + 3];
              ++G__20492__i;
            }
            args = new cljs.core.IndexedSeq(G__20492__a, 0);
          }
          return G__20491__delegate.call(this, x, y, z, args);
        };
        G__20491.cljs$lang$maxFixedArity = 3;
        G__20491.cljs$lang$applyTo = function(arglist__20493) {
          var x = cljs.core.first(arglist__20493);
          arglist__20493 = cljs.core.next(arglist__20493);
          var y = cljs.core.first(arglist__20493);
          arglist__20493 = cljs.core.next(arglist__20493);
          var z = cljs.core.first(arglist__20493);
          var args = cljs.core.rest(arglist__20493);
          return G__20491__delegate(x, y, z, args);
        };
        G__20491.cljs$core$IFn$_invoke$arity$variadic = G__20491__delegate;
        return G__20491;
      }();
      G__20490 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20490__0.call(this);
          case 1:
            return G__20490__1.call(this, x);
          case 2:
            return G__20490__2.call(this, x, y);
          case 3:
            return G__20490__3.call(this, x, y, z);
          default:
            var G__20494 = null;
            if (arguments.length > 3) {
              var G__20495__i = 0, G__20495__a = new Array(arguments.length - 3);
              while (G__20495__i < G__20495__a.length) {
                G__20495__a[G__20495__i] = arguments[G__20495__i + 3];
                ++G__20495__i;
              }
              G__20494 = new cljs.core.IndexedSeq(G__20495__a, 0);
            }
            return G__20490__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20494);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20490.cljs$lang$maxFixedArity = 3;
      G__20490.cljs$lang$applyTo = G__20490__4.cljs$lang$applyTo;
      G__20490.cljs$core$IFn$_invoke$arity$0 = G__20490__0;
      G__20490.cljs$core$IFn$_invoke$arity$1 = G__20490__1;
      G__20490.cljs$core$IFn$_invoke$arity$2 = G__20490__2;
      G__20490.cljs$core$IFn$_invoke$arity$3 = G__20490__3;
      G__20490.cljs$core$IFn$_invoke$arity$variadic = G__20490__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20490;
    }();
  };
  var juxt__4 = function() {
    var G__20496__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__20497 = null;
          var G__20497__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__20384_SHARP_, p2__20385_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20384_SHARP_, function() {
                  return p2__20385_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__20385_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__20385_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20497__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__20386_SHARP_, p2__20387_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20386_SHARP_, function() {
                  var G__20472 = x;
                  return p2__20387_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__20387_SHARP_.cljs$core$IFn$_invoke$arity$1(G__20472) : p2__20387_SHARP_.call(null, G__20472);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20497__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__20388_SHARP_, p2__20389_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20388_SHARP_, function() {
                  var G__20473 = x;
                  var G__20474 = y;
                  return p2__20389_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__20389_SHARP_.cljs$core$IFn$_invoke$arity$2(G__20473, G__20474) : p2__20389_SHARP_.call(null, G__20473, G__20474);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20497__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__20390_SHARP_, p2__20391_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20390_SHARP_, function() {
                  var G__20475 = x;
                  var G__20476 = y;
                  var G__20477 = z;
                  return p2__20391_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__20391_SHARP_.cljs$core$IFn$_invoke$arity$3(G__20475, G__20476, G__20477) : p2__20391_SHARP_.call(null, G__20475, G__20476, G__20477);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20497__4 = function() {
            var G__20498__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__20392_SHARP_, p2__20393_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__20392_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__20393_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__20498 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__20499__i = 0, G__20499__a = new Array(arguments.length - 3);
                while (G__20499__i < G__20499__a.length) {
                  G__20499__a[G__20499__i] = arguments[G__20499__i + 3];
                  ++G__20499__i;
                }
                args = new cljs.core.IndexedSeq(G__20499__a, 0);
              }
              return G__20498__delegate.call(this, x, y, z, args);
            };
            G__20498.cljs$lang$maxFixedArity = 3;
            G__20498.cljs$lang$applyTo = function(arglist__20500) {
              var x = cljs.core.first(arglist__20500);
              arglist__20500 = cljs.core.next(arglist__20500);
              var y = cljs.core.first(arglist__20500);
              arglist__20500 = cljs.core.next(arglist__20500);
              var z = cljs.core.first(arglist__20500);
              var args = cljs.core.rest(arglist__20500);
              return G__20498__delegate(x, y, z, args);
            };
            G__20498.cljs$core$IFn$_invoke$arity$variadic = G__20498__delegate;
            return G__20498;
          }();
          G__20497 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__20497__0.call(this);
              case 1:
                return G__20497__1.call(this, x);
              case 2:
                return G__20497__2.call(this, x, y);
              case 3:
                return G__20497__3.call(this, x, y, z);
              default:
                var G__20501 = null;
                if (arguments.length > 3) {
                  var G__20502__i = 0, G__20502__a = new Array(arguments.length - 3);
                  while (G__20502__i < G__20502__a.length) {
                    G__20502__a[G__20502__i] = arguments[G__20502__i + 3];
                    ++G__20502__i;
                  }
                  G__20501 = new cljs.core.IndexedSeq(G__20502__a, 0);
                }
                return G__20497__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__20501);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20497.cljs$lang$maxFixedArity = 3;
          G__20497.cljs$lang$applyTo = G__20497__4.cljs$lang$applyTo;
          G__20497.cljs$core$IFn$_invoke$arity$0 = G__20497__0;
          G__20497.cljs$core$IFn$_invoke$arity$1 = G__20497__1;
          G__20497.cljs$core$IFn$_invoke$arity$2 = G__20497__2;
          G__20497.cljs$core$IFn$_invoke$arity$3 = G__20497__3;
          G__20497.cljs$core$IFn$_invoke$arity$variadic = G__20497__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__20497;
        }();
      }(fs__$1);
    };
    var G__20496 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__20503__i = 0, G__20503__a = new Array(arguments.length - 3);
        while (G__20503__i < G__20503__a.length) {
          G__20503__a[G__20503__i] = arguments[G__20503__i + 3];
          ++G__20503__i;
        }
        fs = new cljs.core.IndexedSeq(G__20503__a, 0);
      }
      return G__20496__delegate.call(this, f, g, h, fs);
    };
    G__20496.cljs$lang$maxFixedArity = 3;
    G__20496.cljs$lang$applyTo = function(arglist__20504) {
      var f = cljs.core.first(arglist__20504);
      arglist__20504 = cljs.core.next(arglist__20504);
      var g = cljs.core.first(arglist__20504);
      arglist__20504 = cljs.core.next(arglist__20504);
      var h = cljs.core.first(arglist__20504);
      var fs = cljs.core.rest(arglist__20504);
      return G__20496__delegate(f, g, h, fs);
    };
    G__20496.cljs$core$IFn$_invoke$arity$variadic = G__20496__delegate;
    return G__20496;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__20505 = null;
        if (arguments.length > 3) {
          var G__20506__i = 0, G__20506__a = new Array(arguments.length - 3);
          while (G__20506__i < G__20506__a.length) {
            G__20506__a[G__20506__i] = arguments[G__20506__i + 3];
            ++G__20506__i;
          }
          G__20505 = new cljs.core.IndexedSeq(G__20506__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__20505);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__20507 = cljs.core.next(coll);
        coll = G__20507;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__20508 = n - 1;
        var G__20509 = cljs.core.next(coll);
        n = G__20508;
        coll = G__20509;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__20513 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20513, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20513, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20513, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_20521 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__3967__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__3967__auto__)) {
              return or__3967__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__20522_20528 = cljs.core.first(coll);
          var G__20523_20529 = writer;
          var G__20524_20530 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20522_20528, G__20523_20529, G__20524_20530) : print_one.call(null, G__20522_20528, G__20523_20529, G__20524_20530);
        } else {
        }
        var coll_20531__$1 = cljs.core.next(coll);
        var n_20532 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_20531__$1 && (n_20532 == null || !(n_20532 === 0))) {
            cljs.core._write(writer, sep);
            var G__20525_20533 = cljs.core.first(coll_20531__$1);
            var G__20526_20534 = writer;
            var G__20527_20535 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20525_20533, G__20526_20534, G__20527_20535) : print_one.call(null, G__20525_20533, G__20526_20534, G__20527_20535);
            var G__20536 = cljs.core.next(coll_20531__$1);
            var G__20537 = n_20532 - 1;
            coll_20531__$1 = G__20536;
            n_20532 = G__20537;
            continue;
          } else {
            if (cljs.core.seq(coll_20531__$1) && n_20532 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__3967__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__3967__auto__)) {
                  return or__3967__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_20521;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__20542 = cljs.core.seq(ss);
    var chunk__20543 = null;
    var count__20544 = 0;
    var i__20545 = 0;
    while (true) {
      if (i__20545 < count__20544) {
        var s = chunk__20543.cljs$core$IIndexed$_nth$arity$2(null, i__20545);
        cljs.core._write(writer, s);
        var G__20546 = seq__20542;
        var G__20547 = chunk__20543;
        var G__20548 = count__20544;
        var G__20549 = i__20545 + 1;
        seq__20542 = G__20546;
        chunk__20543 = G__20547;
        count__20544 = G__20548;
        i__20545 = G__20549;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__20542);
        if (temp__4126__auto__) {
          var seq__20542__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__20542__$1)) {
            var c__4754__auto__ = cljs.core.chunk_first(seq__20542__$1);
            var G__20550 = cljs.core.chunk_rest(seq__20542__$1);
            var G__20551 = c__4754__auto__;
            var G__20552 = cljs.core.count(c__4754__auto__);
            var G__20553 = 0;
            seq__20542 = G__20550;
            chunk__20543 = G__20551;
            count__20544 = G__20552;
            i__20545 = G__20553;
            continue;
          } else {
            var s = cljs.core.first(seq__20542__$1);
            cljs.core._write(writer, s);
            var G__20554 = cljs.core.next(seq__20542__$1);
            var G__20555 = null;
            var G__20556 = 0;
            var G__20557 = 0;
            seq__20542 = G__20554;
            chunk__20543 = G__20555;
            count__20544 = G__20556;
            i__20545 = G__20557;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__20558__i = 0, G__20558__a = new Array(arguments.length - 1);
      while (G__20558__i < G__20558__a.length) {
        G__20558__a[G__20558__i] = arguments[G__20558__i + 1];
        ++G__20558__i;
      }
      ss = new cljs.core.IndexedSeq(G__20558__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__20559) {
    var writer = cljs.core.first(arglist__20559);
    var ss = cljs.core.rest(arglist__20559);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj20561 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj20561;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__20564 = '[\\\\"\b\f\n\r\t]';
    var G__20565 = "g";
    return RegExp(G__20564, G__20565);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3955__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3955__auto__)) {
          var and__3955__auto____$1 = function() {
            var G__20579 = obj;
            if (G__20579) {
              var bit__4648__auto__ = G__20579.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4648__auto__ || G__20579.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__20579.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__20579);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__20579);
            }
          }();
          if (and__3955__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3955__auto____$1;
          }
        } else {
          return and__3955__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__20580_20590 = cljs.core.meta(obj);
        var G__20581_20591 = writer;
        var G__20582_20592 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__20580_20590, G__20581_20591, G__20582_20592) : cljs.core.pr_writer.call(null, G__20580_20590, G__20581_20591, G__20582_20592);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__20583 = obj;
            if (G__20583) {
              var bit__4641__auto__ = G__20583.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4641__auto__ || G__20583.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__20584 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__20585 = cljs.core.pr_writer;
                var G__20586 = writer;
                var G__20587 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__20584, G__20585, G__20586, G__20587) : cljs.core.print_map.call(null, G__20584, G__20585, G__20586, G__20587);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__20588 = obj;
                    return goog.isString(G__20588);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__20593 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__20593;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__20589 = obj;
                            if (G__20589) {
                              var bit__4648__auto__ = G__20589.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4648__auto__ || G__20589.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__20589.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__20589);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__20589);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  var temp__4124__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var alt_impl = temp__4124__auto__;
    var G__20597 = obj;
    var G__20598 = writer;
    var G__20599 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__20597, G__20598, G__20599) : alt_impl.call(null, G__20597, G__20598, G__20599);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__20604 = cljs.core.seq(cljs.core.next(objs));
  var chunk__20605 = null;
  var count__20606 = 0;
  var i__20607 = 0;
  while (true) {
    if (i__20607 < count__20606) {
      var obj = chunk__20605.cljs$core$IIndexed$_nth$arity$2(null, i__20607);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__20608 = seq__20604;
      var G__20609 = chunk__20605;
      var G__20610 = count__20606;
      var G__20611 = i__20607 + 1;
      seq__20604 = G__20608;
      chunk__20605 = G__20609;
      count__20606 = G__20610;
      i__20607 = G__20611;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__20604);
      if (temp__4126__auto__) {
        var seq__20604__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__20604__$1)) {
          var c__4754__auto__ = cljs.core.chunk_first(seq__20604__$1);
          var G__20612 = cljs.core.chunk_rest(seq__20604__$1);
          var G__20613 = c__4754__auto__;
          var G__20614 = cljs.core.count(c__4754__auto__);
          var G__20615 = 0;
          seq__20604 = G__20612;
          chunk__20605 = G__20613;
          count__20606 = G__20614;
          i__20607 = G__20615;
          continue;
        } else {
          var obj = cljs.core.first(seq__20604__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__20616 = cljs.core.next(seq__20604__$1);
          var G__20617 = null;
          var G__20618 = 0;
          var G__20619 = 0;
          seq__20604 = G__20616;
          chunk__20605 = G__20617;
          count__20606 = G__20618;
          i__20607 = G__20619;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20620__i = 0, G__20620__a = new Array(arguments.length - 0);
      while (G__20620__i < G__20620__a.length) {
        G__20620__a[G__20620__i] = arguments[G__20620__i + 0];
        ++G__20620__i;
      }
      objs = new cljs.core.IndexedSeq(G__20620__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__20621) {
    var objs = cljs.core.seq(arglist__20621);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20622__i = 0, G__20622__a = new Array(arguments.length - 0);
      while (G__20622__i < G__20622__a.length) {
        G__20622__a[G__20622__i] = arguments[G__20622__i + 0];
        ++G__20622__i;
      }
      objs = new cljs.core.IndexedSeq(G__20622__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__20623) {
    var objs = cljs.core.seq(arglist__20623);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20624__i = 0, G__20624__a = new Array(arguments.length - 0);
      while (G__20624__i < G__20624__a.length) {
        G__20624__a[G__20624__i] = arguments[G__20624__i + 0];
        ++G__20624__i;
      }
      objs = new cljs.core.IndexedSeq(G__20624__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__20625) {
    var objs = cljs.core.seq(arglist__20625);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20626__i = 0, G__20626__a = new Array(arguments.length - 0);
      while (G__20626__i < G__20626__a.length) {
        G__20626__a[G__20626__i] = arguments[G__20626__i + 0];
        ++G__20626__i;
      }
      objs = new cljs.core.IndexedSeq(G__20626__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__20627) {
    var objs = cljs.core.seq(arglist__20627);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20628__i = 0, G__20628__a = new Array(arguments.length - 0);
      while (G__20628__i < G__20628__a.length) {
        G__20628__a[G__20628__i] = arguments[G__20628__i + 0];
        ++G__20628__i;
      }
      objs = new cljs.core.IndexedSeq(G__20628__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__20629) {
    var objs = cljs.core.seq(arglist__20629);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20630__i = 0, G__20630__a = new Array(arguments.length - 0);
      while (G__20630__i < G__20630__a.length) {
        G__20630__a[G__20630__i] = arguments[G__20630__i + 0];
        ++G__20630__i;
      }
      objs = new cljs.core.IndexedSeq(G__20630__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__20631) {
    var objs = cljs.core.seq(arglist__20631);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20632__i = 0, G__20632__a = new Array(arguments.length - 0);
      while (G__20632__i < G__20632__a.length) {
        G__20632__a[G__20632__i] = arguments[G__20632__i + 0];
        ++G__20632__i;
      }
      objs = new cljs.core.IndexedSeq(G__20632__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__20633) {
    var objs = cljs.core.seq(arglist__20633);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__20634__i = 0, G__20634__a = new Array(arguments.length - 0);
      while (G__20634__i < G__20634__a.length) {
        G__20634__a[G__20634__i] = arguments[G__20634__i + 0];
        ++G__20634__i;
      }
      objs = new cljs.core.IndexedSeq(G__20634__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__20635) {
    var objs = cljs.core.seq(arglist__20635);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__20642_20648 = cljs.core.key(e);
    var G__20643_20649 = w;
    var G__20644_20650 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20642_20648, G__20643_20649, G__20644_20650) : print_one.call(null, G__20642_20648, G__20643_20649, G__20644_20650);
    cljs.core._write(w, " ");
    var G__20645 = cljs.core.val(e);
    var G__20646 = w;
    var G__20647 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__20645, G__20646, G__20647) : print_one.call(null, G__20645, G__20646, G__20647);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__20651__i = 0, G__20651__a = new Array(arguments.length - 2);
      while (G__20651__i < G__20651__a.length) {
        G__20651__a[G__20651__i] = arguments[G__20651__i + 2];
        ++G__20651__i;
      }
      args = new cljs.core.IndexedSeq(G__20651__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__20652) {
    var iref = cljs.core.first(arglist__20652);
    arglist__20652 = cljs.core.next(arglist__20652);
    var f = cljs.core.first(arglist__20652);
    var args = cljs.core.rest(arglist__20652);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__20655 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20655) : cljs.core.atom.call(null, G__20655);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__20657 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20657) : cljs.core.deref.call(null, G__20657);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__20658_SHARP_, p2__20659_SHARP_) {
    var ret = function() {
      var G__20662 = p1__20658_SHARP_;
      var G__20663 = p2__20659_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20662, G__20663) : rf.call(null, G__20662, G__20663);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__20666 = null;
      var G__20666__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__20666__1 = function(result) {
        var G__20665 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20665) : rf.call(null, G__20665);
      };
      var G__20666__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__20666 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__20666__0.call(this);
          case 1:
            return G__20666__1.call(this, result);
          case 2:
            return G__20666__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20666.cljs$core$IFn$_invoke$arity$0 = G__20666__0;
      G__20666.cljs$core$IFn$_invoke$arity$1 = G__20666__1;
      G__20666.cljs$core$IFn$_invoke$arity$2 = G__20666__2;
      return G__20666;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__20675 = null;
          var G__20675__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__20675__1 = function(result) {
            var G__20671 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20671) : rf.call(null, G__20671);
          };
          var G__20675__2 = function(result, input) {
            var prior = function() {
              var G__20672 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20672) : cljs.core.deref.call(null, G__20672);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__20673 = result;
              var G__20674 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20673, G__20674) : rf.call(null, G__20673, G__20674);
            }
          };
          G__20675 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20675__0.call(this);
              case 1:
                return G__20675__1.call(this, result);
              case 2:
                return G__20675__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20675.cljs$core$IFn$_invoke$arity$0 = G__20675__0;
          G__20675.cljs$core$IFn$_invoke$arity$1 = G__20675__1;
          G__20675.cljs$core$IFn$_invoke$arity$2 = G__20675__2;
          return G__20675;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4945__auto__ = this;
  return cljs.core.es6_iterator(this__4945__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__20677_SHARP_, p2__20676_SHARP_) {
    var G__20679 = p2__20676_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__20679) : proc.call(null, G__20679);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj20681 = {};
  return obj20681;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3955__auto__ = x;
    if (and__3955__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4611__auto__ = x == null ? null : x;
    return function() {
      var or__3967__auto__ = cljs.core._clj__GT_js[function() {
        var G__20685 = x__4611__auto__;
        return goog.typeOf(G__20685);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3955__auto__ = x;
    if (and__3955__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4611__auto__ = x == null ? null : x;
    return function() {
      var or__3967__auto__ = cljs.core._key__GT_js[function() {
        var G__20689 = x__4611__auto__;
        return goog.typeOf(G__20689);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__20692 = k;
    if (G__20692) {
      var bit__4648__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3967__auto__ = bit__4648__auto__;
        if (cljs.core.truth_(or__3967__auto__)) {
          return or__3967__auto__;
        } else {
          return G__20692.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__20692.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__20692);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__20692);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__20693 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__20693) : cljs.core.clj__GT_js.call(null, G__20693);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__20709 = x;
      if (G__20709) {
        var bit__4648__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3967__auto__ = bit__4648__auto__;
          if (cljs.core.truth_(or__3967__auto__)) {
            return or__3967__auto__;
          } else {
            return G__20709.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__20709.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__20709);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__20709);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj20711 = {};
              return obj20711;
            }();
            var seq__20712_20722 = cljs.core.seq(x);
            var chunk__20713_20723 = null;
            var count__20714_20724 = 0;
            var i__20715_20725 = 0;
            while (true) {
              if (i__20715_20725 < count__20714_20724) {
                var vec__20716_20726 = chunk__20713_20723.cljs$core$IIndexed$_nth$arity$2(null, i__20715_20725);
                var k_20727 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20716_20726, 0, null);
                var v_20728 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20716_20726, 1, null);
                m[cljs.core.key__GT_js(k_20727)] = clj__GT_js(v_20728);
                var G__20729 = seq__20712_20722;
                var G__20730 = chunk__20713_20723;
                var G__20731 = count__20714_20724;
                var G__20732 = i__20715_20725 + 1;
                seq__20712_20722 = G__20729;
                chunk__20713_20723 = G__20730;
                count__20714_20724 = G__20731;
                i__20715_20725 = G__20732;
                continue;
              } else {
                var temp__4126__auto___20733 = cljs.core.seq(seq__20712_20722);
                if (temp__4126__auto___20733) {
                  var seq__20712_20734__$1 = temp__4126__auto___20733;
                  if (cljs.core.chunked_seq_QMARK_(seq__20712_20734__$1)) {
                    var c__4754__auto___20735 = cljs.core.chunk_first(seq__20712_20734__$1);
                    var G__20736 = cljs.core.chunk_rest(seq__20712_20734__$1);
                    var G__20737 = c__4754__auto___20735;
                    var G__20738 = cljs.core.count(c__4754__auto___20735);
                    var G__20739 = 0;
                    seq__20712_20722 = G__20736;
                    chunk__20713_20723 = G__20737;
                    count__20714_20724 = G__20738;
                    i__20715_20725 = G__20739;
                    continue;
                  } else {
                    var vec__20717_20740 = cljs.core.first(seq__20712_20734__$1);
                    var k_20741 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20717_20740, 0, null);
                    var v_20742 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20717_20740, 1, null);
                    m[cljs.core.key__GT_js(k_20741)] = clj__GT_js(v_20742);
                    var G__20743 = cljs.core.next(seq__20712_20734__$1);
                    var G__20744 = null;
                    var G__20745 = 0;
                    var G__20746 = 0;
                    seq__20712_20722 = G__20743;
                    chunk__20713_20723 = G__20744;
                    count__20714_20724 = G__20745;
                    i__20715_20725 = G__20746;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__20718_20747 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__20719_20748 = null;
              var count__20720_20749 = 0;
              var i__20721_20750 = 0;
              while (true) {
                if (i__20721_20750 < count__20720_20749) {
                  var x_20751__$1 = chunk__20719_20748.cljs$core$IIndexed$_nth$arity$2(null, i__20721_20750);
                  arr.push(x_20751__$1);
                  var G__20752 = seq__20718_20747;
                  var G__20753 = chunk__20719_20748;
                  var G__20754 = count__20720_20749;
                  var G__20755 = i__20721_20750 + 1;
                  seq__20718_20747 = G__20752;
                  chunk__20719_20748 = G__20753;
                  count__20720_20749 = G__20754;
                  i__20721_20750 = G__20755;
                  continue;
                } else {
                  var temp__4126__auto___20756 = cljs.core.seq(seq__20718_20747);
                  if (temp__4126__auto___20756) {
                    var seq__20718_20757__$1 = temp__4126__auto___20756;
                    if (cljs.core.chunked_seq_QMARK_(seq__20718_20757__$1)) {
                      var c__4754__auto___20758 = cljs.core.chunk_first(seq__20718_20757__$1);
                      var G__20759 = cljs.core.chunk_rest(seq__20718_20757__$1);
                      var G__20760 = c__4754__auto___20758;
                      var G__20761 = cljs.core.count(c__4754__auto___20758);
                      var G__20762 = 0;
                      seq__20718_20747 = G__20759;
                      chunk__20719_20748 = G__20760;
                      count__20720_20749 = G__20761;
                      i__20721_20750 = G__20762;
                      continue;
                    } else {
                      var x_20763__$1 = cljs.core.first(seq__20718_20757__$1);
                      arr.push(x_20763__$1);
                      var G__20764 = cljs.core.next(seq__20718_20757__$1);
                      var G__20765 = null;
                      var G__20766 = 0;
                      var G__20767 = 0;
                      seq__20718_20747 = G__20764;
                      chunk__20719_20748 = G__20765;
                      count__20720_20749 = G__20766;
                      i__20721_20750 = G__20767;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj20769 = {};
  return obj20769;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3955__auto__ = x;
    if (and__3955__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4611__auto__ = x == null ? null : x;
    return function() {
      var or__3967__auto__ = cljs.core._js__GT_clj[function() {
        var G__20773 = x__4611__auto__;
        return goog.typeOf(G__20773);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__20830__delegate = function(x, opts) {
      var map__20803 = opts;
      var map__20803__$1 = cljs.core.seq_QMARK_(map__20803) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__20803) : map__20803;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20803__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__20803, map__20803__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__20819 = x__$1;
            if (G__20819) {
              var bit__4648__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3967__auto__ = bit__4648__auto__;
                if (cljs.core.truth_(or__3967__auto__)) {
                  return or__3967__auto__;
                } else {
                  return G__20819.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__20819.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__20819);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__20819);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4723__auto__ = function(map__20803, map__20803__$1, keywordize_keys, keyfn) {
                        return function iter__20820(s__20821) {
                          return new cljs.core.LazySeq(null, function(map__20803, map__20803__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__20821__$1 = s__20821;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__20821__$1);
                                if (temp__4126__auto__) {
                                  var s__20821__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__20821__$2)) {
                                    var c__4721__auto__ = cljs.core.chunk_first(s__20821__$2);
                                    var size__4722__auto__ = cljs.core.count(c__4721__auto__);
                                    var b__20823 = cljs.core.chunk_buffer(size__4722__auto__);
                                    if (function() {
                                      var i__20822 = 0;
                                      while (true) {
                                        if (i__20822 < size__4722__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4721__auto__, i__20822);
                                          cljs.core.chunk_append(b__20823, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__20828 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20828) : keyfn.call(null, G__20828);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__20831 = i__20822 + 1;
                                          i__20822 = G__20831;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__20823), iter__20820(cljs.core.chunk_rest(s__20821__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__20823), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__20821__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__20829 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__20829) : keyfn.call(null, G__20829);
                                    }(), thisfn(x__$1[k])], null), iter__20820(cljs.core.rest(s__20821__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__20803, map__20803__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__20803, map__20803__$1, keywordize_keys, keyfn);
                      return iter__4723__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__20803, map__20803__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__20830 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__20832__i = 0, G__20832__a = new Array(arguments.length - 1);
        while (G__20832__i < G__20832__a.length) {
          G__20832__a[G__20832__i] = arguments[G__20832__i + 1];
          ++G__20832__i;
        }
        opts = new cljs.core.IndexedSeq(G__20832__a, 0);
      }
      return G__20830__delegate.call(this, x, opts);
    };
    G__20830.cljs$lang$maxFixedArity = 1;
    G__20830.cljs$lang$applyTo = function(arglist__20833) {
      var x = cljs.core.first(arglist__20833);
      var opts = cljs.core.rest(arglist__20833);
      return G__20830__delegate(x, opts);
    };
    G__20830.cljs$core$IFn$_invoke$arity$variadic = G__20830__delegate;
    return G__20830;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__20834 = null;
        if (arguments.length > 1) {
          var G__20835__i = 0, G__20835__a = new Array(arguments.length - 1);
          while (G__20835__i < G__20835__a.length) {
            G__20835__a[G__20835__i] = arguments[G__20835__i + 1];
            ++G__20835__i;
          }
          G__20834 = new cljs.core.IndexedSeq(G__20835__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__20834);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__20838 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20838) : cljs.core.atom.call(null, G__20838);
  }();
  return function(mem) {
    return function() {
      var G__20840__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__20839 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20839) : cljs.core.deref.call(null, G__20839);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__20840 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__20841__i = 0, G__20841__a = new Array(arguments.length - 0);
          while (G__20841__i < G__20841__a.length) {
            G__20841__a[G__20841__i] = arguments[G__20841__i + 0];
            ++G__20841__i;
          }
          args = new cljs.core.IndexedSeq(G__20841__a, 0);
        }
        return G__20840__delegate.call(this, args);
      };
      G__20840.cljs$lang$maxFixedArity = 0;
      G__20840.cljs$lang$applyTo = function(arglist__20842) {
        var args = cljs.core.seq(arglist__20842);
        return G__20840__delegate(args);
      };
      G__20840.cljs$core$IFn$_invoke$arity$variadic = G__20840__delegate;
      return G__20840;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__20844 = ret;
        f = G__20844;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__20845__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__20845 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__20846__i = 0, G__20846__a = new Array(arguments.length - 1);
        while (G__20846__i < G__20846__a.length) {
          G__20846__a[G__20846__i] = arguments[G__20846__i + 1];
          ++G__20846__i;
        }
        args = new cljs.core.IndexedSeq(G__20846__a, 0);
      }
      return G__20845__delegate.call(this, f, args);
    };
    G__20845.cljs$lang$maxFixedArity = 1;
    G__20845.cljs$lang$applyTo = function(arglist__20847) {
      var f = cljs.core.first(arglist__20847);
      var args = cljs.core.rest(arglist__20847);
      return G__20845__delegate(f, args);
    };
    G__20845.cljs$core$IFn$_invoke$arity$variadic = G__20845__delegate;
    return G__20845;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__20848 = null;
        if (arguments.length > 1) {
          var G__20849__i = 0, G__20849__a = new Array(arguments.length - 1);
          while (G__20849__i < G__20849__a.length) {
            G__20849__a[G__20849__i] = arguments[G__20849__i + 1];
            ++G__20849__i;
          }
          G__20848 = new cljs.core.IndexedSeq(G__20849__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__20848);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__20852 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__20852) : Math.floor.call(null, G__20852);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__20854 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20854) : f.call(null, G__20854);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__20856 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__20856) : cljs.core.atom.call(null, G__20856);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__20857__i = 0, G__20857__a = new Array(arguments.length - 1);
      while (G__20857__i < G__20857__a.length) {
        G__20857__a[G__20857__i] = arguments[G__20857__i + 1];
        ++G__20857__i;
      }
      args = new cljs.core.IndexedSeq(G__20857__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__20858) {
    var f = cljs.core.first(arglist__20858);
    var args = cljs.core.rest(arglist__20858);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__20923 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20923) : cljs.core.deref.call(null, G__20923);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3967__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3967__auto__) {
      return or__3967__auto__;
    } else {
      var or__3967__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3967__auto____$1) {
        return or__3967__auto____$1;
      } else {
        var and__3955__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3955__auto__) {
          var and__3955__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3955__auto____$1) {
            var and__3955__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3955__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__20948 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__20946 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__20946) : child.call(null, G__20946);
                  }(), function() {
                    var G__20947 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__20947) : parent.call(null, G__20947);
                  }());
                  var G__20949 = i + 1;
                  ret = G__20948;
                  i = G__20949;
                  continue;
                }
                break;
              }
            } else {
              return and__3955__auto____$2;
            }
          } else {
            return and__3955__auto____$1;
          }
        } else {
          return and__3955__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__20953 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20953) : cljs.core.deref.call(null, G__20953);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__20957 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20957) : cljs.core.deref.call(null, G__20957);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__20961 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20961) : cljs.core.deref.call(null, G__20961);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__20970 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__20970) : targets.call(null, G__20970);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__20971 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__20971) : sources.call(null, G__20971);
        }()));
      };
    }(tp, td, ta);
    var or__3967__auto__ = cljs.core.contains_QMARK_(function() {
      var G__20975 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__20975) : tp.call(null, G__20975);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__20976 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__20976) : ta.call(null, G__20976);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__20977 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__20977) : ta.call(null, G__20977);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3967__auto__)) {
      return or__3967__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__20984 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__20984) : parentMap.call(null, G__20984);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__20985 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__20985) : parentMap.call(null, G__20985);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__20978_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__20978_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__20978_SHARP_), cljs.core.second(p1__20978_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__20986 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__20986) : parentMap.call(null, G__20986);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__20979_SHARP_, p2__20980_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__20979_SHARP_, p2__20980_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__20989 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20989) : cljs.core.deref.call(null, G__20989);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__20990 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__20990) : cljs.core.deref.call(null, G__20990);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__21006 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21006) : cljs.core.deref.call(null, G__21006);
  }().call(null, x);
  var or__3967__auto__ = cljs.core.truth_(function() {
    var and__3955__auto__ = xprefs;
    if (cljs.core.truth_(and__3955__auto__)) {
      var G__21008 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__21008) : xprefs.call(null, G__21008);
    } else {
      return and__3955__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3967__auto__)) {
    return or__3967__auto__;
  } else {
    var or__3967__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__21009 = cljs.core.rest(ps);
          ps = G__21009;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3967__auto____$1)) {
      return or__3967__auto____$1;
    } else {
      var or__3967__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__21010 = cljs.core.rest(ps);
            ps = G__21010;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3967__auto____$2)) {
        return or__3967__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3967__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3967__auto__)) {
    return or__3967__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__21024) {
    var vec__21025 = p__21024;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21025, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21025, 1, null);
    var e = vec__21025;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__21026 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21026) : cljs.core.deref.call(null, G__21026);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3967__auto__ = be == null;
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__21027 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21027) : cljs.core.deref.call(null, G__21027);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__21028 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21028) : cljs.core.deref.call(null, G__21028);
    }(), function() {
      var G__21029 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21029) : cljs.core.deref.call(null, G__21029);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj21031 = {};
  return obj21031;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3955__auto__ = mf;
    if (and__3955__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4611__auto__ = mf == null ? null : mf;
    return function() {
      var or__3967__auto__ = cljs.core._reset[function() {
        var G__21035 = x__4611__auto__;
        return goog.typeOf(G__21035);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._reset["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3955__auto__ = mf;
    if (and__3955__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4611__auto__ = mf == null ? null : mf;
    return function() {
      var or__3967__auto__ = cljs.core._add_method[function() {
        var G__21039 = x__4611__auto__;
        return goog.typeOf(G__21039);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._add_method["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3955__auto__ = mf;
    if (and__3955__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4611__auto__ = mf == null ? null : mf;
    return function() {
      var or__3967__auto__ = cljs.core._remove_method[function() {
        var G__21043 = x__4611__auto__;
        return goog.typeOf(G__21043);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._remove_method["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3955__auto__ = mf;
    if (and__3955__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4611__auto__ = mf == null ? null : mf;
    return function() {
      var or__3967__auto__ = cljs.core._prefer_method[function() {
        var G__21047 = x__4611__auto__;
        return goog.typeOf(G__21047);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3955__auto__ = mf;
    if (and__3955__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4611__auto__ = mf == null ? null : mf;
    return function() {
      var or__3967__auto__ = cljs.core._get_method[function() {
        var G__21051 = x__4611__auto__;
        return goog.typeOf(G__21051);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._get_method["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3955__auto__ = mf;
    if (and__3955__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4611__auto__ = mf == null ? null : mf;
    return function() {
      var or__3967__auto__ = cljs.core._methods[function() {
        var G__21055 = x__4611__auto__;
        return goog.typeOf(G__21055);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._methods["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3955__auto__ = mf;
    if (and__3955__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4611__auto__ = mf == null ? null : mf;
    return function() {
      var or__3967__auto__ = cljs.core._prefers[function() {
        var G__21059 = x__4611__auto__;
        return goog.typeOf(G__21059);
      }()];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core._prefers["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__21061 = this$__$1;
  return goog.getUid(G__21061);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__21062 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21062) : cljs.core.deref.call(null, G__21062);
  }(), function() {
    var G__21063 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21063) : cljs.core.deref.call(null, G__21063);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__21064 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21064) : cljs.core.deref.call(null, G__21064);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__21065 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21065) : cljs.core.deref.call(null, G__21065);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__21066 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21066) : cljs.core.deref.call(null, G__21066);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__21067 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21067) : cljs.core.deref.call(null, G__21067);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__21908 = null;
  var G__21908__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__21908__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21068 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__21068) : self__.dispatch_fn.call(null, G__21068);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21069 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__21069) : target_fn.call(null, G__21069);
  };
  var G__21908__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21070 = a;
      var G__21071 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__21070, G__21071) : self__.dispatch_fn.call(null, G__21070, G__21071);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21072 = a;
    var G__21073 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__21072, G__21073) : target_fn.call(null, G__21072, G__21073);
  };
  var G__21908__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21074 = a;
      var G__21075 = b;
      var G__21076 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__21074, G__21075, G__21076) : self__.dispatch_fn.call(null, G__21074, G__21075, G__21076);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21077 = a;
    var G__21078 = b;
    var G__21079 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__21077, G__21078, G__21079) : target_fn.call(null, G__21077, G__21078, G__21079);
  };
  var G__21908__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21080 = a;
      var G__21081 = b;
      var G__21082 = c;
      var G__21083 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__21080, G__21081, G__21082, G__21083) : self__.dispatch_fn.call(null, G__21080, G__21081, G__21082, G__21083);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21084 = a;
    var G__21085 = b;
    var G__21086 = c;
    var G__21087 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__21084, G__21085, G__21086, G__21087) : target_fn.call(null, G__21084, G__21085, G__21086, G__21087);
  };
  var G__21908__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21088 = a;
      var G__21089 = b;
      var G__21090 = c;
      var G__21091 = d;
      var G__21092 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__21088, G__21089, G__21090, G__21091, G__21092) : self__.dispatch_fn.call(null, G__21088, G__21089, G__21090, G__21091, G__21092);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21093 = a;
    var G__21094 = b;
    var G__21095 = c;
    var G__21096 = d;
    var G__21097 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__21093, G__21094, G__21095, G__21096, G__21097) : target_fn.call(null, G__21093, G__21094, G__21095, G__21096, G__21097);
  };
  var G__21908__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21098 = a;
      var G__21099 = b;
      var G__21100 = c;
      var G__21101 = d;
      var G__21102 = e;
      var G__21103 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__21098, G__21099, G__21100, G__21101, G__21102, G__21103) : self__.dispatch_fn.call(null, G__21098, G__21099, G__21100, G__21101, G__21102, G__21103);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21104 = a;
    var G__21105 = b;
    var G__21106 = c;
    var G__21107 = d;
    var G__21108 = e;
    var G__21109 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__21104, G__21105, G__21106, G__21107, G__21108, G__21109) : target_fn.call(null, G__21104, G__21105, G__21106, G__21107, G__21108, G__21109);
  };
  var G__21908__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21110 = a;
      var G__21111 = b;
      var G__21112 = c;
      var G__21113 = d;
      var G__21114 = e;
      var G__21115 = f;
      var G__21116 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__21110, G__21111, G__21112, G__21113, G__21114, G__21115, G__21116) : self__.dispatch_fn.call(null, G__21110, G__21111, G__21112, G__21113, G__21114, G__21115, G__21116);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21117 = a;
    var G__21118 = b;
    var G__21119 = c;
    var G__21120 = d;
    var G__21121 = e;
    var G__21122 = f;
    var G__21123 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__21117, G__21118, G__21119, G__21120, G__21121, G__21122, G__21123) : target_fn.call(null, G__21117, G__21118, G__21119, G__21120, G__21121, G__21122, G__21123);
  };
  var G__21908__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21124 = a;
      var G__21125 = b;
      var G__21126 = c;
      var G__21127 = d;
      var G__21128 = e;
      var G__21129 = f;
      var G__21130 = g;
      var G__21131 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__21124, G__21125, G__21126, G__21127, G__21128, G__21129, G__21130, G__21131) : self__.dispatch_fn.call(null, G__21124, G__21125, G__21126, G__21127, G__21128, G__21129, G__21130, G__21131);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21132 = a;
    var G__21133 = b;
    var G__21134 = c;
    var G__21135 = d;
    var G__21136 = e;
    var G__21137 = f;
    var G__21138 = g;
    var G__21139 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__21132, G__21133, G__21134, G__21135, G__21136, G__21137, G__21138, G__21139) : target_fn.call(null, G__21132, G__21133, G__21134, G__21135, G__21136, G__21137, G__21138, G__21139);
  };
  var G__21908__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21140 = a;
      var G__21141 = b;
      var G__21142 = c;
      var G__21143 = d;
      var G__21144 = e;
      var G__21145 = f;
      var G__21146 = g;
      var G__21147 = h;
      var G__21148 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__21140, G__21141, G__21142, G__21143, G__21144, G__21145, G__21146, G__21147, G__21148) : self__.dispatch_fn.call(null, G__21140, G__21141, G__21142, G__21143, G__21144, G__21145, G__21146, G__21147, G__21148);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21149 = a;
    var G__21150 = b;
    var G__21151 = c;
    var G__21152 = d;
    var G__21153 = e;
    var G__21154 = f;
    var G__21155 = g;
    var G__21156 = h;
    var G__21157 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__21149, G__21150, G__21151, G__21152, G__21153, G__21154, G__21155, G__21156, G__21157) : target_fn.call(null, G__21149, G__21150, G__21151, G__21152, G__21153, G__21154, G__21155, G__21156, G__21157);
  };
  var G__21908__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21158 = a;
      var G__21159 = b;
      var G__21160 = c;
      var G__21161 = d;
      var G__21162 = e;
      var G__21163 = f;
      var G__21164 = g;
      var G__21165 = h;
      var G__21166 = i;
      var G__21167 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__21158, G__21159, G__21160, G__21161, G__21162, G__21163, G__21164, G__21165, G__21166, G__21167) : self__.dispatch_fn.call(null, G__21158, G__21159, G__21160, G__21161, G__21162, G__21163, G__21164, G__21165, G__21166, G__21167);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21168 = a;
    var G__21169 = b;
    var G__21170 = c;
    var G__21171 = d;
    var G__21172 = e;
    var G__21173 = f;
    var G__21174 = g;
    var G__21175 = h;
    var G__21176 = i;
    var G__21177 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__21168, G__21169, G__21170, G__21171, G__21172, G__21173, G__21174, G__21175, G__21176, G__21177) : target_fn.call(null, G__21168, G__21169, G__21170, G__21171, G__21172, G__21173, G__21174, G__21175, G__21176, G__21177);
  };
  var G__21908__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21178 = a;
      var G__21179 = b;
      var G__21180 = c;
      var G__21181 = d;
      var G__21182 = e;
      var G__21183 = f;
      var G__21184 = g;
      var G__21185 = h;
      var G__21186 = i;
      var G__21187 = j;
      var G__21188 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__21178, G__21179, G__21180, G__21181, G__21182, G__21183, G__21184, G__21185, G__21186, G__21187, G__21188) : self__.dispatch_fn.call(null, G__21178, G__21179, G__21180, G__21181, G__21182, G__21183, G__21184, G__21185, G__21186, G__21187, G__21188);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21189 = a;
    var G__21190 = b;
    var G__21191 = c;
    var G__21192 = d;
    var G__21193 = e;
    var G__21194 = f;
    var G__21195 = g;
    var G__21196 = h;
    var G__21197 = i;
    var G__21198 = j;
    var G__21199 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__21189, G__21190, G__21191, G__21192, G__21193, G__21194, G__21195, G__21196, G__21197, G__21198, G__21199) : target_fn.call(null, G__21189, G__21190, G__21191, G__21192, G__21193, G__21194, G__21195, G__21196, G__21197, G__21198, G__21199);
  };
  var G__21908__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21200 = a;
      var G__21201 = b;
      var G__21202 = c;
      var G__21203 = d;
      var G__21204 = e;
      var G__21205 = f;
      var G__21206 = g;
      var G__21207 = h;
      var G__21208 = i;
      var G__21209 = j;
      var G__21210 = k;
      var G__21211 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__21200, G__21201, G__21202, G__21203, G__21204, G__21205, G__21206, G__21207, G__21208, G__21209, G__21210, G__21211) : self__.dispatch_fn.call(null, G__21200, G__21201, G__21202, G__21203, G__21204, G__21205, G__21206, G__21207, G__21208, G__21209, G__21210, G__21211);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21212 = a;
    var G__21213 = b;
    var G__21214 = c;
    var G__21215 = d;
    var G__21216 = e;
    var G__21217 = f;
    var G__21218 = g;
    var G__21219 = h;
    var G__21220 = i;
    var G__21221 = j;
    var G__21222 = k;
    var G__21223 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__21212, G__21213, G__21214, G__21215, G__21216, G__21217, G__21218, G__21219, G__21220, G__21221, G__21222, G__21223) : target_fn.call(null, G__21212, G__21213, G__21214, G__21215, G__21216, G__21217, G__21218, G__21219, G__21220, G__21221, G__21222, G__21223);
  };
  var G__21908__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21224 = a;
      var G__21225 = b;
      var G__21226 = c;
      var G__21227 = d;
      var G__21228 = e;
      var G__21229 = f;
      var G__21230 = g;
      var G__21231 = h;
      var G__21232 = i;
      var G__21233 = j;
      var G__21234 = k;
      var G__21235 = l;
      var G__21236 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__21224, G__21225, G__21226, G__21227, G__21228, G__21229, G__21230, G__21231, G__21232, G__21233, G__21234, G__21235, G__21236) : self__.dispatch_fn.call(null, G__21224, G__21225, G__21226, G__21227, G__21228, G__21229, G__21230, G__21231, G__21232, G__21233, G__21234, G__21235, G__21236);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21237 = a;
    var G__21238 = b;
    var G__21239 = c;
    var G__21240 = d;
    var G__21241 = e;
    var G__21242 = f;
    var G__21243 = g;
    var G__21244 = h;
    var G__21245 = i;
    var G__21246 = j;
    var G__21247 = k;
    var G__21248 = l;
    var G__21249 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__21237, G__21238, G__21239, G__21240, G__21241, G__21242, G__21243, G__21244, G__21245, G__21246, G__21247, G__21248, G__21249) : target_fn.call(null, G__21237, G__21238, G__21239, G__21240, G__21241, G__21242, G__21243, G__21244, G__21245, G__21246, G__21247, G__21248, G__21249);
  };
  var G__21908__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21250 = a;
      var G__21251 = b;
      var G__21252 = c;
      var G__21253 = d;
      var G__21254 = e;
      var G__21255 = f;
      var G__21256 = g;
      var G__21257 = h;
      var G__21258 = i;
      var G__21259 = j;
      var G__21260 = k;
      var G__21261 = l;
      var G__21262 = m;
      var G__21263 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__21250, G__21251, G__21252, G__21253, G__21254, G__21255, G__21256, G__21257, G__21258, G__21259, G__21260, G__21261, G__21262, G__21263) : self__.dispatch_fn.call(null, G__21250, G__21251, G__21252, G__21253, G__21254, G__21255, G__21256, G__21257, G__21258, G__21259, G__21260, G__21261, G__21262, G__21263);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21264 = a;
    var G__21265 = b;
    var G__21266 = c;
    var G__21267 = d;
    var G__21268 = e;
    var G__21269 = f;
    var G__21270 = g;
    var G__21271 = h;
    var G__21272 = i;
    var G__21273 = j;
    var G__21274 = k;
    var G__21275 = l;
    var G__21276 = m;
    var G__21277 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__21264, G__21265, G__21266, G__21267, G__21268, G__21269, G__21270, G__21271, G__21272, G__21273, G__21274, G__21275, G__21276, G__21277) : target_fn.call(null, G__21264, G__21265, G__21266, G__21267, G__21268, G__21269, G__21270, G__21271, G__21272, G__21273, G__21274, G__21275, G__21276, G__21277);
  };
  var G__21908__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21278 = a;
      var G__21279 = b;
      var G__21280 = c;
      var G__21281 = d;
      var G__21282 = e;
      var G__21283 = f;
      var G__21284 = g;
      var G__21285 = h;
      var G__21286 = i;
      var G__21287 = j;
      var G__21288 = k;
      var G__21289 = l;
      var G__21290 = m;
      var G__21291 = n;
      var G__21292 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__21278, G__21279, G__21280, G__21281, G__21282, G__21283, G__21284, G__21285, G__21286, G__21287, G__21288, G__21289, G__21290, G__21291, G__21292) : self__.dispatch_fn.call(null, G__21278, G__21279, G__21280, G__21281, G__21282, G__21283, G__21284, G__21285, G__21286, G__21287, G__21288, G__21289, G__21290, G__21291, G__21292);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21293 = a;
    var G__21294 = b;
    var G__21295 = c;
    var G__21296 = d;
    var G__21297 = e;
    var G__21298 = f;
    var G__21299 = g;
    var G__21300 = h;
    var G__21301 = i;
    var G__21302 = j;
    var G__21303 = k;
    var G__21304 = l;
    var G__21305 = m;
    var G__21306 = n;
    var G__21307 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__21293, G__21294, G__21295, G__21296, G__21297, G__21298, G__21299, G__21300, G__21301, G__21302, G__21303, G__21304, G__21305, G__21306, G__21307) : target_fn.call(null, G__21293, G__21294, G__21295, G__21296, G__21297, G__21298, G__21299, G__21300, G__21301, G__21302, G__21303, G__21304, G__21305, G__21306, G__21307);
  };
  var G__21908__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21308 = a;
      var G__21309 = b;
      var G__21310 = c;
      var G__21311 = d;
      var G__21312 = e;
      var G__21313 = f;
      var G__21314 = g;
      var G__21315 = h;
      var G__21316 = i;
      var G__21317 = j;
      var G__21318 = k;
      var G__21319 = l;
      var G__21320 = m;
      var G__21321 = n;
      var G__21322 = o;
      var G__21323 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__21308, G__21309, G__21310, G__21311, G__21312, G__21313, G__21314, G__21315, G__21316, G__21317, G__21318, G__21319, G__21320, G__21321, G__21322, G__21323) : self__.dispatch_fn.call(null, G__21308, G__21309, G__21310, G__21311, G__21312, G__21313, G__21314, G__21315, G__21316, G__21317, G__21318, G__21319, G__21320, G__21321, G__21322, G__21323);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21324 = a;
    var G__21325 = b;
    var G__21326 = c;
    var G__21327 = d;
    var G__21328 = e;
    var G__21329 = f;
    var G__21330 = g;
    var G__21331 = h;
    var G__21332 = i;
    var G__21333 = j;
    var G__21334 = k;
    var G__21335 = l;
    var G__21336 = m;
    var G__21337 = n;
    var G__21338 = o;
    var G__21339 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__21324, G__21325, G__21326, G__21327, G__21328, G__21329, G__21330, G__21331, G__21332, G__21333, G__21334, G__21335, G__21336, G__21337, G__21338, G__21339) : target_fn.call(null, G__21324, G__21325, G__21326, G__21327, G__21328, G__21329, G__21330, G__21331, G__21332, G__21333, G__21334, G__21335, G__21336, G__21337, G__21338, G__21339);
  };
  var G__21908__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21340 = a;
      var G__21341 = b;
      var G__21342 = c;
      var G__21343 = d;
      var G__21344 = e;
      var G__21345 = f;
      var G__21346 = g;
      var G__21347 = h;
      var G__21348 = i;
      var G__21349 = j;
      var G__21350 = k;
      var G__21351 = l;
      var G__21352 = m;
      var G__21353 = n;
      var G__21354 = o;
      var G__21355 = p;
      var G__21356 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__21340, G__21341, G__21342, G__21343, G__21344, G__21345, G__21346, G__21347, G__21348, G__21349, G__21350, G__21351, G__21352, G__21353, G__21354, G__21355, G__21356) : self__.dispatch_fn.call(null, G__21340, G__21341, G__21342, G__21343, G__21344, G__21345, G__21346, G__21347, G__21348, G__21349, G__21350, G__21351, G__21352, G__21353, G__21354, G__21355, G__21356);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21357 = a;
    var G__21358 = b;
    var G__21359 = c;
    var G__21360 = d;
    var G__21361 = e;
    var G__21362 = f;
    var G__21363 = g;
    var G__21364 = h;
    var G__21365 = i;
    var G__21366 = j;
    var G__21367 = k;
    var G__21368 = l;
    var G__21369 = m;
    var G__21370 = n;
    var G__21371 = o;
    var G__21372 = p;
    var G__21373 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__21357, G__21358, G__21359, G__21360, G__21361, G__21362, G__21363, G__21364, G__21365, G__21366, G__21367, G__21368, G__21369, G__21370, G__21371, G__21372, G__21373) : target_fn.call(null, G__21357, G__21358, G__21359, G__21360, G__21361, G__21362, G__21363, G__21364, G__21365, G__21366, G__21367, G__21368, G__21369, G__21370, G__21371, G__21372, G__21373);
  };
  var G__21908__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21374 = a;
      var G__21375 = b;
      var G__21376 = c;
      var G__21377 = d;
      var G__21378 = e;
      var G__21379 = f;
      var G__21380 = g;
      var G__21381 = h;
      var G__21382 = i;
      var G__21383 = j;
      var G__21384 = k;
      var G__21385 = l;
      var G__21386 = m;
      var G__21387 = n;
      var G__21388 = o;
      var G__21389 = p;
      var G__21390 = q;
      var G__21391 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__21374, G__21375, G__21376, G__21377, G__21378, G__21379, G__21380, G__21381, G__21382, G__21383, G__21384, G__21385, G__21386, G__21387, G__21388, G__21389, G__21390, G__21391) : self__.dispatch_fn.call(null, G__21374, G__21375, G__21376, G__21377, G__21378, G__21379, G__21380, G__21381, G__21382, G__21383, G__21384, G__21385, G__21386, G__21387, G__21388, G__21389, G__21390, G__21391);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21392 = a;
    var G__21393 = b;
    var G__21394 = c;
    var G__21395 = d;
    var G__21396 = e;
    var G__21397 = f;
    var G__21398 = g;
    var G__21399 = h;
    var G__21400 = i;
    var G__21401 = j;
    var G__21402 = k;
    var G__21403 = l;
    var G__21404 = m;
    var G__21405 = n;
    var G__21406 = o;
    var G__21407 = p;
    var G__21408 = q;
    var G__21409 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__21392, G__21393, G__21394, G__21395, G__21396, G__21397, G__21398, G__21399, G__21400, G__21401, G__21402, G__21403, G__21404, G__21405, G__21406, G__21407, G__21408, G__21409) : target_fn.call(null, G__21392, G__21393, G__21394, G__21395, G__21396, G__21397, G__21398, G__21399, G__21400, G__21401, G__21402, G__21403, G__21404, G__21405, G__21406, G__21407, G__21408, G__21409);
  };
  var G__21908__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21410 = a;
      var G__21411 = b;
      var G__21412 = c;
      var G__21413 = d;
      var G__21414 = e;
      var G__21415 = f;
      var G__21416 = g;
      var G__21417 = h;
      var G__21418 = i;
      var G__21419 = j;
      var G__21420 = k;
      var G__21421 = l;
      var G__21422 = m;
      var G__21423 = n;
      var G__21424 = o;
      var G__21425 = p;
      var G__21426 = q;
      var G__21427 = r;
      var G__21428 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__21410, G__21411, G__21412, G__21413, G__21414, G__21415, G__21416, G__21417, G__21418, G__21419, G__21420, G__21421, G__21422, G__21423, G__21424, G__21425, G__21426, G__21427, G__21428) : self__.dispatch_fn.call(null, G__21410, G__21411, G__21412, G__21413, G__21414, G__21415, G__21416, G__21417, G__21418, G__21419, G__21420, G__21421, G__21422, G__21423, G__21424, G__21425, G__21426, 
      G__21427, G__21428);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21429 = a;
    var G__21430 = b;
    var G__21431 = c;
    var G__21432 = d;
    var G__21433 = e;
    var G__21434 = f;
    var G__21435 = g;
    var G__21436 = h;
    var G__21437 = i;
    var G__21438 = j;
    var G__21439 = k;
    var G__21440 = l;
    var G__21441 = m;
    var G__21442 = n;
    var G__21443 = o;
    var G__21444 = p;
    var G__21445 = q;
    var G__21446 = r;
    var G__21447 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__21429, G__21430, G__21431, G__21432, G__21433, G__21434, G__21435, G__21436, G__21437, G__21438, G__21439, G__21440, G__21441, G__21442, G__21443, G__21444, G__21445, G__21446, G__21447) : target_fn.call(null, G__21429, G__21430, G__21431, G__21432, G__21433, G__21434, G__21435, G__21436, G__21437, G__21438, G__21439, G__21440, G__21441, G__21442, G__21443, G__21444, G__21445, G__21446, G__21447);
  };
  var G__21908__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__21448 = a;
      var G__21449 = b;
      var G__21450 = c;
      var G__21451 = d;
      var G__21452 = e;
      var G__21453 = f;
      var G__21454 = g;
      var G__21455 = h;
      var G__21456 = i;
      var G__21457 = j;
      var G__21458 = k;
      var G__21459 = l;
      var G__21460 = m;
      var G__21461 = n;
      var G__21462 = o;
      var G__21463 = p;
      var G__21464 = q;
      var G__21465 = r;
      var G__21466 = s;
      var G__21467 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__21448, G__21449, G__21450, G__21451, G__21452, G__21453, G__21454, G__21455, G__21456, G__21457, G__21458, G__21459, G__21460, G__21461, G__21462, G__21463, G__21464, G__21465, G__21466, G__21467) : self__.dispatch_fn.call(null, G__21448, G__21449, G__21450, G__21451, G__21452, G__21453, G__21454, G__21455, G__21456, G__21457, G__21458, G__21459, G__21460, G__21461, G__21462, G__21463, 
      G__21464, G__21465, G__21466, G__21467);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__21468 = a;
    var G__21469 = b;
    var G__21470 = c;
    var G__21471 = d;
    var G__21472 = e;
    var G__21473 = f;
    var G__21474 = g;
    var G__21475 = h;
    var G__21476 = i;
    var G__21477 = j;
    var G__21478 = k;
    var G__21479 = l;
    var G__21480 = m;
    var G__21481 = n;
    var G__21482 = o;
    var G__21483 = p;
    var G__21484 = q;
    var G__21485 = r;
    var G__21486 = s;
    var G__21487 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__21468, G__21469, G__21470, G__21471, G__21472, G__21473, G__21474, G__21475, G__21476, G__21477, G__21478, G__21479, G__21480, G__21481, G__21482, G__21483, G__21484, G__21485, G__21486, G__21487) : target_fn.call(null, G__21468, G__21469, G__21470, G__21471, G__21472, G__21473, G__21474, G__21475, G__21476, G__21477, G__21478, G__21479, G__21480, G__21481, G__21482, G__21483, G__21484, G__21485, G__21486, 
    G__21487);
  };
  var G__21908__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__21908 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__21908__1.call(this, self__);
      case 2:
        return G__21908__2.call(this, self__, a);
      case 3:
        return G__21908__3.call(this, self__, a, b);
      case 4:
        return G__21908__4.call(this, self__, a, b, c);
      case 5:
        return G__21908__5.call(this, self__, a, b, c, d);
      case 6:
        return G__21908__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__21908__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__21908__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__21908__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__21908__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__21908__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__21908__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__21908__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__21908__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__21908__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__21908__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__21908__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__21908__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__21908__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__21908__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__21908__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__21908__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21908.cljs$core$IFn$_invoke$arity$1 = G__21908__1;
  G__21908.cljs$core$IFn$_invoke$arity$2 = G__21908__2;
  G__21908.cljs$core$IFn$_invoke$arity$3 = G__21908__3;
  G__21908.cljs$core$IFn$_invoke$arity$4 = G__21908__4;
  G__21908.cljs$core$IFn$_invoke$arity$5 = G__21908__5;
  G__21908.cljs$core$IFn$_invoke$arity$6 = G__21908__6;
  G__21908.cljs$core$IFn$_invoke$arity$7 = G__21908__7;
  G__21908.cljs$core$IFn$_invoke$arity$8 = G__21908__8;
  G__21908.cljs$core$IFn$_invoke$arity$9 = G__21908__9;
  G__21908.cljs$core$IFn$_invoke$arity$10 = G__21908__10;
  G__21908.cljs$core$IFn$_invoke$arity$11 = G__21908__11;
  G__21908.cljs$core$IFn$_invoke$arity$12 = G__21908__12;
  G__21908.cljs$core$IFn$_invoke$arity$13 = G__21908__13;
  G__21908.cljs$core$IFn$_invoke$arity$14 = G__21908__14;
  G__21908.cljs$core$IFn$_invoke$arity$15 = G__21908__15;
  G__21908.cljs$core$IFn$_invoke$arity$16 = G__21908__16;
  G__21908.cljs$core$IFn$_invoke$arity$17 = G__21908__17;
  G__21908.cljs$core$IFn$_invoke$arity$18 = G__21908__18;
  G__21908.cljs$core$IFn$_invoke$arity$19 = G__21908__19;
  G__21908.cljs$core$IFn$_invoke$arity$20 = G__21908__20;
  G__21908.cljs$core$IFn$_invoke$arity$21 = G__21908__21;
  G__21908.cljs$core$IFn$_invoke$arity$22 = G__21908__22;
  return G__21908;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args21060) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21060)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21488 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__21488) : self__.dispatch_fn.call(null, G__21488);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21489 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__21489) : target_fn.call(null, G__21489);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21490 = a;
    var G__21491 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__21490, G__21491) : self__.dispatch_fn.call(null, G__21490, G__21491);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21492 = a;
  var G__21493 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__21492, G__21493) : target_fn.call(null, G__21492, G__21493);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21494 = a;
    var G__21495 = b;
    var G__21496 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__21494, G__21495, G__21496) : self__.dispatch_fn.call(null, G__21494, G__21495, G__21496);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21497 = a;
  var G__21498 = b;
  var G__21499 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__21497, G__21498, G__21499) : target_fn.call(null, G__21497, G__21498, G__21499);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21500 = a;
    var G__21501 = b;
    var G__21502 = c;
    var G__21503 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__21500, G__21501, G__21502, G__21503) : self__.dispatch_fn.call(null, G__21500, G__21501, G__21502, G__21503);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21504 = a;
  var G__21505 = b;
  var G__21506 = c;
  var G__21507 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__21504, G__21505, G__21506, G__21507) : target_fn.call(null, G__21504, G__21505, G__21506, G__21507);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21508 = a;
    var G__21509 = b;
    var G__21510 = c;
    var G__21511 = d;
    var G__21512 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__21508, G__21509, G__21510, G__21511, G__21512) : self__.dispatch_fn.call(null, G__21508, G__21509, G__21510, G__21511, G__21512);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21513 = a;
  var G__21514 = b;
  var G__21515 = c;
  var G__21516 = d;
  var G__21517 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__21513, G__21514, G__21515, G__21516, G__21517) : target_fn.call(null, G__21513, G__21514, G__21515, G__21516, G__21517);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21518 = a;
    var G__21519 = b;
    var G__21520 = c;
    var G__21521 = d;
    var G__21522 = e;
    var G__21523 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__21518, G__21519, G__21520, G__21521, G__21522, G__21523) : self__.dispatch_fn.call(null, G__21518, G__21519, G__21520, G__21521, G__21522, G__21523);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21524 = a;
  var G__21525 = b;
  var G__21526 = c;
  var G__21527 = d;
  var G__21528 = e;
  var G__21529 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__21524, G__21525, G__21526, G__21527, G__21528, G__21529) : target_fn.call(null, G__21524, G__21525, G__21526, G__21527, G__21528, G__21529);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21530 = a;
    var G__21531 = b;
    var G__21532 = c;
    var G__21533 = d;
    var G__21534 = e;
    var G__21535 = f;
    var G__21536 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__21530, G__21531, G__21532, G__21533, G__21534, G__21535, G__21536) : self__.dispatch_fn.call(null, G__21530, G__21531, G__21532, G__21533, G__21534, G__21535, G__21536);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21537 = a;
  var G__21538 = b;
  var G__21539 = c;
  var G__21540 = d;
  var G__21541 = e;
  var G__21542 = f;
  var G__21543 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__21537, G__21538, G__21539, G__21540, G__21541, G__21542, G__21543) : target_fn.call(null, G__21537, G__21538, G__21539, G__21540, G__21541, G__21542, G__21543);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21544 = a;
    var G__21545 = b;
    var G__21546 = c;
    var G__21547 = d;
    var G__21548 = e;
    var G__21549 = f;
    var G__21550 = g;
    var G__21551 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__21544, G__21545, G__21546, G__21547, G__21548, G__21549, G__21550, G__21551) : self__.dispatch_fn.call(null, G__21544, G__21545, G__21546, G__21547, G__21548, G__21549, G__21550, G__21551);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21552 = a;
  var G__21553 = b;
  var G__21554 = c;
  var G__21555 = d;
  var G__21556 = e;
  var G__21557 = f;
  var G__21558 = g;
  var G__21559 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__21552, G__21553, G__21554, G__21555, G__21556, G__21557, G__21558, G__21559) : target_fn.call(null, G__21552, G__21553, G__21554, G__21555, G__21556, G__21557, G__21558, G__21559);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21560 = a;
    var G__21561 = b;
    var G__21562 = c;
    var G__21563 = d;
    var G__21564 = e;
    var G__21565 = f;
    var G__21566 = g;
    var G__21567 = h;
    var G__21568 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__21560, G__21561, G__21562, G__21563, G__21564, G__21565, G__21566, G__21567, G__21568) : self__.dispatch_fn.call(null, G__21560, G__21561, G__21562, G__21563, G__21564, G__21565, G__21566, G__21567, G__21568);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21569 = a;
  var G__21570 = b;
  var G__21571 = c;
  var G__21572 = d;
  var G__21573 = e;
  var G__21574 = f;
  var G__21575 = g;
  var G__21576 = h;
  var G__21577 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__21569, G__21570, G__21571, G__21572, G__21573, G__21574, G__21575, G__21576, G__21577) : target_fn.call(null, G__21569, G__21570, G__21571, G__21572, G__21573, G__21574, G__21575, G__21576, G__21577);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21578 = a;
    var G__21579 = b;
    var G__21580 = c;
    var G__21581 = d;
    var G__21582 = e;
    var G__21583 = f;
    var G__21584 = g;
    var G__21585 = h;
    var G__21586 = i;
    var G__21587 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__21578, G__21579, G__21580, G__21581, G__21582, G__21583, G__21584, G__21585, G__21586, G__21587) : self__.dispatch_fn.call(null, G__21578, G__21579, G__21580, G__21581, G__21582, G__21583, G__21584, G__21585, G__21586, G__21587);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21588 = a;
  var G__21589 = b;
  var G__21590 = c;
  var G__21591 = d;
  var G__21592 = e;
  var G__21593 = f;
  var G__21594 = g;
  var G__21595 = h;
  var G__21596 = i;
  var G__21597 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__21588, G__21589, G__21590, G__21591, G__21592, G__21593, G__21594, G__21595, G__21596, G__21597) : target_fn.call(null, G__21588, G__21589, G__21590, G__21591, G__21592, G__21593, G__21594, G__21595, G__21596, G__21597);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21598 = a;
    var G__21599 = b;
    var G__21600 = c;
    var G__21601 = d;
    var G__21602 = e;
    var G__21603 = f;
    var G__21604 = g;
    var G__21605 = h;
    var G__21606 = i;
    var G__21607 = j;
    var G__21608 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__21598, G__21599, G__21600, G__21601, G__21602, G__21603, G__21604, G__21605, G__21606, G__21607, G__21608) : self__.dispatch_fn.call(null, G__21598, G__21599, G__21600, G__21601, G__21602, G__21603, G__21604, G__21605, G__21606, G__21607, G__21608);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21609 = a;
  var G__21610 = b;
  var G__21611 = c;
  var G__21612 = d;
  var G__21613 = e;
  var G__21614 = f;
  var G__21615 = g;
  var G__21616 = h;
  var G__21617 = i;
  var G__21618 = j;
  var G__21619 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__21609, G__21610, G__21611, G__21612, G__21613, G__21614, G__21615, G__21616, G__21617, G__21618, G__21619) : target_fn.call(null, G__21609, G__21610, G__21611, G__21612, G__21613, G__21614, G__21615, G__21616, G__21617, G__21618, G__21619);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21620 = a;
    var G__21621 = b;
    var G__21622 = c;
    var G__21623 = d;
    var G__21624 = e;
    var G__21625 = f;
    var G__21626 = g;
    var G__21627 = h;
    var G__21628 = i;
    var G__21629 = j;
    var G__21630 = k;
    var G__21631 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__21620, G__21621, G__21622, G__21623, G__21624, G__21625, G__21626, G__21627, G__21628, G__21629, G__21630, G__21631) : self__.dispatch_fn.call(null, G__21620, G__21621, G__21622, G__21623, G__21624, G__21625, G__21626, G__21627, G__21628, G__21629, G__21630, G__21631);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21632 = a;
  var G__21633 = b;
  var G__21634 = c;
  var G__21635 = d;
  var G__21636 = e;
  var G__21637 = f;
  var G__21638 = g;
  var G__21639 = h;
  var G__21640 = i;
  var G__21641 = j;
  var G__21642 = k;
  var G__21643 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__21632, G__21633, G__21634, G__21635, G__21636, G__21637, G__21638, G__21639, G__21640, G__21641, G__21642, G__21643) : target_fn.call(null, G__21632, G__21633, G__21634, G__21635, G__21636, G__21637, G__21638, G__21639, G__21640, G__21641, G__21642, G__21643);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21644 = a;
    var G__21645 = b;
    var G__21646 = c;
    var G__21647 = d;
    var G__21648 = e;
    var G__21649 = f;
    var G__21650 = g;
    var G__21651 = h;
    var G__21652 = i;
    var G__21653 = j;
    var G__21654 = k;
    var G__21655 = l;
    var G__21656 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__21644, G__21645, G__21646, G__21647, G__21648, G__21649, G__21650, G__21651, G__21652, G__21653, G__21654, G__21655, G__21656) : self__.dispatch_fn.call(null, G__21644, G__21645, G__21646, G__21647, G__21648, G__21649, G__21650, G__21651, G__21652, G__21653, G__21654, G__21655, G__21656);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21657 = a;
  var G__21658 = b;
  var G__21659 = c;
  var G__21660 = d;
  var G__21661 = e;
  var G__21662 = f;
  var G__21663 = g;
  var G__21664 = h;
  var G__21665 = i;
  var G__21666 = j;
  var G__21667 = k;
  var G__21668 = l;
  var G__21669 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__21657, G__21658, G__21659, G__21660, G__21661, G__21662, G__21663, G__21664, G__21665, G__21666, G__21667, G__21668, G__21669) : target_fn.call(null, G__21657, G__21658, G__21659, G__21660, G__21661, G__21662, G__21663, G__21664, G__21665, G__21666, G__21667, G__21668, G__21669);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21670 = a;
    var G__21671 = b;
    var G__21672 = c;
    var G__21673 = d;
    var G__21674 = e;
    var G__21675 = f;
    var G__21676 = g;
    var G__21677 = h;
    var G__21678 = i;
    var G__21679 = j;
    var G__21680 = k;
    var G__21681 = l;
    var G__21682 = m;
    var G__21683 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__21670, G__21671, G__21672, G__21673, G__21674, G__21675, G__21676, G__21677, G__21678, G__21679, G__21680, G__21681, G__21682, G__21683) : self__.dispatch_fn.call(null, G__21670, G__21671, G__21672, G__21673, G__21674, G__21675, G__21676, G__21677, G__21678, G__21679, G__21680, G__21681, G__21682, G__21683);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21684 = a;
  var G__21685 = b;
  var G__21686 = c;
  var G__21687 = d;
  var G__21688 = e;
  var G__21689 = f;
  var G__21690 = g;
  var G__21691 = h;
  var G__21692 = i;
  var G__21693 = j;
  var G__21694 = k;
  var G__21695 = l;
  var G__21696 = m;
  var G__21697 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__21684, G__21685, G__21686, G__21687, G__21688, G__21689, G__21690, G__21691, G__21692, G__21693, G__21694, G__21695, G__21696, G__21697) : target_fn.call(null, G__21684, G__21685, G__21686, G__21687, G__21688, G__21689, G__21690, G__21691, G__21692, G__21693, G__21694, G__21695, G__21696, G__21697);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21698 = a;
    var G__21699 = b;
    var G__21700 = c;
    var G__21701 = d;
    var G__21702 = e;
    var G__21703 = f;
    var G__21704 = g;
    var G__21705 = h;
    var G__21706 = i;
    var G__21707 = j;
    var G__21708 = k;
    var G__21709 = l;
    var G__21710 = m;
    var G__21711 = n;
    var G__21712 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__21698, G__21699, G__21700, G__21701, G__21702, G__21703, G__21704, G__21705, G__21706, G__21707, G__21708, G__21709, G__21710, G__21711, G__21712) : self__.dispatch_fn.call(null, G__21698, G__21699, G__21700, G__21701, G__21702, G__21703, G__21704, G__21705, G__21706, G__21707, G__21708, G__21709, G__21710, G__21711, G__21712);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21713 = a;
  var G__21714 = b;
  var G__21715 = c;
  var G__21716 = d;
  var G__21717 = e;
  var G__21718 = f;
  var G__21719 = g;
  var G__21720 = h;
  var G__21721 = i;
  var G__21722 = j;
  var G__21723 = k;
  var G__21724 = l;
  var G__21725 = m;
  var G__21726 = n;
  var G__21727 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__21713, G__21714, G__21715, G__21716, G__21717, G__21718, G__21719, G__21720, G__21721, G__21722, G__21723, G__21724, G__21725, G__21726, G__21727) : target_fn.call(null, G__21713, G__21714, G__21715, G__21716, G__21717, G__21718, G__21719, G__21720, G__21721, G__21722, G__21723, G__21724, G__21725, G__21726, G__21727);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21728 = a;
    var G__21729 = b;
    var G__21730 = c;
    var G__21731 = d;
    var G__21732 = e;
    var G__21733 = f;
    var G__21734 = g;
    var G__21735 = h;
    var G__21736 = i;
    var G__21737 = j;
    var G__21738 = k;
    var G__21739 = l;
    var G__21740 = m;
    var G__21741 = n;
    var G__21742 = o;
    var G__21743 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__21728, G__21729, G__21730, G__21731, G__21732, G__21733, G__21734, G__21735, G__21736, G__21737, G__21738, G__21739, G__21740, G__21741, G__21742, G__21743) : self__.dispatch_fn.call(null, G__21728, G__21729, G__21730, G__21731, G__21732, G__21733, G__21734, G__21735, G__21736, G__21737, G__21738, G__21739, G__21740, G__21741, G__21742, G__21743);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21744 = a;
  var G__21745 = b;
  var G__21746 = c;
  var G__21747 = d;
  var G__21748 = e;
  var G__21749 = f;
  var G__21750 = g;
  var G__21751 = h;
  var G__21752 = i;
  var G__21753 = j;
  var G__21754 = k;
  var G__21755 = l;
  var G__21756 = m;
  var G__21757 = n;
  var G__21758 = o;
  var G__21759 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__21744, G__21745, G__21746, G__21747, G__21748, G__21749, G__21750, G__21751, G__21752, G__21753, G__21754, G__21755, G__21756, G__21757, G__21758, G__21759) : target_fn.call(null, G__21744, G__21745, G__21746, G__21747, G__21748, G__21749, G__21750, G__21751, G__21752, G__21753, G__21754, G__21755, G__21756, G__21757, G__21758, G__21759);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21760 = a;
    var G__21761 = b;
    var G__21762 = c;
    var G__21763 = d;
    var G__21764 = e;
    var G__21765 = f;
    var G__21766 = g;
    var G__21767 = h;
    var G__21768 = i;
    var G__21769 = j;
    var G__21770 = k;
    var G__21771 = l;
    var G__21772 = m;
    var G__21773 = n;
    var G__21774 = o;
    var G__21775 = p;
    var G__21776 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__21760, G__21761, G__21762, G__21763, G__21764, G__21765, G__21766, G__21767, G__21768, G__21769, G__21770, G__21771, G__21772, G__21773, G__21774, G__21775, G__21776) : self__.dispatch_fn.call(null, G__21760, G__21761, G__21762, G__21763, G__21764, G__21765, G__21766, G__21767, G__21768, G__21769, G__21770, G__21771, G__21772, G__21773, G__21774, G__21775, G__21776);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21777 = a;
  var G__21778 = b;
  var G__21779 = c;
  var G__21780 = d;
  var G__21781 = e;
  var G__21782 = f;
  var G__21783 = g;
  var G__21784 = h;
  var G__21785 = i;
  var G__21786 = j;
  var G__21787 = k;
  var G__21788 = l;
  var G__21789 = m;
  var G__21790 = n;
  var G__21791 = o;
  var G__21792 = p;
  var G__21793 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__21777, G__21778, G__21779, G__21780, G__21781, G__21782, G__21783, G__21784, G__21785, G__21786, G__21787, G__21788, G__21789, G__21790, G__21791, G__21792, G__21793) : target_fn.call(null, G__21777, G__21778, G__21779, G__21780, G__21781, G__21782, G__21783, G__21784, G__21785, G__21786, G__21787, G__21788, G__21789, G__21790, G__21791, G__21792, G__21793);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21794 = a;
    var G__21795 = b;
    var G__21796 = c;
    var G__21797 = d;
    var G__21798 = e;
    var G__21799 = f;
    var G__21800 = g;
    var G__21801 = h;
    var G__21802 = i;
    var G__21803 = j;
    var G__21804 = k;
    var G__21805 = l;
    var G__21806 = m;
    var G__21807 = n;
    var G__21808 = o;
    var G__21809 = p;
    var G__21810 = q;
    var G__21811 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__21794, G__21795, G__21796, G__21797, G__21798, G__21799, G__21800, G__21801, G__21802, G__21803, G__21804, G__21805, G__21806, G__21807, G__21808, G__21809, G__21810, G__21811) : self__.dispatch_fn.call(null, G__21794, G__21795, G__21796, G__21797, G__21798, G__21799, G__21800, G__21801, G__21802, G__21803, G__21804, G__21805, G__21806, G__21807, G__21808, G__21809, G__21810, G__21811);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21812 = a;
  var G__21813 = b;
  var G__21814 = c;
  var G__21815 = d;
  var G__21816 = e;
  var G__21817 = f;
  var G__21818 = g;
  var G__21819 = h;
  var G__21820 = i;
  var G__21821 = j;
  var G__21822 = k;
  var G__21823 = l;
  var G__21824 = m;
  var G__21825 = n;
  var G__21826 = o;
  var G__21827 = p;
  var G__21828 = q;
  var G__21829 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__21812, G__21813, G__21814, G__21815, G__21816, G__21817, G__21818, G__21819, G__21820, G__21821, G__21822, G__21823, G__21824, G__21825, G__21826, G__21827, G__21828, G__21829) : target_fn.call(null, G__21812, G__21813, G__21814, G__21815, G__21816, G__21817, G__21818, G__21819, G__21820, G__21821, G__21822, G__21823, G__21824, G__21825, G__21826, G__21827, G__21828, G__21829);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21830 = a;
    var G__21831 = b;
    var G__21832 = c;
    var G__21833 = d;
    var G__21834 = e;
    var G__21835 = f;
    var G__21836 = g;
    var G__21837 = h;
    var G__21838 = i;
    var G__21839 = j;
    var G__21840 = k;
    var G__21841 = l;
    var G__21842 = m;
    var G__21843 = n;
    var G__21844 = o;
    var G__21845 = p;
    var G__21846 = q;
    var G__21847 = r;
    var G__21848 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__21830, G__21831, G__21832, G__21833, G__21834, G__21835, G__21836, G__21837, G__21838, G__21839, G__21840, G__21841, G__21842, G__21843, G__21844, G__21845, G__21846, G__21847, G__21848) : self__.dispatch_fn.call(null, G__21830, G__21831, G__21832, G__21833, G__21834, G__21835, G__21836, G__21837, G__21838, G__21839, G__21840, G__21841, G__21842, G__21843, G__21844, G__21845, G__21846, 
    G__21847, G__21848);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21849 = a;
  var G__21850 = b;
  var G__21851 = c;
  var G__21852 = d;
  var G__21853 = e;
  var G__21854 = f;
  var G__21855 = g;
  var G__21856 = h;
  var G__21857 = i;
  var G__21858 = j;
  var G__21859 = k;
  var G__21860 = l;
  var G__21861 = m;
  var G__21862 = n;
  var G__21863 = o;
  var G__21864 = p;
  var G__21865 = q;
  var G__21866 = r;
  var G__21867 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__21849, G__21850, G__21851, G__21852, G__21853, G__21854, G__21855, G__21856, G__21857, G__21858, G__21859, G__21860, G__21861, G__21862, G__21863, G__21864, G__21865, G__21866, G__21867) : target_fn.call(null, G__21849, G__21850, G__21851, G__21852, G__21853, G__21854, G__21855, G__21856, G__21857, G__21858, G__21859, G__21860, G__21861, G__21862, G__21863, G__21864, G__21865, G__21866, G__21867);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__21868 = a;
    var G__21869 = b;
    var G__21870 = c;
    var G__21871 = d;
    var G__21872 = e;
    var G__21873 = f;
    var G__21874 = g;
    var G__21875 = h;
    var G__21876 = i;
    var G__21877 = j;
    var G__21878 = k;
    var G__21879 = l;
    var G__21880 = m;
    var G__21881 = n;
    var G__21882 = o;
    var G__21883 = p;
    var G__21884 = q;
    var G__21885 = r;
    var G__21886 = s;
    var G__21887 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__21868, G__21869, G__21870, G__21871, G__21872, G__21873, G__21874, G__21875, G__21876, G__21877, G__21878, G__21879, G__21880, G__21881, G__21882, G__21883, G__21884, G__21885, G__21886, G__21887) : self__.dispatch_fn.call(null, G__21868, G__21869, G__21870, G__21871, G__21872, G__21873, G__21874, G__21875, G__21876, G__21877, G__21878, G__21879, G__21880, G__21881, G__21882, G__21883, 
    G__21884, G__21885, G__21886, G__21887);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__21888 = a;
  var G__21889 = b;
  var G__21890 = c;
  var G__21891 = d;
  var G__21892 = e;
  var G__21893 = f;
  var G__21894 = g;
  var G__21895 = h;
  var G__21896 = i;
  var G__21897 = j;
  var G__21898 = k;
  var G__21899 = l;
  var G__21900 = m;
  var G__21901 = n;
  var G__21902 = o;
  var G__21903 = p;
  var G__21904 = q;
  var G__21905 = r;
  var G__21906 = s;
  var G__21907 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__21888, G__21889, G__21890, G__21891, G__21892, G__21893, G__21894, G__21895, G__21896, G__21897, G__21898, G__21899, G__21900, G__21901, G__21902, G__21903, G__21904, G__21905, G__21906, G__21907) : target_fn.call(null, G__21888, G__21889, G__21890, G__21891, G__21892, G__21893, G__21894, G__21895, G__21896, G__21897, G__21898, G__21899, G__21900, G__21901, G__21902, G__21903, G__21904, G__21905, G__21906, 
  G__21907);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__21909 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__21909);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write(writer__4555__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__21914 = msg;
      return Error(G__21914);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__21919 = x;
      var G__21920 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__21919, G__21920) : pred.call(null, G__21919, G__21920);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__21921 = y;
        var G__21922 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__21921, G__21922) : pred.call(null, G__21921, G__21922);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj23904 = {};
  return obj23904;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3955__auto__ = port;
    if (and__3955__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4611__auto__ = port == null ? null : port;
    return function() {
      var or__3967__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj23906 = {};
  return obj23906;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if (function() {
    var and__3955__auto__ = port;
    if (and__3955__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler);
  } else {
    var x__4611__auto__ = port == null ? null : port;
    return function() {
      var or__3967__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj23908 = {};
  return obj23908;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3955__auto__ = chan;
    if (and__3955__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4611__auto__ = chan == null ? null : chan;
    return function() {
      var or__3967__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj23910 = {};
  return obj23910;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3955__auto__ = h;
    if (and__3955__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4611__auto__ = h == null ? null : h;
    return function() {
      var or__3967__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3955__auto__ = h;
    if (and__3955__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4611__auto__ = h == null ? null : h;
    return function() {
      var or__3967__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj23912 = {};
  return obj23912;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3955__auto__ = b;
    if (and__3955__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4611__auto__ = b == null ? null : b;
    return function() {
      var or__3967__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3955__auto__ = b;
    if (and__3955__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4611__auto__ = b == null ? null : b;
    return function() {
      var or__3967__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if (function() {
    var and__3955__auto__ = b;
    if (and__3955__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm);
  } else {
    var x__4611__auto__ = b == null ? null : b;
    return function() {
      var or__3967__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm);
  }
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__23915 = cnt + 1;
      cnt = G__23915;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4854__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4854__auto__) {
      var v_23916 = this$.pop();
      if (keep_QMARK_.call(null, v_23916)) {
        this$.unshift(v_23916);
      } else {
      }
      var G__23917 = x + 1;
      x = G__23917;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -97582774, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null)))))].join(""));
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    return null;
  } else {
    return self__.buf.unshift(itm);
  }
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  return self__.buf.unshift(itm);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_23920 = 0;
  while (true) {
    var m_23921 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_23921 == null) {
    } else {
      m_23921.call(null);
      if (count_23920 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__23922 = count_23920 + 1;
        count_23920 = G__23922;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3955__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3955__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3955__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t23928 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t23928 = function(val, box, meta23929) {
      this.val = val;
      this.box = box;
      this.meta23929 = meta23929;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t23928.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t23928.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23930) {
      var self__ = this;
      var _23930__$1 = this;
      return self__.meta23929;
    };
    cljs.core.async.impl.channels.t23928.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23930, meta23929__$1) {
      var self__ = this;
      var _23930__$1 = this;
      return new cljs.core.async.impl.channels.t23928(self__.val, self__.box, meta23929__$1);
    };
    cljs.core.async.impl.channels.t23928.cljs$lang$type = true;
    cljs.core.async.impl.channels.t23928.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t23928";
    cljs.core.async.impl.channels.t23928.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
      return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async.impl.channels/t23928");
    };
    cljs.core.async.impl.channels.__GT_t23928 = function __GT_t23928(val__$1, box__$1, meta23929) {
      return new cljs.core.async.impl.channels.t23928(val__$1, box__$1, meta23929);
    };
  }
  return new cljs.core.async.impl.channels.t23928(val, box, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    while (true) {
      var taker_23931 = self__.takes.pop();
      if (taker_23931 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_23931)) {
          var take_cb_23932 = cljs.core.async.impl.protocols.commit.call(null, taker_23931);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_23932, taker_23931, this$__$1) {
            return function() {
              return take_cb_23932.call(null, null);
            };
          }(take_cb_23932, taker_23931, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
    } else {
      while (true) {
        var putter = self__.puts.pop();
        if (!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            continue;
          }
        } else {
          if (self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null);
          } else {
            if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
            } else {
              self__.dirty_takes = self__.dirty_takes + 1;
            }
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, 
              "takes", "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null;
          }
        }
        break;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null);
  } else {
    while (true) {
      var taker = self__.takes.pop();
      if (!(taker == null)) {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker, closed__$1, this$__$1) {
            return function() {
              return take_cb.call(null, val);
            };
          }(take_cb, _, taker, closed__$1, this$__$1));
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          continue;
        }
      } else {
        if (!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null);
        } else {
          if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
          } else {
            self__.dirty_puts = self__.dirty_puts + 1;
          }
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null;
        }
      }
      break;
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed);
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null);
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t23870 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t23870 = function(f, fn_handler, meta23871) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta23871 = meta23871;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t23870.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t23870.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t23870.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t23870.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23872) {
      var self__ = this;
      var _23872__$1 = this;
      return self__.meta23871;
    };
    cljs.core.async.impl.ioc_helpers.t23870.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23872, meta23871__$1) {
      var self__ = this;
      var _23872__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t23870(self__.f, self__.fn_handler, meta23871__$1);
    };
    cljs.core.async.impl.ioc_helpers.t23870.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t23870.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t23870";
    cljs.core.async.impl.ioc_helpers.t23870.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
      return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async.impl.ioc-helpers/t23870");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t23870 = function __GT_t23870(f__$1, fn_handler__$1, meta23871) {
      return new cljs.core.async.impl.ioc_helpers.t23870(f__$1, fn_handler__$1, meta23871);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t23870(f, fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e23874) {
    if (e23874 instanceof Object) {
      var ex = e23874;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e23874;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_23877_23879 = state;
    statearr_23877_23879[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_23877_23879[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_23878_23880 = state;
    statearr_23878_23880[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_23878_23880[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_23883_23885 = state;
    statearr_23883_23885[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_23883_23885[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_23884_23886 = state;
    statearr_23884_23886[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_23884_23886[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__23887) {
    var map__23892 = p__23887;
    var map__23892__$1 = cljs.core.seq_QMARK_.call(null, map__23892) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23892) : map__23892;
    var opts = map__23892__$1;
    var statearr_23893_23896 = state;
    statearr_23893_23896[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__23892, map__23892__$1, opts) {
      return function(val) {
        var statearr_23894_23897 = state;
        statearr_23894_23897[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__23892, map__23892__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_23895_23898 = state;
      statearr_23895_23898[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__23887 = null;
    if (arguments.length > 3) {
      var G__23899__i = 0, G__23899__a = new Array(arguments.length - 3);
      while (G__23899__i < G__23899__a.length) {
        G__23899__a[G__23899__i] = arguments[G__23899__i + 3];
        ++G__23899__i;
      }
      p__23887 = new cljs.core.IndexedSeq(G__23899__a, 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__23887);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__23900) {
    var state = cljs.core.first(arglist__23900);
    arglist__23900 = cljs.core.next(arglist__23900);
    var cont_block = cljs.core.first(arglist__23900);
    arglist__23900 = cljs.core.next(arglist__23900);
    var ports = cljs.core.first(arglist__23900);
    var p__23887 = cljs.core.rest(arglist__23900);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__23887);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__23841 = level + 1;
        level = G__23841;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_23842 = 0;
    while (true) {
      if (i_23842 < arr.length) {
        arr[i_23842] = null;
        var G__23843 = i_23842 + 1;
        i_23842 = G__23843;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__23844 = x_SINGLEQUOTE_;
                x__$1 = G__23844;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__23845 = x__$1;
        var G__23846 = k;
        var G__23847 = level - 1;
        var G__23848 = update;
        x = G__23845;
        k = G__23846;
        level = G__23847;
        update = G__23848;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_23849 = self__.level + 1;
      while (true) {
        if (i_23849 <= new_level + 1) {
          update[i_23849] = self__.header;
          var G__23850 = i_23849 + 1;
          i_23849 = G__23850;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_23851 = 0;
    while (true) {
      if (i_23851 <= self__.level) {
        var links_23852 = update[i_23851].forward;
        if (links_23852[i_23851] === x__$1) {
          links_23852[i_23851] = x__$1.forward[i_23851];
          var G__23853 = i_23851 + 1;
          i_23851 = G__23853;
          continue;
        } else {
          var G__23854 = i_23851 + 1;
          i_23851 = G__23854;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__23855 = x_SINGLEQUOTE_;
              x__$1 = G__23855;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__23856 = nx;
        var G__23857 = level__$1 - 1;
        x = G__23856;
        level__$1 = G__23857;
        continue;
      } else {
        var G__23858 = x;
        var G__23859 = level__$1 - 1;
        x = G__23858;
        level__$1 = G__23859;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__23860 = x_SINGLEQUOTE_;
              x__$1 = G__23860;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__23861 = nx;
        var G__23862 = level__$1 - 1;
        x = G__23861;
        level__$1 = G__23862;
        continue;
      } else {
        var G__23863 = x;
        var G__23864 = level__$1 - 1;
        x = G__23863;
        level__$1 = G__23864;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3967__auto__ = cljs.core.truth_(function() {
    var and__3955__auto__ = me;
    if (cljs.core.truth_(and__3955__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3955__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3967__auto__)) {
    return or__3967__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3967__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3967__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t21928 !== "undefined") {
  } else {
    cljs.core.async.t21928 = function(f, fn_handler, meta21929) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta21929 = meta21929;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21928.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t21928.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t21928.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t21928.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21930) {
      var self__ = this;
      var _21930__$1 = this;
      return self__.meta21929;
    };
    cljs.core.async.t21928.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21930, meta21929__$1) {
      var self__ = this;
      var _21930__$1 = this;
      return new cljs.core.async.t21928(self__.f, self__.fn_handler, meta21929__$1);
    };
    cljs.core.async.t21928.cljs$lang$type = true;
    cljs.core.async.t21928.cljs$lang$ctorStr = "cljs.core.async/t21928";
    cljs.core.async.t21928.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
      return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async/t21928");
    };
    cljs.core.async.__GT_t21928 = function __GT_t21928(f__$1, fn_handler__$1, meta21929) {
      return new cljs.core.async.t21928(f__$1, fn_handler__$1, meta21929);
    };
  }
  return new cljs.core.async.t21928(f, fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1);
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_21931 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_21931);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_21931, ret) {
          return function() {
            return fn1.call(null, val_21931);
          };
        }(val_21931, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop() {
  return null;
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop);
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true);
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if (cljs.core.truth_(function() {
      var and__3955__auto__ = ret;
      if (cljs.core.truth_(and__3955__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop);
      } else {
        return and__3955__auto__;
      }
    }())) {
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, fn0);
      }
    } else {
    }
    return null;
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4854__auto___21932 = n;
  var x_21933 = 0;
  while (true) {
    if (x_21933 < n__4854__auto___21932) {
      a[x_21933] = 0;
      var G__21934 = x_21933 + 1;
      x_21933 = G__21934;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__21935 = i + 1;
      i = G__21935;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t21939 !== "undefined") {
  } else {
    cljs.core.async.t21939 = function(flag, alt_flag, meta21940) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta21940 = meta21940;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21939.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t21939.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t21939.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t21939.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_21941) {
        var self__ = this;
        var _21941__$1 = this;
        return self__.meta21940;
      };
    }(flag);
    cljs.core.async.t21939.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_21941, meta21940__$1) {
        var self__ = this;
        var _21941__$1 = this;
        return new cljs.core.async.t21939(self__.flag, self__.alt_flag, meta21940__$1);
      };
    }(flag);
    cljs.core.async.t21939.cljs$lang$type = true;
    cljs.core.async.t21939.cljs$lang$ctorStr = "cljs.core.async/t21939";
    cljs.core.async.t21939.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
        return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async/t21939");
      };
    }(flag);
    cljs.core.async.__GT_t21939 = function(flag) {
      return function __GT_t21939(flag__$1, alt_flag__$1, meta21940) {
        return new cljs.core.async.t21939(flag__$1, alt_flag__$1, meta21940);
      };
    }(flag);
  }
  return new cljs.core.async.t21939(flag, alt_flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t21945 !== "undefined") {
  } else {
    cljs.core.async.t21945 = function(cb, flag, alt_handler, meta21946) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta21946 = meta21946;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21945.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t21945.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t21945.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t21945.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21947) {
      var self__ = this;
      var _21947__$1 = this;
      return self__.meta21946;
    };
    cljs.core.async.t21945.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21947, meta21946__$1) {
      var self__ = this;
      var _21947__$1 = this;
      return new cljs.core.async.t21945(self__.cb, self__.flag, self__.alt_handler, meta21946__$1);
    };
    cljs.core.async.t21945.cljs$lang$type = true;
    cljs.core.async.t21945.cljs$lang$ctorStr = "cljs.core.async/t21945";
    cljs.core.async.t21945.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
      return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async/t21945");
    };
    cljs.core.async.__GT_t21945 = function __GT_t21945(cb__$1, flag__$1, alt_handler__$1, meta21946) {
      return new cljs.core.async.t21945(cb__$1, flag__$1, alt_handler__$1, meta21946);
    };
  }
  return new cljs.core.async.t21945(cb, flag, alt_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__21948_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__21948_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3967__auto__ = wport;
            if (cljs.core.truth_(or__3967__auto__)) {
              return or__3967__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__21949 = i + 1;
          i = G__21949;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3967__auto__ = ret;
  if (cljs.core.truth_(or__3967__auto__)) {
    return or__3967__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3955__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3955__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3955__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__21950) {
    var map__21952 = p__21950;
    var map__21952__$1 = cljs.core.seq_QMARK_.call(null, map__21952) ? cljs.core.apply.call(null, cljs.core.hash_map, map__21952) : map__21952;
    var opts = map__21952__$1;
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__21950 = null;
    if (arguments.length > 1) {
      var G__21953__i = 0, G__21953__a = new Array(arguments.length - 1);
      while (G__21953__i < G__21953__a.length) {
        G__21953__a[G__21953__i] = arguments[G__21953__i + 1];
        ++G__21953__i;
      }
      p__21950 = new cljs.core.IndexedSeq(G__21953__a, 0);
    }
    return alts_BANG___delegate.call(this, ports, p__21950);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__21954) {
    var ports = cljs.core.first(arglist__21954);
    var p__21950 = cljs.core.rest(arglist__21954);
    return alts_BANG___delegate(ports, p__21950);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t21962 !== "undefined") {
  } else {
    cljs.core.async.t21962 = function(ch, f, map_LT_, meta21963) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta21963 = meta21963;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21962.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t21962.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
    };
    cljs.core.async.t21962.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t21962.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t21965 !== "undefined") {
        } else {
          cljs.core.async.t21965 = function(fn1, _, meta21963, map_LT_, f, ch, meta21966) {
            this.fn1 = fn1;
            this._ = _;
            this.meta21963 = meta21963;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta21966 = meta21966;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t21965.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t21965.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t21965.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t21965.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__21955_SHARP_) {
                  return f1.call(null, p1__21955_SHARP_ == null ? null : self__.f.call(null, p1__21955_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t21965.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_21967) {
              var self__ = this;
              var _21967__$1 = this;
              return self__.meta21966;
            };
          }(___$1);
          cljs.core.async.t21965.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_21967, meta21966__$1) {
              var self__ = this;
              var _21967__$1 = this;
              return new cljs.core.async.t21965(self__.fn1, self__._, self__.meta21963, self__.map_LT_, self__.f, self__.ch, meta21966__$1);
            };
          }(___$1);
          cljs.core.async.t21965.cljs$lang$type = true;
          cljs.core.async.t21965.cljs$lang$ctorStr = "cljs.core.async/t21965";
          cljs.core.async.t21965.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
              return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async/t21965");
            };
          }(___$1);
          cljs.core.async.__GT_t21965 = function(___$1) {
            return function __GT_t21965(fn1__$1, ___$2, meta21963__$1, map_LT___$1, f__$1, ch__$1, meta21966) {
              return new cljs.core.async.t21965(fn1__$1, ___$2, meta21963__$1, map_LT___$1, f__$1, ch__$1, meta21966);
            };
          }(___$1);
        }
        return new cljs.core.async.t21965(fn1, ___$1, self__.meta21963, self__.map_LT_, self__.f, self__.ch, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__3955__auto__ = ret;
        if (cljs.core.truth_(and__3955__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3955__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t21962.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t21962.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t21962.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21964) {
      var self__ = this;
      var _21964__$1 = this;
      return self__.meta21963;
    };
    cljs.core.async.t21962.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21964, meta21963__$1) {
      var self__ = this;
      var _21964__$1 = this;
      return new cljs.core.async.t21962(self__.ch, self__.f, self__.map_LT_, meta21963__$1);
    };
    cljs.core.async.t21962.cljs$lang$type = true;
    cljs.core.async.t21962.cljs$lang$ctorStr = "cljs.core.async/t21962";
    cljs.core.async.t21962.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
      return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async/t21962");
    };
    cljs.core.async.__GT_t21962 = function __GT_t21962(ch__$1, f__$1, map_LT___$1, meta21963) {
      return new cljs.core.async.t21962(ch__$1, f__$1, map_LT___$1, meta21963);
    };
  }
  return new cljs.core.async.t21962(ch, f, map_LT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t21971 !== "undefined") {
  } else {
    cljs.core.async.t21971 = function(ch, f, map_GT_, meta21972) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta21972 = meta21972;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21971.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t21971.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0);
    };
    cljs.core.async.t21971.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t21971.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t21971.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t21971.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t21971.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21973) {
      var self__ = this;
      var _21973__$1 = this;
      return self__.meta21972;
    };
    cljs.core.async.t21971.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21973, meta21972__$1) {
      var self__ = this;
      var _21973__$1 = this;
      return new cljs.core.async.t21971(self__.ch, self__.f, self__.map_GT_, meta21972__$1);
    };
    cljs.core.async.t21971.cljs$lang$type = true;
    cljs.core.async.t21971.cljs$lang$ctorStr = "cljs.core.async/t21971";
    cljs.core.async.t21971.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
      return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async/t21971");
    };
    cljs.core.async.__GT_t21971 = function __GT_t21971(ch__$1, f__$1, map_GT___$1, meta21972) {
      return new cljs.core.async.t21971(ch__$1, f__$1, map_GT___$1, meta21972);
    };
  }
  return new cljs.core.async.t21971(ch, f, map_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t21977 !== "undefined") {
  } else {
    cljs.core.async.t21977 = function(ch, p, filter_GT_, meta21978) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta21978 = meta21978;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t21977.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t21977.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0);
      } else {
        return cljs.core.async.impl.channels.box.call(null, null);
      }
    };
    cljs.core.async.t21977.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t21977.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t21977.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t21977.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t21977.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21979) {
      var self__ = this;
      var _21979__$1 = this;
      return self__.meta21978;
    };
    cljs.core.async.t21977.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21979, meta21978__$1) {
      var self__ = this;
      var _21979__$1 = this;
      return new cljs.core.async.t21977(self__.ch, self__.p, self__.filter_GT_, meta21978__$1);
    };
    cljs.core.async.t21977.cljs$lang$type = true;
    cljs.core.async.t21977.cljs$lang$ctorStr = "cljs.core.async/t21977";
    cljs.core.async.t21977.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
      return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async/t21977");
    };
    cljs.core.async.__GT_t21977 = function __GT_t21977(ch__$1, p__$1, filter_GT___$1, meta21978) {
      return new cljs.core.async.t21977(ch__$1, p__$1, filter_GT___$1, meta21978);
    };
  }
  return new cljs.core.async.t21977(ch, p, filter_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6608__auto___22054 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto___22054, out) {
      return function() {
        var f__6609__auto__ = function() {
          var switch__6564__auto__ = function(c__6608__auto___22054, out) {
            return function(state_22037) {
              var state_val_22038 = state_22037[1];
              if (state_val_22038 === 7) {
                var inst_22033 = state_22037[2];
                var state_22037__$1 = state_22037;
                var statearr_22039_22055 = state_22037__$1;
                statearr_22039_22055[2] = inst_22033;
                statearr_22039_22055[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22038 === 1) {
                  var state_22037__$1 = state_22037;
                  var statearr_22040_22056 = state_22037__$1;
                  statearr_22040_22056[2] = null;
                  statearr_22040_22056[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22038 === 4) {
                    var inst_22019 = state_22037[5];
                    var inst_22019__$1 = state_22037[2];
                    var inst_22020 = inst_22019__$1 == null;
                    var state_22037__$1 = function() {
                      var statearr_22041 = state_22037;
                      statearr_22041[5] = inst_22019__$1;
                      return statearr_22041;
                    }();
                    if (cljs.core.truth_(inst_22020)) {
                      var statearr_22042_22057 = state_22037__$1;
                      statearr_22042_22057[1] = 5;
                    } else {
                      var statearr_22043_22058 = state_22037__$1;
                      statearr_22043_22058[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22038 === 6) {
                      var inst_22019 = state_22037[5];
                      var inst_22024 = p.call(null, inst_22019);
                      var state_22037__$1 = state_22037;
                      if (cljs.core.truth_(inst_22024)) {
                        var statearr_22044_22059 = state_22037__$1;
                        statearr_22044_22059[1] = 8;
                      } else {
                        var statearr_22045_22060 = state_22037__$1;
                        statearr_22045_22060[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22038 === 3) {
                        var inst_22035 = state_22037[2];
                        var state_22037__$1 = state_22037;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22037__$1, inst_22035);
                      } else {
                        if (state_val_22038 === 2) {
                          var state_22037__$1 = state_22037;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22037__$1, 4, ch);
                        } else {
                          if (state_val_22038 === 11) {
                            var inst_22027 = state_22037[2];
                            var state_22037__$1 = state_22037;
                            var statearr_22046_22061 = state_22037__$1;
                            statearr_22046_22061[2] = inst_22027;
                            statearr_22046_22061[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22038 === 9) {
                              var state_22037__$1 = state_22037;
                              var statearr_22047_22062 = state_22037__$1;
                              statearr_22047_22062[2] = null;
                              statearr_22047_22062[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22038 === 5) {
                                var inst_22022 = cljs.core.async.close_BANG_.call(null, out);
                                var state_22037__$1 = state_22037;
                                var statearr_22048_22063 = state_22037__$1;
                                statearr_22048_22063[2] = inst_22022;
                                statearr_22048_22063[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22038 === 10) {
                                  var inst_22030 = state_22037[2];
                                  var state_22037__$1 = function() {
                                    var statearr_22049 = state_22037;
                                    statearr_22049[6] = inst_22030;
                                    return statearr_22049;
                                  }();
                                  var statearr_22050_22064 = state_22037__$1;
                                  statearr_22050_22064[2] = null;
                                  statearr_22050_22064[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22038 === 8) {
                                    var inst_22019 = state_22037[5];
                                    var state_22037__$1 = state_22037;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22037__$1, 11, out, inst_22019);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6608__auto___22054, out);
          return function(switch__6564__auto__, c__6608__auto___22054, out) {
            return function() {
              var state_machine__6565__auto__ = null;
              var state_machine__6565__auto____0 = function() {
                var statearr_22052 = [null, null, null, null, null, null, null];
                statearr_22052[0] = state_machine__6565__auto__;
                statearr_22052[1] = 1;
                return statearr_22052;
              };
              var state_machine__6565__auto____1 = function(state_22037) {
                while (true) {
                  var result__6566__auto__ = switch__6564__auto__.call(null, state_22037);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6566__auto__;
                  }
                  break;
                }
              };
              state_machine__6565__auto__ = function(state_22037) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6565__auto____0.call(this);
                  case 1:
                    return state_machine__6565__auto____1.call(this, state_22037);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
              return state_machine__6565__auto__;
            }();
          }(switch__6564__auto__, c__6608__auto___22054, out);
        }();
        var state__6610__auto__ = function() {
          var statearr_22053 = f__6609__auto__.call(null);
          statearr_22053[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto___22054;
          return statearr_22053;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
      };
    }(c__6608__auto___22054, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6608__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto__) {
    return function() {
      var f__6609__auto__ = function() {
        var switch__6564__auto__ = function(c__6608__auto__) {
          return function(state_22212) {
            var state_val_22213 = state_22212[1];
            if (state_val_22213 === 7) {
              var inst_22208 = state_22212[2];
              var state_22212__$1 = state_22212;
              var statearr_22214_22247 = state_22212__$1;
              statearr_22214_22247[2] = inst_22208;
              statearr_22214_22247[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_22213 === 20) {
                var inst_22183 = state_22212[5];
                var inst_22194 = state_22212[2];
                var inst_22195 = cljs.core.next.call(null, inst_22183);
                var inst_22169 = inst_22195;
                var inst_22170 = null;
                var inst_22171 = 0;
                var inst_22172 = 0;
                var state_22212__$1 = function() {
                  var statearr_22215 = state_22212;
                  statearr_22215[6] = inst_22171;
                  statearr_22215[7] = inst_22194;
                  statearr_22215[8] = inst_22172;
                  statearr_22215[9] = inst_22169;
                  statearr_22215[10] = inst_22170;
                  return statearr_22215;
                }();
                var statearr_22216_22248 = state_22212__$1;
                statearr_22216_22248[2] = null;
                statearr_22216_22248[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22213 === 1) {
                  var state_22212__$1 = state_22212;
                  var statearr_22217_22249 = state_22212__$1;
                  statearr_22217_22249[2] = null;
                  statearr_22217_22249[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22213 === 4) {
                    var inst_22158 = state_22212[11];
                    var inst_22158__$1 = state_22212[2];
                    var inst_22159 = inst_22158__$1 == null;
                    var state_22212__$1 = function() {
                      var statearr_22221 = state_22212;
                      statearr_22221[11] = inst_22158__$1;
                      return statearr_22221;
                    }();
                    if (cljs.core.truth_(inst_22159)) {
                      var statearr_22222_22250 = state_22212__$1;
                      statearr_22222_22250[1] = 5;
                    } else {
                      var statearr_22223_22251 = state_22212__$1;
                      statearr_22223_22251[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22213 === 15) {
                      var state_22212__$1 = state_22212;
                      var statearr_22224_22252 = state_22212__$1;
                      statearr_22224_22252[2] = null;
                      statearr_22224_22252[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22213 === 13) {
                        var inst_22171 = state_22212[6];
                        var inst_22172 = state_22212[8];
                        var inst_22169 = state_22212[9];
                        var inst_22170 = state_22212[10];
                        var inst_22179 = state_22212[2];
                        var inst_22180 = inst_22172 + 1;
                        var tmp22218 = inst_22171;
                        var tmp22219 = inst_22169;
                        var tmp22220 = inst_22170;
                        var inst_22169__$1 = tmp22219;
                        var inst_22170__$1 = tmp22220;
                        var inst_22171__$1 = tmp22218;
                        var inst_22172__$1 = inst_22180;
                        var state_22212__$1 = function() {
                          var statearr_22225 = state_22212;
                          statearr_22225[6] = inst_22171__$1;
                          statearr_22225[12] = inst_22179;
                          statearr_22225[8] = inst_22172__$1;
                          statearr_22225[9] = inst_22169__$1;
                          statearr_22225[10] = inst_22170__$1;
                          return statearr_22225;
                        }();
                        var statearr_22226_22253 = state_22212__$1;
                        statearr_22226_22253[2] = null;
                        statearr_22226_22253[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22213 === 6) {
                          var inst_22158 = state_22212[11];
                          var inst_22163 = f.call(null, inst_22158);
                          var inst_22168 = cljs.core.seq.call(null, inst_22163);
                          var inst_22169 = inst_22168;
                          var inst_22170 = null;
                          var inst_22171 = 0;
                          var inst_22172 = 0;
                          var state_22212__$1 = function() {
                            var statearr_22227 = state_22212;
                            statearr_22227[6] = inst_22171;
                            statearr_22227[8] = inst_22172;
                            statearr_22227[9] = inst_22169;
                            statearr_22227[10] = inst_22170;
                            return statearr_22227;
                          }();
                          var statearr_22228_22254 = state_22212__$1;
                          statearr_22228_22254[2] = null;
                          statearr_22228_22254[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22213 === 17) {
                            var inst_22183 = state_22212[5];
                            var inst_22187 = cljs.core.chunk_first.call(null, inst_22183);
                            var inst_22188 = cljs.core.chunk_rest.call(null, inst_22183);
                            var inst_22189 = cljs.core.count.call(null, inst_22187);
                            var inst_22169 = inst_22188;
                            var inst_22170 = inst_22187;
                            var inst_22171 = inst_22189;
                            var inst_22172 = 0;
                            var state_22212__$1 = function() {
                              var statearr_22229 = state_22212;
                              statearr_22229[6] = inst_22171;
                              statearr_22229[8] = inst_22172;
                              statearr_22229[9] = inst_22169;
                              statearr_22229[10] = inst_22170;
                              return statearr_22229;
                            }();
                            var statearr_22230_22255 = state_22212__$1;
                            statearr_22230_22255[2] = null;
                            statearr_22230_22255[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22213 === 3) {
                              var inst_22210 = state_22212[2];
                              var state_22212__$1 = state_22212;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22212__$1, inst_22210);
                            } else {
                              if (state_val_22213 === 12) {
                                var inst_22203 = state_22212[2];
                                var state_22212__$1 = state_22212;
                                var statearr_22231_22256 = state_22212__$1;
                                statearr_22231_22256[2] = inst_22203;
                                statearr_22231_22256[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22213 === 2) {
                                  var state_22212__$1 = state_22212;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22212__$1, 4, in$);
                                } else {
                                  if (state_val_22213 === 19) {
                                    var inst_22198 = state_22212[2];
                                    var state_22212__$1 = state_22212;
                                    var statearr_22232_22257 = state_22212__$1;
                                    statearr_22232_22257[2] = inst_22198;
                                    statearr_22232_22257[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22213 === 11) {
                                      var inst_22183 = state_22212[5];
                                      var inst_22169 = state_22212[9];
                                      var inst_22183__$1 = cljs.core.seq.call(null, inst_22169);
                                      var state_22212__$1 = function() {
                                        var statearr_22233 = state_22212;
                                        statearr_22233[5] = inst_22183__$1;
                                        return statearr_22233;
                                      }();
                                      if (inst_22183__$1) {
                                        var statearr_22234_22258 = state_22212__$1;
                                        statearr_22234_22258[1] = 14;
                                      } else {
                                        var statearr_22235_22259 = state_22212__$1;
                                        statearr_22235_22259[1] = 15;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22213 === 9) {
                                        var inst_22205 = state_22212[2];
                                        var state_22212__$1 = function() {
                                          var statearr_22236 = state_22212;
                                          statearr_22236[13] = inst_22205;
                                          return statearr_22236;
                                        }();
                                        var statearr_22237_22260 = state_22212__$1;
                                        statearr_22237_22260[2] = null;
                                        statearr_22237_22260[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22213 === 5) {
                                          var inst_22161 = cljs.core.async.close_BANG_.call(null, out);
                                          var state_22212__$1 = state_22212;
                                          var statearr_22238_22261 = state_22212__$1;
                                          statearr_22238_22261[2] = inst_22161;
                                          statearr_22238_22261[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22213 === 14) {
                                            var inst_22183 = state_22212[5];
                                            var inst_22185 = cljs.core.chunked_seq_QMARK_.call(null, inst_22183);
                                            var state_22212__$1 = state_22212;
                                            if (inst_22185) {
                                              var statearr_22239_22262 = state_22212__$1;
                                              statearr_22239_22262[1] = 17;
                                            } else {
                                              var statearr_22240_22263 = state_22212__$1;
                                              statearr_22240_22263[1] = 18;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_22213 === 16) {
                                              var inst_22201 = state_22212[2];
                                              var state_22212__$1 = state_22212;
                                              var statearr_22241_22264 = state_22212__$1;
                                              statearr_22241_22264[2] = inst_22201;
                                              statearr_22241_22264[1] = 12;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_22213 === 10) {
                                                var inst_22172 = state_22212[8];
                                                var inst_22170 = state_22212[10];
                                                var inst_22177 = cljs.core._nth.call(null, inst_22170, inst_22172);
                                                var state_22212__$1 = state_22212;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22212__$1, 13, out, inst_22177);
                                              } else {
                                                if (state_val_22213 === 18) {
                                                  var inst_22183 = state_22212[5];
                                                  var inst_22192 = cljs.core.first.call(null, inst_22183);
                                                  var state_22212__$1 = state_22212;
                                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22212__$1, 20, out, inst_22192);
                                                } else {
                                                  if (state_val_22213 === 8) {
                                                    var inst_22171 = state_22212[6];
                                                    var inst_22172 = state_22212[8];
                                                    var inst_22174 = inst_22172 < inst_22171;
                                                    var inst_22175 = inst_22174;
                                                    var state_22212__$1 = state_22212;
                                                    if (cljs.core.truth_(inst_22175)) {
                                                      var statearr_22242_22265 = state_22212__$1;
                                                      statearr_22242_22265[1] = 10;
                                                    } else {
                                                      var statearr_22243_22266 = state_22212__$1;
                                                      statearr_22243_22266[1] = 11;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    return null;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6608__auto__);
        return function(switch__6564__auto__, c__6608__auto__) {
          return function() {
            var state_machine__6565__auto__ = null;
            var state_machine__6565__auto____0 = function() {
              var statearr_22245 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_22245[0] = state_machine__6565__auto__;
              statearr_22245[1] = 1;
              return statearr_22245;
            };
            var state_machine__6565__auto____1 = function(state_22212) {
              while (true) {
                var result__6566__auto__ = switch__6564__auto__.call(null, state_22212);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6566__auto__;
                }
                break;
              }
            };
            state_machine__6565__auto__ = function(state_22212) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6565__auto____0.call(this);
                case 1:
                  return state_machine__6565__auto____1.call(this, state_22212);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
            state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
            return state_machine__6565__auto__;
          }();
        }(switch__6564__auto__, c__6608__auto__);
      }();
      var state__6610__auto__ = function() {
        var statearr_22246 = f__6609__auto__.call(null);
        statearr_22246[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto__;
        return statearr_22246;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
    };
  }(c__6608__auto__));
  return c__6608__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6608__auto___22339 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto___22339) {
      return function() {
        var f__6609__auto__ = function() {
          var switch__6564__auto__ = function(c__6608__auto___22339) {
            return function(state_22322) {
              var state_val_22323 = state_22322[1];
              if (state_val_22323 === 7) {
                var inst_22318 = state_22322[2];
                var state_22322__$1 = state_22322;
                var statearr_22324_22340 = state_22322__$1;
                statearr_22324_22340[2] = inst_22318;
                statearr_22324_22340[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22323 === 1) {
                  var state_22322__$1 = state_22322;
                  var statearr_22325_22341 = state_22322__$1;
                  statearr_22325_22341[2] = null;
                  statearr_22325_22341[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22323 === 4) {
                    var inst_22305 = state_22322[5];
                    var inst_22305__$1 = state_22322[2];
                    var inst_22306 = inst_22305__$1 == null;
                    var state_22322__$1 = function() {
                      var statearr_22326 = state_22322;
                      statearr_22326[5] = inst_22305__$1;
                      return statearr_22326;
                    }();
                    if (cljs.core.truth_(inst_22306)) {
                      var statearr_22327_22342 = state_22322__$1;
                      statearr_22327_22342[1] = 5;
                    } else {
                      var statearr_22328_22343 = state_22322__$1;
                      statearr_22328_22343[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22323 === 6) {
                      var inst_22305 = state_22322[5];
                      var state_22322__$1 = state_22322;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22322__$1, 11, to, inst_22305);
                    } else {
                      if (state_val_22323 === 3) {
                        var inst_22320 = state_22322[2];
                        var state_22322__$1 = state_22322;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22322__$1, inst_22320);
                      } else {
                        if (state_val_22323 === 2) {
                          var state_22322__$1 = state_22322;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22322__$1, 4, from);
                        } else {
                          if (state_val_22323 === 11) {
                            var inst_22315 = state_22322[2];
                            var state_22322__$1 = function() {
                              var statearr_22329 = state_22322;
                              statearr_22329[6] = inst_22315;
                              return statearr_22329;
                            }();
                            var statearr_22330_22344 = state_22322__$1;
                            statearr_22330_22344[2] = null;
                            statearr_22330_22344[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22323 === 9) {
                              var state_22322__$1 = state_22322;
                              var statearr_22331_22345 = state_22322__$1;
                              statearr_22331_22345[2] = null;
                              statearr_22331_22345[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22323 === 5) {
                                var state_22322__$1 = state_22322;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_22332_22346 = state_22322__$1;
                                  statearr_22332_22346[1] = 8;
                                } else {
                                  var statearr_22333_22347 = state_22322__$1;
                                  statearr_22333_22347[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22323 === 10) {
                                  var inst_22312 = state_22322[2];
                                  var state_22322__$1 = state_22322;
                                  var statearr_22334_22348 = state_22322__$1;
                                  statearr_22334_22348[2] = inst_22312;
                                  statearr_22334_22348[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22323 === 8) {
                                    var inst_22309 = cljs.core.async.close_BANG_.call(null, to);
                                    var state_22322__$1 = state_22322;
                                    var statearr_22335_22349 = state_22322__$1;
                                    statearr_22335_22349[2] = inst_22309;
                                    statearr_22335_22349[1] = 10;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6608__auto___22339);
          return function(switch__6564__auto__, c__6608__auto___22339) {
            return function() {
              var state_machine__6565__auto__ = null;
              var state_machine__6565__auto____0 = function() {
                var statearr_22337 = [null, null, null, null, null, null, null];
                statearr_22337[0] = state_machine__6565__auto__;
                statearr_22337[1] = 1;
                return statearr_22337;
              };
              var state_machine__6565__auto____1 = function(state_22322) {
                while (true) {
                  var result__6566__auto__ = switch__6564__auto__.call(null, state_22322);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6566__auto__;
                  }
                  break;
                }
              };
              state_machine__6565__auto__ = function(state_22322) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6565__auto____0.call(this);
                  case 1:
                    return state_machine__6565__auto____1.call(this, state_22322);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
              return state_machine__6565__auto__;
            }();
          }(switch__6564__auto__, c__6608__auto___22339);
        }();
        var state__6610__auto__ = function() {
          var statearr_22338 = f__6609__auto__.call(null);
          statearr_22338[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto___22339;
          return statearr_22338;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
      };
    }(c__6608__auto___22339));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6608__auto___22428 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto___22428, tc, fc) {
      return function() {
        var f__6609__auto__ = function() {
          var switch__6564__auto__ = function(c__6608__auto___22428, tc, fc) {
            return function(state_22410) {
              var state_val_22411 = state_22410[1];
              if (state_val_22411 === 7) {
                var inst_22406 = state_22410[2];
                var state_22410__$1 = state_22410;
                var statearr_22412_22429 = state_22410__$1;
                statearr_22412_22429[2] = inst_22406;
                statearr_22412_22429[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22411 === 1) {
                  var state_22410__$1 = state_22410;
                  var statearr_22413_22430 = state_22410__$1;
                  statearr_22413_22430[2] = null;
                  statearr_22413_22430[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22411 === 4) {
                    var inst_22391 = state_22410[5];
                    var inst_22391__$1 = state_22410[2];
                    var inst_22392 = inst_22391__$1 == null;
                    var state_22410__$1 = function() {
                      var statearr_22414 = state_22410;
                      statearr_22414[5] = inst_22391__$1;
                      return statearr_22414;
                    }();
                    if (cljs.core.truth_(inst_22392)) {
                      var statearr_22415_22431 = state_22410__$1;
                      statearr_22415_22431[1] = 5;
                    } else {
                      var statearr_22416_22432 = state_22410__$1;
                      statearr_22416_22432[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22411 === 6) {
                      var inst_22391 = state_22410[5];
                      var inst_22397 = p.call(null, inst_22391);
                      var state_22410__$1 = state_22410;
                      if (cljs.core.truth_(inst_22397)) {
                        var statearr_22417_22433 = state_22410__$1;
                        statearr_22417_22433[1] = 9;
                      } else {
                        var statearr_22418_22434 = state_22410__$1;
                        statearr_22418_22434[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22411 === 3) {
                        var inst_22408 = state_22410[2];
                        var state_22410__$1 = state_22410;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22410__$1, inst_22408);
                      } else {
                        if (state_val_22411 === 2) {
                          var state_22410__$1 = state_22410;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22410__$1, 4, ch);
                        } else {
                          if (state_val_22411 === 11) {
                            var inst_22391 = state_22410[5];
                            var inst_22401 = state_22410[2];
                            var state_22410__$1 = state_22410;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22410__$1, 8, inst_22401, inst_22391);
                          } else {
                            if (state_val_22411 === 9) {
                              var state_22410__$1 = state_22410;
                              var statearr_22419_22435 = state_22410__$1;
                              statearr_22419_22435[2] = tc;
                              statearr_22419_22435[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22411 === 5) {
                                var inst_22394 = cljs.core.async.close_BANG_.call(null, tc);
                                var inst_22395 = cljs.core.async.close_BANG_.call(null, fc);
                                var state_22410__$1 = function() {
                                  var statearr_22420 = state_22410;
                                  statearr_22420[6] = inst_22394;
                                  return statearr_22420;
                                }();
                                var statearr_22421_22436 = state_22410__$1;
                                statearr_22421_22436[2] = inst_22395;
                                statearr_22421_22436[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22411 === 10) {
                                  var state_22410__$1 = state_22410;
                                  var statearr_22422_22437 = state_22410__$1;
                                  statearr_22422_22437[2] = fc;
                                  statearr_22422_22437[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22411 === 8) {
                                    var inst_22403 = state_22410[2];
                                    var state_22410__$1 = function() {
                                      var statearr_22423 = state_22410;
                                      statearr_22423[7] = inst_22403;
                                      return statearr_22423;
                                    }();
                                    var statearr_22424_22438 = state_22410__$1;
                                    statearr_22424_22438[2] = null;
                                    statearr_22424_22438[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6608__auto___22428, tc, fc);
          return function(switch__6564__auto__, c__6608__auto___22428, tc, fc) {
            return function() {
              var state_machine__6565__auto__ = null;
              var state_machine__6565__auto____0 = function() {
                var statearr_22426 = [null, null, null, null, null, null, null, null];
                statearr_22426[0] = state_machine__6565__auto__;
                statearr_22426[1] = 1;
                return statearr_22426;
              };
              var state_machine__6565__auto____1 = function(state_22410) {
                while (true) {
                  var result__6566__auto__ = switch__6564__auto__.call(null, state_22410);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6566__auto__;
                  }
                  break;
                }
              };
              state_machine__6565__auto__ = function(state_22410) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6565__auto____0.call(this);
                  case 1:
                    return state_machine__6565__auto____1.call(this, state_22410);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
              return state_machine__6565__auto__;
            }();
          }(switch__6564__auto__, c__6608__auto___22428, tc, fc);
        }();
        var state__6610__auto__ = function() {
          var statearr_22427 = f__6609__auto__.call(null);
          statearr_22427[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto___22428;
          return statearr_22427;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
      };
    }(c__6608__auto___22428, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6608__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto__) {
    return function() {
      var f__6609__auto__ = function() {
        var switch__6564__auto__ = function(c__6608__auto__) {
          return function(state_22481) {
            var state_val_22482 = state_22481[1];
            if (state_val_22482 === 7) {
              var inst_22477 = state_22481[2];
              var state_22481__$1 = state_22481;
              var statearr_22483_22495 = state_22481__$1;
              statearr_22483_22495[2] = inst_22477;
              statearr_22483_22495[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_22482 === 6) {
                var inst_22467 = state_22481[5];
                var inst_22470 = state_22481[6];
                var inst_22474 = f.call(null, inst_22467, inst_22470);
                var inst_22467__$1 = inst_22474;
                var state_22481__$1 = function() {
                  var statearr_22484 = state_22481;
                  statearr_22484[5] = inst_22467__$1;
                  return statearr_22484;
                }();
                var statearr_22485_22496 = state_22481__$1;
                statearr_22485_22496[2] = null;
                statearr_22485_22496[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22482 === 5) {
                  var inst_22467 = state_22481[5];
                  var state_22481__$1 = state_22481;
                  var statearr_22486_22497 = state_22481__$1;
                  statearr_22486_22497[2] = inst_22467;
                  statearr_22486_22497[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22482 === 4) {
                    var inst_22470 = state_22481[6];
                    var inst_22470__$1 = state_22481[2];
                    var inst_22471 = inst_22470__$1 == null;
                    var state_22481__$1 = function() {
                      var statearr_22487 = state_22481;
                      statearr_22487[6] = inst_22470__$1;
                      return statearr_22487;
                    }();
                    if (cljs.core.truth_(inst_22471)) {
                      var statearr_22488_22498 = state_22481__$1;
                      statearr_22488_22498[1] = 5;
                    } else {
                      var statearr_22489_22499 = state_22481__$1;
                      statearr_22489_22499[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22482 === 3) {
                      var inst_22479 = state_22481[2];
                      var state_22481__$1 = state_22481;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22481__$1, inst_22479);
                    } else {
                      if (state_val_22482 === 2) {
                        var state_22481__$1 = state_22481;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22481__$1, 4, ch);
                      } else {
                        if (state_val_22482 === 1) {
                          var inst_22467 = init;
                          var state_22481__$1 = function() {
                            var statearr_22490 = state_22481;
                            statearr_22490[5] = inst_22467;
                            return statearr_22490;
                          }();
                          var statearr_22491_22500 = state_22481__$1;
                          statearr_22491_22500[2] = null;
                          statearr_22491_22500[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6608__auto__);
        return function(switch__6564__auto__, c__6608__auto__) {
          return function() {
            var state_machine__6565__auto__ = null;
            var state_machine__6565__auto____0 = function() {
              var statearr_22493 = [null, null, null, null, null, null, null];
              statearr_22493[0] = state_machine__6565__auto__;
              statearr_22493[1] = 1;
              return statearr_22493;
            };
            var state_machine__6565__auto____1 = function(state_22481) {
              while (true) {
                var result__6566__auto__ = switch__6564__auto__.call(null, state_22481);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6566__auto__;
                }
                break;
              }
            };
            state_machine__6565__auto__ = function(state_22481) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6565__auto____0.call(this);
                case 1:
                  return state_machine__6565__auto____1.call(this, state_22481);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
            state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
            return state_machine__6565__auto__;
          }();
        }(switch__6564__auto__, c__6608__auto__);
      }();
      var state__6610__auto__ = function() {
        var statearr_22494 = f__6609__auto__.call(null);
        statearr_22494[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto__;
        return statearr_22494;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
    };
  }(c__6608__auto__));
  return c__6608__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6608__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto__) {
      return function() {
        var f__6609__auto__ = function() {
          var switch__6564__auto__ = function(c__6608__auto__) {
            return function(state_22558) {
              var state_val_22559 = state_22558[1];
              if (state_val_22559 === 7) {
                var inst_22539 = state_22558[5];
                var inst_22544 = state_22558[2];
                var inst_22545 = cljs.core.next.call(null, inst_22539);
                var inst_22539__$1 = inst_22545;
                var state_22558__$1 = function() {
                  var statearr_22560 = state_22558;
                  statearr_22560[5] = inst_22539__$1;
                  statearr_22560[6] = inst_22544;
                  return statearr_22560;
                }();
                var statearr_22561_22575 = state_22558__$1;
                statearr_22561_22575[2] = null;
                statearr_22561_22575[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22559 === 1) {
                  var inst_22538 = cljs.core.seq.call(null, coll);
                  var inst_22539 = inst_22538;
                  var state_22558__$1 = function() {
                    var statearr_22562 = state_22558;
                    statearr_22562[5] = inst_22539;
                    return statearr_22562;
                  }();
                  var statearr_22563_22576 = state_22558__$1;
                  statearr_22563_22576[2] = null;
                  statearr_22563_22576[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22559 === 4) {
                    var inst_22539 = state_22558[5];
                    var inst_22542 = cljs.core.first.call(null, inst_22539);
                    var state_22558__$1 = state_22558;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22558__$1, 7, ch, inst_22542);
                  } else {
                    if (state_val_22559 === 6) {
                      var inst_22554 = state_22558[2];
                      var state_22558__$1 = state_22558;
                      var statearr_22564_22577 = state_22558__$1;
                      statearr_22564_22577[2] = inst_22554;
                      statearr_22564_22577[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22559 === 3) {
                        var inst_22556 = state_22558[2];
                        var state_22558__$1 = state_22558;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22558__$1, inst_22556);
                      } else {
                        if (state_val_22559 === 2) {
                          var inst_22539 = state_22558[5];
                          var state_22558__$1 = state_22558;
                          if (cljs.core.truth_(inst_22539)) {
                            var statearr_22565_22578 = state_22558__$1;
                            statearr_22565_22578[1] = 4;
                          } else {
                            var statearr_22566_22579 = state_22558__$1;
                            statearr_22566_22579[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22559 === 9) {
                            var state_22558__$1 = state_22558;
                            var statearr_22567_22580 = state_22558__$1;
                            statearr_22567_22580[2] = null;
                            statearr_22567_22580[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22559 === 5) {
                              var state_22558__$1 = state_22558;
                              if (cljs.core.truth_(close_QMARK_)) {
                                var statearr_22568_22581 = state_22558__$1;
                                statearr_22568_22581[1] = 8;
                              } else {
                                var statearr_22569_22582 = state_22558__$1;
                                statearr_22569_22582[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22559 === 10) {
                                var inst_22552 = state_22558[2];
                                var state_22558__$1 = state_22558;
                                var statearr_22570_22583 = state_22558__$1;
                                statearr_22570_22583[2] = inst_22552;
                                statearr_22570_22583[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22559 === 8) {
                                  var inst_22549 = cljs.core.async.close_BANG_.call(null, ch);
                                  var state_22558__$1 = state_22558;
                                  var statearr_22571_22584 = state_22558__$1;
                                  statearr_22571_22584[2] = inst_22549;
                                  statearr_22571_22584[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6608__auto__);
          return function(switch__6564__auto__, c__6608__auto__) {
            return function() {
              var state_machine__6565__auto__ = null;
              var state_machine__6565__auto____0 = function() {
                var statearr_22573 = [null, null, null, null, null, null, null];
                statearr_22573[0] = state_machine__6565__auto__;
                statearr_22573[1] = 1;
                return statearr_22573;
              };
              var state_machine__6565__auto____1 = function(state_22558) {
                while (true) {
                  var result__6566__auto__ = switch__6564__auto__.call(null, state_22558);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6566__auto__;
                  }
                  break;
                }
              };
              state_machine__6565__auto__ = function(state_22558) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6565__auto____0.call(this);
                  case 1:
                    return state_machine__6565__auto____1.call(this, state_22558);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
              return state_machine__6565__auto__;
            }();
          }(switch__6564__auto__, c__6608__auto__);
        }();
        var state__6610__auto__ = function() {
          var statearr_22574 = f__6609__auto__.call(null);
          statearr_22574[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto__;
          return statearr_22574;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
      };
    }(c__6608__auto__));
    return c__6608__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj22586 = {};
  return obj22586;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3955__auto__ = _;
    if (and__3955__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4611__auto__ = _ == null ? null : _;
    return function() {
      var or__3967__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj22588 = {};
  return obj22588;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3955__auto__ = m;
    if (and__3955__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4611__auto__ = m == null ? null : m;
    return function() {
      var or__3967__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3955__auto__ = m;
    if (and__3955__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4611__auto__ = m == null ? null : m;
    return function() {
      var or__3967__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3955__auto__ = m;
    if (and__3955__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4611__auto__ = m == null ? null : m;
    return function() {
      var or__3967__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t22801 !== "undefined") {
    } else {
      cljs.core.async.t22801 = function(cs, ch, mult, meta22802) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta22802 = meta22802;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t22801.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t22801.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t22801.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t22801.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t22801.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t22801.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t22801.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_22803) {
          var self__ = this;
          var _22803__$1 = this;
          return self__.meta22802;
        };
      }(cs);
      cljs.core.async.t22801.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_22803, meta22802__$1) {
          var self__ = this;
          var _22803__$1 = this;
          return new cljs.core.async.t22801(self__.cs, self__.ch, self__.mult, meta22802__$1);
        };
      }(cs);
      cljs.core.async.t22801.cljs$lang$type = true;
      cljs.core.async.t22801.cljs$lang$ctorStr = "cljs.core.async/t22801";
      cljs.core.async.t22801.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
          return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async/t22801");
        };
      }(cs);
      cljs.core.async.__GT_t22801 = function(cs) {
        return function __GT_t22801(cs__$1, ch__$1, mult__$1, meta22802) {
          return new cljs.core.async.t22801(cs__$1, ch__$1, mult__$1, meta22802);
        };
      }(cs);
    }
    return new cljs.core.async.t22801(cs, ch, mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6608__auto___23013 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto___23013, cs, m, dchan, dctr, done) {
    return function() {
      var f__6609__auto__ = function() {
        var switch__6564__auto__ = function(c__6608__auto___23013, cs, m, dchan, dctr, done) {
          return function(state_22931) {
            var state_val_22932 = state_22931[1];
            if (state_val_22932 === 7) {
              var inst_22927 = state_22931[2];
              var state_22931__$1 = state_22931;
              var statearr_22933_23014 = state_22931__$1;
              statearr_22933_23014[2] = inst_22927;
              statearr_22933_23014[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_22932 === 20) {
                var inst_22835 = state_22931[5];
                var inst_22845 = cljs.core.first.call(null, inst_22835);
                var inst_22846 = cljs.core.nth.call(null, inst_22845, 0, null);
                var inst_22847 = cljs.core.nth.call(null, inst_22845, 1, null);
                var state_22931__$1 = function() {
                  var statearr_22934 = state_22931;
                  statearr_22934[6] = inst_22846;
                  return statearr_22934;
                }();
                if (cljs.core.truth_(inst_22847)) {
                  var statearr_22935_23015 = state_22931__$1;
                  statearr_22935_23015[1] = 22;
                } else {
                  var statearr_22936_23016 = state_22931__$1;
                  statearr_22936_23016[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22932 === 27) {
                  var inst_22877 = state_22931[7];
                  var inst_22875 = state_22931[8];
                  var inst_22882 = cljs.core._nth.call(null, inst_22875, inst_22877);
                  var state_22931__$1 = function() {
                    var statearr_22937 = state_22931;
                    statearr_22937[9] = inst_22882;
                    return statearr_22937;
                  }();
                  var statearr_22938_23017 = state_22931__$1;
                  statearr_22938_23017[2] = null;
                  statearr_22938_23017[1] = 32;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22932 === 1) {
                    var state_22931__$1 = state_22931;
                    var statearr_22939_23018 = state_22931__$1;
                    statearr_22939_23018[2] = null;
                    statearr_22939_23018[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22932 === 24) {
                      var inst_22835 = state_22931[5];
                      var inst_22852 = state_22931[2];
                      var inst_22853 = cljs.core.next.call(null, inst_22835);
                      var inst_22815 = inst_22853;
                      var inst_22816 = null;
                      var inst_22817 = 0;
                      var inst_22818 = 0;
                      var state_22931__$1 = function() {
                        var statearr_22940 = state_22931;
                        statearr_22940[10] = inst_22816;
                        statearr_22940[11] = inst_22815;
                        statearr_22940[12] = inst_22818;
                        statearr_22940[13] = inst_22817;
                        statearr_22940[14] = inst_22852;
                        return statearr_22940;
                      }();
                      var statearr_22941_23019 = state_22931__$1;
                      statearr_22941_23019[2] = null;
                      statearr_22941_23019[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22932 === 39) {
                        var inst_22894 = state_22931[15];
                        var inst_22911 = state_22931[2];
                        var inst_22912 = cljs.core.next.call(null, inst_22894);
                        var inst_22874 = inst_22912;
                        var inst_22875 = null;
                        var inst_22876 = 0;
                        var inst_22877 = 0;
                        var state_22931__$1 = function() {
                          var statearr_22945 = state_22931;
                          statearr_22945[7] = inst_22877;
                          statearr_22945[16] = inst_22874;
                          statearr_22945[17] = inst_22876;
                          statearr_22945[8] = inst_22875;
                          statearr_22945[18] = inst_22911;
                          return statearr_22945;
                        }();
                        var statearr_22946_23020 = state_22931__$1;
                        statearr_22946_23020[2] = null;
                        statearr_22946_23020[1] = 25;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22932 === 4) {
                          var inst_22806 = state_22931[19];
                          var inst_22806__$1 = state_22931[2];
                          var inst_22807 = inst_22806__$1 == null;
                          var state_22931__$1 = function() {
                            var statearr_22947 = state_22931;
                            statearr_22947[19] = inst_22806__$1;
                            return statearr_22947;
                          }();
                          if (cljs.core.truth_(inst_22807)) {
                            var statearr_22948_23021 = state_22931__$1;
                            statearr_22948_23021[1] = 5;
                          } else {
                            var statearr_22949_23022 = state_22931__$1;
                            statearr_22949_23022[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22932 === 15) {
                            var inst_22816 = state_22931[10];
                            var inst_22815 = state_22931[11];
                            var inst_22818 = state_22931[12];
                            var inst_22817 = state_22931[13];
                            var inst_22831 = state_22931[2];
                            var inst_22832 = inst_22818 + 1;
                            var tmp22942 = inst_22816;
                            var tmp22943 = inst_22815;
                            var tmp22944 = inst_22817;
                            var inst_22815__$1 = tmp22943;
                            var inst_22816__$1 = tmp22942;
                            var inst_22817__$1 = tmp22944;
                            var inst_22818__$1 = inst_22832;
                            var state_22931__$1 = function() {
                              var statearr_22950 = state_22931;
                              statearr_22950[10] = inst_22816__$1;
                              statearr_22950[20] = inst_22831;
                              statearr_22950[11] = inst_22815__$1;
                              statearr_22950[12] = inst_22818__$1;
                              statearr_22950[13] = inst_22817__$1;
                              return statearr_22950;
                            }();
                            var statearr_22951_23023 = state_22931__$1;
                            statearr_22951_23023[2] = null;
                            statearr_22951_23023[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22932 === 21) {
                              var inst_22856 = state_22931[2];
                              var state_22931__$1 = state_22931;
                              var statearr_22952_23024 = state_22931__$1;
                              statearr_22952_23024[2] = inst_22856;
                              statearr_22952_23024[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22932 === 31) {
                                var inst_22882 = state_22931[9];
                                var inst_22883 = state_22931[2];
                                var inst_22884 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                var inst_22885 = cljs.core.async.untap_STAR_.call(null, m, inst_22882);
                                var state_22931__$1 = function() {
                                  var statearr_22953 = state_22931;
                                  statearr_22953[21] = inst_22884;
                                  statearr_22953[22] = inst_22883;
                                  return statearr_22953;
                                }();
                                var statearr_22954_23025 = state_22931__$1;
                                statearr_22954_23025[2] = inst_22885;
                                statearr_22954_23025[1] = 30;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22932 === 32) {
                                  try {
                                    var inst_22882 = state_22931[9];
                                    var inst_22806 = state_22931[19];
                                    var inst_22888 = cljs.core.async.put_BANG_.call(null, inst_22882, inst_22806, done);
                                    var state_22931__$1 = state_22931;
                                    var statearr_22957_23026 = state_22931__$1;
                                    statearr_22957_23026[2] = inst_22888;
                                    statearr_22957_23026[1] = 30;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } catch (e22955) {
                                    if (e22955 instanceof Object) {
                                      var ex__6558__auto__ = e22955;
                                      var statearr_22956_23027 = state_22931;
                                      statearr_22956_23027[1] = 31;
                                      statearr_22956_23027[2] = ex__6558__auto__;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      throw e22955;
                                    }
                                  }
                                } else {
                                  if (state_val_22932 === 40) {
                                    var inst_22903 = state_22931[23];
                                    var inst_22904 = state_22931[2];
                                    var inst_22905 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                    var inst_22906 = cljs.core.async.untap_STAR_.call(null, m, inst_22903);
                                    var state_22931__$1 = function() {
                                      var statearr_22958 = state_22931;
                                      statearr_22958[24] = inst_22905;
                                      statearr_22958[25] = inst_22904;
                                      return statearr_22958;
                                    }();
                                    var statearr_22959_23028 = state_22931__$1;
                                    statearr_22959_23028[2] = inst_22906;
                                    statearr_22959_23028[1] = 39;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22932 === 33) {
                                      var inst_22894 = state_22931[15];
                                      var inst_22896 = cljs.core.chunked_seq_QMARK_.call(null, inst_22894);
                                      var state_22931__$1 = state_22931;
                                      if (inst_22896) {
                                        var statearr_22960_23029 = state_22931__$1;
                                        statearr_22960_23029[1] = 36;
                                      } else {
                                        var statearr_22961_23030 = state_22931__$1;
                                        statearr_22961_23030[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22932 === 13) {
                                        var inst_22825 = state_22931[26];
                                        var inst_22828 = cljs.core.async.close_BANG_.call(null, inst_22825);
                                        var state_22931__$1 = state_22931;
                                        var statearr_22962_23031 = state_22931__$1;
                                        statearr_22962_23031[2] = inst_22828;
                                        statearr_22962_23031[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22932 === 22) {
                                          var inst_22846 = state_22931[6];
                                          var inst_22849 = cljs.core.async.close_BANG_.call(null, inst_22846);
                                          var state_22931__$1 = state_22931;
                                          var statearr_22963_23032 = state_22931__$1;
                                          statearr_22963_23032[2] = inst_22849;
                                          statearr_22963_23032[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22932 === 36) {
                                            var inst_22894 = state_22931[15];
                                            var inst_22898 = cljs.core.chunk_first.call(null, inst_22894);
                                            var inst_22899 = cljs.core.chunk_rest.call(null, inst_22894);
                                            var inst_22900 = cljs.core.count.call(null, inst_22898);
                                            var inst_22874 = inst_22899;
                                            var inst_22875 = inst_22898;
                                            var inst_22876 = inst_22900;
                                            var inst_22877 = 0;
                                            var state_22931__$1 = function() {
                                              var statearr_22964 = state_22931;
                                              statearr_22964[7] = inst_22877;
                                              statearr_22964[16] = inst_22874;
                                              statearr_22964[17] = inst_22876;
                                              statearr_22964[8] = inst_22875;
                                              return statearr_22964;
                                            }();
                                            var statearr_22965_23033 = state_22931__$1;
                                            statearr_22965_23033[2] = null;
                                            statearr_22965_23033[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_22932 === 41) {
                                              try {
                                                var inst_22903 = state_22931[23];
                                                var inst_22806 = state_22931[19];
                                                var inst_22909 = cljs.core.async.put_BANG_.call(null, inst_22903, inst_22806, done);
                                                var state_22931__$1 = state_22931;
                                                var statearr_22968_23034 = state_22931__$1;
                                                statearr_22968_23034[2] = inst_22909;
                                                statearr_22968_23034[1] = 39;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } catch (e22966) {
                                                if (e22966 instanceof Object) {
                                                  var ex__6558__auto__ = e22966;
                                                  var statearr_22967_23035 = state_22931;
                                                  statearr_22967_23035[1] = 40;
                                                  statearr_22967_23035[2] = ex__6558__auto__;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  throw e22966;
                                                }
                                              }
                                            } else {
                                              if (state_val_22932 === 29) {
                                                var inst_22920 = state_22931[2];
                                                var state_22931__$1 = state_22931;
                                                var statearr_22969_23036 = state_22931__$1;
                                                statearr_22969_23036[2] = inst_22920;
                                                statearr_22969_23036[1] = 26;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_22932 === 6) {
                                                  var inst_22865 = cljs.core.deref.call(null, cs);
                                                  var inst_22866 = cljs.core.keys.call(null, inst_22865);
                                                  var inst_22867 = cljs.core.count.call(null, inst_22866);
                                                  var inst_22868 = cljs.core.reset_BANG_.call(null, dctr, inst_22867);
                                                  var inst_22873 = cljs.core.seq.call(null, inst_22866);
                                                  var inst_22874 = inst_22873;
                                                  var inst_22875 = null;
                                                  var inst_22876 = 0;
                                                  var inst_22877 = 0;
                                                  var state_22931__$1 = function() {
                                                    var statearr_22970 = state_22931;
                                                    statearr_22970[7] = inst_22877;
                                                    statearr_22970[16] = inst_22874;
                                                    statearr_22970[27] = inst_22868;
                                                    statearr_22970[17] = inst_22876;
                                                    statearr_22970[8] = inst_22875;
                                                    return statearr_22970;
                                                  }();
                                                  var statearr_22971_23037 = state_22931__$1;
                                                  statearr_22971_23037[2] = null;
                                                  statearr_22971_23037[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_22932 === 28) {
                                                    var inst_22874 = state_22931[16];
                                                    var inst_22894 = state_22931[15];
                                                    var inst_22894__$1 = cljs.core.seq.call(null, inst_22874);
                                                    var state_22931__$1 = function() {
                                                      var statearr_22972 = state_22931;
                                                      statearr_22972[15] = inst_22894__$1;
                                                      return statearr_22972;
                                                    }();
                                                    if (inst_22894__$1) {
                                                      var statearr_22973_23038 = state_22931__$1;
                                                      statearr_22973_23038[1] = 33;
                                                    } else {
                                                      var statearr_22974_23039 = state_22931__$1;
                                                      statearr_22974_23039[1] = 34;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_22932 === 25) {
                                                      var inst_22877 = state_22931[7];
                                                      var inst_22876 = state_22931[17];
                                                      var inst_22879 = inst_22877 < inst_22876;
                                                      var inst_22880 = inst_22879;
                                                      var state_22931__$1 = state_22931;
                                                      if (cljs.core.truth_(inst_22880)) {
                                                        var statearr_22975_23040 = state_22931__$1;
                                                        statearr_22975_23040[1] = 27;
                                                      } else {
                                                        var statearr_22976_23041 = state_22931__$1;
                                                        statearr_22976_23041[1] = 28;
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_22932 === 34) {
                                                        var state_22931__$1 = state_22931;
                                                        var statearr_22977_23042 = state_22931__$1;
                                                        statearr_22977_23042[2] = null;
                                                        statearr_22977_23042[1] = 35;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_22932 === 17) {
                                                          var state_22931__$1 = state_22931;
                                                          var statearr_22978_23043 = state_22931__$1;
                                                          statearr_22978_23043[2] = null;
                                                          statearr_22978_23043[1] = 18;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_22932 === 3) {
                                                            var inst_22929 = state_22931[2];
                                                            var state_22931__$1 = state_22931;
                                                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22931__$1, inst_22929);
                                                          } else {
                                                            if (state_val_22932 === 12) {
                                                              var inst_22861 = state_22931[2];
                                                              var state_22931__$1 = state_22931;
                                                              var statearr_22979_23044 = state_22931__$1;
                                                              statearr_22979_23044[2] = inst_22861;
                                                              statearr_22979_23044[1] = 9;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_22932 === 2) {
                                                                var state_22931__$1 = state_22931;
                                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22931__$1, 4, ch);
                                                              } else {
                                                                if (state_val_22932 === 23) {
                                                                  var state_22931__$1 = state_22931;
                                                                  var statearr_22980_23045 = state_22931__$1;
                                                                  statearr_22980_23045[2] = null;
                                                                  statearr_22980_23045[1] = 24;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_22932 === 35) {
                                                                    var inst_22918 = state_22931[2];
                                                                    var state_22931__$1 = state_22931;
                                                                    var statearr_22981_23046 = state_22931__$1;
                                                                    statearr_22981_23046[2] = inst_22918;
                                                                    statearr_22981_23046[1] = 29;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_22932 === 19) {
                                                                      var inst_22835 = state_22931[5];
                                                                      var inst_22839 = cljs.core.chunk_first.call(null, inst_22835);
                                                                      var inst_22840 = cljs.core.chunk_rest.call(null, inst_22835);
                                                                      var inst_22841 = cljs.core.count.call(null, inst_22839);
                                                                      var inst_22815 = inst_22840;
                                                                      var inst_22816 = inst_22839;
                                                                      var inst_22817 = inst_22841;
                                                                      var inst_22818 = 0;
                                                                      var state_22931__$1 = function() {
                                                                        var statearr_22982 = state_22931;
                                                                        statearr_22982[10] = inst_22816;
                                                                        statearr_22982[11] = inst_22815;
                                                                        statearr_22982[12] = inst_22818;
                                                                        statearr_22982[13] = inst_22817;
                                                                        return statearr_22982;
                                                                      }();
                                                                      var statearr_22983_23047 = state_22931__$1;
                                                                      statearr_22983_23047[2] = null;
                                                                      statearr_22983_23047[1] = 8;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_22932 === 11) {
                                                                        var inst_22835 = state_22931[5];
                                                                        var inst_22815 = state_22931[11];
                                                                        var inst_22835__$1 = cljs.core.seq.call(null, inst_22815);
                                                                        var state_22931__$1 = function() {
                                                                          var statearr_22984 = state_22931;
                                                                          statearr_22984[5] = inst_22835__$1;
                                                                          return statearr_22984;
                                                                        }();
                                                                        if (inst_22835__$1) {
                                                                          var statearr_22985_23048 = state_22931__$1;
                                                                          statearr_22985_23048[1] = 16;
                                                                        } else {
                                                                          var statearr_22986_23049 = state_22931__$1;
                                                                          statearr_22986_23049[1] = 17;
                                                                        }
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_22932 === 9) {
                                                                          var inst_22863 = state_22931[2];
                                                                          var state_22931__$1 = state_22931;
                                                                          var statearr_22987_23050 = state_22931__$1;
                                                                          statearr_22987_23050[2] = inst_22863;
                                                                          statearr_22987_23050[1] = 7;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_22932 === 5) {
                                                                            var inst_22813 = cljs.core.deref.call(null, cs);
                                                                            var inst_22814 = cljs.core.seq.call(null, inst_22813);
                                                                            var inst_22815 = inst_22814;
                                                                            var inst_22816 = null;
                                                                            var inst_22817 = 0;
                                                                            var inst_22818 = 0;
                                                                            var state_22931__$1 = function() {
                                                                              var statearr_22988 = state_22931;
                                                                              statearr_22988[10] = inst_22816;
                                                                              statearr_22988[11] = inst_22815;
                                                                              statearr_22988[12] = inst_22818;
                                                                              statearr_22988[13] = inst_22817;
                                                                              return statearr_22988;
                                                                            }();
                                                                            var statearr_22989_23051 = state_22931__$1;
                                                                            statearr_22989_23051[2] = null;
                                                                            statearr_22989_23051[1] = 8;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_22932 === 14) {
                                                                              var state_22931__$1 = state_22931;
                                                                              var statearr_22990_23052 = state_22931__$1;
                                                                              statearr_22990_23052[2] = null;
                                                                              statearr_22990_23052[1] = 15;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_22932 === 26) {
                                                                                var inst_22922 = state_22931[2];
                                                                                var state_22931__$1 = function() {
                                                                                  var statearr_22991 = state_22931;
                                                                                  statearr_22991[28] = inst_22922;
                                                                                  return statearr_22991;
                                                                                }();
                                                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22931__$1, 42, dchan);
                                                                              } else {
                                                                                if (state_val_22932 === 16) {
                                                                                  var inst_22835 = state_22931[5];
                                                                                  var inst_22837 = cljs.core.chunked_seq_QMARK_.call(null, inst_22835);
                                                                                  var state_22931__$1 = state_22931;
                                                                                  if (inst_22837) {
                                                                                    var statearr_22995_23053 = state_22931__$1;
                                                                                    statearr_22995_23053[1] = 19;
                                                                                  } else {
                                                                                    var statearr_22996_23054 = state_22931__$1;
                                                                                    statearr_22996_23054[1] = 20;
                                                                                  }
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_22932 === 38) {
                                                                                    var inst_22915 = state_22931[2];
                                                                                    var state_22931__$1 = state_22931;
                                                                                    var statearr_22997_23055 = state_22931__$1;
                                                                                    statearr_22997_23055[2] = inst_22915;
                                                                                    statearr_22997_23055[1] = 35;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_22932 === 30) {
                                                                                      var inst_22877 = state_22931[7];
                                                                                      var inst_22874 = state_22931[16];
                                                                                      var inst_22876 = state_22931[17];
                                                                                      var inst_22875 = state_22931[8];
                                                                                      var inst_22890 = state_22931[2];
                                                                                      var inst_22891 = inst_22877 + 1;
                                                                                      var tmp22992 = inst_22874;
                                                                                      var tmp22993 = inst_22876;
                                                                                      var tmp22994 = inst_22875;
                                                                                      var inst_22874__$1 = tmp22992;
                                                                                      var inst_22875__$1 = tmp22994;
                                                                                      var inst_22876__$1 = tmp22993;
                                                                                      var inst_22877__$1 = inst_22891;
                                                                                      var state_22931__$1 = function() {
                                                                                        var statearr_22998 = state_22931;
                                                                                        statearr_22998[7] = inst_22877__$1;
                                                                                        statearr_22998[16] = inst_22874__$1;
                                                                                        statearr_22998[17] = inst_22876__$1;
                                                                                        statearr_22998[8] = inst_22875__$1;
                                                                                        statearr_22998[29] = inst_22890;
                                                                                        return statearr_22998;
                                                                                      }();
                                                                                      var statearr_22999_23056 = state_22931__$1;
                                                                                      statearr_22999_23056[2] = null;
                                                                                      statearr_22999_23056[1] = 25;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_22932 === 10) {
                                                                                        var inst_22816 = state_22931[10];
                                                                                        var inst_22818 = state_22931[12];
                                                                                        var inst_22824 = cljs.core._nth.call(null, inst_22816, inst_22818);
                                                                                        var inst_22825 = cljs.core.nth.call(null, inst_22824, 0, null);
                                                                                        var inst_22826 = cljs.core.nth.call(null, inst_22824, 1, null);
                                                                                        var state_22931__$1 = function() {
                                                                                          var statearr_23000 = state_22931;
                                                                                          statearr_23000[26] = inst_22825;
                                                                                          return statearr_23000;
                                                                                        }();
                                                                                        if (cljs.core.truth_(inst_22826)) {
                                                                                          var statearr_23001_23057 = state_22931__$1;
                                                                                          statearr_23001_23057[1] = 13;
                                                                                        } else {
                                                                                          var statearr_23002_23058 = state_22931__$1;
                                                                                          statearr_23002_23058[1] = 14;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_22932 === 18) {
                                                                                          var inst_22859 = state_22931[2];
                                                                                          var state_22931__$1 = state_22931;
                                                                                          var statearr_23003_23059 = state_22931__$1;
                                                                                          statearr_23003_23059[2] = inst_22859;
                                                                                          statearr_23003_23059[1] = 12;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_22932 === 42) {
                                                                                            var inst_22924 = state_22931[2];
                                                                                            var state_22931__$1 = function() {
                                                                                              var statearr_23004 = state_22931;
                                                                                              statearr_23004[30] = inst_22924;
                                                                                              return statearr_23004;
                                                                                            }();
                                                                                            var statearr_23005_23060 = state_22931__$1;
                                                                                            statearr_23005_23060[2] = null;
                                                                                            statearr_23005_23060[1] = 2;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_22932 === 37) {
                                                                                              var inst_22894 = state_22931[15];
                                                                                              var inst_22903 = cljs.core.first.call(null, inst_22894);
                                                                                              var state_22931__$1 = function() {
                                                                                                var statearr_23006 = state_22931;
                                                                                                statearr_23006[23] = inst_22903;
                                                                                                return statearr_23006;
                                                                                              }();
                                                                                              var statearr_23007_23061 = state_22931__$1;
                                                                                              statearr_23007_23061[2] = null;
                                                                                              statearr_23007_23061[1] = 41;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_22932 === 8) {
                                                                                                var inst_22818 = state_22931[12];
                                                                                                var inst_22817 = state_22931[13];
                                                                                                var inst_22820 = inst_22818 < inst_22817;
                                                                                                var inst_22821 = inst_22820;
                                                                                                var state_22931__$1 = state_22931;
                                                                                                if (cljs.core.truth_(inst_22821)) {
                                                                                                  var statearr_23008_23062 = state_22931__$1;
                                                                                                  statearr_23008_23062[1] = 10;
                                                                                                } else {
                                                                                                  var statearr_23009_23063 = state_22931__$1;
                                                                                                  statearr_23009_23063[1] = 11;
                                                                                                }
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                return null;
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6608__auto___23013, cs, m, dchan, dctr, done);
        return function(switch__6564__auto__, c__6608__auto___23013, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6565__auto__ = null;
            var state_machine__6565__auto____0 = function() {
              var statearr_23011 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23011[0] = state_machine__6565__auto__;
              statearr_23011[1] = 1;
              return statearr_23011;
            };
            var state_machine__6565__auto____1 = function(state_22931) {
              while (true) {
                var result__6566__auto__ = switch__6564__auto__.call(null, state_22931);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6566__auto__;
                }
                break;
              }
            };
            state_machine__6565__auto__ = function(state_22931) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6565__auto____0.call(this);
                case 1:
                  return state_machine__6565__auto____1.call(this, state_22931);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
            state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
            return state_machine__6565__auto__;
          }();
        }(switch__6564__auto__, c__6608__auto___23013, cs, m, dchan, dctr, done);
      }();
      var state__6610__auto__ = function() {
        var statearr_23012 = f__6609__auto__.call(null);
        statearr_23012[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto___23013;
        return statearr_23012;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
    };
  }(c__6608__auto___23013, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj23065 = {};
  return obj23065;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3955__auto__ = m;
    if (and__3955__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4611__auto__ = m == null ? null : m;
    return function() {
      var or__3967__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3955__auto__ = m;
    if (and__3955__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4611__auto__ = m == null ? null : m;
    return function() {
      var or__3967__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3955__auto__ = m;
    if (and__3955__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4611__auto__ = m == null ? null : m;
    return function() {
      var or__3967__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3955__auto__ = m;
    if (and__3955__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4611__auto__ = m == null ? null : m;
    return function() {
      var or__3967__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3955__auto__ = m;
    if (and__3955__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4611__auto__ = m == null ? null : m;
    return function() {
      var or__3967__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t23171 !== "undefined") {
    } else {
      cljs.core.async.t23171 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta23172) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta23172 = meta23172;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t23171.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t23171.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23171.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23171.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23171.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23171.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23171.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t23171.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23171.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_23173) {
          var self__ = this;
          var _23173__$1 = this;
          return self__.meta23172;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23171.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_23173, meta23172__$1) {
          var self__ = this;
          var _23173__$1 = this;
          return new cljs.core.async.t23171(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta23172__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t23171.cljs$lang$type = true;
      cljs.core.async.t23171.cljs$lang$ctorStr = "cljs.core.async/t23171";
      cljs.core.async.t23171.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
          return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async/t23171");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t23171 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t23171(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta23172) {
          return new cljs.core.async.t23171(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta23172);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t23171(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__6608__auto___23276 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto___23276, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6609__auto__ = function() {
        var switch__6564__auto__ = function(c__6608__auto___23276, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_23238) {
            var state_val_23239 = state_23238[1];
            if (state_val_23239 === 7) {
              var inst_23187 = state_23238[5];
              var inst_23192 = cljs.core.apply.call(null, cljs.core.hash_map, inst_23187);
              var state_23238__$1 = state_23238;
              var statearr_23240_23277 = state_23238__$1;
              statearr_23240_23277[2] = inst_23192;
              statearr_23240_23277[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23239 === 20) {
                var inst_23202 = state_23238[6];
                var state_23238__$1 = state_23238;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23238__$1, 23, out, inst_23202);
              } else {
                if (state_val_23239 === 1) {
                  var inst_23177 = state_23238[7];
                  var inst_23177__$1 = calc_state.call(null);
                  var inst_23178 = cljs.core.seq_QMARK_.call(null, inst_23177__$1);
                  var state_23238__$1 = function() {
                    var statearr_23241 = state_23238;
                    statearr_23241[7] = inst_23177__$1;
                    return statearr_23241;
                  }();
                  if (inst_23178) {
                    var statearr_23242_23278 = state_23238__$1;
                    statearr_23242_23278[1] = 2;
                  } else {
                    var statearr_23243_23279 = state_23238__$1;
                    statearr_23243_23279[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23239 === 4) {
                    var inst_23177 = state_23238[7];
                    var inst_23183 = state_23238[2];
                    var inst_23184 = cljs.core.get.call(null, inst_23183, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                    var inst_23185 = cljs.core.get.call(null, inst_23183, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                    var inst_23186 = cljs.core.get.call(null, inst_23183, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                    var inst_23187 = inst_23177;
                    var state_23238__$1 = function() {
                      var statearr_23244 = state_23238;
                      statearr_23244[5] = inst_23187;
                      statearr_23244[8] = inst_23186;
                      statearr_23244[9] = inst_23185;
                      statearr_23244[10] = inst_23184;
                      return statearr_23244;
                    }();
                    var statearr_23245_23280 = state_23238__$1;
                    statearr_23245_23280[2] = null;
                    statearr_23245_23280[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23239 === 15) {
                      var state_23238__$1 = state_23238;
                      var statearr_23246_23281 = state_23238__$1;
                      statearr_23246_23281[2] = null;
                      statearr_23246_23281[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23239 === 21) {
                        var state_23238__$1 = state_23238;
                        var statearr_23247_23282 = state_23238__$1;
                        statearr_23247_23282[2] = null;
                        statearr_23247_23282[1] = 22;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23239 === 13) {
                          var inst_23234 = state_23238[2];
                          var state_23238__$1 = state_23238;
                          var statearr_23248_23283 = state_23238__$1;
                          statearr_23248_23283[2] = inst_23234;
                          statearr_23248_23283[1] = 6;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23239 === 22) {
                            var inst_23195 = state_23238[11];
                            var inst_23231 = state_23238[2];
                            var inst_23187 = inst_23195;
                            var state_23238__$1 = function() {
                              var statearr_23249 = state_23238;
                              statearr_23249[12] = inst_23231;
                              statearr_23249[5] = inst_23187;
                              return statearr_23249;
                            }();
                            var statearr_23250_23284 = state_23238__$1;
                            statearr_23250_23284[2] = null;
                            statearr_23250_23284[1] = 5;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23239 === 6) {
                              var inst_23236 = state_23238[2];
                              var state_23238__$1 = state_23238;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23238__$1, inst_23236);
                            } else {
                              if (state_val_23239 === 17) {
                                var inst_23217 = state_23238[13];
                                var state_23238__$1 = state_23238;
                                var statearr_23251_23285 = state_23238__$1;
                                statearr_23251_23285[2] = inst_23217;
                                statearr_23251_23285[1] = 19;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23239 === 3) {
                                  var inst_23177 = state_23238[7];
                                  var state_23238__$1 = state_23238;
                                  var statearr_23252_23286 = state_23238__$1;
                                  statearr_23252_23286[2] = inst_23177;
                                  statearr_23252_23286[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23239 === 12) {
                                    var inst_23217 = state_23238[13];
                                    var inst_23198 = state_23238[14];
                                    var inst_23203 = state_23238[15];
                                    var inst_23217__$1 = inst_23198.call(null, inst_23203);
                                    var state_23238__$1 = function() {
                                      var statearr_23253 = state_23238;
                                      statearr_23253[13] = inst_23217__$1;
                                      return statearr_23253;
                                    }();
                                    if (cljs.core.truth_(inst_23217__$1)) {
                                      var statearr_23254_23287 = state_23238__$1;
                                      statearr_23254_23287[1] = 17;
                                    } else {
                                      var statearr_23255_23288 = state_23238__$1;
                                      statearr_23255_23288[1] = 18;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23239 === 2) {
                                      var inst_23177 = state_23238[7];
                                      var inst_23180 = cljs.core.apply.call(null, cljs.core.hash_map, inst_23177);
                                      var state_23238__$1 = state_23238;
                                      var statearr_23256_23289 = state_23238__$1;
                                      statearr_23256_23289[2] = inst_23180;
                                      statearr_23256_23289[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23239 === 23) {
                                        var inst_23228 = state_23238[2];
                                        var state_23238__$1 = state_23238;
                                        var statearr_23257_23290 = state_23238__$1;
                                        statearr_23257_23290[2] = inst_23228;
                                        statearr_23257_23290[1] = 22;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23239 === 19) {
                                          var inst_23225 = state_23238[2];
                                          var state_23238__$1 = state_23238;
                                          if (cljs.core.truth_(inst_23225)) {
                                            var statearr_23258_23291 = state_23238__$1;
                                            statearr_23258_23291[1] = 20;
                                          } else {
                                            var statearr_23259_23292 = state_23238__$1;
                                            statearr_23259_23292[1] = 21;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23239 === 11) {
                                            var inst_23202 = state_23238[6];
                                            var inst_23208 = inst_23202 == null;
                                            var state_23238__$1 = state_23238;
                                            if (cljs.core.truth_(inst_23208)) {
                                              var statearr_23260_23293 = state_23238__$1;
                                              statearr_23260_23293[1] = 14;
                                            } else {
                                              var statearr_23261_23294 = state_23238__$1;
                                              statearr_23261_23294[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_23239 === 9) {
                                              var inst_23195 = state_23238[11];
                                              var inst_23195__$1 = state_23238[2];
                                              var inst_23196 = cljs.core.get.call(null, inst_23195__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                              var inst_23197 = cljs.core.get.call(null, inst_23195__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                              var inst_23198 = cljs.core.get.call(null, inst_23195__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                              var state_23238__$1 = function() {
                                                var statearr_23262 = state_23238;
                                                statearr_23262[11] = inst_23195__$1;
                                                statearr_23262[16] = inst_23197;
                                                statearr_23262[14] = inst_23198;
                                                return statearr_23262;
                                              }();
                                              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_23238__$1, 10, inst_23196);
                                            } else {
                                              if (state_val_23239 === 5) {
                                                var inst_23187 = state_23238[5];
                                                var inst_23190 = cljs.core.seq_QMARK_.call(null, inst_23187);
                                                var state_23238__$1 = state_23238;
                                                if (inst_23190) {
                                                  var statearr_23263_23295 = state_23238__$1;
                                                  statearr_23263_23295[1] = 7;
                                                } else {
                                                  var statearr_23264_23296 = state_23238__$1;
                                                  statearr_23264_23296[1] = 8;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_23239 === 14) {
                                                  var inst_23203 = state_23238[15];
                                                  var inst_23210 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_23203);
                                                  var state_23238__$1 = state_23238;
                                                  var statearr_23265_23297 = state_23238__$1;
                                                  statearr_23265_23297[2] = inst_23210;
                                                  statearr_23265_23297[1] = 16;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_23239 === 16) {
                                                    var inst_23213 = state_23238[2];
                                                    var inst_23214 = calc_state.call(null);
                                                    var inst_23187 = inst_23214;
                                                    var state_23238__$1 = function() {
                                                      var statearr_23266 = state_23238;
                                                      statearr_23266[5] = inst_23187;
                                                      statearr_23266[17] = inst_23213;
                                                      return statearr_23266;
                                                    }();
                                                    var statearr_23267_23298 = state_23238__$1;
                                                    statearr_23267_23298[2] = null;
                                                    statearr_23267_23298[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_23239 === 10) {
                                                      var inst_23202 = state_23238[6];
                                                      var inst_23203 = state_23238[15];
                                                      var inst_23201 = state_23238[2];
                                                      var inst_23202__$1 = cljs.core.nth.call(null, inst_23201, 0, null);
                                                      var inst_23203__$1 = cljs.core.nth.call(null, inst_23201, 1, null);
                                                      var inst_23204 = inst_23202__$1 == null;
                                                      var inst_23205 = cljs.core._EQ_.call(null, inst_23203__$1, change);
                                                      var inst_23206 = inst_23204 || inst_23205;
                                                      var state_23238__$1 = function() {
                                                        var statearr_23268 = state_23238;
                                                        statearr_23268[6] = inst_23202__$1;
                                                        statearr_23268[15] = inst_23203__$1;
                                                        return statearr_23268;
                                                      }();
                                                      if (cljs.core.truth_(inst_23206)) {
                                                        var statearr_23269_23299 = state_23238__$1;
                                                        statearr_23269_23299[1] = 11;
                                                      } else {
                                                        var statearr_23270_23300 = state_23238__$1;
                                                        statearr_23270_23300[1] = 12;
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_23239 === 18) {
                                                        var inst_23197 = state_23238[16];
                                                        var inst_23198 = state_23238[14];
                                                        var inst_23203 = state_23238[15];
                                                        var inst_23220 = cljs.core.empty_QMARK_.call(null, inst_23198);
                                                        var inst_23221 = inst_23197.call(null, inst_23203);
                                                        var inst_23222 = cljs.core.not.call(null, inst_23221);
                                                        var inst_23223 = inst_23220 && inst_23222;
                                                        var state_23238__$1 = state_23238;
                                                        var statearr_23271_23301 = state_23238__$1;
                                                        statearr_23271_23301[2] = inst_23223;
                                                        statearr_23271_23301[1] = 19;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_23239 === 8) {
                                                          var inst_23187 = state_23238[5];
                                                          var state_23238__$1 = state_23238;
                                                          var statearr_23272_23302 = state_23238__$1;
                                                          statearr_23272_23302[2] = inst_23187;
                                                          statearr_23272_23302[1] = 9;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6608__auto___23276, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6564__auto__, c__6608__auto___23276, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6565__auto__ = null;
            var state_machine__6565__auto____0 = function() {
              var statearr_23274 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23274[0] = state_machine__6565__auto__;
              statearr_23274[1] = 1;
              return statearr_23274;
            };
            var state_machine__6565__auto____1 = function(state_23238) {
              while (true) {
                var result__6566__auto__ = switch__6564__auto__.call(null, state_23238);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6566__auto__;
                }
                break;
              }
            };
            state_machine__6565__auto__ = function(state_23238) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6565__auto____0.call(this);
                case 1:
                  return state_machine__6565__auto____1.call(this, state_23238);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
            state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
            return state_machine__6565__auto__;
          }();
        }(switch__6564__auto__, c__6608__auto___23276, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6610__auto__ = function() {
        var statearr_23275 = f__6609__auto__.call(null);
        statearr_23275[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto___23276;
        return statearr_23275;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
    };
  }(c__6608__auto___23276, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj23304 = {};
  return obj23304;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3955__auto__ = p;
    if (and__3955__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4611__auto__ = p == null ? null : p;
    return function() {
      var or__3967__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3955__auto__ = p;
    if (and__3955__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4611__auto__ = p == null ? null : p;
    return function() {
      var or__3967__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3955__auto__ = p;
      if (and__3955__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4611__auto__ = p == null ? null : p;
      return function() {
        var or__3967__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4611__auto__)];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3955__auto__ = p;
      if (and__3955__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3955__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4611__auto__ = p == null ? null : p;
      return function() {
        var or__3967__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4611__auto__)];
        if (or__3967__auto__) {
          return or__3967__auto__;
        } else {
          var or__3967__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3967__auto____$1) {
            return or__3967__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3967__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3967__auto__)) {
          return or__3967__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3967__auto__, mults) {
            return function(p1__23305_SHARP_) {
              if (cljs.core.truth_(p1__23305_SHARP_.call(null, topic))) {
                return p1__23305_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__23305_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3967__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t23429 !== "undefined") {
      } else {
        cljs.core.async.t23429 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta23430) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta23430 = meta23430;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t23429.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t23429.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t23429.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t23429.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t23429.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t23429.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t23429.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t23429.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_23431) {
            var self__ = this;
            var _23431__$1 = this;
            return self__.meta23430;
          };
        }(mults, ensure_mult);
        cljs.core.async.t23429.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_23431, meta23430__$1) {
            var self__ = this;
            var _23431__$1 = this;
            return new cljs.core.async.t23429(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta23430__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t23429.cljs$lang$type = true;
        cljs.core.async.t23429.cljs$lang$ctorStr = "cljs.core.async/t23429";
        cljs.core.async.t23429.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
            return cljs.core._write.call(null, writer__4555__auto__, "cljs.core.async/t23429");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t23429 = function(mults, ensure_mult) {
          return function __GT_t23429(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta23430) {
            return new cljs.core.async.t23429(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta23430);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t23429(ensure_mult, mults, buf_fn, topic_fn, ch, pub, cljs.core.PersistentArrayMap.EMPTY);
    }();
    var c__6608__auto___23552 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto___23552, mults, ensure_mult, p) {
      return function() {
        var f__6609__auto__ = function() {
          var switch__6564__auto__ = function(c__6608__auto___23552, mults, ensure_mult, p) {
            return function(state_23504) {
              var state_val_23505 = state_23504[1];
              if (state_val_23505 === 7) {
                var inst_23500 = state_23504[2];
                var state_23504__$1 = state_23504;
                var statearr_23506_23553 = state_23504__$1;
                statearr_23506_23553[2] = inst_23500;
                statearr_23506_23553[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23505 === 20) {
                  var state_23504__$1 = state_23504;
                  var statearr_23507_23554 = state_23504__$1;
                  statearr_23507_23554[2] = null;
                  statearr_23507_23554[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23505 === 1) {
                    var state_23504__$1 = state_23504;
                    var statearr_23508_23555 = state_23504__$1;
                    statearr_23508_23555[2] = null;
                    statearr_23508_23555[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23505 === 24) {
                      try {
                        var inst_23434 = state_23504[5];
                        var inst_23484 = state_23504[6];
                        var inst_23490 = cljs.core.async.muxch_STAR_.call(null, inst_23484);
                        var state_23504__$1 = state_23504;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23504__$1, 25, inst_23490, inst_23434);
                      } catch (e23509) {
                        if (e23509 instanceof Object) {
                          var ex__6558__auto__ = e23509;
                          var statearr_23510_23556 = state_23504;
                          statearr_23510_23556[1] = 23;
                          statearr_23510_23556[2] = ex__6558__auto__;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e23509;
                        }
                      }
                    } else {
                      if (state_val_23505 === 4) {
                        var inst_23434 = state_23504[5];
                        var inst_23434__$1 = state_23504[2];
                        var inst_23435 = inst_23434__$1 == null;
                        var state_23504__$1 = function() {
                          var statearr_23511 = state_23504;
                          statearr_23511[5] = inst_23434__$1;
                          return statearr_23511;
                        }();
                        if (cljs.core.truth_(inst_23435)) {
                          var statearr_23512_23557 = state_23504__$1;
                          statearr_23512_23557[1] = 5;
                        } else {
                          var statearr_23513_23558 = state_23504__$1;
                          statearr_23513_23558[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23505 === 15) {
                          var inst_23476 = state_23504[2];
                          var state_23504__$1 = state_23504;
                          var statearr_23514_23559 = state_23504__$1;
                          statearr_23514_23559[2] = inst_23476;
                          statearr_23514_23559[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23505 === 21) {
                            var inst_23497 = state_23504[2];
                            var state_23504__$1 = function() {
                              var statearr_23515 = state_23504;
                              statearr_23515[7] = inst_23497;
                              return statearr_23515;
                            }();
                            var statearr_23516_23560 = state_23504__$1;
                            statearr_23516_23560[2] = null;
                            statearr_23516_23560[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23505 === 13) {
                              var inst_23458 = state_23504[8];
                              var inst_23460 = cljs.core.chunked_seq_QMARK_.call(null, inst_23458);
                              var state_23504__$1 = state_23504;
                              if (inst_23460) {
                                var statearr_23517_23561 = state_23504__$1;
                                statearr_23517_23561[1] = 16;
                              } else {
                                var statearr_23518_23562 = state_23504__$1;
                                statearr_23518_23562[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23505 === 22) {
                                var inst_23494 = state_23504[2];
                                var state_23504__$1 = state_23504;
                                var statearr_23519_23563 = state_23504__$1;
                                statearr_23519_23563[2] = inst_23494;
                                statearr_23519_23563[1] = 21;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23505 === 6) {
                                  var inst_23482 = state_23504[9];
                                  var inst_23434 = state_23504[5];
                                  var inst_23484 = state_23504[6];
                                  var inst_23482__$1 = topic_fn.call(null, inst_23434);
                                  var inst_23483 = cljs.core.deref.call(null, mults);
                                  var inst_23484__$1 = cljs.core.get.call(null, inst_23483, inst_23482__$1);
                                  var state_23504__$1 = function() {
                                    var statearr_23520 = state_23504;
                                    statearr_23520[9] = inst_23482__$1;
                                    statearr_23520[6] = inst_23484__$1;
                                    return statearr_23520;
                                  }();
                                  if (cljs.core.truth_(inst_23484__$1)) {
                                    var statearr_23521_23564 = state_23504__$1;
                                    statearr_23521_23564[1] = 19;
                                  } else {
                                    var statearr_23522_23565 = state_23504__$1;
                                    statearr_23522_23565[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23505 === 25) {
                                    try {
                                      var inst_23492 = state_23504[2];
                                      var state_23504__$1 = state_23504;
                                      var statearr_23525_23566 = state_23504__$1;
                                      statearr_23525_23566[2] = inst_23492;
                                      statearr_23525_23566[1] = 22;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } catch (e23523) {
                                      if (e23523 instanceof Object) {
                                        var ex__6558__auto__ = e23523;
                                        var statearr_23524_23567 = state_23504;
                                        statearr_23524_23567[1] = 23;
                                        statearr_23524_23567[2] = ex__6558__auto__;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        throw e23523;
                                      }
                                    }
                                  } else {
                                    if (state_val_23505 === 17) {
                                      var inst_23458 = state_23504[8];
                                      var inst_23467 = cljs.core.first.call(null, inst_23458);
                                      var inst_23468 = cljs.core.async.muxch_STAR_.call(null, inst_23467);
                                      var inst_23469 = cljs.core.async.close_BANG_.call(null, inst_23468);
                                      var inst_23470 = cljs.core.next.call(null, inst_23458);
                                      var inst_23444 = inst_23470;
                                      var inst_23445 = null;
                                      var inst_23446 = 0;
                                      var inst_23447 = 0;
                                      var state_23504__$1 = function() {
                                        var statearr_23526 = state_23504;
                                        statearr_23526[10] = inst_23444;
                                        statearr_23526[11] = inst_23446;
                                        statearr_23526[12] = inst_23445;
                                        statearr_23526[13] = inst_23447;
                                        statearr_23526[14] = inst_23469;
                                        return statearr_23526;
                                      }();
                                      var statearr_23527_23568 = state_23504__$1;
                                      statearr_23527_23568[2] = null;
                                      statearr_23527_23568[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23505 === 3) {
                                        var inst_23502 = state_23504[2];
                                        var state_23504__$1 = state_23504;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23504__$1, inst_23502);
                                      } else {
                                        if (state_val_23505 === 12) {
                                          var inst_23478 = state_23504[2];
                                          var state_23504__$1 = state_23504;
                                          var statearr_23528_23569 = state_23504__$1;
                                          statearr_23528_23569[2] = inst_23478;
                                          statearr_23528_23569[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23505 === 2) {
                                            var state_23504__$1 = state_23504;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23504__$1, 4, ch);
                                          } else {
                                            if (state_val_23505 === 23) {
                                              var inst_23482 = state_23504[9];
                                              var inst_23486 = state_23504[2];
                                              var inst_23487 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_23482);
                                              var state_23504__$1 = function() {
                                                var statearr_23529 = state_23504;
                                                statearr_23529[15] = inst_23486;
                                                return statearr_23529;
                                              }();
                                              var statearr_23530_23570 = state_23504__$1;
                                              statearr_23530_23570[2] = inst_23487;
                                              statearr_23530_23570[1] = 22;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_23505 === 19) {
                                                var state_23504__$1 = state_23504;
                                                var statearr_23531_23571 = state_23504__$1;
                                                statearr_23531_23571[2] = null;
                                                statearr_23531_23571[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_23505 === 11) {
                                                  var inst_23444 = state_23504[10];
                                                  var inst_23458 = state_23504[8];
                                                  var inst_23458__$1 = cljs.core.seq.call(null, inst_23444);
                                                  var state_23504__$1 = function() {
                                                    var statearr_23532 = state_23504;
                                                    statearr_23532[8] = inst_23458__$1;
                                                    return statearr_23532;
                                                  }();
                                                  if (inst_23458__$1) {
                                                    var statearr_23533_23572 = state_23504__$1;
                                                    statearr_23533_23572[1] = 13;
                                                  } else {
                                                    var statearr_23534_23573 = state_23504__$1;
                                                    statearr_23534_23573[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_23505 === 9) {
                                                    var inst_23480 = state_23504[2];
                                                    var state_23504__$1 = state_23504;
                                                    var statearr_23535_23574 = state_23504__$1;
                                                    statearr_23535_23574[2] = inst_23480;
                                                    statearr_23535_23574[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_23505 === 5) {
                                                      var inst_23441 = cljs.core.deref.call(null, mults);
                                                      var inst_23442 = cljs.core.vals.call(null, inst_23441);
                                                      var inst_23443 = cljs.core.seq.call(null, inst_23442);
                                                      var inst_23444 = inst_23443;
                                                      var inst_23445 = null;
                                                      var inst_23446 = 0;
                                                      var inst_23447 = 0;
                                                      var state_23504__$1 = function() {
                                                        var statearr_23536 = state_23504;
                                                        statearr_23536[10] = inst_23444;
                                                        statearr_23536[11] = inst_23446;
                                                        statearr_23536[12] = inst_23445;
                                                        statearr_23536[13] = inst_23447;
                                                        return statearr_23536;
                                                      }();
                                                      var statearr_23537_23575 = state_23504__$1;
                                                      statearr_23537_23575[2] = null;
                                                      statearr_23537_23575[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_23505 === 14) {
                                                        var state_23504__$1 = state_23504;
                                                        var statearr_23541_23576 = state_23504__$1;
                                                        statearr_23541_23576[2] = null;
                                                        statearr_23541_23576[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_23505 === 16) {
                                                          var inst_23458 = state_23504[8];
                                                          var inst_23462 = cljs.core.chunk_first.call(null, inst_23458);
                                                          var inst_23463 = cljs.core.chunk_rest.call(null, inst_23458);
                                                          var inst_23464 = cljs.core.count.call(null, inst_23462);
                                                          var inst_23444 = inst_23463;
                                                          var inst_23445 = inst_23462;
                                                          var inst_23446 = inst_23464;
                                                          var inst_23447 = 0;
                                                          var state_23504__$1 = function() {
                                                            var statearr_23542 = state_23504;
                                                            statearr_23542[10] = inst_23444;
                                                            statearr_23542[11] = inst_23446;
                                                            statearr_23542[12] = inst_23445;
                                                            statearr_23542[13] = inst_23447;
                                                            return statearr_23542;
                                                          }();
                                                          var statearr_23543_23577 = state_23504__$1;
                                                          statearr_23543_23577[2] = null;
                                                          statearr_23543_23577[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_23505 === 10) {
                                                            var inst_23444 = state_23504[10];
                                                            var inst_23446 = state_23504[11];
                                                            var inst_23445 = state_23504[12];
                                                            var inst_23447 = state_23504[13];
                                                            var inst_23452 = cljs.core._nth.call(null, inst_23445, inst_23447);
                                                            var inst_23453 = cljs.core.async.muxch_STAR_.call(null, inst_23452);
                                                            var inst_23454 = cljs.core.async.close_BANG_.call(null, inst_23453);
                                                            var inst_23455 = inst_23447 + 1;
                                                            var tmp23538 = inst_23444;
                                                            var tmp23539 = inst_23446;
                                                            var tmp23540 = inst_23445;
                                                            var inst_23444__$1 = tmp23538;
                                                            var inst_23445__$1 = tmp23540;
                                                            var inst_23446__$1 = tmp23539;
                                                            var inst_23447__$1 = inst_23455;
                                                            var state_23504__$1 = function() {
                                                              var statearr_23544 = state_23504;
                                                              statearr_23544[10] = inst_23444__$1;
                                                              statearr_23544[16] = inst_23454;
                                                              statearr_23544[11] = inst_23446__$1;
                                                              statearr_23544[12] = inst_23445__$1;
                                                              statearr_23544[13] = inst_23447__$1;
                                                              return statearr_23544;
                                                            }();
                                                            var statearr_23545_23578 = state_23504__$1;
                                                            statearr_23545_23578[2] = null;
                                                            statearr_23545_23578[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_23505 === 18) {
                                                              var inst_23473 = state_23504[2];
                                                              var state_23504__$1 = state_23504;
                                                              var statearr_23546_23579 = state_23504__$1;
                                                              statearr_23546_23579[2] = inst_23473;
                                                              statearr_23546_23579[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_23505 === 8) {
                                                                var inst_23446 = state_23504[11];
                                                                var inst_23447 = state_23504[13];
                                                                var inst_23449 = inst_23447 < inst_23446;
                                                                var inst_23450 = inst_23449;
                                                                var state_23504__$1 = state_23504;
                                                                if (cljs.core.truth_(inst_23450)) {
                                                                  var statearr_23547_23580 = state_23504__$1;
                                                                  statearr_23547_23580[1] = 10;
                                                                } else {
                                                                  var statearr_23548_23581 = state_23504__$1;
                                                                  statearr_23548_23581[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6608__auto___23552, mults, ensure_mult, p);
          return function(switch__6564__auto__, c__6608__auto___23552, mults, ensure_mult, p) {
            return function() {
              var state_machine__6565__auto__ = null;
              var state_machine__6565__auto____0 = function() {
                var statearr_23550 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_23550[0] = state_machine__6565__auto__;
                statearr_23550[1] = 1;
                return statearr_23550;
              };
              var state_machine__6565__auto____1 = function(state_23504) {
                while (true) {
                  var result__6566__auto__ = switch__6564__auto__.call(null, state_23504);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6566__auto__;
                  }
                  break;
                }
              };
              state_machine__6565__auto__ = function(state_23504) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6565__auto____0.call(this);
                  case 1:
                    return state_machine__6565__auto____1.call(this, state_23504);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
              return state_machine__6565__auto__;
            }();
          }(switch__6564__auto__, c__6608__auto___23552, mults, ensure_mult, p);
        }();
        var state__6610__auto__ = function() {
          var statearr_23551 = f__6609__auto__.call(null);
          statearr_23551[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto___23552;
          return statearr_23551;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
      };
    }(c__6608__auto___23552, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, java.util.Arrays.copyOf.call(null, rets, cnt));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6608__auto___23712 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto___23712, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6609__auto__ = function() {
          var switch__6564__auto__ = function(c__6608__auto___23712, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_23684) {
              var state_val_23685 = state_23684[1];
              if (state_val_23685 === 7) {
                var state_23684__$1 = state_23684;
                var statearr_23686_23713 = state_23684__$1;
                statearr_23686_23713[2] = null;
                statearr_23686_23713[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23685 === 1) {
                  var state_23684__$1 = state_23684;
                  var statearr_23687_23714 = state_23684__$1;
                  statearr_23687_23714[2] = null;
                  statearr_23687_23714[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23685 === 4) {
                    var inst_23649 = state_23684[5];
                    var inst_23651 = inst_23649 < cnt;
                    var state_23684__$1 = state_23684;
                    if (cljs.core.truth_(inst_23651)) {
                      var statearr_23688_23715 = state_23684__$1;
                      statearr_23688_23715[1] = 6;
                    } else {
                      var statearr_23689_23716 = state_23684__$1;
                      statearr_23689_23716[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23685 === 15) {
                      var inst_23680 = state_23684[2];
                      var state_23684__$1 = state_23684;
                      var statearr_23690_23717 = state_23684__$1;
                      statearr_23690_23717[2] = inst_23680;
                      statearr_23690_23717[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23685 === 13) {
                        var inst_23673 = cljs.core.async.close_BANG_.call(null, out);
                        var state_23684__$1 = state_23684;
                        var statearr_23691_23718 = state_23684__$1;
                        statearr_23691_23718[2] = inst_23673;
                        statearr_23691_23718[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23685 === 6) {
                          var state_23684__$1 = state_23684;
                          var statearr_23692_23719 = state_23684__$1;
                          statearr_23692_23719[2] = null;
                          statearr_23692_23719[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23685 === 3) {
                            var inst_23682 = state_23684[2];
                            var state_23684__$1 = state_23684;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23684__$1, inst_23682);
                          } else {
                            if (state_val_23685 === 12) {
                              var inst_23670 = state_23684[6];
                              var inst_23670__$1 = state_23684[2];
                              var inst_23671 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_23670__$1);
                              var state_23684__$1 = function() {
                                var statearr_23693 = state_23684;
                                statearr_23693[6] = inst_23670__$1;
                                return statearr_23693;
                              }();
                              if (cljs.core.truth_(inst_23671)) {
                                var statearr_23694_23720 = state_23684__$1;
                                statearr_23694_23720[1] = 13;
                              } else {
                                var statearr_23695_23721 = state_23684__$1;
                                statearr_23695_23721[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23685 === 2) {
                                var inst_23648 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_23649 = 0;
                                var state_23684__$1 = function() {
                                  var statearr_23696 = state_23684;
                                  statearr_23696[5] = inst_23649;
                                  statearr_23696[7] = inst_23648;
                                  return statearr_23696;
                                }();
                                var statearr_23697_23722 = state_23684__$1;
                                statearr_23697_23722[2] = null;
                                statearr_23697_23722[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23685 === 11) {
                                  try {
                                    var inst_23649 = state_23684[5];
                                    var inst_23657 = chs__$1.call(null, inst_23649);
                                    var inst_23658 = done.call(null, inst_23649);
                                    var inst_23659 = cljs.core.async.take_BANG_.call(null, inst_23657, inst_23658);
                                    var state_23684__$1 = state_23684;
                                    var statearr_23700_23723 = state_23684__$1;
                                    statearr_23700_23723[2] = inst_23659;
                                    statearr_23700_23723[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } catch (e23698) {
                                    if (e23698 instanceof Object) {
                                      var ex__6558__auto__ = e23698;
                                      var statearr_23699_23724 = state_23684;
                                      statearr_23699_23724[1] = 10;
                                      statearr_23699_23724[2] = ex__6558__auto__;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      throw e23698;
                                    }
                                  }
                                } else {
                                  if (state_val_23685 === 9) {
                                    var inst_23649 = state_23684[5];
                                    var inst_23661 = state_23684[2];
                                    var inst_23662 = inst_23649 + 1;
                                    var inst_23649__$1 = inst_23662;
                                    var state_23684__$1 = function() {
                                      var statearr_23701 = state_23684;
                                      statearr_23701[8] = inst_23661;
                                      statearr_23701[5] = inst_23649__$1;
                                      return statearr_23701;
                                    }();
                                    var statearr_23702_23725 = state_23684__$1;
                                    statearr_23702_23725[2] = null;
                                    statearr_23702_23725[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23685 === 5) {
                                      var inst_23668 = state_23684[2];
                                      var state_23684__$1 = function() {
                                        var statearr_23703 = state_23684;
                                        statearr_23703[9] = inst_23668;
                                        return statearr_23703;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23684__$1, 12, dchan);
                                    } else {
                                      if (state_val_23685 === 14) {
                                        var inst_23670 = state_23684[6];
                                        var inst_23675 = cljs.core.apply.call(null, f, inst_23670);
                                        var state_23684__$1 = state_23684;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23684__$1, 16, out, inst_23675);
                                      } else {
                                        if (state_val_23685 === 16) {
                                          var inst_23677 = state_23684[2];
                                          var state_23684__$1 = function() {
                                            var statearr_23704 = state_23684;
                                            statearr_23704[10] = inst_23677;
                                            return statearr_23704;
                                          }();
                                          var statearr_23705_23726 = state_23684__$1;
                                          statearr_23705_23726[2] = null;
                                          statearr_23705_23726[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23685 === 10) {
                                            var inst_23653 = state_23684[2];
                                            var inst_23654 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_23684__$1 = function() {
                                              var statearr_23706 = state_23684;
                                              statearr_23706[11] = inst_23653;
                                              return statearr_23706;
                                            }();
                                            var statearr_23707_23727 = state_23684__$1;
                                            statearr_23707_23727[2] = inst_23654;
                                            statearr_23707_23727[1] = 9;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_23685 === 8) {
                                              var inst_23666 = state_23684[2];
                                              var state_23684__$1 = state_23684;
                                              var statearr_23708_23728 = state_23684__$1;
                                              statearr_23708_23728[2] = inst_23666;
                                              statearr_23708_23728[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6608__auto___23712, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6564__auto__, c__6608__auto___23712, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6565__auto__ = null;
              var state_machine__6565__auto____0 = function() {
                var statearr_23710 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_23710[0] = state_machine__6565__auto__;
                statearr_23710[1] = 1;
                return statearr_23710;
              };
              var state_machine__6565__auto____1 = function(state_23684) {
                while (true) {
                  var result__6566__auto__ = switch__6564__auto__.call(null, state_23684);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6566__auto__;
                  }
                  break;
                }
              };
              state_machine__6565__auto__ = function(state_23684) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6565__auto____0.call(this);
                  case 1:
                    return state_machine__6565__auto____1.call(this, state_23684);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
              return state_machine__6565__auto__;
            }();
          }(switch__6564__auto__, c__6608__auto___23712, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6610__auto__ = function() {
          var statearr_23711 = f__6609__auto__.call(null);
          statearr_23711[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto___23712;
          return statearr_23711;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
      };
    }(c__6608__auto___23712, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6608__auto___23828 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto___23828, out) {
      return function() {
        var f__6609__auto__ = function() {
          var switch__6564__auto__ = function(c__6608__auto___23828, out) {
            return function(state_23808) {
              var state_val_23809 = state_23808[1];
              if (state_val_23809 === 7) {
                var inst_23787 = state_23808[5];
                var inst_23788 = state_23808[6];
                var inst_23787__$1 = state_23808[2];
                var inst_23788__$1 = cljs.core.nth.call(null, inst_23787__$1, 0, null);
                var inst_23789 = cljs.core.nth.call(null, inst_23787__$1, 1, null);
                var inst_23790 = inst_23788__$1 == null;
                var state_23808__$1 = function() {
                  var statearr_23810 = state_23808;
                  statearr_23810[5] = inst_23787__$1;
                  statearr_23810[7] = inst_23789;
                  statearr_23810[6] = inst_23788__$1;
                  return statearr_23810;
                }();
                if (cljs.core.truth_(inst_23790)) {
                  var statearr_23811_23829 = state_23808__$1;
                  statearr_23811_23829[1] = 8;
                } else {
                  var statearr_23812_23830 = state_23808__$1;
                  statearr_23812_23830[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23809 === 1) {
                  var inst_23779 = cljs.core.vec.call(null, chs);
                  var inst_23780 = inst_23779;
                  var state_23808__$1 = function() {
                    var statearr_23813 = state_23808;
                    statearr_23813[8] = inst_23780;
                    return statearr_23813;
                  }();
                  var statearr_23814_23831 = state_23808__$1;
                  statearr_23814_23831[2] = null;
                  statearr_23814_23831[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23809 === 4) {
                    var inst_23780 = state_23808[8];
                    var state_23808__$1 = state_23808;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_23808__$1, 7, inst_23780);
                  } else {
                    if (state_val_23809 === 6) {
                      var inst_23804 = state_23808[2];
                      var state_23808__$1 = state_23808;
                      var statearr_23815_23832 = state_23808__$1;
                      statearr_23815_23832[2] = inst_23804;
                      statearr_23815_23832[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23809 === 3) {
                        var inst_23806 = state_23808[2];
                        var state_23808__$1 = state_23808;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23808__$1, inst_23806);
                      } else {
                        if (state_val_23809 === 2) {
                          var inst_23780 = state_23808[8];
                          var inst_23782 = cljs.core.count.call(null, inst_23780);
                          var inst_23783 = inst_23782 > 0;
                          var state_23808__$1 = state_23808;
                          if (cljs.core.truth_(inst_23783)) {
                            var statearr_23817_23833 = state_23808__$1;
                            statearr_23817_23833[1] = 4;
                          } else {
                            var statearr_23818_23834 = state_23808__$1;
                            statearr_23818_23834[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23809 === 11) {
                            var inst_23780 = state_23808[8];
                            var inst_23797 = state_23808[2];
                            var tmp23816 = inst_23780;
                            var inst_23780__$1 = tmp23816;
                            var state_23808__$1 = function() {
                              var statearr_23819 = state_23808;
                              statearr_23819[9] = inst_23797;
                              statearr_23819[8] = inst_23780__$1;
                              return statearr_23819;
                            }();
                            var statearr_23820_23835 = state_23808__$1;
                            statearr_23820_23835[2] = null;
                            statearr_23820_23835[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23809 === 9) {
                              var inst_23788 = state_23808[6];
                              var state_23808__$1 = state_23808;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23808__$1, 11, out, inst_23788);
                            } else {
                              if (state_val_23809 === 5) {
                                var inst_23802 = cljs.core.async.close_BANG_.call(null, out);
                                var state_23808__$1 = state_23808;
                                var statearr_23821_23836 = state_23808__$1;
                                statearr_23821_23836[2] = inst_23802;
                                statearr_23821_23836[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23809 === 10) {
                                  var inst_23800 = state_23808[2];
                                  var state_23808__$1 = state_23808;
                                  var statearr_23822_23837 = state_23808__$1;
                                  statearr_23822_23837[2] = inst_23800;
                                  statearr_23822_23837[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23809 === 8) {
                                    var inst_23787 = state_23808[5];
                                    var inst_23789 = state_23808[7];
                                    var inst_23788 = state_23808[6];
                                    var inst_23780 = state_23808[8];
                                    var inst_23792 = function() {
                                      var c = inst_23789;
                                      var v = inst_23788;
                                      var vec__23785 = inst_23787;
                                      var cs = inst_23780;
                                      return function(c, v, vec__23785, cs, inst_23787, inst_23789, inst_23788, inst_23780, state_val_23809, c__6608__auto___23828, out) {
                                        return function(p1__23729_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__23729_SHARP_);
                                        };
                                      }(c, v, vec__23785, cs, inst_23787, inst_23789, inst_23788, inst_23780, state_val_23809, c__6608__auto___23828, out);
                                    }();
                                    var inst_23793 = cljs.core.filterv.call(null, inst_23792, inst_23780);
                                    var inst_23780__$1 = inst_23793;
                                    var state_23808__$1 = function() {
                                      var statearr_23823 = state_23808;
                                      statearr_23823[8] = inst_23780__$1;
                                      return statearr_23823;
                                    }();
                                    var statearr_23824_23838 = state_23808__$1;
                                    statearr_23824_23838[2] = null;
                                    statearr_23824_23838[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6608__auto___23828, out);
          return function(switch__6564__auto__, c__6608__auto___23828, out) {
            return function() {
              var state_machine__6565__auto__ = null;
              var state_machine__6565__auto____0 = function() {
                var statearr_23826 = [null, null, null, null, null, null, null, null, null, null];
                statearr_23826[0] = state_machine__6565__auto__;
                statearr_23826[1] = 1;
                return statearr_23826;
              };
              var state_machine__6565__auto____1 = function(state_23808) {
                while (true) {
                  var result__6566__auto__ = switch__6564__auto__.call(null, state_23808);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6566__auto__;
                  }
                  break;
                }
              };
              state_machine__6565__auto__ = function(state_23808) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6565__auto____0.call(this);
                  case 1:
                    return state_machine__6565__auto____1.call(this, state_23808);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
              return state_machine__6565__auto__;
            }();
          }(switch__6564__auto__, c__6608__auto___23828, out);
        }();
        var state__6610__auto__ = function() {
          var statearr_23827 = f__6609__auto__.call(null);
          statearr_23827[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto___23828;
          return statearr_23827;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
      };
    }(c__6608__auto___23828, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
goog.provide("logger");
goog.require("cljs.core");
goog.require("cljs.core.async");
cljs.core.enable_console_print_BANG_.call(null);
logger.tagsOn = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "all", "all", 892129742), new cljs.core.Keyword(null, "inv", "inv", 1526077438), new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), new cljs.core.Keyword(null, "blockchainHeight", "blockchainHeight", -607390728), new cljs.core.Keyword(null, "prevblk", "prevblk", 1731240431), new cljs.core.Keyword(null, "blockknown", "blockknown", -1662820144), new cljs.core.Keyword(null, 
"makeBlock", "makeBlock", -1854081426), new cljs.core.Keyword(null, "heightFromBlock", "heightFromBlock", 328660240), new cljs.core.Keyword(null, "saveBlock", "saveBlock", 2070754850), new cljs.core.Keyword(null, "dbput", "dbput", 890434907), new cljs.core.Keyword(null, "makeGetBlock", "makeGetBlock", -1966015644), new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312)], null);
logger.tagsO1 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "invoke", "invoke", 1145927159)], null);
logger.tagsOFF = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "receive", "receive", 1830053389)], null);
logger.tags = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "merkleRoot", "merkleRoot", -1567310602), new cljs.core.Keyword(null, "dbupdate", "dbupdate", 1437384630)], null);
logger.og = function og(type, format, data) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_96513) {
            var state_val_96514 = state_96513[1];
            if (state_val_96514 === 7) {
              var inst_96504 = state_96513[2];
              var state_96513__$1 = state_96513;
              if (cljs.core.truth_(inst_96504)) {
                var statearr_96515_96533 = state_96513__$1;
                statearr_96515_96533[1] = 8;
              } else {
                var statearr_96516_96534 = state_96513__$1;
                statearr_96516_96534[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_96514 === 1) {
                var inst_96488 = state_96513[5];
                var inst_96486 = [type];
                var inst_96487 = cljs.core.PersistentHashSet.fromArray(inst_96486, true);
                var inst_96488__$1 = cljs.core.some.call(null, inst_96487, logger.tagsOn);
                var state_96513__$1 = function() {
                  var statearr_96517 = state_96513;
                  statearr_96517[5] = inst_96488__$1;
                  return statearr_96517;
                }();
                if (cljs.core.truth_(inst_96488__$1)) {
                  var statearr_96518_96535 = state_96513__$1;
                  statearr_96518_96535[1] = 2;
                } else {
                  var statearr_96519_96536 = state_96513__$1;
                  statearr_96519_96536[1] = 3;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_96514 === 4) {
                  var inst_96496 = state_96513[6];
                  var inst_96496__$1 = state_96513[2];
                  var state_96513__$1 = function() {
                    var statearr_96520 = state_96513;
                    statearr_96520[6] = inst_96496__$1;
                    return statearr_96520;
                  }();
                  if (cljs.core.truth_(inst_96496__$1)) {
                    var statearr_96521_96537 = state_96513__$1;
                    statearr_96521_96537[1] = 5;
                  } else {
                    var statearr_96522_96538 = state_96513__$1;
                    statearr_96522_96538[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_96514 === 6) {
                    var inst_96496 = state_96513[6];
                    var state_96513__$1 = state_96513;
                    var statearr_96523_96539 = state_96513__$1;
                    statearr_96523_96539[2] = inst_96496;
                    statearr_96523_96539[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_96514 === 3) {
                      var inst_96491 = [new cljs.core.Keyword(null, "all", "all", 892129742), null];
                      var inst_96492 = new cljs.core.PersistentArrayMap(null, 1, inst_96491, null);
                      var inst_96493 = new cljs.core.PersistentHashSet(null, inst_96492, null);
                      var inst_96494 = cljs.core.some.call(null, inst_96493, logger.tagsOn);
                      var state_96513__$1 = state_96513;
                      var statearr_96524_96540 = state_96513__$1;
                      statearr_96524_96540[2] = inst_96494;
                      statearr_96524_96540[1] = 4;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_96514 === 2) {
                        var inst_96488 = state_96513[5];
                        var state_96513__$1 = state_96513;
                        var statearr_96525_96541 = state_96513__$1;
                        statearr_96525_96541[2] = inst_96488;
                        statearr_96525_96541[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_96514 === 9) {
                          var state_96513__$1 = state_96513;
                          var statearr_96526_96542 = state_96513__$1;
                          statearr_96526_96542[2] = null;
                          statearr_96526_96542[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_96514 === 5) {
                            var inst_96498 = [type];
                            var inst_96499 = cljs.core.PersistentHashSet.fromArray(inst_96498, true);
                            var inst_96500 = cljs.core.some.call(null, inst_96499, logger.tagsOFF);
                            var inst_96501 = cljs.core.not.call(null, inst_96500);
                            var state_96513__$1 = state_96513;
                            var statearr_96527_96543 = state_96513__$1;
                            statearr_96527_96543[2] = inst_96501;
                            statearr_96527_96543[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_96514 === 10) {
                              var inst_96511 = state_96513[2];
                              var state_96513__$1 = function() {
                                var statearr_96528 = state_96513;
                                statearr_96528[7] = inst_96511;
                                return statearr_96528;
                              }();
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_96513__$1, data);
                            } else {
                              if (state_val_96514 === 8) {
                                var inst_96506 = type + " ";
                                var inst_96507 = inst_96506 + format;
                                var inst_96508 = console.log(inst_96507, data);
                                var state_96513__$1 = state_96513;
                                var statearr_96529_96544 = state_96513__$1;
                                statearr_96529_96544[2] = inst_96508;
                                statearr_96529_96544[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_96531 = [null, null, null, null, null, null, null, null];
              statearr_96531[0] = state_machine__6577__auto__;
              statearr_96531[1] = 1;
              return statearr_96531;
            };
            var state_machine__6577__auto____1 = function(state_96513) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_96513);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_96513) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_96513);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_96532 = f__6621__auto__.call(null);
        statearr_96532[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_96532;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
goog.provide("pubsub");
goog.require("cljs.core");
goog.require("logger");
goog.require("cljs.core.async");
pubsub.proxychan = cljs.core.async.chan.call(null);
pubsub.proxychan2 = cljs.core.async.chan.call(null, 1);
pubsub.sendReceiveCh = cljs.core.async.chan.call(null, 1E3);
pubsub.statesCh = cljs.core.async.chan.call(null, 1E3);
pubsub.states = function() {
  var obj96548 = {};
  return obj96548;
}();
pubsub.receiveCH = cljs.core.async.chan.call(null, 1E3);
pubsub.get = function get() {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_96572) {
            var state_val_96573 = state_96572[1];
            if (state_val_96573 === 3) {
              var inst_96569 = state_96572[2];
              var inst_96570 = logger.og.call(null, new cljs.core.Keyword(null, "getpubsub", "getpubsub", -56419473), "peerjs", pubsub.a);
              var state_96572__$1 = function() {
                var statearr_96574 = state_96572;
                statearr_96574[5] = inst_96569;
                statearr_96574[6] = inst_96570;
                return statearr_96574;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_96572__$1, pubsub.a);
            } else {
              if (state_val_96573 === 2) {
                var inst_96565 = state_96572[2];
                var inst_96566 = pubsub.a = inst_96565;
                var inst_96567 = logger.og.call(null, new cljs.core.Keyword(null, "getpubsub", "getpubsub", -56419473), "peerjs", pubsub.a);
                var state_96572__$1 = function() {
                  var statearr_96575 = state_96572;
                  statearr_96575[7] = inst_96566;
                  statearr_96575[8] = inst_96567;
                  return statearr_96575;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_96572__$1, 3, pubsub.proxychan2, pubsub.a);
              } else {
                if (state_val_96573 === 1) {
                  var state_96572__$1 = state_96572;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_96572__$1, 2, pubsub.proxychan2);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_96577 = [null, null, null, null, null, null, null, null, null];
              statearr_96577[0] = state_machine__6577__auto__;
              statearr_96577[1] = 1;
              return statearr_96577;
            };
            var state_machine__6577__auto____1 = function(state_96572) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_96572);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_96572) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_96572);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_96578 = f__6621__auto__.call(null);
        statearr_96578[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_96578;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
pubsub.init = function init(what) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_96593) {
            var state_val_96594 = state_96593[1];
            if (state_val_96594 === 2) {
              var inst_96591 = state_96593[2];
              var state_96593__$1 = state_96593;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_96593__$1, inst_96591);
            } else {
              if (state_val_96594 === 1) {
                var inst_96589 = logger.og.call(null, new cljs.core.Keyword(null, "initpubsub", "initpubsub", -596274170), "peerjs", what);
                var state_96593__$1 = function() {
                  var statearr_96595 = state_96593;
                  statearr_96595[5] = inst_96589;
                  return statearr_96595;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_96593__$1, 2, pubsub.proxychan2, what);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_96597 = [null, null, null, null, null, null];
              statearr_96597[0] = state_machine__6577__auto__;
              statearr_96597[1] = 1;
              return statearr_96597;
            };
            var state_machine__6577__auto____1 = function(state_96593) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_96593);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_96593) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_96593);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_96598 = f__6621__auto__.call(null);
        statearr_96598[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_96598;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
pubsub.set = function set(what) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_96615) {
            var state_val_96616 = state_96615[1];
            if (state_val_96616 === 3) {
              var inst_96613 = state_96615[2];
              var state_96615__$1 = state_96615;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_96615__$1, inst_96613);
            } else {
              if (state_val_96616 === 2) {
                var inst_96611 = state_96615[2];
                var state_96615__$1 = function() {
                  var statearr_96617 = state_96615;
                  statearr_96617[5] = inst_96611;
                  return statearr_96617;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_96615__$1, 3, pubsub.proxychan2, what);
              } else {
                if (state_val_96616 === 1) {
                  var state_96615__$1 = state_96615;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_96615__$1, 2, pubsub.proxychan2);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_96619 = [null, null, null, null, null, null];
              statearr_96619[0] = state_machine__6577__auto__;
              statearr_96619[1] = 1;
              return statearr_96619;
            };
            var state_machine__6577__auto____1 = function(state_96615) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_96615);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_96615) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_96615);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_96620 = f__6621__auto__.call(null);
        statearr_96620[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_96620;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
pubsub.subs = function() {
  var obj96622 = {};
  return obj96622;
}();
pubsub.sub = function sub(typ, fun) {
  return pubsub.subs[typ] = fun;
};
pubsub.pub = function pub(typ, msg) {
  logger.og.call(null, new cljs.core.Keyword(null, "pub", "pub", -1189143908), "pubing ", typ + " " + msg);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_96640) {
            var state_val_96641 = state_96640[1];
            if (state_val_96641 === 2) {
              var inst_96638 = state_96640[2];
              var state_96640__$1 = state_96640;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_96640__$1, inst_96638);
            } else {
              if (state_val_96641 === 1) {
                var inst_96636 = {"typ":typ, "msg":msg};
                var state_96640__$1 = state_96640;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_96640__$1, 2, pubsub.proxychan, inst_96636);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_96643 = [null, null, null, null, null];
              statearr_96643[0] = state_machine__6577__auto__;
              statearr_96643[1] = 1;
              return statearr_96643;
            };
            var state_machine__6577__auto____1 = function(state_96640) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_96640);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_96640) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_96640);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_96644 = f__6621__auto__.call(null);
        statearr_96644[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_96644;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
pubsub.makeMsg = function makeMsg(typ, m, pchannel) {
  var obj96648 = {"typ":typ, "msg":m};
  return obj96648;
};
pubsub.initpubsub = function initpubsub() {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_96656) {
            var state_val_96657 = state_96656[1];
            if (state_val_96657 === 1) {
              var state_96656__$1 = state_96656;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_96656__$1, null);
            } else {
              return null;
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_96659 = [null, null, null, null, null];
              statearr_96659[0] = state_machine__6577__auto__;
              statearr_96659[1] = 1;
              return statearr_96659;
            };
            var state_machine__6577__auto____1 = function(state_96656) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_96656);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_96656) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_96656);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_96660 = f__6621__auto__.call(null);
        statearr_96660[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_96660;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
pubsub.r = function r(typ) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_96743) {
            var state_val_96744 = state_96743[1];
            if (state_val_96744 === 7) {
              var inst_96731 = pubsub.mtemp["typ"];
              var inst_96732 = inst_96731 === 0;
              var state_96743__$1 = state_96743;
              if (cljs.core.truth_(inst_96732)) {
                var statearr_96745_96763 = state_96743__$1;
                statearr_96745_96763[1] = 10;
              } else {
                var statearr_96746_96764 = state_96743__$1;
                statearr_96746_96764[1] = 11;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_96744 === 1) {
                var inst_96712 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve %s", typ);
                var inst_96715 = {"typ":0};
                var state_96743__$1 = function() {
                  var statearr_96747 = state_96743;
                  statearr_96747[5] = inst_96712;
                  return statearr_96747;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_96743__$1, 2, pubsub.statesCh, inst_96715);
              } else {
                if (state_val_96744 === 4) {
                  var inst_96741 = state_96743[2];
                  var state_96743__$1 = state_96743;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_96743__$1, inst_96741);
                } else {
                  if (state_val_96744 === 6) {
                    var state_96743__$1 = state_96743;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_96743__$1, 9, pubsub.statesCh, pubsub.m);
                  } else {
                    if (state_val_96744 === 3) {
                      var inst_96719 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve in loop");
                      var state_96743__$1 = function() {
                        var statearr_96748 = state_96743;
                        statearr_96748[6] = inst_96719;
                        return statearr_96748;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_96743__$1, 5, pubsub.sendReceiveCh);
                    } else {
                      if (state_val_96744 === 12) {
                        var inst_96737 = state_96743[2];
                        var state_96743__$1 = state_96743;
                        var statearr_96749_96765 = state_96743__$1;
                        statearr_96749_96765[2] = inst_96737;
                        statearr_96749_96765[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_96744 === 2) {
                          var inst_96717 = state_96743[2];
                          var state_96743__$1 = function() {
                            var statearr_96750 = state_96743;
                            statearr_96750[7] = inst_96717;
                            return statearr_96750;
                          }();
                          var statearr_96751_96766 = state_96743__$1;
                          statearr_96751_96766[2] = null;
                          statearr_96751_96766[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_96744 === 11) {
                            var state_96743__$1 = state_96743;
                            var statearr_96752_96767 = state_96743__$1;
                            statearr_96752_96767[2] = null;
                            statearr_96752_96767[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_96744 === 9) {
                              var inst_96728 = state_96743[2];
                              var inst_96729 = pubsub.mtemp["msg"];
                              var state_96743__$1 = function() {
                                var statearr_96753 = state_96743;
                                statearr_96753[8] = inst_96728;
                                return statearr_96753;
                              }();
                              var statearr_96754_96768 = state_96743__$1;
                              statearr_96754_96768[2] = inst_96729;
                              statearr_96754_96768[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_96744 === 5) {
                                var inst_96721 = state_96743[2];
                                var inst_96722 = pubsub.mtemp = inst_96721;
                                var inst_96723 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "now looking at ", pubsub.mtemp);
                                var inst_96724 = pubsub.mtemp["typ"];
                                var inst_96725 = inst_96724 === typ;
                                var state_96743__$1 = function() {
                                  var statearr_96755 = state_96743;
                                  statearr_96755[9] = inst_96722;
                                  statearr_96755[10] = inst_96723;
                                  return statearr_96755;
                                }();
                                if (cljs.core.truth_(inst_96725)) {
                                  var statearr_96756_96769 = state_96743__$1;
                                  statearr_96756_96769[1] = 6;
                                } else {
                                  var statearr_96757_96770 = state_96743__$1;
                                  statearr_96757_96770[1] = 7;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_96744 === 10) {
                                  var state_96743__$1 = state_96743;
                                  var statearr_96758_96771 = state_96743__$1;
                                  statearr_96758_96771[2] = 0;
                                  statearr_96758_96771[1] = 12;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_96744 === 8) {
                                    var inst_96739 = state_96743[2];
                                    var state_96743__$1 = state_96743;
                                    var statearr_96759_96772 = state_96743__$1;
                                    statearr_96759_96772[2] = inst_96739;
                                    statearr_96759_96772[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_96761 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_96761[0] = state_machine__6577__auto__;
              statearr_96761[1] = 1;
              return statearr_96761;
            };
            var state_machine__6577__auto____1 = function(state_96743) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_96743);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_96743) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_96743);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_96762 = f__6621__auto__.call(null);
        statearr_96762[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_96762;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
pubsub.check = function check(typ, v, ret) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_96924) {
            var state_val_96925 = state_96924[1];
            if (state_val_96925 === 7) {
              var inst_96886 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "found no val  ", pubsub.mtemp);
              var inst_96887 = pubsub.mtemp["typ"] = typ;
              var state_96924__$1 = function() {
                var statearr_96926 = state_96924;
                statearr_96926[5] = inst_96887;
                statearr_96926[6] = inst_96886;
                return statearr_96926;
              }();
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_96924__$1, 11, pubsub.statesCh, pubsub.mtemp);
            } else {
              if (state_val_96925 === 20) {
                var state_96924__$1 = state_96924;
                var statearr_96927_96959 = state_96924__$1;
                statearr_96927_96959[2] = null;
                statearr_96927_96959[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_96925 === 1) {
                  var inst_96868 = {"typ":typ, "msg":v};
                  var inst_96869 = pubsub.m = inst_96868;
                  var state_96924__$1 = function() {
                    var statearr_96928 = state_96924;
                    statearr_96928[7] = inst_96869;
                    return statearr_96928;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_96924__$1, 2, pubsub.statesCh);
                } else {
                  if (state_val_96925 === 24) {
                    var inst_96918 = state_96924[2];
                    var state_96924__$1 = state_96924;
                    var statearr_96929_96960 = state_96924__$1;
                    statearr_96929_96960[2] = inst_96918;
                    statearr_96929_96960[1] = 15;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_96925 === 4) {
                      var inst_96897 = pubsub.mtemp["typ"];
                      var inst_96898 = inst_96897 === 0;
                      var state_96924__$1 = state_96924;
                      if (cljs.core.truth_(inst_96898)) {
                        var statearr_96930_96961 = state_96924__$1;
                        statearr_96930_96961[1] = 13;
                      } else {
                        var statearr_96931_96962 = state_96924__$1;
                        statearr_96931_96962[1] = 14;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_96925 === 15) {
                        var inst_96920 = state_96924[2];
                        var state_96924__$1 = state_96924;
                        var statearr_96932_96963 = state_96924__$1;
                        statearr_96932_96963[2] = inst_96920;
                        statearr_96932_96963[1] = 5;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_96925 === 21) {
                          var inst_96909 = state_96924[2];
                          var state_96924__$1 = state_96924;
                          var statearr_96933_96964 = state_96924__$1;
                          statearr_96933_96964[2] = inst_96909;
                          statearr_96933_96964[1] = 18;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_96925 === 13) {
                            var state_96924__$1 = state_96924;
                            if (cljs.core.truth_(ret)) {
                              var statearr_96934_96965 = state_96924__$1;
                              statearr_96934_96965[1] = 16;
                            } else {
                              var statearr_96935_96966 = state_96924__$1;
                              statearr_96935_96966[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_96925 === 22) {
                              var inst_96906 = state_96924[2];
                              var state_96924__$1 = function() {
                                var statearr_96936 = state_96924;
                                statearr_96936[8] = inst_96906;
                                return statearr_96936;
                              }();
                              var statearr_96937_96967 = state_96924__$1;
                              statearr_96937_96967[2] = v;
                              statearr_96937_96967[1] = 21;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_96925 === 6) {
                                var inst_96878 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "found val  ", pubsub.mtemp);
                                var inst_96879 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "putting back   ", pubsub.m);
                                var state_96924__$1 = function() {
                                  var statearr_96938 = state_96924;
                                  statearr_96938[9] = inst_96879;
                                  statearr_96938[10] = inst_96878;
                                  return statearr_96938;
                                }();
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_96924__$1, 9, pubsub.statesCh, pubsub.m);
                              } else {
                                if (state_val_96925 === 17) {
                                  var state_96924__$1 = state_96924;
                                  if (cljs.core.truth_(v)) {
                                    var statearr_96939_96968 = state_96924__$1;
                                    statearr_96939_96968[1] = 19;
                                  } else {
                                    var statearr_96940_96969 = state_96924__$1;
                                    statearr_96940_96969[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_96925 === 3) {
                                    var state_96924__$1 = state_96924;
                                    if (cljs.core.truth_(v)) {
                                      var statearr_96941_96970 = state_96924__$1;
                                      statearr_96941_96970[1] = 6;
                                    } else {
                                      var statearr_96942_96971 = state_96924__$1;
                                      statearr_96942_96971[1] = 7;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_96925 === 12) {
                                      var inst_96893 = state_96924[2];
                                      var state_96924__$1 = state_96924;
                                      var statearr_96943_96972 = state_96924__$1;
                                      statearr_96943_96972[2] = inst_96893;
                                      statearr_96943_96972[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_96925 === 2) {
                                        var inst_96871 = state_96924[2];
                                        var inst_96872 = pubsub.mtemp = inst_96871;
                                        var inst_96873 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "checking  ", pubsub.mtemp);
                                        var inst_96874 = pubsub.mtemp["typ"];
                                        var inst_96875 = inst_96874 === typ;
                                        var state_96924__$1 = function() {
                                          var statearr_96944 = state_96924;
                                          statearr_96944[11] = inst_96872;
                                          statearr_96944[12] = inst_96873;
                                          return statearr_96944;
                                        }();
                                        if (cljs.core.truth_(inst_96875)) {
                                          var statearr_96945_96973 = state_96924__$1;
                                          statearr_96945_96973[1] = 3;
                                        } else {
                                          var statearr_96946_96974 = state_96924__$1;
                                          statearr_96946_96974[1] = 4;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_96925 === 23) {
                                          var inst_96914 = state_96924[2];
                                          var inst_96915 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "itteration  ", ret);
                                          var inst_96916 = check.call(null, typ, v, ret);
                                          var state_96924__$1 = function() {
                                            var statearr_96947 = state_96924;
                                            statearr_96947[13] = inst_96915;
                                            statearr_96947[14] = inst_96914;
                                            return statearr_96947;
                                          }();
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_96924__$1, 24, inst_96916);
                                        } else {
                                          if (state_val_96925 === 19) {
                                            var inst_96904 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "got nul val is ", v);
                                            var state_96924__$1 = function() {
                                              var statearr_96948 = state_96924;
                                              statearr_96948[15] = inst_96904;
                                              return statearr_96948;
                                            }();
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_96924__$1, 22, pubsub.statesCh, pubsub.m);
                                          } else {
                                            if (state_val_96925 === 11) {
                                              var inst_96889 = state_96924[2];
                                              var inst_96890 = pubsub.mtemp["msg"];
                                              var inst_96891 = check.call(null, typ, v, inst_96890);
                                              var state_96924__$1 = function() {
                                                var statearr_96949 = state_96924;
                                                statearr_96949[16] = inst_96889;
                                                return statearr_96949;
                                              }();
                                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_96924__$1, 12, inst_96891);
                                            } else {
                                              if (state_val_96925 === 9) {
                                                var inst_96881 = state_96924[2];
                                                var inst_96882 = check.call(null, typ, v, v);
                                                var state_96924__$1 = function() {
                                                  var statearr_96950 = state_96924;
                                                  statearr_96950[17] = inst_96881;
                                                  return statearr_96950;
                                                }();
                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_96924__$1, 10, inst_96882);
                                              } else {
                                                if (state_val_96925 === 5) {
                                                  var inst_96922 = state_96924[2];
                                                  var state_96924__$1 = state_96924;
                                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_96924__$1, inst_96922);
                                                } else {
                                                  if (state_val_96925 === 14) {
                                                    var state_96924__$1 = state_96924;
                                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_96924__$1, 23, pubsub.statesCh, pubsub.mtemp);
                                                  } else {
                                                    if (state_val_96925 === 16) {
                                                      var inst_96901 = logger.og.call(null, new cljs.core.Keyword(null, "swp", "swp", -1952100902), "ending ", v);
                                                      var state_96924__$1 = function() {
                                                        var statearr_96951 = state_96924;
                                                        statearr_96951[18] = inst_96901;
                                                        return statearr_96951;
                                                      }();
                                                      var statearr_96952_96975 = state_96924__$1;
                                                      statearr_96952_96975[2] = ret;
                                                      statearr_96952_96975[1] = 18;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_96925 === 10) {
                                                        var inst_96884 = state_96924[2];
                                                        var state_96924__$1 = state_96924;
                                                        var statearr_96953_96976 = state_96924__$1;
                                                        statearr_96953_96976[2] = inst_96884;
                                                        statearr_96953_96976[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_96925 === 18) {
                                                          var inst_96911 = state_96924[2];
                                                          var state_96924__$1 = state_96924;
                                                          var statearr_96954_96977 = state_96924__$1;
                                                          statearr_96954_96977[2] = inst_96911;
                                                          statearr_96954_96977[1] = 15;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_96925 === 8) {
                                                            var inst_96895 = state_96924[2];
                                                            var state_96924__$1 = state_96924;
                                                            var statearr_96955_96978 = state_96924__$1;
                                                            statearr_96955_96978[2] = inst_96895;
                                                            statearr_96955_96978[1] = 5;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            return null;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_96957 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_96957[0] = state_machine__6577__auto__;
              statearr_96957[1] = 1;
              return statearr_96957;
            };
            var state_machine__6577__auto____1 = function(state_96924) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_96924);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_96924) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_96924);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_96958 = f__6621__auto__.call(null);
        statearr_96958[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_96958;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
pubsub.swp = function swp(typ, v) {
  if (cljs.core.truth_(v)) {
    return pubsub.states[typ] = v;
  } else {
    return pubsub.states[typ];
  }
};
pubsub.rr = function() {
  var rr__delegate = function(typ) {
    var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
      return function() {
        var f__6621__auto__ = function() {
          var switch__6576__auto__ = function(c__6620__auto__) {
            return function(state_97123) {
              var state_val_97124 = state_97123[1];
              if (state_val_97124 === 7) {
                var inst_97085 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "now looking at ", pubsub.mtemp);
                var inst_97086 = 0;
                var state_97123__$1 = function() {
                  var statearr_97125 = state_97123;
                  statearr_97125[5] = inst_97086;
                  statearr_97125[6] = inst_97085;
                  return statearr_97125;
                }();
                var statearr_97126_97153 = state_97123__$1;
                statearr_97126_97153[2] = null;
                statearr_97126_97153[1] = 9;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_97124 === 1) {
                  var inst_97066 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve ", typ);
                  var inst_97067 = cljs.core.count.call(null, typ);
                  var inst_97068 = inst_97067 / 2;
                  var inst_97069 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve ", inst_97068);
                  var inst_97072 = {"typ":0};
                  var state_97123__$1 = function() {
                    var statearr_97127 = state_97123;
                    statearr_97127[7] = inst_97069;
                    statearr_97127[8] = inst_97066;
                    return statearr_97127;
                  }();
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_97123__$1, 2, pubsub.sendReceiveCh, inst_97072);
                } else {
                  if (state_val_97124 === 4) {
                    var inst_97121 = state_97123[2];
                    var state_97123__$1 = state_97123;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_97123__$1, inst_97121);
                  } else {
                    if (state_val_97124 === 15) {
                      var inst_97086 = state_97123[5];
                      var inst_97108 = inst_97086 + 2;
                      var inst_97086__$1 = inst_97108;
                      var state_97123__$1 = function() {
                        var statearr_97128 = state_97123;
                        statearr_97128[5] = inst_97086__$1;
                        return statearr_97128;
                      }();
                      var statearr_97129_97154 = state_97123__$1;
                      statearr_97129_97154[2] = null;
                      statearr_97129_97154[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_97124 === 13) {
                        var inst_97114 = state_97123[2];
                        var state_97123__$1 = state_97123;
                        var statearr_97130_97155 = state_97123__$1;
                        statearr_97130_97155[2] = inst_97114;
                        statearr_97130_97155[1] = 10;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_97124 === 6) {
                          var inst_97083 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "got null");
                          var state_97123__$1 = function() {
                            var statearr_97131 = state_97123;
                            statearr_97131[9] = inst_97083;
                            return statearr_97131;
                          }();
                          var statearr_97132_97156 = state_97123__$1;
                          statearr_97132_97156[2] = 0;
                          statearr_97132_97156[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_97124 === 17) {
                            var inst_97106 = state_97123[2];
                            var state_97123__$1 = state_97123;
                            var statearr_97133_97157 = state_97123__$1;
                            statearr_97133_97157[2] = inst_97106;
                            statearr_97133_97157[1] = 16;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_97124 === 3) {
                              var inst_97076 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve in loop");
                              var state_97123__$1 = function() {
                                var statearr_97134 = state_97123;
                                statearr_97134[10] = inst_97076;
                                return statearr_97134;
                              }();
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_97123__$1, 5, pubsub.sendReceiveCh);
                            } else {
                              if (state_val_97124 === 12) {
                                var state_97123__$1 = state_97123;
                                var statearr_97135_97158 = state_97123__$1;
                                statearr_97135_97158[2] = null;
                                statearr_97135_97158[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_97124 === 2) {
                                  var inst_97074 = state_97123[2];
                                  var state_97123__$1 = function() {
                                    var statearr_97136 = state_97123;
                                    statearr_97136[11] = inst_97074;
                                    return statearr_97136;
                                  }();
                                  var statearr_97137_97159 = state_97123__$1;
                                  statearr_97137_97159[2] = null;
                                  statearr_97137_97159[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_97124 === 11) {
                                    var inst_97086 = state_97123[5];
                                    var inst_97091 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "checking ", inst_97086);
                                    var inst_97092 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "got ", pubsub.mtemp);
                                    var inst_97093 = cljs.core.nth.call(null, typ, inst_97086);
                                    var inst_97094 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "looking for ", inst_97093);
                                    var inst_97095 = pubsub.mtemp["typ"];
                                    var inst_97096 = cljs.core.nth.call(null, typ, inst_97086);
                                    var inst_97097 = inst_97095 === inst_97096;
                                    var state_97123__$1 = function() {
                                      var statearr_97138 = state_97123;
                                      statearr_97138[12] = inst_97094;
                                      statearr_97138[13] = inst_97092;
                                      statearr_97138[14] = inst_97091;
                                      return statearr_97138;
                                    }();
                                    if (cljs.core.truth_(inst_97097)) {
                                      var statearr_97139_97160 = state_97123__$1;
                                      statearr_97139_97160[1] = 14;
                                    } else {
                                      var statearr_97140_97161 = state_97123__$1;
                                      statearr_97140_97161[1] = 15;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_97124 === 9) {
                                      var inst_97086 = state_97123[5];
                                      var inst_97088 = cljs.core.count.call(null, typ);
                                      var inst_97089 = inst_97086 < inst_97088;
                                      var state_97123__$1 = state_97123;
                                      if (cljs.core.truth_(inst_97089)) {
                                        var statearr_97141_97162 = state_97123__$1;
                                        statearr_97141_97162[1] = 11;
                                      } else {
                                        var statearr_97142_97163 = state_97123__$1;
                                        statearr_97142_97163[1] = 12;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_97124 === 5) {
                                        var inst_97078 = state_97123[2];
                                        var inst_97079 = pubsub.mtemp = inst_97078;
                                        var inst_97080 = pubsub.mtemp["typ"];
                                        var inst_97081 = inst_97080 === 0;
                                        var state_97123__$1 = function() {
                                          var statearr_97143 = state_97123;
                                          statearr_97143[15] = inst_97079;
                                          return statearr_97143;
                                        }();
                                        if (cljs.core.truth_(inst_97081)) {
                                          var statearr_97144_97164 = state_97123__$1;
                                          statearr_97144_97164[1] = 6;
                                        } else {
                                          var statearr_97145_97165 = state_97123__$1;
                                          statearr_97145_97165[1] = 7;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_97124 === 14) {
                                          var inst_97086 = state_97123[5];
                                          var inst_97099 = cljs.core.nth.call(null, typ, inst_97086);
                                          var inst_97100 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "found ", inst_97099);
                                          var inst_97101 = inst_97086 + 1;
                                          var inst_97102 = cljs.core.nth.call(null, typ, inst_97101);
                                          var inst_97103 = pubsub.mtemp["msg"];
                                          var inst_97104 = inst_97102.call(null, inst_97103);
                                          var state_97123__$1 = function() {
                                            var statearr_97146 = state_97123;
                                            statearr_97146[16] = inst_97100;
                                            return statearr_97146;
                                          }();
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_97123__$1, 17, inst_97104);
                                        } else {
                                          if (state_val_97124 === 16) {
                                            var inst_97111 = state_97123[2];
                                            var state_97123__$1 = state_97123;
                                            var statearr_97147_97166 = state_97123__$1;
                                            statearr_97147_97166[2] = inst_97111;
                                            statearr_97147_97166[1] = 13;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_97124 === 10) {
                                              var inst_97116 = state_97123[2];
                                              var inst_97117 = pubsub.result = inst_97116;
                                              var state_97123__$1 = state_97123;
                                              var statearr_97148_97167 = state_97123__$1;
                                              statearr_97148_97167[2] = inst_97117;
                                              statearr_97148_97167[1] = 8;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_97124 === 8) {
                                                var inst_97119 = state_97123[2];
                                                var state_97123__$1 = state_97123;
                                                var statearr_97149_97168 = state_97123__$1;
                                                statearr_97149_97168[2] = inst_97119;
                                                statearr_97149_97168[1] = 4;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6620__auto__);
          return function(switch__6576__auto__, c__6620__auto__) {
            return function() {
              var state_machine__6577__auto__ = null;
              var state_machine__6577__auto____0 = function() {
                var statearr_97151 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_97151[0] = state_machine__6577__auto__;
                statearr_97151[1] = 1;
                return statearr_97151;
              };
              var state_machine__6577__auto____1 = function(state_97123) {
                while (true) {
                  var result__6578__auto__ = switch__6576__auto__.call(null, state_97123);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6578__auto__;
                  }
                  break;
                }
              };
              state_machine__6577__auto__ = function(state_97123) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6577__auto____0.call(this);
                  case 1:
                    return state_machine__6577__auto____1.call(this, state_97123);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
              state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
              return state_machine__6577__auto__;
            }();
          }(switch__6576__auto__, c__6620__auto__);
        }();
        var state__6622__auto__ = function() {
          var statearr_97152 = f__6621__auto__.call(null);
          statearr_97152[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
          return statearr_97152;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
      };
    }(c__6620__auto__));
    return c__6620__auto__;
  };
  var rr = function(var_args) {
    var typ = null;
    if (arguments.length > 0) {
      var G__97169__i = 0, G__97169__a = new Array(arguments.length - 0);
      while (G__97169__i < G__97169__a.length) {
        G__97169__a[G__97169__i] = arguments[G__97169__i + 0];
        ++G__97169__i;
      }
      typ = new cljs.core.IndexedSeq(G__97169__a, 0);
    }
    return rr__delegate.call(this, typ);
  };
  rr.cljs$lang$maxFixedArity = 0;
  rr.cljs$lang$applyTo = function(arglist__97170) {
    var typ = cljs.core.seq(arglist__97170);
    return rr__delegate(typ);
  };
  rr.cljs$core$IFn$_invoke$arity$variadic = rr__delegate;
  return rr;
}();
pubsub.rrs = function() {
  var rrs__delegate = function(typ) {
    var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
      return function() {
        var f__6621__auto__ = function() {
          var switch__6576__auto__ = function(c__6620__auto__) {
            return function(state_97311) {
              var state_val_97312 = state_97311[1];
              if (state_val_97312 === 7) {
                var inst_97306 = state_97311[2];
                var state_97311__$1 = function() {
                  var statearr_97313 = state_97311;
                  statearr_97313[5] = inst_97306;
                  return statearr_97313;
                }();
                var statearr_97314_97341 = state_97311__$1;
                statearr_97314_97341[2] = null;
                statearr_97314_97341[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_97312 === 1) {
                  var inst_97256 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve ", typ);
                  var inst_97257 = cljs.core.count.call(null, typ);
                  var inst_97258 = inst_97257 / 2;
                  var inst_97259 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve ", inst_97258);
                  var state_97311__$1 = function() {
                    var statearr_97315 = state_97311;
                    statearr_97315[6] = inst_97256;
                    statearr_97315[7] = inst_97259;
                    return statearr_97315;
                  }();
                  var statearr_97316_97342 = state_97311__$1;
                  statearr_97316_97342[2] = null;
                  statearr_97316_97342[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_97312 === 4) {
                    var inst_97263 = state_97311[2];
                    var inst_97264 = pubsub.mtemp = inst_97263;
                    var inst_97265 = pubsub.mtemp["typ"];
                    var inst_97266 = inst_97265 === 0;
                    var state_97311__$1 = function() {
                      var statearr_97317 = state_97311;
                      statearr_97317[8] = inst_97264;
                      return statearr_97317;
                    }();
                    if (cljs.core.truth_(inst_97266)) {
                      var statearr_97318_97343 = state_97311__$1;
                      statearr_97318_97343[1] = 5;
                    } else {
                      var statearr_97319_97344 = state_97311__$1;
                      statearr_97319_97344[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_97312 === 15) {
                      var inst_97298 = state_97311[2];
                      var state_97311__$1 = state_97311;
                      var statearr_97320_97345 = state_97311__$1;
                      statearr_97320_97345[2] = inst_97298;
                      statearr_97320_97345[1] = 12;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_97312 === 13) {
                        var inst_97271 = state_97311[9];
                        var inst_97284 = cljs.core.nth.call(null, typ, inst_97271);
                        var inst_97285 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "found ", inst_97284);
                        var inst_97286 = inst_97271 + 1;
                        var inst_97287 = cljs.core.nth.call(null, typ, inst_97286);
                        var inst_97288 = pubsub.mtemp["msg"];
                        var inst_97289 = inst_97287.call(null, inst_97288);
                        var inst_97290 = pubsub.ret = inst_97289;
                        var inst_97291 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "return ", pubsub.ret);
                        var state_97311__$1 = function() {
                          var statearr_97321 = state_97311;
                          statearr_97321[10] = inst_97290;
                          statearr_97321[11] = inst_97285;
                          statearr_97321[12] = inst_97291;
                          return statearr_97321;
                        }();
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_97311__$1, 16, pubsub.receiveCH, pubsub.ret);
                      } else {
                        if (state_val_97312 === 6) {
                          var inst_97270 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "now looking at ", pubsub.mtemp);
                          var inst_97271 = 0;
                          var state_97311__$1 = function() {
                            var statearr_97322 = state_97311;
                            statearr_97322[9] = inst_97271;
                            statearr_97322[13] = inst_97270;
                            return statearr_97322;
                          }();
                          var statearr_97323_97346 = state_97311__$1;
                          statearr_97323_97346[2] = null;
                          statearr_97323_97346[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_97312 === 3) {
                            var inst_97309 = state_97311[2];
                            var state_97311__$1 = state_97311;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_97311__$1, inst_97309);
                          } else {
                            if (state_val_97312 === 12) {
                              var inst_97301 = state_97311[2];
                              var state_97311__$1 = state_97311;
                              var statearr_97324_97347 = state_97311__$1;
                              statearr_97324_97347[2] = inst_97301;
                              statearr_97324_97347[1] = 9;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_97312 === 2) {
                                var inst_97261 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve in loop");
                                var state_97311__$1 = function() {
                                  var statearr_97325 = state_97311;
                                  statearr_97325[14] = inst_97261;
                                  return statearr_97325;
                                }();
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_97311__$1, 4, pubsub.sendReceiveCh);
                              } else {
                                if (state_val_97312 === 11) {
                                  var state_97311__$1 = state_97311;
                                  var statearr_97326_97348 = state_97311__$1;
                                  statearr_97326_97348[2] = null;
                                  statearr_97326_97348[1] = 12;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_97312 === 9) {
                                    var inst_97303 = state_97311[2];
                                    var inst_97304 = pubsub.result = inst_97303;
                                    var state_97311__$1 = state_97311;
                                    var statearr_97327_97349 = state_97311__$1;
                                    statearr_97327_97349[2] = inst_97304;
                                    statearr_97327_97349[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_97312 === 5) {
                                      var inst_97268 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "got null");
                                      var state_97311__$1 = function() {
                                        var statearr_97328 = state_97311;
                                        statearr_97328[15] = inst_97268;
                                        return statearr_97328;
                                      }();
                                      var statearr_97329_97350 = state_97311__$1;
                                      statearr_97329_97350[2] = 0;
                                      statearr_97329_97350[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_97312 === 14) {
                                        var inst_97271 = state_97311[9];
                                        var inst_97295 = inst_97271 + 2;
                                        var inst_97271__$1 = inst_97295;
                                        var state_97311__$1 = function() {
                                          var statearr_97330 = state_97311;
                                          statearr_97330[9] = inst_97271__$1;
                                          return statearr_97330;
                                        }();
                                        var statearr_97331_97351 = state_97311__$1;
                                        statearr_97331_97351[2] = null;
                                        statearr_97331_97351[1] = 8;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_97312 === 16) {
                                          var inst_97293 = state_97311[2];
                                          var state_97311__$1 = state_97311;
                                          var statearr_97332_97352 = state_97311__$1;
                                          statearr_97332_97352[2] = inst_97293;
                                          statearr_97332_97352[1] = 15;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_97312 === 10) {
                                            var inst_97271 = state_97311[9];
                                            var inst_97276 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "checking ", inst_97271);
                                            var inst_97277 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "got ", pubsub.mtemp);
                                            var inst_97278 = cljs.core.nth.call(null, typ, inst_97271);
                                            var inst_97279 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "looking for ", inst_97278);
                                            var inst_97280 = pubsub.mtemp["typ"];
                                            var inst_97281 = cljs.core.nth.call(null, typ, inst_97271);
                                            var inst_97282 = inst_97280 === inst_97281;
                                            var state_97311__$1 = function() {
                                              var statearr_97333 = state_97311;
                                              statearr_97333[16] = inst_97279;
                                              statearr_97333[17] = inst_97276;
                                              statearr_97333[18] = inst_97277;
                                              return statearr_97333;
                                            }();
                                            if (cljs.core.truth_(inst_97282)) {
                                              var statearr_97334_97353 = state_97311__$1;
                                              statearr_97334_97353[1] = 13;
                                            } else {
                                              var statearr_97335_97354 = state_97311__$1;
                                              statearr_97335_97354[1] = 14;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_97312 === 8) {
                                              var inst_97271 = state_97311[9];
                                              var inst_97273 = cljs.core.count.call(null, typ);
                                              var inst_97274 = inst_97271 < inst_97273;
                                              var state_97311__$1 = state_97311;
                                              if (cljs.core.truth_(inst_97274)) {
                                                var statearr_97336_97355 = state_97311__$1;
                                                statearr_97336_97355[1] = 10;
                                              } else {
                                                var statearr_97337_97356 = state_97311__$1;
                                                statearr_97337_97356[1] = 11;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6620__auto__);
          return function(switch__6576__auto__, c__6620__auto__) {
            return function() {
              var state_machine__6577__auto__ = null;
              var state_machine__6577__auto____0 = function() {
                var statearr_97339 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_97339[0] = state_machine__6577__auto__;
                statearr_97339[1] = 1;
                return statearr_97339;
              };
              var state_machine__6577__auto____1 = function(state_97311) {
                while (true) {
                  var result__6578__auto__ = switch__6576__auto__.call(null, state_97311);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6578__auto__;
                  }
                  break;
                }
              };
              state_machine__6577__auto__ = function(state_97311) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6577__auto____0.call(this);
                  case 1:
                    return state_machine__6577__auto____1.call(this, state_97311);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
              state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
              return state_machine__6577__auto__;
            }();
          }(switch__6576__auto__, c__6620__auto__);
        }();
        var state__6622__auto__ = function() {
          var statearr_97340 = f__6621__auto__.call(null);
          statearr_97340[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
          return statearr_97340;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
      };
    }(c__6620__auto__));
    return c__6620__auto__;
  };
  var rrs = function(var_args) {
    var typ = null;
    if (arguments.length > 0) {
      var G__97357__i = 0, G__97357__a = new Array(arguments.length - 0);
      while (G__97357__i < G__97357__a.length) {
        G__97357__a[G__97357__i] = arguments[G__97357__i + 0];
        ++G__97357__i;
      }
      typ = new cljs.core.IndexedSeq(G__97357__a, 0);
    }
    return rrs__delegate.call(this, typ);
  };
  rrs.cljs$lang$maxFixedArity = 0;
  rrs.cljs$lang$applyTo = function(arglist__97358) {
    var typ = cljs.core.seq(arglist__97358);
    return rrs__delegate(typ);
  };
  rrs.cljs$core$IFn$_invoke$arity$variadic = rrs__delegate;
  return rrs;
}();
pubsub.rrsa = function() {
  var rrsa__delegate = function(rch, sch, typ) {
    var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
      return function() {
        var f__6621__auto__ = function() {
          var switch__6576__auto__ = function(c__6620__auto__) {
            return function(state_97510) {
              var state_val_97511 = state_97510[1];
              if (state_val_97511 === 7) {
                var inst_97505 = state_97510[2];
                var state_97510__$1 = function() {
                  var statearr_97512 = state_97510;
                  statearr_97512[5] = inst_97505;
                  return statearr_97512;
                }();
                var statearr_97513_97541 = state_97510__$1;
                statearr_97513_97541[2] = null;
                statearr_97513_97541[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_97511 === 1) {
                  var inst_97450 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve ", typ);
                  var inst_97451 = cljs.core.count.call(null, typ);
                  var inst_97452 = inst_97451 / 2;
                  var inst_97453 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve ", inst_97452);
                  var state_97510__$1 = function() {
                    var statearr_97514 = state_97510;
                    statearr_97514[6] = inst_97450;
                    statearr_97514[7] = inst_97453;
                    return statearr_97514;
                  }();
                  var statearr_97515_97542 = state_97510__$1;
                  statearr_97515_97542[2] = null;
                  statearr_97515_97542[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_97511 === 4) {
                    var inst_97457 = state_97510[2];
                    var inst_97458 = pubsub.mtemp = inst_97457;
                    var inst_97459 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve in loop", pubsub.mtemp);
                    var inst_97460 = pubsub.mtemp["typ"];
                    var inst_97461 = inst_97460 === 0;
                    var state_97510__$1 = function() {
                      var statearr_97516 = state_97510;
                      statearr_97516[8] = inst_97458;
                      statearr_97516[9] = inst_97459;
                      return statearr_97516;
                    }();
                    if (cljs.core.truth_(inst_97461)) {
                      var statearr_97517_97543 = state_97510__$1;
                      statearr_97517_97543[1] = 5;
                    } else {
                      var statearr_97518_97544 = state_97510__$1;
                      statearr_97518_97544[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_97511 === 15) {
                      var inst_97497 = state_97510[2];
                      var state_97510__$1 = state_97510;
                      var statearr_97519_97545 = state_97510__$1;
                      statearr_97519_97545[2] = inst_97497;
                      statearr_97519_97545[1] = 12;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_97511 === 13) {
                        var inst_97466 = state_97510[10];
                        var inst_97479 = cljs.core.nth.call(null, typ, inst_97466);
                        var inst_97480 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "found ", inst_97479);
                        var inst_97481 = pubsub.mtemp["msg"];
                        var inst_97482 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "args ", inst_97481);
                        var inst_97483 = inst_97466 + 1;
                        var inst_97484 = cljs.core.nth.call(null, typ, inst_97483);
                        var inst_97485 = pubsub.mtemp["msg"];
                        var inst_97486 = cljs.core.apply.call(null, inst_97484, inst_97485);
                        var state_97510__$1 = function() {
                          var statearr_97520 = state_97510;
                          statearr_97520[11] = inst_97482;
                          statearr_97520[12] = inst_97480;
                          return statearr_97520;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_97510__$1, 16, inst_97486);
                      } else {
                        if (state_val_97511 === 6) {
                          var inst_97465 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "now looking at ", pubsub.mtemp);
                          var inst_97466 = 0;
                          var state_97510__$1 = function() {
                            var statearr_97521 = state_97510;
                            statearr_97521[10] = inst_97466;
                            statearr_97521[13] = inst_97465;
                            return statearr_97521;
                          }();
                          var statearr_97522_97546 = state_97510__$1;
                          statearr_97522_97546[2] = null;
                          statearr_97522_97546[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_97511 === 17) {
                            var inst_97492 = state_97510[2];
                            var state_97510__$1 = state_97510;
                            var statearr_97523_97547 = state_97510__$1;
                            statearr_97523_97547[2] = inst_97492;
                            statearr_97523_97547[1] = 15;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_97511 === 3) {
                              var inst_97508 = state_97510[2];
                              var state_97510__$1 = state_97510;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_97510__$1, inst_97508);
                            } else {
                              if (state_val_97511 === 12) {
                                var inst_97500 = state_97510[2];
                                var state_97510__$1 = state_97510;
                                var statearr_97524_97548 = state_97510__$1;
                                statearr_97524_97548[2] = inst_97500;
                                statearr_97524_97548[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_97511 === 2) {
                                  var inst_97455 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "about to recieve in loop");
                                  var state_97510__$1 = function() {
                                    var statearr_97525 = state_97510;
                                    statearr_97525[14] = inst_97455;
                                    return statearr_97525;
                                  }();
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_97510__$1, 4, sch);
                                } else {
                                  if (state_val_97511 === 11) {
                                    var state_97510__$1 = state_97510;
                                    var statearr_97526_97549 = state_97510__$1;
                                    statearr_97526_97549[2] = null;
                                    statearr_97526_97549[1] = 12;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_97511 === 9) {
                                      var inst_97502 = state_97510[2];
                                      var inst_97503 = pubsub.result = inst_97502;
                                      var state_97510__$1 = state_97510;
                                      var statearr_97527_97550 = state_97510__$1;
                                      statearr_97527_97550[2] = inst_97503;
                                      statearr_97527_97550[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_97511 === 5) {
                                        var inst_97463 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "got null");
                                        var state_97510__$1 = function() {
                                          var statearr_97528 = state_97510;
                                          statearr_97528[15] = inst_97463;
                                          return statearr_97528;
                                        }();
                                        var statearr_97529_97551 = state_97510__$1;
                                        statearr_97529_97551[2] = 0;
                                        statearr_97529_97551[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_97511 === 14) {
                                          var inst_97466 = state_97510[10];
                                          var inst_97494 = inst_97466 + 2;
                                          var inst_97466__$1 = inst_97494;
                                          var state_97510__$1 = function() {
                                            var statearr_97530 = state_97510;
                                            statearr_97530[10] = inst_97466__$1;
                                            return statearr_97530;
                                          }();
                                          var statearr_97531_97552 = state_97510__$1;
                                          statearr_97531_97552[2] = null;
                                          statearr_97531_97552[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_97511 === 16) {
                                            var inst_97488 = state_97510[2];
                                            var inst_97489 = pubsub.ret = inst_97488;
                                            var inst_97490 = logger.og.call(null, new cljs.core.Keyword(null, "receive1", "receive1", -1698206131), "return ", pubsub.ret);
                                            var state_97510__$1 = function() {
                                              var statearr_97532 = state_97510;
                                              statearr_97532[16] = inst_97490;
                                              statearr_97532[17] = inst_97489;
                                              return statearr_97532;
                                            }();
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_97510__$1, 17, rch, pubsub.ret);
                                          } else {
                                            if (state_val_97511 === 10) {
                                              var inst_97466 = state_97510[10];
                                              var inst_97471 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "checking ", inst_97466);
                                              var inst_97472 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "got ", pubsub.mtemp);
                                              var inst_97473 = cljs.core.nth.call(null, typ, inst_97466);
                                              var inst_97474 = logger.og.call(null, new cljs.core.Keyword(null, "receive", "receive", 1830053389), "looking for ", inst_97473);
                                              var inst_97475 = pubsub.mtemp["typ"];
                                              var inst_97476 = cljs.core.nth.call(null, typ, inst_97466);
                                              var inst_97477 = inst_97475 === inst_97476;
                                              var state_97510__$1 = function() {
                                                var statearr_97533 = state_97510;
                                                statearr_97533[18] = inst_97474;
                                                statearr_97533[19] = inst_97472;
                                                statearr_97533[20] = inst_97471;
                                                return statearr_97533;
                                              }();
                                              if (cljs.core.truth_(inst_97477)) {
                                                var statearr_97534_97553 = state_97510__$1;
                                                statearr_97534_97553[1] = 13;
                                              } else {
                                                var statearr_97535_97554 = state_97510__$1;
                                                statearr_97535_97554[1] = 14;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_97511 === 8) {
                                                var inst_97466 = state_97510[10];
                                                var inst_97468 = cljs.core.count.call(null, typ);
                                                var inst_97469 = inst_97466 < inst_97468;
                                                var state_97510__$1 = state_97510;
                                                if (cljs.core.truth_(inst_97469)) {
                                                  var statearr_97536_97555 = state_97510__$1;
                                                  statearr_97536_97555[1] = 10;
                                                } else {
                                                  var statearr_97537_97556 = state_97510__$1;
                                                  statearr_97537_97556[1] = 11;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                return null;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6620__auto__);
          return function(switch__6576__auto__, c__6620__auto__) {
            return function() {
              var state_machine__6577__auto__ = null;
              var state_machine__6577__auto____0 = function() {
                var statearr_97539 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_97539[0] = state_machine__6577__auto__;
                statearr_97539[1] = 1;
                return statearr_97539;
              };
              var state_machine__6577__auto____1 = function(state_97510) {
                while (true) {
                  var result__6578__auto__ = switch__6576__auto__.call(null, state_97510);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6578__auto__;
                  }
                  break;
                }
              };
              state_machine__6577__auto__ = function(state_97510) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6577__auto____0.call(this);
                  case 1:
                    return state_machine__6577__auto____1.call(this, state_97510);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
              state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
              return state_machine__6577__auto__;
            }();
          }(switch__6576__auto__, c__6620__auto__);
        }();
        var state__6622__auto__ = function() {
          var statearr_97540 = f__6621__auto__.call(null);
          statearr_97540[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
          return statearr_97540;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
      };
    }(c__6620__auto__));
    return c__6620__auto__;
  };
  var rrsa = function(rch, sch, var_args) {
    var typ = null;
    if (arguments.length > 2) {
      var G__97557__i = 0, G__97557__a = new Array(arguments.length - 2);
      while (G__97557__i < G__97557__a.length) {
        G__97557__a[G__97557__i] = arguments[G__97557__i + 2];
        ++G__97557__i;
      }
      typ = new cljs.core.IndexedSeq(G__97557__a, 0);
    }
    return rrsa__delegate.call(this, rch, sch, typ);
  };
  rrsa.cljs$lang$maxFixedArity = 2;
  rrsa.cljs$lang$applyTo = function(arglist__97558) {
    var rch = cljs.core.first(arglist__97558);
    arglist__97558 = cljs.core.next(arglist__97558);
    var sch = cljs.core.first(arglist__97558);
    var typ = cljs.core.rest(arglist__97558);
    return rrsa__delegate(rch, sch, typ);
  };
  rrsa.cljs$core$IFn$_invoke$arity$variadic = rrsa__delegate;
  return rrsa;
}();
pubsub.s = function s(typ, m) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_97575) {
            var state_val_97576 = state_97575[1];
            if (state_val_97576 === 2) {
              var inst_97573 = state_97575[2];
              var state_97575__$1 = state_97575;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_97575__$1, inst_97573);
            } else {
              if (state_val_97576 === 1) {
                var inst_97570 = logger.og.call(null, new cljs.core.Keyword(null, "send", "send", -652151114), typ, m);
                var inst_97571 = pubsub.makeMsg.call(null, typ, m);
                var state_97575__$1 = function() {
                  var statearr_97577 = state_97575;
                  statearr_97577[5] = inst_97570;
                  return statearr_97577;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_97575__$1, 2, pubsub.sendReceiveCh, inst_97571);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_97579 = [null, null, null, null, null, null];
              statearr_97579[0] = state_machine__6577__auto__;
              statearr_97579[1] = 1;
              return statearr_97579;
            };
            var state_machine__6577__auto____1 = function(state_97575) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_97575);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_97575) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_97575);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_97580 = f__6621__auto__.call(null);
        statearr_97580[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_97580;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
pubsub.si = function si(typ, m) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_97611) {
            var state_val_97612 = state_97611[1];
            if (state_val_97612 === 3) {
              var inst_97607 = state_97611[2];
              var inst_97608 = pubsub.n = inst_97607;
              var inst_97609 = logger.og.call(null, new cljs.core.Keyword(null, "send", "send", -652151114), "recieved", pubsub.n);
              var state_97611__$1 = function() {
                var statearr_97613 = state_97611;
                statearr_97613[5] = inst_97608;
                return statearr_97613;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_97611__$1, inst_97609);
            } else {
              if (state_val_97612 === 2) {
                var inst_97605 = state_97611[2];
                var state_97611__$1 = function() {
                  var statearr_97614 = state_97611;
                  statearr_97614[6] = inst_97605;
                  return statearr_97614;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_97611__$1, 3, pubsub.pchannel);
              } else {
                if (state_val_97612 === 1) {
                  var inst_97600 = logger.og.call(null, new cljs.core.Keyword(null, "send", "send", -652151114), typ, m);
                  var inst_97601 = cljs.core.async.chan.call(null);
                  var inst_97602 = pubsub.pchannel = inst_97601;
                  var inst_97603 = pubsub.makeMsg.call(null, typ, m, pubsub.pchannel);
                  var state_97611__$1 = function() {
                    var statearr_97615 = state_97611;
                    statearr_97615[7] = inst_97600;
                    statearr_97615[8] = inst_97602;
                    return statearr_97615;
                  }();
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_97611__$1, 2, pubsub.sendReceiveCh, inst_97603);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_97617 = [null, null, null, null, null, null, null, null, null];
              statearr_97617[0] = state_machine__6577__auto__;
              statearr_97617[1] = 1;
              return statearr_97617;
            };
            var state_machine__6577__auto____1 = function(state_97611) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_97611);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_97611) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_97611);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_97618 = f__6621__auto__.call(null);
        statearr_97618[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_97618;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
pubsub.order = [];
pubsub.sia = function() {
  var sia__delegate = function(typ, m) {
    var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
      return function() {
        var f__6621__auto__ = function() {
          var switch__6576__auto__ = function(c__6620__auto__) {
            return function(state_97686) {
              var state_val_97687 = state_97686[1];
              if (state_val_97687 === 7) {
                var inst_97681 = state_97686[2];
                var inst_97682 = logger.og.call(null, new cljs.core.Keyword(null, "send", "send", -652151114), "done routing2", inst_97681);
                var state_97686__$1 = state_97686;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_97686__$1, 6, inst_97682);
              } else {
                if (state_val_97687 === 6) {
                  var inst_97684 = state_97686[2];
                  var state_97686__$1 = state_97686;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_97686__$1, inst_97684);
                } else {
                  if (state_val_97687 === 5) {
                    var inst_97673 = state_97686[2];
                    var inst_97674 = {"typ":typ, "msg":inst_97673};
                    var state_97686__$1 = state_97686;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_97686__$1, 2, pubsub.sch, inst_97674);
                  } else {
                    if (state_val_97687 === 4) {
                      var inst_97671 = cljs.core.PersistentVector.EMPTY;
                      var state_97686__$1 = state_97686;
                      var statearr_97688_97697 = state_97686__$1;
                      statearr_97688_97697[2] = inst_97671;
                      statearr_97688_97697[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_97687 === 3) {
                        var inst_97667 = cljs.core.PersistentVector.EMPTY;
                        var inst_97668 = m.arr;
                        var inst_97669 = cljs.core.into.call(null, inst_97667, inst_97668);
                        var state_97686__$1 = state_97686;
                        var statearr_97689_97698 = state_97686__$1;
                        statearr_97689_97698[2] = inst_97669;
                        statearr_97689_97698[1] = 5;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_97687 === 2) {
                          var inst_97676 = state_97686[2];
                          var inst_97677 = logger.og.call(null, new cljs.core.Keyword(null, "send", "send", -652151114), "about to route");
                          var inst_97678 = routing.routea.call(null, pubsub.pchannel, pubsub.sch);
                          var inst_97679 = logger.og.call(null, new cljs.core.Keyword(null, "send", "send", -652151114), "done routing", pubsub.order);
                          var state_97686__$1 = function() {
                            var statearr_97690 = state_97686;
                            statearr_97690[5] = inst_97676;
                            statearr_97690[6] = inst_97679;
                            statearr_97690[7] = inst_97677;
                            statearr_97690[8] = inst_97678;
                            return statearr_97690;
                          }();
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_97686__$1, 7, pubsub.pchannel);
                        } else {
                          if (state_val_97687 === 1) {
                            var inst_97658 = logger.og.call(null, new cljs.core.Keyword(null, "invoke", "invoke", 1145927159), typ, m);
                            var inst_97659 = cljs.core.async.chan.call(null, 1);
                            var inst_97660 = pubsub.pchannel = inst_97659;
                            var inst_97661 = cljs.core.async.chan.call(null, 1);
                            var inst_97662 = pubsub.sch = inst_97661;
                            var inst_97663 = pubsub.pchannel["typ"] = typ;
                            var state_97686__$1 = function() {
                              var statearr_97691 = state_97686;
                              statearr_97691[9] = inst_97662;
                              statearr_97691[10] = inst_97660;
                              statearr_97691[11] = inst_97663;
                              statearr_97691[12] = inst_97658;
                              return statearr_97691;
                            }();
                            if (cljs.core.truth_(m)) {
                              var statearr_97692_97699 = state_97686__$1;
                              statearr_97692_97699[1] = 3;
                            } else {
                              var statearr_97693_97700 = state_97686__$1;
                              statearr_97693_97700[1] = 4;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6620__auto__);
          return function(switch__6576__auto__, c__6620__auto__) {
            return function() {
              var state_machine__6577__auto__ = null;
              var state_machine__6577__auto____0 = function() {
                var statearr_97695 = [null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_97695[0] = state_machine__6577__auto__;
                statearr_97695[1] = 1;
                return statearr_97695;
              };
              var state_machine__6577__auto____1 = function(state_97686) {
                while (true) {
                  var result__6578__auto__ = switch__6576__auto__.call(null, state_97686);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6578__auto__;
                  }
                  break;
                }
              };
              state_machine__6577__auto__ = function(state_97686) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6577__auto____0.call(this);
                  case 1:
                    return state_machine__6577__auto____1.call(this, state_97686);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
              state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
              return state_machine__6577__auto__;
            }();
          }(switch__6576__auto__, c__6620__auto__);
        }();
        var state__6622__auto__ = function() {
          var statearr_97696 = f__6621__auto__.call(null);
          statearr_97696[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
          return statearr_97696;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
      };
    }(c__6620__auto__));
    return c__6620__auto__;
  };
  var sia = function(typ, var_args) {
    var m = null;
    if (arguments.length > 1) {
      var G__97701__i = 0, G__97701__a = new Array(arguments.length - 1);
      while (G__97701__i < G__97701__a.length) {
        G__97701__a[G__97701__i] = arguments[G__97701__i + 1];
        ++G__97701__i;
      }
      m = new cljs.core.IndexedSeq(G__97701__a, 0);
    }
    return sia__delegate.call(this, typ, m);
  };
  sia.cljs$lang$maxFixedArity = 1;
  sia.cljs$lang$applyTo = function(arglist__97702) {
    var typ = cljs.core.first(arglist__97702);
    var m = cljs.core.rest(arglist__97702);
    return sia__delegate(typ, m);
  };
  sia.cljs$core$IFn$_invoke$arity$variadic = sia__delegate;
  return sia;
}();
goog.provide("mockdatabasew");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("logger");
goog.require("pubsub");
mockdatabasew.states = function() {
  var obj99542 = {};
  return obj99542;
}();
mockdatabasew.cleandb = function cleandb() {
  logger.og.call(null, new cljs.core.Keyword(null, "cleandb", "cleandb", -510162900), "cleandb ", mockdatabasew.mdbase);
  return m.mdbase = function() {
    var obj99546 = {};
    return obj99546;
  }();
};
mockdatabasew.dumpdb = function dumpdb() {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99557) {
            var state_val_99558 = state_99557[1];
            if (state_val_99558 === 1) {
              var inst_99555 = logger.og.call(null, new cljs.core.Keyword(null, "dumpdb", "dumpdb", 1809492694), "dbase ", mockdatabasew.states);
              var state_99557__$1 = function() {
                var statearr_99559 = state_99557;
                statearr_99559[5] = inst_99555;
                return statearr_99559;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99557__$1, 1);
            } else {
              return null;
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99561 = [null, null, null, null, null, null];
              statearr_99561[0] = state_machine__6577__auto__;
              statearr_99561[1] = 1;
              return statearr_99561;
            };
            var state_machine__6577__auto____1 = function(state_99557) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99557);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99557) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99557);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99562 = f__6621__auto__.call(null);
        statearr_99562[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99562;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
mockdatabasew.g = function g(k) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99572) {
            var state_val_99573 = state_99572[1];
            if (state_val_99573 === 1) {
              var inst_99570 = m.g.call(null, k);
              var state_99572__$1 = state_99572;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99572__$1, inst_99570);
            } else {
              return null;
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99575 = [null, null, null, null, null];
              statearr_99575[0] = state_machine__6577__auto__;
              statearr_99575[1] = 1;
              return statearr_99575;
            };
            var state_machine__6577__auto____1 = function(state_99572) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99572);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99572) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99572);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99576 = f__6621__auto__.call(null);
        statearr_99576[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99576;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
mockdatabasew.update = function update(k, v) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99586) {
            var state_val_99587 = state_99586[1];
            if (state_val_99587 === 1) {
              var inst_99584 = m.update.call(null, k, v);
              var state_99586__$1 = state_99586;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99586__$1, inst_99584);
            } else {
              return null;
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99589 = [null, null, null, null, null];
              statearr_99589[0] = state_machine__6577__auto__;
              statearr_99589[1] = 1;
              return statearr_99589;
            };
            var state_machine__6577__auto____1 = function(state_99586) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99586);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99586) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99586);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99590 = f__6621__auto__.call(null);
        statearr_99590[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99590;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
mockdatabasew.p = function p(k, v) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99600) {
            var state_val_99601 = state_99600[1];
            if (state_val_99601 === 1) {
              var inst_99598 = m.p.call(null, k, v);
              var state_99600__$1 = state_99600;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99600__$1, inst_99598);
            } else {
              return null;
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99603 = [null, null, null, null, null];
              statearr_99603[0] = state_machine__6577__auto__;
              statearr_99603[1] = 1;
              return statearr_99603;
            };
            var state_machine__6577__auto____1 = function(state_99600) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99600);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99600) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99600);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99604 = f__6621__auto__.call(null);
        statearr_99604[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99604;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
mockdatabasew.ps = function ps(k, v) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99614) {
            var state_val_99615 = state_99614[1];
            if (state_val_99615 === 1) {
              var inst_99612 = m.ps.call(null, k, v);
              var state_99614__$1 = state_99614;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99614__$1, inst_99612);
            } else {
              return null;
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99617 = [null, null, null, null, null];
              statearr_99617[0] = state_machine__6577__auto__;
              statearr_99617[1] = 1;
              return statearr_99617;
            };
            var state_machine__6577__auto____1 = function(state_99614) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99614);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99614) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99614);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99618 = f__6621__auto__.call(null);
        statearr_99618[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99618;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
mockdatabasew.reg = function reg(typ, v) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99657) {
            var state_val_99658 = state_99657[1];
            if (state_val_99658 === 7) {
              var inst_99653 = state_99657[2];
              var state_99657__$1 = state_99657;
              var statearr_99659_99671 = state_99657__$1;
              statearr_99659_99671[2] = inst_99653;
              statearr_99659_99671[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_99658 === 6) {
                var state_99657__$1 = state_99657;
                var statearr_99660_99672 = state_99657__$1;
                statearr_99660_99672[2] = 0;
                statearr_99660_99672[1] = 7;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_99658 === 5) {
                  var inst_99650 = mockdatabasew.states[typ];
                  var state_99657__$1 = state_99657;
                  var statearr_99661_99673 = state_99657__$1;
                  statearr_99661_99673[2] = inst_99650;
                  statearr_99661_99673[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_99658 === 4) {
                    var inst_99655 = state_99657[2];
                    var state_99657__$1 = state_99657;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99657__$1, inst_99655);
                  } else {
                    if (state_val_99658 === 3) {
                      var inst_99648 = mockdatabasew.states[typ];
                      var state_99657__$1 = state_99657;
                      if (cljs.core.truth_(inst_99648)) {
                        var statearr_99662_99674 = state_99657__$1;
                        statearr_99662_99674[1] = 5;
                      } else {
                        var statearr_99663_99675 = state_99657__$1;
                        statearr_99663_99675[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_99658 === 2) {
                        var inst_99646 = mockdatabasew.states[typ] = v;
                        var state_99657__$1 = function() {
                          var statearr_99664 = state_99657;
                          statearr_99664[5] = inst_99646;
                          return statearr_99664;
                        }();
                        var statearr_99665_99676 = state_99657__$1;
                        statearr_99665_99676[2] = v;
                        statearr_99665_99676[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_99658 === 1) {
                          var state_99657__$1 = state_99657;
                          if (cljs.core.truth_(v)) {
                            var statearr_99666_99677 = state_99657__$1;
                            statearr_99666_99677[1] = 2;
                          } else {
                            var statearr_99667_99678 = state_99657__$1;
                            statearr_99667_99678[1] = 3;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99669 = [null, null, null, null, null, null];
              statearr_99669[0] = state_machine__6577__auto__;
              statearr_99669[1] = 1;
              return statearr_99669;
            };
            var state_machine__6577__auto____1 = function(state_99657) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99657);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99657) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99657);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99670 = f__6621__auto__.call(null);
        statearr_99670[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99670;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
mockdatabasew.initDBase = function initDBase(x) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99776) {
            var state_val_99777 = state_99776[1];
            if (state_val_99777 === 7) {
              var inst_99755 = state_99776[2];
              var inst_99756 = cljs.core.PersistentVector.EMPTY;
              var inst_99757 = {"header":0, "hash":inst_99755, "transactions":inst_99756};
              var inst_99758 = mockdatabasew.blck = inst_99757;
              var inst_99759 = logger.og.call(null, new cljs.core.Keyword(null, "initDBase", "initDBase", -1070074220), "saving ", mockdatabasew.blck);
              var inst_99760 = mockdatabasew.blck.header;
              var inst_99761 = inst_99760.heightFromRoot = 0;
              var inst_99762 = pubsub.sia.call(null, "db", "last", mockdatabasew.blck);
              var state_99776__$1 = function() {
                var statearr_99778 = state_99776;
                statearr_99778[5] = inst_99758;
                statearr_99778[6] = inst_99759;
                statearr_99778[7] = inst_99761;
                return statearr_99778;
              }();
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99776__$1, 8, inst_99762);
            } else {
              if (state_val_99777 === 1) {
                var inst_99736 = logger.og.call(null, new cljs.core.Keyword(null, "initdbwraper2", "initdbwraper2", 161886543), "wrapper", x);
                var inst_99737 = cljs.core.async.chan.call(null);
                var inst_99738 = pubsub.sia.call(null, "db", "last");
                var state_99776__$1 = function() {
                  var statearr_99779 = state_99776;
                  statearr_99779[8] = inst_99736;
                  statearr_99779[9] = inst_99737;
                  return statearr_99779;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99776__$1, 2, inst_99738);
              } else {
                if (state_val_99777 === 4) {
                  var inst_99747 = logger.og.call(null, new cljs.core.Keyword(null, "initDBase", "initDBase", -1070074220), "nothing in database");
                  var inst_99748 = pubsub.sia.call(null, "db", "height", 0);
                  var state_99776__$1 = function() {
                    var statearr_99780 = state_99776;
                    statearr_99780[10] = inst_99747;
                    return statearr_99780;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99776__$1, 6, inst_99748);
                } else {
                  if (state_val_99777 === 6) {
                    var inst_99750 = state_99776[2];
                    var inst_99753 = pubsub.sia.call(null, "hash", 0);
                    var state_99776__$1 = function() {
                      var statearr_99781 = state_99776;
                      statearr_99781[11] = inst_99750;
                      return statearr_99781;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99776__$1, 7, inst_99753);
                  } else {
                    if (state_val_99777 === 3) {
                      var inst_99745 = logger.og.call(null, new cljs.core.Keyword(null, "initDBase", "initDBase", -1070074220), "last one from database is ", mockdatabasew.lastone);
                      var state_99776__$1 = state_99776;
                      var statearr_99782_99793 = state_99776__$1;
                      statearr_99782_99793[2] = inst_99745;
                      statearr_99782_99793[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_99777 === 2) {
                        var inst_99740 = state_99776[2];
                        var inst_99741 = mockdatabasew.lastone = inst_99740;
                        var inst_99742 = logger.og.call(null, new cljs.core.Keyword(null, "initDBase", "initDBase", -1070074220), "about to init");
                        var inst_99743 = logger.og.call(null, new cljs.core.Keyword(null, "initDBase", "initDBase", -1070074220), "last one from database ", mockdatabasew.lastone);
                        var state_99776__$1 = function() {
                          var statearr_99783 = state_99776;
                          statearr_99783[12] = inst_99742;
                          statearr_99783[13] = inst_99743;
                          statearr_99783[14] = inst_99741;
                          return statearr_99783;
                        }();
                        var statearr_99785_99794 = state_99776__$1;
                        statearr_99785_99794[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_99777 === 9) {
                          var inst_99768 = state_99776[2];
                          var inst_99769 = "b" + 0;
                          var inst_99770 = pubsub.sia.call(null, "db", inst_99769, mockdatabasew.blck);
                          var state_99776__$1 = function() {
                            var statearr_99786 = state_99776;
                            statearr_99786[15] = inst_99768;
                            return statearr_99786;
                          }();
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99776__$1, 10, inst_99770);
                        } else {
                          if (state_val_99777 === 5) {
                            var inst_99774 = state_99776[2];
                            var state_99776__$1 = function() {
                              var statearr_99787 = state_99776;
                              statearr_99787[16] = inst_99774;
                              return statearr_99787;
                            }();
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99776__$1, 1);
                          } else {
                            if (state_val_99777 === 10) {
                              var inst_99772 = state_99776[2];
                              var state_99776__$1 = state_99776;
                              var statearr_99788_99795 = state_99776__$1;
                              statearr_99788_99795[2] = inst_99772;
                              statearr_99788_99795[1] = 5;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_99777 === 8) {
                                var inst_99764 = state_99776[2];
                                var inst_99765 = mockdatabasew.blck.hash;
                                var inst_99766 = pubsub.sia.call(null, "db", inst_99765, mockdatabasew.blck);
                                var state_99776__$1 = function() {
                                  var statearr_99789 = state_99776;
                                  statearr_99789[17] = inst_99764;
                                  return statearr_99789;
                                }();
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99776__$1, 9, inst_99766);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99791 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_99791[0] = state_machine__6577__auto__;
              statearr_99791[1] = 1;
              return statearr_99791;
            };
            var state_machine__6577__auto____1 = function(state_99776) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99776);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99776) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99776);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99792 = f__6621__auto__.call(null);
        statearr_99792[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99792;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
goog.provide("reagent.interop");
goog.require("cljs.core");
reagent.interop.fvars = {};
goog.provide("reagent.debug");
goog.require("cljs.core");
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__24526 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__24527 = cljs.core.next.call(null, coll__$1);
        sb = G__24526;
        coll__$1 = G__24527;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__24528 = sb;
        var G__24529 = coll__$2;
        sb = G__24528;
        coll__$1 = G__24529;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__24530 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__24530;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__24534 = cljs.core._EQ_;
    var expr__24535 = limit;
    if (cljs.core.truth_(pred__24534.call(null, 1, expr__24535))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__24534.call(null, 2, expr__24535))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__24537 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__24538 = limit__$1 - 1;
            var G__24539 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__24537;
            limit__$1 = G__24538;
            parts = G__24539;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__24540 = index - 1;
        index = G__24540;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___24541 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___24541)) {
        var replacement_24542 = temp__4124__auto___24541;
        buffer.append([cljs.core.str(replacement_24542)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__24543 = index + 1;
      index = G__24543;
      continue;
    }
    break;
  }
};
goog.provide("reagent.impl.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("reagent.interop");
goog.require("reagent.debug");
reagent.impl.util.is_client = typeof window !== "undefined" && !(window["document"] == null);
reagent.impl.util.extract_props = function extract_props(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  if (cljs.core.map_QMARK_.call(null, p)) {
    return p;
  } else {
    return null;
  }
};
reagent.impl.util.extract_children = function extract_children(v) {
  var p = cljs.core.nth.call(null, v, 1, null);
  var first_child = p == null || cljs.core.map_QMARK_.call(null, p) ? 2 : 1;
  if (cljs.core.count.call(null, v) > first_child) {
    return cljs.core.subvec.call(null, v, first_child);
  } else {
    return null;
  }
};
reagent.impl.util.get_argv = function get_argv(c) {
  return c["props"]["argv"];
};
reagent.impl.util.get_props = function get_props(c) {
  return reagent.impl.util.extract_props.call(null, c["props"]["argv"]);
};
reagent.impl.util.get_children = function get_children(c) {
  return reagent.impl.util.extract_children.call(null, c["props"]["argv"]);
};
reagent.impl.util.reagent_component_QMARK_ = function reagent_component_QMARK_(c) {
  return!(c["props"]["argv"] == null);
};
reagent.impl.util.cached_react_class = function cached_react_class(c) {
  return c["cljsReactClass"];
};
reagent.impl.util.cache_react_class = function cache_react_class(c, constructor) {
  return c["cljsReactClass"] = constructor;
};
reagent.impl.util.memoize_1 = function memoize_1(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function(arg) {
      var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), arg);
      if (!(v == null)) {
        return v;
      } else {
        var ret = f.call(null, arg);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, arg, ret);
        return ret;
      }
    };
  }(mem);
};
reagent.impl.util.dont_camel_case = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["aria", null, "data", null], null), null);
reagent.impl.util.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("");
  }
};
reagent.impl.util.dash_to_camel = function dash_to_camel(dashed) {
  if (typeof dashed === "string") {
    return dashed;
  } else {
    var name_str = cljs.core.name.call(null, dashed);
    var vec__24684 = clojure.string.split.call(null, name_str, /-/);
    var start = cljs.core.nth.call(null, vec__24684, 0, null);
    var parts = cljs.core.nthnext.call(null, vec__24684, 1);
    if (cljs.core.truth_(reagent.impl.util.dont_camel_case.call(null, start))) {
      return name_str;
    } else {
      return cljs.core.apply.call(null, cljs.core.str, start, cljs.core.map.call(null, reagent.impl.util.capitalize, parts));
    }
  }
};
reagent.impl.util.partial_ifn = function(f, args, p) {
  this.f = f;
  this.args = args;
  this.p = p;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 6291457;
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f, self__.args], null));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._EQ_.call(null, self__.f, other.f) && cljs.core._EQ_.call(null, self__.args, other.args);
};
reagent.impl.util.partial_ifn.prototype.call = function() {
  var G__24686__delegate = function(self__, a) {
    var self____$1 = this;
    var _ = self____$1;
    var or__3967__auto___24687 = self__.p;
    if (cljs.core.truth_(or__3967__auto___24687)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__24686 = function(self__, var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 1) {
      var G__24688__i = 0, G__24688__a = new Array(arguments.length - 1);
      while (G__24688__i < G__24688__a.length) {
        G__24688__a[G__24688__i] = arguments[G__24688__i + 1];
        ++G__24688__i;
      }
      a = new cljs.core.IndexedSeq(G__24688__a, 0);
    }
    return G__24686__delegate.call(this, self__, a);
  };
  G__24686.cljs$lang$maxFixedArity = 1;
  G__24686.cljs$lang$applyTo = function(arglist__24689) {
    var self__ = cljs.core.first(arglist__24689);
    var a = cljs.core.rest(arglist__24689);
    return G__24686__delegate(self__, a);
  };
  G__24686.cljs$core$IFn$_invoke$arity$variadic = G__24686__delegate;
  return G__24686;
}();
reagent.impl.util.partial_ifn.prototype.apply = function(self__, args24685) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args24685)));
};
reagent.impl.util.partial_ifn.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
  var G__24690__delegate = function(a) {
    var _ = this;
    var or__3967__auto___24691 = self__.p;
    if (cljs.core.truth_(or__3967__auto___24691)) {
    } else {
      self__.p = cljs.core.apply.call(null, cljs.core.partial, self__.f, self__.args);
    }
    return cljs.core.apply.call(null, self__.p, a);
  };
  var G__24690 = function(var_args) {
    var self__ = this;
    var a = null;
    if (arguments.length > 0) {
      var G__24692__i = 0, G__24692__a = new Array(arguments.length - 0);
      while (G__24692__i < G__24692__a.length) {
        G__24692__a[G__24692__i] = arguments[G__24692__i + 0];
        ++G__24692__i;
      }
      a = new cljs.core.IndexedSeq(G__24692__a, 0);
    }
    return G__24690__delegate.call(this, a);
  };
  G__24690.cljs$lang$maxFixedArity = 0;
  G__24690.cljs$lang$applyTo = function(arglist__24693) {
    var a = cljs.core.seq(arglist__24693);
    return G__24690__delegate(a);
  };
  G__24690.cljs$core$IFn$_invoke$arity$variadic = G__24690__delegate;
  return G__24690;
}();
reagent.impl.util.partial_ifn.cljs$lang$type = true;
reagent.impl.util.partial_ifn.cljs$lang$ctorStr = "reagent.impl.util/partial-ifn";
reagent.impl.util.partial_ifn.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "reagent.impl.util/partial-ifn");
};
reagent.impl.util.__GT_partial_ifn = function __GT_partial_ifn(f, args, p) {
  return new reagent.impl.util.partial_ifn(f, args, p);
};
reagent.impl.util.merge_class = function merge_class(p1, p2) {
  var class$ = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var c1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var c2 = temp__4126__auto____$1;
        return[cljs.core.str(c1), cljs.core.str(" "), cljs.core.str(c2)].join("");
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (class$ == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "class", "class", -2030961996), class$);
  }
};
reagent.impl.util.merge_style = function merge_style(p1, p2) {
  var style = function() {
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p1);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var s1 = temp__4126__auto__;
      var temp__4126__auto____$1 = (new cljs.core.Keyword(null, "style", "style", -496642736)).cljs$core$IFn$_invoke$arity$1(p2);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var s2 = temp__4126__auto____$1;
        return cljs.core.merge.call(null, s1, s2);
      } else {
        return null;
      }
    } else {
      return null;
    }
  }();
  if (style == null) {
    return p2;
  } else {
    return cljs.core.assoc.call(null, p2, new cljs.core.Keyword(null, "style", "style", -496642736), style);
  }
};
reagent.impl.util.merge_props = function merge_props(p1, p2) {
  if (p1 == null) {
    return p2;
  } else {
    if (cljs.core.map_QMARK_.call(null, p1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "p1", "p1", 703771573, null))))].join(""));
    }
    return reagent.impl.util.merge_style.call(null, p1, reagent.impl.util.merge_class.call(null, p1, cljs.core.merge.call(null, p1, p2)));
  }
};
reagent.impl.util._STAR_always_update_STAR_ = false;
if (typeof reagent.impl.util.roots !== "undefined") {
} else {
  reagent.impl.util.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
}
reagent.impl.util.clear_container = function clear_container(node) {
  try {
    return React["unmountComponentAtNode"](node);
  } catch (e24695) {
    if (e24695 instanceof Object) {
      var e = e24695;
      if (typeof console !== "undefined") {
        console.log("Error unmounting:");
      } else {
      }
      if (typeof console !== "undefined") {
        return console.log(e);
      } else {
        return null;
      }
    } else {
      throw e24695;
    }
  }
};
reagent.impl.util.render_component = function render_component(comp, container, callback) {
  try {
    var _STAR_always_update_STAR_24700 = reagent.impl.util._STAR_always_update_STAR_;
    reagent.impl.util._STAR_always_update_STAR_ = true;
    try {
      return React["render"](comp.call(null), container, function(_STAR_always_update_STAR_24700) {
        return function() {
          var _STAR_always_update_STAR_24701 = reagent.impl.util._STAR_always_update_STAR_;
          reagent.impl.util._STAR_always_update_STAR_ = false;
          try {
            cljs.core.swap_BANG_.call(null, reagent.impl.util.roots, cljs.core.assoc, container, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [comp, container], null));
            if (cljs.core.some_QMARK_.call(null, callback)) {
              return callback.call(null);
            } else {
              return null;
            }
          } finally {
            reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_24701;
          }
        };
      }(_STAR_always_update_STAR_24700));
    } finally {
      reagent.impl.util._STAR_always_update_STAR_ = _STAR_always_update_STAR_24700;
    }
  } catch (e24699) {
    if (e24699 instanceof Object) {
      var e = e24699;
      reagent.impl.util.clear_container.call(null, container);
      throw e;
    } else {
      throw e24699;
    }
  }
};
reagent.impl.util.re_render_component = function re_render_component(comp, container) {
  return reagent.impl.util.render_component.call(null, comp, container, null);
};
reagent.impl.util.unmount_component_at_node = function unmount_component_at_node(container) {
  cljs.core.swap_BANG_.call(null, reagent.impl.util.roots, cljs.core.dissoc, container);
  return React["unmountComponentAtNode"](container);
};
reagent.impl.util.force_update_all = function force_update_all() {
  var seq__24706_24710 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, reagent.impl.util.roots)));
  var chunk__24707_24711 = null;
  var count__24708_24712 = 0;
  var i__24709_24713 = 0;
  while (true) {
    if (i__24709_24713 < count__24708_24712) {
      var v_24714 = cljs.core._nth.call(null, chunk__24707_24711, i__24709_24713);
      cljs.core.apply.call(null, reagent.impl.util.re_render_component, v_24714);
      var G__24715 = seq__24706_24710;
      var G__24716 = chunk__24707_24711;
      var G__24717 = count__24708_24712;
      var G__24718 = i__24709_24713 + 1;
      seq__24706_24710 = G__24715;
      chunk__24707_24711 = G__24716;
      count__24708_24712 = G__24717;
      i__24709_24713 = G__24718;
      continue;
    } else {
      var temp__4126__auto___24719 = cljs.core.seq.call(null, seq__24706_24710);
      if (temp__4126__auto___24719) {
        var seq__24706_24720__$1 = temp__4126__auto___24719;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24706_24720__$1)) {
          var c__4754__auto___24721 = cljs.core.chunk_first.call(null, seq__24706_24720__$1);
          var G__24722 = cljs.core.chunk_rest.call(null, seq__24706_24720__$1);
          var G__24723 = c__4754__auto___24721;
          var G__24724 = cljs.core.count.call(null, c__4754__auto___24721);
          var G__24725 = 0;
          seq__24706_24710 = G__24722;
          chunk__24707_24711 = G__24723;
          count__24708_24712 = G__24724;
          i__24709_24713 = G__24725;
          continue;
        } else {
          var v_24726 = cljs.core.first.call(null, seq__24706_24720__$1);
          cljs.core.apply.call(null, reagent.impl.util.re_render_component, v_24726);
          var G__24727 = cljs.core.next.call(null, seq__24706_24720__$1);
          var G__24728 = null;
          var G__24729 = 0;
          var G__24730 = 0;
          seq__24706_24710 = G__24727;
          chunk__24707_24711 = G__24728;
          count__24708_24712 = G__24729;
          i__24709_24713 = G__24730;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return "Updated";
};
reagent.impl.util.Wrapper = function(state, callback, changed) {
  this.state = state;
  this.callback = callback;
  this.changed = changed;
  this.cljs$lang$protocol_mask$partition0$ = 2149613568;
  this.cljs$lang$protocol_mask$partition1$ = 114688;
};
reagent.impl.util.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  cljs.core._write.call(null, writer, "#\x3cwrap: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.impl.util.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof reagent.impl.util.Wrapper && cljs.core.not.call(null, self__.changed) && cljs.core.not.call(null, other.changed) && cljs.core._EQ_.call(null, self__.state, other.state) && cljs.core._EQ_.call(null, self__.callback, other.callback);
};
reagent.impl.util.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.impl.util.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.impl.util.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.impl.util.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.impl.util.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(this$, newval) {
  var self__ = this;
  var this$__$1 = this;
  self__.changed = true;
  self__.state = newval;
  self__.callback.call(null, newval);
  return self__.state;
};
reagent.impl.util.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.state;
};
reagent.impl.util.Wrapper.cljs$lang$type = true;
reagent.impl.util.Wrapper.cljs$lang$ctorStr = "reagent.impl.util/Wrapper";
reagent.impl.util.Wrapper.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "reagent.impl.util/Wrapper");
};
reagent.impl.util.__GT_Wrapper = function __GT_Wrapper(state, callback, changed) {
  return new reagent.impl.util.Wrapper(state, callback, changed);
};
reagent.impl.util.make_wrapper = function make_wrapper(value, callback_fn, args) {
  return new reagent.impl.util.Wrapper(value, new reagent.impl.util.partial_ifn(callback_fn, args, null), false);
};
goog.provide("reagent.ratom");
goog.require("cljs.core");
goog.require("reagent.impl.util");
if (typeof reagent.ratom.debug !== "undefined") {
} else {
  reagent.ratom.debug = false;
}
if (typeof reagent.ratom._running !== "undefined") {
} else {
  reagent.ratom._running = cljs.core.atom.call(null, 0);
}
reagent.ratom.running = function running() {
  return cljs.core.deref.call(null, reagent.ratom._running);
};
reagent.ratom.capture_derefed = function capture_derefed(f, obj) {
  obj.cljsCaptured = null;
  var _STAR_ratom_context_STAR_24581 = reagent.ratom._STAR_ratom_context_STAR_;
  reagent.ratom._STAR_ratom_context_STAR_ = obj;
  try {
    return f.call(null);
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_24581;
  }
};
reagent.ratom.captured = function captured(obj) {
  var c = obj.cljsCaptured;
  obj.cljsCaptured = null;
  return c;
};
reagent.ratom.notify_deref_watcher_BANG_ = function notify_deref_watcher_BANG_(derefable) {
  var obj = reagent.ratom._STAR_ratom_context_STAR_;
  if (obj == null) {
    return null;
  } else {
    var captured = obj.cljsCaptured;
    return obj.cljsCaptured = cljs.core.conj.call(null, captured == null ? cljs.core.PersistentHashSet.EMPTY : captured, derefable);
  }
};
reagent.ratom.RAtom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.reduce_kv.call(null, function(this$__$1) {
    return function(_, key, f) {
      f.call(null, key, this$__$1, oldval, newval);
      return null;
    };
  }(this$__$1), null, self__.watches);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, key, f);
};
reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, self__.state, x, y));
};
reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, self__.state, x, y, more));
};
reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  if (self__.validator == null) {
  } else {
    if (cljs.core.truth_(self__.validator.call(null, new_value))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null))))].join(""));
    }
  }
  var old_value = self__.state;
  self__.state = new_value;
  if (self__.watches == null) {
  } else {
    cljs.core._notify_watches.call(null, a__$1, old_value, new_value);
  }
  return new_value;
};
reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
  return self__.state;
};
reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.RAtom.cljs$lang$type = true;
reagent.ratom.RAtom.cljs$lang$ctorStr = "reagent.ratom/RAtom";
reagent.ratom.RAtom.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "reagent.ratom/RAtom");
};
reagent.ratom.__GT_RAtom = function __GT_RAtom(state, meta, validator, watches) {
  return new reagent.ratom.RAtom(state, meta, validator, watches);
};
reagent.ratom.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new reagent.ratom.RAtom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__24585__delegate = function(x, p__24582) {
      var map__24584 = p__24582;
      var map__24584__$1 = cljs.core.seq_QMARK_.call(null, map__24584) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24584) : map__24584;
      var validator = cljs.core.get.call(null, map__24584__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__24584__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new reagent.ratom.RAtom(x, meta, validator, null);
    };
    var G__24585 = function(x, var_args) {
      var p__24582 = null;
      if (arguments.length > 1) {
        var G__24586__i = 0, G__24586__a = new Array(arguments.length - 1);
        while (G__24586__i < G__24586__a.length) {
          G__24586__a[G__24586__i] = arguments[G__24586__i + 1];
          ++G__24586__i;
        }
        p__24582 = new cljs.core.IndexedSeq(G__24586__a, 0);
      }
      return G__24585__delegate.call(this, x, p__24582);
    };
    G__24585.cljs$lang$maxFixedArity = 1;
    G__24585.cljs$lang$applyTo = function(arglist__24587) {
      var x = cljs.core.first(arglist__24587);
      var p__24582 = cljs.core.rest(arglist__24587);
      return G__24585__delegate(x, p__24582);
    };
    G__24585.cljs$core$IFn$_invoke$arity$variadic = G__24585__delegate;
    return G__24585;
  }();
  atom = function(x, var_args) {
    var p__24582 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__24588 = null;
        if (arguments.length > 1) {
          var G__24589__i = 0, G__24589__a = new Array(arguments.length - 1);
          while (G__24589__i < G__24589__a.length) {
            G__24589__a[G__24589__i] = arguments[G__24589__i + 1];
            ++G__24589__i;
          }
          G__24588 = new cljs.core.IndexedSeq(G__24589__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24588);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
reagent.ratom.peek_at = function peek_at(a, path) {
  var _STAR_ratom_context_STAR_24591 = reagent.ratom._STAR_ratom_context_STAR_;
  reagent.ratom._STAR_ratom_context_STAR_ = null;
  try {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, a), path);
  } finally {
    reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR_24591;
  }
};
reagent.ratom.RCursor = function(path, ratom, setf, reaction) {
  this.path = path;
  this.ratom = ratom;
  this.setf = setf;
  this.reaction = reaction;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom, self__.path, self__.setf], null));
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._notify_watches.call(null, self__.ratom, oldval, newval);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._add_watch.call(null, self__.ratom, key, f);
};
reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._remove_watch.call(null, self__.ratom, key);
};
reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cCursor: ");
  cljs.core.pr_writer.call(null, self__.path, writer, opts);
  cljs.core._write.call(null, writer, " ");
  cljs.core.pr_writer.call(null, self__.ratom, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, reagent.ratom.peek_at.call(null, self__.ratom, self__.path)));
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, reagent.ratom.peek_at.call(null, self__.ratom, self__.path), x));
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f.call(null, reagent.ratom.peek_at.call(null, self__.ratom, self__.path), x, y));
};
reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f, reagent.ratom.peek_at.call(null, self__.ratom, self__.path), x, y, more));
};
reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  if (self__.setf == null) {
    return cljs.core.swap_BANG_.call(null, self__.ratom, cljs.core.assoc_in, self__.path, new_value);
  } else {
    return self__.setf.call(null, new_value);
  }
};
reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (reagent.ratom._STAR_ratom_context_STAR_ == null) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.ratom), self__.path);
  } else {
    if (self__.reaction == null) {
      self__.reaction = reagent.ratom.make_reaction.call(null, function(this$__$1) {
        return function() {
          return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.ratom), self__.path);
        };
      }(this$__$1));
    } else {
    }
    return cljs.core.deref.call(null, self__.reaction);
  }
};
reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return other instanceof reagent.ratom.RCursor && cljs.core._EQ_.call(null, self__.path, other.path) && cljs.core._EQ_.call(null, self__.ratom, other.ratom) && cljs.core._EQ_.call(null, self__.setf, other.setf);
};
reagent.ratom.RCursor.cljs$lang$type = true;
reagent.ratom.RCursor.cljs$lang$ctorStr = "reagent.ratom/RCursor";
reagent.ratom.RCursor.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "reagent.ratom/RCursor");
};
reagent.ratom.__GT_RCursor = function __GT_RCursor(path, ratom, setf, reaction) {
  return new reagent.ratom.RCursor(path, ratom, setf, reaction);
};
reagent.ratom.cursor = function() {
  var cursor = null;
  var cursor__2 = function(path, ra) {
    return new reagent.ratom.RCursor(path, ra, null, null);
  };
  var cursor__4 = function(path, ra, setf, args) {
    return new reagent.ratom.RCursor(path, ra, new reagent.impl.util.partial_ifn(setf, args, null), null);
  };
  cursor = function(path, ra, setf, args) {
    switch(arguments.length) {
      case 2:
        return cursor__2.call(this, path, ra);
      case 4:
        return cursor__4.call(this, path, ra, setf, args);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cursor.cljs$core$IFn$_invoke$arity$2 = cursor__2;
  cursor.cljs$core$IFn$_invoke$arity$4 = cursor__4;
  return cursor;
}();
reagent.ratom.IDisposable = function() {
  var obj24593 = {};
  return obj24593;
}();
reagent.ratom.dispose_BANG_ = function dispose_BANG_(this$) {
  if (function() {
    var and__3955__auto__ = this$;
    if (and__3955__auto__) {
      return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);
  } else {
    var x__4611__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3967__auto__ = reagent.ratom.dispose_BANG_[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = reagent.ratom.dispose_BANG_["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisposable.dispose!", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IRunnable = function() {
  var obj24595 = {};
  return obj24595;
}();
reagent.ratom.run = function run(this$) {
  if (function() {
    var and__3955__auto__ = this$;
    if (and__3955__auto__) {
      return this$.reagent$ratom$IRunnable$run$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return this$.reagent$ratom$IRunnable$run$arity$1(this$);
  } else {
    var x__4611__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3967__auto__ = reagent.ratom.run[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = reagent.ratom.run["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRunnable.run", this$);
        }
      }
    }().call(null, this$);
  }
};
reagent.ratom.IComputedImpl = function() {
  var obj24597 = {};
  return obj24597;
}();
reagent.ratom._update_watching = function _update_watching(this$, derefed) {
  if (function() {
    var and__3955__auto__ = this$;
    if (and__3955__auto__) {
      return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return this$.reagent$ratom$IComputedImpl$_update_watching$arity$2(this$, derefed);
  } else {
    var x__4611__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3967__auto__ = reagent.ratom._update_watching[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = reagent.ratom._update_watching["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-update-watching", this$);
        }
      }
    }().call(null, this$, derefed);
  }
};
reagent.ratom._handle_change = function _handle_change(k, sender, oldval, newval) {
  if (function() {
    var and__3955__auto__ = k;
    if (and__3955__auto__) {
      return k.reagent$ratom$IComputedImpl$_handle_change$arity$4;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return k.reagent$ratom$IComputedImpl$_handle_change$arity$4(k, sender, oldval, newval);
  } else {
    var x__4611__auto__ = k == null ? null : k;
    return function() {
      var or__3967__auto__ = reagent.ratom._handle_change[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = reagent.ratom._handle_change["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComputedImpl.-handle-change", k);
        }
      }
    }().call(null, k, sender, oldval, newval);
  }
};
reagent.ratom.call_watches = function call_watches(obs, watches, oldval, newval) {
  return cljs.core.reduce_kv.call(null, function(_, key, f) {
    f.call(null, key, obs, oldval, newval);
    return null;
  }, null, watches);
};
reagent.ratom.Reaction = function(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  this.f = f;
  this.state = state;
  this.dirty_QMARK_ = dirty_QMARK_;
  this.active_QMARK_ = active_QMARK_;
  this.watching = watching;
  this.watches = watches;
  this.auto_run = auto_run;
  this.on_set = on_set;
  this.on_dispose = on_dispose;
  this.cljs$lang$protocol_mask$partition0$ = 2153807872;
  this.cljs$lang$protocol_mask$partition1$ = 114690;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_handle_change$arity$4 = function(this$, sender, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3955__auto__ = self__.active_QMARK_;
    if (cljs.core.truth_(and__3955__auto__)) {
      return cljs.core.not.call(null, self__.dirty_QMARK_) && !(oldval === newval);
    } else {
      return and__3955__auto__;
    }
  }())) {
    self__.dirty_QMARK_ = true;
    return function() {
      var or__3967__auto__ = self__.auto_run;
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return reagent.ratom.run;
      }
    }().call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.reagent$ratom$IComputedImpl$_update_watching$arity$2 = function(this$, derefed) {
  var self__ = this;
  var this$__$1 = this;
  var seq__24598_24610 = cljs.core.seq.call(null, derefed);
  var chunk__24599_24611 = null;
  var count__24600_24612 = 0;
  var i__24601_24613 = 0;
  while (true) {
    if (i__24601_24613 < count__24600_24612) {
      var w_24614 = cljs.core._nth.call(null, chunk__24599_24611, i__24601_24613);
      if (cljs.core.contains_QMARK_.call(null, self__.watching, w_24614)) {
      } else {
        cljs.core.add_watch.call(null, w_24614, this$__$1, reagent.ratom._handle_change);
      }
      var G__24615 = seq__24598_24610;
      var G__24616 = chunk__24599_24611;
      var G__24617 = count__24600_24612;
      var G__24618 = i__24601_24613 + 1;
      seq__24598_24610 = G__24615;
      chunk__24599_24611 = G__24616;
      count__24600_24612 = G__24617;
      i__24601_24613 = G__24618;
      continue;
    } else {
      var temp__4126__auto___24619 = cljs.core.seq.call(null, seq__24598_24610);
      if (temp__4126__auto___24619) {
        var seq__24598_24620__$1 = temp__4126__auto___24619;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24598_24620__$1)) {
          var c__4754__auto___24621 = cljs.core.chunk_first.call(null, seq__24598_24620__$1);
          var G__24622 = cljs.core.chunk_rest.call(null, seq__24598_24620__$1);
          var G__24623 = c__4754__auto___24621;
          var G__24624 = cljs.core.count.call(null, c__4754__auto___24621);
          var G__24625 = 0;
          seq__24598_24610 = G__24622;
          chunk__24599_24611 = G__24623;
          count__24600_24612 = G__24624;
          i__24601_24613 = G__24625;
          continue;
        } else {
          var w_24626 = cljs.core.first.call(null, seq__24598_24620__$1);
          if (cljs.core.contains_QMARK_.call(null, self__.watching, w_24626)) {
          } else {
            cljs.core.add_watch.call(null, w_24626, this$__$1, reagent.ratom._handle_change);
          }
          var G__24627 = cljs.core.next.call(null, seq__24598_24620__$1);
          var G__24628 = null;
          var G__24629 = 0;
          var G__24630 = 0;
          seq__24598_24610 = G__24627;
          chunk__24599_24611 = G__24628;
          count__24600_24612 = G__24629;
          i__24601_24613 = G__24630;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__24602_24631 = cljs.core.seq.call(null, self__.watching);
  var chunk__24603_24632 = null;
  var count__24604_24633 = 0;
  var i__24605_24634 = 0;
  while (true) {
    if (i__24605_24634 < count__24604_24633) {
      var w_24635 = cljs.core._nth.call(null, chunk__24603_24632, i__24605_24634);
      if (cljs.core.contains_QMARK_.call(null, derefed, w_24635)) {
      } else {
        cljs.core.remove_watch.call(null, w_24635, this$__$1);
      }
      var G__24636 = seq__24602_24631;
      var G__24637 = chunk__24603_24632;
      var G__24638 = count__24604_24633;
      var G__24639 = i__24605_24634 + 1;
      seq__24602_24631 = G__24636;
      chunk__24603_24632 = G__24637;
      count__24604_24633 = G__24638;
      i__24605_24634 = G__24639;
      continue;
    } else {
      var temp__4126__auto___24640 = cljs.core.seq.call(null, seq__24602_24631);
      if (temp__4126__auto___24640) {
        var seq__24602_24641__$1 = temp__4126__auto___24640;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24602_24641__$1)) {
          var c__4754__auto___24642 = cljs.core.chunk_first.call(null, seq__24602_24641__$1);
          var G__24643 = cljs.core.chunk_rest.call(null, seq__24602_24641__$1);
          var G__24644 = c__4754__auto___24642;
          var G__24645 = cljs.core.count.call(null, c__4754__auto___24642);
          var G__24646 = 0;
          seq__24602_24631 = G__24643;
          chunk__24603_24632 = G__24644;
          count__24604_24633 = G__24645;
          i__24605_24634 = G__24646;
          continue;
        } else {
          var w_24647 = cljs.core.first.call(null, seq__24602_24641__$1);
          if (cljs.core.contains_QMARK_.call(null, derefed, w_24647)) {
          } else {
            cljs.core.remove_watch.call(null, w_24647, this$__$1);
          }
          var G__24648 = cljs.core.next.call(null, seq__24602_24641__$1);
          var G__24649 = null;
          var G__24650 = 0;
          var G__24651 = 0;
          seq__24602_24631 = G__24648;
          chunk__24603_24632 = G__24649;
          count__24604_24633 = G__24650;
          i__24605_24634 = G__24651;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return self__.watching = derefed;
};
reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cReaction "), cljs.core.str(cljs.core.hash.call(null, this$__$1)), cljs.core.str(": ")].join(""));
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var seq__24606_24652 = cljs.core.seq.call(null, self__.watching);
  var chunk__24607_24653 = null;
  var count__24608_24654 = 0;
  var i__24609_24655 = 0;
  while (true) {
    if (i__24609_24655 < count__24608_24654) {
      var w_24656 = cljs.core._nth.call(null, chunk__24607_24653, i__24609_24655);
      cljs.core.remove_watch.call(null, w_24656, this$__$1);
      var G__24657 = seq__24606_24652;
      var G__24658 = chunk__24607_24653;
      var G__24659 = count__24608_24654;
      var G__24660 = i__24609_24655 + 1;
      seq__24606_24652 = G__24657;
      chunk__24607_24653 = G__24658;
      count__24608_24654 = G__24659;
      i__24609_24655 = G__24660;
      continue;
    } else {
      var temp__4126__auto___24661 = cljs.core.seq.call(null, seq__24606_24652);
      if (temp__4126__auto___24661) {
        var seq__24606_24662__$1 = temp__4126__auto___24661;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24606_24662__$1)) {
          var c__4754__auto___24663 = cljs.core.chunk_first.call(null, seq__24606_24662__$1);
          var G__24664 = cljs.core.chunk_rest.call(null, seq__24606_24662__$1);
          var G__24665 = c__4754__auto___24663;
          var G__24666 = cljs.core.count.call(null, c__4754__auto___24663);
          var G__24667 = 0;
          seq__24606_24652 = G__24664;
          chunk__24607_24653 = G__24665;
          count__24608_24654 = G__24666;
          i__24609_24655 = G__24667;
          continue;
        } else {
          var w_24668 = cljs.core.first.call(null, seq__24606_24662__$1);
          cljs.core.remove_watch.call(null, w_24668, this$__$1);
          var G__24669 = cljs.core.next.call(null, seq__24606_24662__$1);
          var G__24670 = null;
          var G__24671 = 0;
          var G__24672 = 0;
          seq__24606_24652 = G__24669;
          chunk__24607_24653 = G__24670;
          count__24608_24654 = G__24671;
          i__24609_24655 = G__24672;
          continue;
        }
      } else {
      }
    }
    break;
  }
  self__.watching = cljs.core.PersistentHashSet.EMPTY;
  self__.state = null;
  self__.dirty_QMARK_ = true;
  if (cljs.core.truth_(self__.active_QMARK_)) {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.dec);
    } else {
    }
    self__.active_QMARK_ = false;
  } else {
  }
  if (cljs.core.truth_(self__.on_dispose)) {
    return self__.on_dispose.call(null);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = function(a, new_value) {
  var self__ = this;
  var a__$1 = this;
  var old_value = self__.state;
  self__.state = new_value;
  cljs.core._notify_watches.call(null, a__$1, old_value, new_value);
  return new_value;
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = function(a, f__$1) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, self__.state));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = function(a, f__$1, x) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, self__.state, x));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = function(a, f__$1, x, y) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, f__$1.call(null, self__.state, x, y));
};
reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = function(a, f__$1, x, y, more) {
  var self__ = this;
  var a__$1 = this;
  return cljs.core._reset_BANG_.call(null, a__$1, cljs.core.apply.call(null, f__$1, self__.state, x, y, more));
};
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = true;
reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var oldstate = self__.state;
  var res = reagent.ratom.capture_derefed.call(null, self__.f, this$__$1);
  var derefed = reagent.ratom.captured.call(null, this$__$1);
  if (cljs.core.not_EQ_.call(null, derefed, self__.watching)) {
    reagent.ratom._update_watching.call(null, this$__$1, derefed);
  } else {
  }
  if (cljs.core.truth_(self__.active_QMARK_)) {
  } else {
    if (cljs.core.truth_(reagent.ratom.debug)) {
      cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
    } else {
    }
    self__.active_QMARK_ = true;
  }
  self__.dirty_QMARK_ = false;
  self__.state = res;
  reagent.ratom.call_watches.call(null, this$__$1, self__.watches, oldstate, self__.state);
  return res;
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(self__.on_set)) {
    self__.on_set.call(null, oldval, newval);
  } else {
  }
  return reagent.ratom.call_watches.call(null, this$__$1, self__.watches, oldval, newval);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, k, wf) {
  var self__ = this;
  var this$__$1 = this;
  return self__.watches = cljs.core.assoc.call(null, self__.watches, k, wf);
};
reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  self__.watches = cljs.core.dissoc.call(null, self__.watches, k);
  if (cljs.core.empty_QMARK_.call(null, self__.watches)) {
    return reagent.ratom.dispose_BANG_.call(null, this$__$1);
  } else {
    return null;
  }
};
reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.not.call(null, function() {
    var or__3967__auto__ = self__.auto_run;
    if (cljs.core.truth_(or__3967__auto__)) {
      return or__3967__auto__;
    } else {
      return reagent.ratom._STAR_ratom_context_STAR_;
    }
  }())) {
    var x__14444__auto___24673 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.auto_run, reagent.ratom._STAR_ratom_context_STAR_], null);
    if (typeof console !== "undefined") {
      console.log([cljs.core.str([cljs.core.str("dbg "), cljs.core.str("reagent.ratom"), cljs.core.str(":"), cljs.core.str(249), cljs.core.str(": "), cljs.core.str("[auto-run *ratom-context*]"), cljs.core.str(": "), cljs.core.str(cljs.core.pr_str.call(null, x__14444__auto___24673))].join(""))].join(""));
    } else {
    }
  } else {
  }
  if (cljs.core.truth_(function() {
    var or__3967__auto__ = self__.auto_run;
    if (cljs.core.truth_(or__3967__auto__)) {
      return or__3967__auto__;
    } else {
      return reagent.ratom._STAR_ratom_context_STAR_;
    }
  }())) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Reaction derefed outside auto-running context"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), new cljs.core.Symbol(null, "auto-run", "auto-run", -696035332, null), new cljs.core.Symbol(null, "*ratom-context*", "*ratom-context*", -1557728360, null))))].join(""));
  }
  reagent.ratom.notify_deref_watcher_BANG_.call(null, this$__$1);
  if (cljs.core.truth_(self__.dirty_QMARK_)) {
    return reagent.ratom.run.call(null, this$__$1);
  } else {
    return self__.state;
  }
};
reagent.ratom.Reaction.cljs$lang$type = true;
reagent.ratom.Reaction.cljs$lang$ctorStr = "reagent.ratom/Reaction";
reagent.ratom.Reaction.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "reagent.ratom/Reaction");
};
reagent.ratom.__GT_Reaction = function __GT_Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose) {
  return new reagent.ratom.Reaction(f, state, dirty_QMARK_, active_QMARK_, watching, watches, auto_run, on_set, on_dispose);
};
reagent.ratom.make_reaction = function() {
  var make_reaction__delegate = function(f, p__24674) {
    var map__24676 = p__24674;
    var map__24676__$1 = cljs.core.seq_QMARK_.call(null, map__24676) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24676) : map__24676;
    var derefed = cljs.core.get.call(null, map__24676__$1, new cljs.core.Keyword(null, "derefed", "derefed", 590684583));
    var on_dispose = cljs.core.get.call(null, map__24676__$1, new cljs.core.Keyword(null, "on-dispose", "on-dispose", 2105306360));
    var on_set = cljs.core.get.call(null, map__24676__$1, new cljs.core.Keyword(null, "on-set", "on-set", -140953470));
    var auto_run = cljs.core.get.call(null, map__24676__$1, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437));
    var runner = cljs.core._EQ_.call(null, auto_run, true) ? reagent.ratom.run : auto_run;
    var active = !(derefed == null);
    var dirty = !active;
    var reaction = new reagent.ratom.Reaction(f, null, dirty, active, null, cljs.core.PersistentArrayMap.EMPTY, runner, on_set, on_dispose);
    if (derefed == null) {
    } else {
      if (cljs.core.truth_(reagent.ratom.debug)) {
        cljs.core.swap_BANG_.call(null, reagent.ratom._running, cljs.core.inc);
      } else {
      }
      reagent.ratom._update_watching.call(null, reaction, derefed);
    }
    return reaction;
  };
  var make_reaction = function(f, var_args) {
    var p__24674 = null;
    if (arguments.length > 1) {
      var G__24677__i = 0, G__24677__a = new Array(arguments.length - 1);
      while (G__24677__i < G__24677__a.length) {
        G__24677__a[G__24677__i] = arguments[G__24677__i + 1];
        ++G__24677__i;
      }
      p__24674 = new cljs.core.IndexedSeq(G__24677__a, 0);
    }
    return make_reaction__delegate.call(this, f, p__24674);
  };
  make_reaction.cljs$lang$maxFixedArity = 1;
  make_reaction.cljs$lang$applyTo = function(arglist__24678) {
    var f = cljs.core.first(arglist__24678);
    var p__24674 = cljs.core.rest(arglist__24678);
    return make_reaction__delegate(f, p__24674);
  };
  make_reaction.cljs$core$IFn$_invoke$arity$variadic = make_reaction__delegate;
  return make_reaction;
}();
goog.provide("reagent.impl.batching");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("reagent.impl.util");
goog.require("reagent.ratom");
goog.require("reagent.interop");
goog.require("reagent.debug");
if (typeof reagent.impl.batching.mount_count !== "undefined") {
} else {
  reagent.impl.batching.mount_count = 0;
}
reagent.impl.batching.next_mount_count = function next_mount_count() {
  return reagent.impl.batching.mount_count = reagent.impl.batching.mount_count + 1;
};
reagent.impl.batching.fake_raf = function fake_raf(f) {
  return setTimeout(f, 16);
};
reagent.impl.batching.next_tick = cljs.core.not.call(null, reagent.impl.util.is_client) ? reagent.impl.batching.fake_raf : function() {
  var w = window;
  var or__3967__auto__ = w["requestAnimationFrame"];
  if (cljs.core.truth_(or__3967__auto__)) {
    return or__3967__auto__;
  } else {
    var or__3967__auto____$1 = w["webkitRequestAnimationFrame"];
    if (cljs.core.truth_(or__3967__auto____$1)) {
      return or__3967__auto____$1;
    } else {
      var or__3967__auto____$2 = w["mozRequestAnimationFrame"];
      if (cljs.core.truth_(or__3967__auto____$2)) {
        return or__3967__auto____$2;
      } else {
        var or__3967__auto____$3 = w["msRequestAnimationFrame"];
        if (cljs.core.truth_(or__3967__auto____$3)) {
          return or__3967__auto____$3;
        } else {
          return reagent.impl.batching.fake_raf;
        }
      }
    }
  }
}();
reagent.impl.batching.compare_mount_order = function compare_mount_order(c1, c2) {
  return c1["cljsMountOrder"] - c2["cljsMountOrder"];
};
reagent.impl.batching.run_queue = function run_queue(a) {
  a.sort(reagent.impl.batching.compare_mount_order);
  var n__4854__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4854__auto__) {
      var c_24515 = a[i];
      if (cljs.core.truth_(c_24515["cljsIsDirty"])) {
        c_24515["forceUpdate"]();
      } else {
      }
      var G__24516 = i + 1;
      i = G__24516;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.run_funs = function run_funs(a) {
  var n__4854__auto__ = a.length;
  var i = 0;
  while (true) {
    if (i < n__4854__auto__) {
      a[i].call(null);
      var G__24517 = i + 1;
      i = G__24517;
      continue;
    } else {
      return null;
    }
    break;
  }
};
reagent.impl.batching.RenderQueue = function(queue, scheduled_QMARK_, after_render) {
  this.queue = queue;
  this.scheduled_QMARK_ = scheduled_QMARK_;
  this.after_render = after_render;
};
reagent.impl.batching.RenderQueue.prototype.queue_render = function(c) {
  var self__ = this;
  var this$ = this;
  self__.queue.push(c);
  return this$.schedule();
};
reagent.impl.batching.RenderQueue.prototype.add_after_render = function(f) {
  var self__ = this;
  var _ = this;
  return self__.after_render.push(f);
};
reagent.impl.batching.RenderQueue.prototype.schedule = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.truth_(self__.scheduled_QMARK_)) {
    return null;
  } else {
    self__.scheduled_QMARK_ = true;
    return reagent.impl.batching.next_tick.call(null, function(this$) {
      return function() {
        return this$.run_queue();
      };
    }(this$));
  }
};
reagent.impl.batching.RenderQueue.prototype.run_queue = function() {
  var self__ = this;
  var _ = this;
  var q = self__.queue;
  var aq = self__.after_render;
  self__.queue = [];
  self__.after_render = [];
  self__.scheduled_QMARK_ = false;
  reagent.impl.batching.run_queue.call(null, q);
  return reagent.impl.batching.run_funs.call(null, aq);
};
reagent.impl.batching.RenderQueue.cljs$lang$type = true;
reagent.impl.batching.RenderQueue.cljs$lang$ctorStr = "reagent.impl.batching/RenderQueue";
reagent.impl.batching.RenderQueue.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "reagent.impl.batching/RenderQueue");
};
reagent.impl.batching.__GT_RenderQueue = function __GT_RenderQueue(queue, scheduled_QMARK_, after_render) {
  return new reagent.impl.batching.RenderQueue(queue, scheduled_QMARK_, after_render);
};
reagent.impl.batching.render_queue = new reagent.impl.batching.RenderQueue([], false, []);
reagent.impl.batching.flush = function flush() {
  return reagent.impl.batching.render_queue.run_queue();
};
reagent.impl.batching.queue_render = function queue_render(c) {
  c["cljsIsDirty"] = true;
  return reagent.impl.batching.render_queue.queue_render(c);
};
reagent.impl.batching.mark_rendered = function mark_rendered(c) {
  return c["cljsIsDirty"] = false;
};
reagent.impl.batching.do_after_flush = function do_after_flush(f) {
  return reagent.impl.batching.render_queue.add_after_render(f);
};
reagent.impl.batching.do_later = function do_later(f) {
  reagent.impl.batching.do_after_flush.call(null, f);
  return reagent.impl.batching.render_queue.schedule();
};
reagent.impl.batching.is_reagent_component = function is_reagent_component(c) {
  var G__24519 = c;
  var G__24519__$1 = G__24519 == null ? null : G__24519["props"];
  var G__24519__$2 = G__24519__$1 == null ? null : G__24519__$1["argv"];
  return G__24519__$2;
};
reagent.impl.batching.run_reactively = function run_reactively(c, run) {
  if (cljs.core.truth_(reagent.impl.batching.is_reagent_component.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "is-reagent-component", "is-reagent-component", -1856228005, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  reagent.impl.batching.mark_rendered.call(null, c);
  var rat = c["cljsRatom"];
  if (rat == null) {
    var res = reagent.ratom.capture_derefed.call(null, run, c);
    var derefed = reagent.ratom.captured.call(null, c);
    if (!(derefed == null)) {
      c["cljsRatom"] = reagent.ratom.make_reaction.call(null, run, new cljs.core.Keyword(null, "auto-run", "auto-run", 1958400437), function(res, derefed, rat) {
        return function() {
          return reagent.impl.batching.queue_render.call(null, c);
        };
      }(res, derefed, rat), new cljs.core.Keyword(null, "derefed", "derefed", 590684583), derefed);
    } else {
    }
    return res;
  } else {
    return reagent.ratom.run.call(null, rat);
  }
};
reagent.impl.batching.dispose = function dispose(c) {
  var G__24521_24522 = c["cljsRatom"];
  var G__24521_24523__$1 = G__24521_24522 == null ? null : reagent.ratom.dispose_BANG_.call(null, G__24521_24522);
  return reagent.impl.batching.mark_rendered.call(null, c);
};
goog.provide("reagent.impl.component");
goog.require("cljs.core");
goog.require("reagent.debug");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("reagent.impl.util");
reagent.impl.component.state_atom = function state_atom(this$) {
  var sa = this$["cljsState"];
  if (!(sa == null)) {
    return sa;
  } else {
    return this$["cljsState"] = reagent.ratom.atom.call(null, null);
  }
};
reagent.impl.component.state = function state(this$) {
  return cljs.core.deref.call(null, reagent.impl.component.state_atom.call(null, this$));
};
reagent.impl.component.replace_state = function replace_state(this$, new_state) {
  return cljs.core.reset_BANG_.call(null, reagent.impl.component.state_atom.call(null, this$), new_state);
};
reagent.impl.component.set_state = function set_state(this$, new_state) {
  return cljs.core.swap_BANG_.call(null, reagent.impl.component.state_atom.call(null, this$), cljs.core.merge, new_state);
};
reagent.impl.component.as_element = function as_element(x) {
  return reagent.impl.template.as_element(x);
};
reagent.impl.component.do_render = function do_render(c) {
  var _STAR_current_component_STAR_24497 = reagent.impl.component._STAR_current_component_STAR_;
  reagent.impl.component._STAR_current_component_STAR_ = c;
  try {
    var f = c["cljsRender"];
    var _ = cljs.core.ifn_QMARK_.call(null, f) ? null : function() {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
    }();
    var p = c["props"];
    var res = c["componentFunction"] == null ? f.call(null, c) : function() {
      var argv = p["argv"];
      var n = cljs.core.count.call(null, argv);
      var G__24498 = n;
      switch(G__24498) {
        case 1:
          return f.call(null);
          break;
        case 2:
          return f.call(null, cljs.core.nth.call(null, argv, 1));
          break;
        case 3:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2));
          break;
        case 4:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3));
          break;
        case 5:
          return f.call(null, cljs.core.nth.call(null, argv, 1), cljs.core.nth.call(null, argv, 2), cljs.core.nth.call(null, argv, 3), cljs.core.nth.call(null, argv, 4));
          break;
        default:
          return cljs.core.apply.call(null, f, cljs.core.subvec.call(null, argv, 1));
      }
    }();
    if (cljs.core.vector_QMARK_.call(null, res)) {
      return reagent.impl.component.as_element.call(null, res);
    } else {
      if (cljs.core.ifn_QMARK_.call(null, res)) {
        c["cljsRender"] = res;
        return do_render.call(null, c);
      } else {
        return res;
      }
    }
  } finally {
    reagent.impl.component._STAR_current_component_STAR_ = _STAR_current_component_STAR_24497;
  }
};
reagent.impl.component.static_fns = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "render", "render", -1408033454), function() {
  var c = this;
  if (cljs.core.not.call(null, reagent.impl.component._STAR_non_reactive_STAR_)) {
    return reagent.impl.batching.run_reactively.call(null, c, function(c) {
      return function() {
        return reagent.impl.component.do_render.call(null, c);
      };
    }(c));
  } else {
    return reagent.impl.component.do_render.call(null, c);
  }
}], null);
reagent.impl.component.custom_wrapper = function custom_wrapper(key, f) {
  var G__24501 = key instanceof cljs.core.Keyword ? key.fqn : null;
  switch(G__24501) {
    case "componentWillUnmount":
      return function(G__24501) {
        return function() {
          var c = this;
          reagent.impl.batching.dispose.call(null, c);
          if (f == null) {
            return null;
          } else {
            return f.call(null, c);
          }
        };
      }(G__24501);
      break;
    case "componentWillMount":
      return function(G__24501) {
        return function() {
          var c = this;
          c["cljsMountOrder"] = reagent.impl.batching.next_mount_count.call(null);
          if (f == null) {
            return null;
          } else {
            return f.call(null, c);
          }
        };
      }(G__24501);
      break;
    case "componentDidUpdate":
      return function(G__24501) {
        return function(oldprops) {
          var c = this;
          return f.call(null, c, oldprops["argv"]);
        };
      }(G__24501);
      break;
    case "componentWillUpdate":
      return function(G__24501) {
        return function(nextprops) {
          var c = this;
          return f.call(null, c, nextprops["argv"]);
        };
      }(G__24501);
      break;
    case "shouldComponentUpdate":
      return function(G__24501) {
        return function(nextprops, nextstate) {
          var or__3967__auto__ = reagent.impl.util._STAR_always_update_STAR_;
          if (cljs.core.truth_(or__3967__auto__)) {
            return or__3967__auto__;
          } else {
            var c = this;
            var old_argv = c["props"]["argv"];
            var new_argv = nextprops["argv"];
            if (f == null) {
              return old_argv == null || new_argv == null || cljs.core.not_EQ_.call(null, old_argv, new_argv);
            } else {
              return f.call(null, c, old_argv, new_argv);
            }
          }
        };
      }(G__24501);
      break;
    case "componentWillReceiveProps":
      return function(G__24501) {
        return function(props) {
          var c = this;
          return f.call(null, c, props["argv"]);
        };
      }(G__24501);
      break;
    case "getInitialState":
      return function(G__24501) {
        return function() {
          var c = this;
          return reagent.impl.component.set_state.call(null, c, f.call(null, c));
        };
      }(G__24501);
      break;
    case "getDefaultProps":
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("getDefaultProps not supported yet"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, false))].join(""));break;
    default:
      return null;
  }
};
reagent.impl.component.default_wrapper = function default_wrapper(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
    return function() {
      var G__24503__delegate = function(args) {
        var c = this;
        return cljs.core.apply.call(null, f, c, args);
      };
      var G__24503 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__24504__i = 0, G__24504__a = new Array(arguments.length - 0);
          while (G__24504__i < G__24504__a.length) {
            G__24504__a[G__24504__i] = arguments[G__24504__i + 0];
            ++G__24504__i;
          }
          args = new cljs.core.IndexedSeq(G__24504__a, 0);
        }
        return G__24503__delegate.call(this, args);
      };
      G__24503.cljs$lang$maxFixedArity = 0;
      G__24503.cljs$lang$applyTo = function(arglist__24505) {
        var args = cljs.core.seq(arglist__24505);
        return G__24503__delegate(args);
      };
      G__24503.cljs$core$IFn$_invoke$arity$variadic = G__24503__delegate;
      return G__24503;
    }();
  } else {
    return f;
  }
};
reagent.impl.component.dont_wrap = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), null, new cljs.core.Keyword(null, "render", "render", -1408033454), null, new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104), null], null), null);
reagent.impl.component.dont_bind = function dont_bind(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
    var G__24507 = f;
    G__24507["__reactDontBind"] = true;
    return G__24507;
  } else {
    return f;
  }
};
reagent.impl.component.get_wrapper = function get_wrapper(key, f, name) {
  if (cljs.core.truth_(reagent.impl.component.dont_wrap.call(null, key))) {
    return reagent.impl.component.dont_bind.call(null, f);
  } else {
    var wrap = reagent.impl.component.custom_wrapper.call(null, key, f);
    if (cljs.core.truth_(function() {
      var and__3955__auto__ = wrap;
      if (cljs.core.truth_(and__3955__auto__)) {
        return f;
      } else {
        return and__3955__auto__;
      }
    }())) {
      if (cljs.core.ifn_QMARK_.call(null, f)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected function in "), cljs.core.str(name), cljs.core.str(key), cljs.core.str(" but got "), cljs.core.str(f)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
      }
    } else {
    }
    var or__3967__auto__ = wrap;
    if (cljs.core.truth_(or__3967__auto__)) {
      return or__3967__auto__;
    } else {
      return reagent.impl.component.default_wrapper.call(null, f);
    }
  }
};
reagent.impl.component.obligatory = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), null, new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619), null, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), null], null);
reagent.impl.component.dash_to_camel = reagent.impl.util.memoize_1.call(null, reagent.impl.util.dash_to_camel);
reagent.impl.component.camelify_map_keys = function camelify_map_keys(fun_map) {
  return cljs.core.reduce_kv.call(null, function(m, k, v) {
    return cljs.core.assoc.call(null, m, cljs.core.keyword.call(null, reagent.impl.component.dash_to_camel.call(null, k)), v);
  }, cljs.core.PersistentArrayMap.EMPTY, fun_map);
};
reagent.impl.component.add_obligatory = function add_obligatory(fun_map) {
  return cljs.core.merge.call(null, reagent.impl.component.obligatory, fun_map);
};
reagent.impl.component.add_render = function add_render(fun_map, render_f) {
  return cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "cljsRender", "cljsRender", 247449928), render_f, new cljs.core.Keyword(null, "render", "render", -1408033454), (new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(reagent.impl.component.static_fns));
};
reagent.impl.component.wrap_funs = function wrap_funs(fun_map) {
  var render_fun = function() {
    var or__3967__auto__ = (new cljs.core.Keyword(null, "componentFunction", "componentFunction", 825866104)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__3967__auto__)) {
      return or__3967__auto__;
    } else {
      return(new cljs.core.Keyword(null, "render", "render", -1408033454)).cljs$core$IFn$_invoke$arity$1(fun_map);
    }
  }();
  var _ = cljs.core.ifn_QMARK_.call(null, render_fun) ? null : function() {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Render must be a function, not "), cljs.core.str(cljs.core.pr_str.call(null, render_fun))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "render-fun", "render-fun", -1209513086, null))))].join(""));
  }();
  var name = [cljs.core.str(function() {
    var or__3967__auto__ = (new cljs.core.Keyword(null, "displayName", "displayName", -809144601)).cljs$core$IFn$_invoke$arity$1(fun_map);
    if (cljs.core.truth_(or__3967__auto__)) {
      return or__3967__auto__;
    } else {
      var or__3967__auto____$1 = render_fun["displayName"];
      if (cljs.core.truth_(or__3967__auto____$1)) {
        return or__3967__auto____$1;
      } else {
        var or__3967__auto____$2 = render_fun["name"];
        if (cljs.core.truth_(or__3967__auto____$2)) {
          return or__3967__auto____$2;
        } else {
          return "";
        }
      }
    }
  }())].join("");
  var name_SINGLEQUOTE_ = cljs.core.empty_QMARK_.call(null, name) ? [cljs.core.str(cljs.core.gensym.call(null, "reagent"))].join("") : name;
  var fmap = reagent.impl.component.add_render.call(null, cljs.core.assoc.call(null, fun_map, new cljs.core.Keyword(null, "displayName", "displayName", -809144601), name_SINGLEQUOTE_), render_fun);
  return cljs.core.reduce_kv.call(null, function(render_fun, _, name, name_SINGLEQUOTE_, fmap) {
    return function(m, k, v) {
      return cljs.core.assoc.call(null, m, k, reagent.impl.component.get_wrapper.call(null, k, v, name_SINGLEQUOTE_));
    };
  }(render_fun, _, name, name_SINGLEQUOTE_, fmap), cljs.core.PersistentArrayMap.EMPTY, fmap);
};
reagent.impl.component.map_to_js = function map_to_js(m) {
  return cljs.core.reduce_kv.call(null, function(o, k, v) {
    var G__24509 = o;
    G__24509[cljs.core.name.call(null, k)] = v;
    return G__24509;
  }, {}, m);
};
reagent.impl.component.cljsify = function cljsify(body) {
  return reagent.impl.component.map_to_js.call(null, reagent.impl.component.wrap_funs.call(null, reagent.impl.component.add_obligatory.call(null, reagent.impl.component.camelify_map_keys.call(null, body))));
};
reagent.impl.component.create_class = function create_class(body) {
  if (cljs.core.map_QMARK_.call(null, body)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "body", "body", -408674142, null))))].join(""));
  }
  var spec = reagent.impl.component.cljsify.call(null, body);
  var res = React["createClass"](spec);
  var f = function(spec, res) {
    return function() {
      var G__24510__delegate = function(args) {
        return reagent.impl.component.as_element.call(null, cljs.core.apply.call(null, cljs.core.vector, res, args));
      };
      var G__24510 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__24511__i = 0, G__24511__a = new Array(arguments.length - 0);
          while (G__24511__i < G__24511__a.length) {
            G__24511__a[G__24511__i] = arguments[G__24511__i + 0];
            ++G__24511__i;
          }
          args = new cljs.core.IndexedSeq(G__24511__a, 0);
        }
        return G__24510__delegate.call(this, args);
      };
      G__24510.cljs$lang$maxFixedArity = 0;
      G__24510.cljs$lang$applyTo = function(arglist__24512) {
        var args = cljs.core.seq(arglist__24512);
        return G__24510__delegate(args);
      };
      G__24510.cljs$core$IFn$_invoke$arity$variadic = G__24510__delegate;
      return G__24510;
    }();
  }(spec, res);
  reagent.impl.util.cache_react_class.call(null, f, res);
  reagent.impl.util.cache_react_class.call(null, res, res);
  return f;
};
goog.provide("reagent.impl.template");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.batching");
goog.require("clojure.string");
goog.require("reagent.debug");
reagent.impl.template.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
reagent.impl.template.attr_aliases = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "class", "class", -2030961996), "className", new cljs.core.Keyword(null, "for", "for", -1323786319), "htmlFor", new cljs.core.Keyword(null, "charset", "charset", -1063822193), "charSet"], null);
reagent.impl.template.hiccup_tag_QMARK_ = function hiccup_tag_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol || typeof x === "string";
};
reagent.impl.template.valid_tag_QMARK_ = function valid_tag_QMARK_(x) {
  return reagent.impl.template.hiccup_tag_QMARK_.call(null, x) || cljs.core.ifn_QMARK_.call(null, x);
};
reagent.impl.template.to_js_val = function to_js_val(v) {
  if (typeof v === "string" || typeof v === "number") {
    return v;
  } else {
    if (function() {
      var G__24547 = v;
      if (G__24547) {
        var bit__4641__auto__ = G__24547.cljs$lang$protocol_mask$partition1$ & 4096;
        if (bit__4641__auto__ || G__24547.cljs$core$INamed$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.name.call(null, v);
    } else {
      if (cljs.core.coll_QMARK_.call(null, v)) {
        return cljs.core.clj__GT_js.call(null, v);
      } else {
        if (cljs.core.ifn_QMARK_.call(null, v)) {
          return function() {
            var G__24548__delegate = function(args) {
              return cljs.core.apply.call(null, v, args);
            };
            var G__24548 = function(var_args) {
              var args = null;
              if (arguments.length > 0) {
                var G__24549__i = 0, G__24549__a = new Array(arguments.length - 0);
                while (G__24549__i < G__24549__a.length) {
                  G__24549__a[G__24549__i] = arguments[G__24549__i + 0];
                  ++G__24549__i;
                }
                args = new cljs.core.IndexedSeq(G__24549__a, 0);
              }
              return G__24548__delegate.call(this, args);
            };
            G__24548.cljs$lang$maxFixedArity = 0;
            G__24548.cljs$lang$applyTo = function(arglist__24550) {
              var args = cljs.core.seq(arglist__24550);
              return G__24548__delegate(args);
            };
            G__24548.cljs$core$IFn$_invoke$arity$variadic = G__24548__delegate;
            return G__24548;
          }();
        } else {
          return v;
        }
      }
    }
  }
};
reagent.impl.template.undash_prop_name = function undash_prop_name(n) {
  var or__3967__auto__ = reagent.impl.template.attr_aliases.call(null, n);
  if (cljs.core.truth_(or__3967__auto__)) {
    return or__3967__auto__;
  } else {
    return reagent.impl.util.dash_to_camel.call(null, n);
  }
};
reagent.impl.template.cached_prop_name = reagent.impl.util.memoize_1.call(null, reagent.impl.template.undash_prop_name);
reagent.impl.template.convert_prop_value = function convert_prop_value(x) {
  if (typeof x === "string") {
    return x;
  } else {
    if (typeof x === "number") {
      return x;
    } else {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce_kv.call(null, function(o, k, v) {
          var G__24552 = o;
          G__24552[reagent.impl.template.cached_prop_name.call(null, k)] = reagent.impl.template.to_js_val.call(null, v);
          return G__24552;
        }, {}, x);
      } else {
        return reagent.impl.template.to_js_val.call(null, x);
      }
    }
  }
};
reagent.impl.template.set_id_class = function set_id_class(props, p__24553) {
  var vec__24555 = p__24553;
  var id = cljs.core.nth.call(null, vec__24555, 0, null);
  var class$ = cljs.core.nth.call(null, vec__24555, 1, null);
  var pid = props["id"];
  props["id"] = cljs.core.some_QMARK_.call(null, pid) ? pid : id;
  if (cljs.core.some_QMARK_.call(null, class$)) {
    var old = props["className"];
    return props["className"] = cljs.core.some_QMARK_.call(null, old) ? [cljs.core.str(class$), cljs.core.str(" "), cljs.core.str(old)].join("") : class$;
  } else {
    return null;
  }
};
reagent.impl.template.convert_props = function convert_props(props, id_class) {
  if (cljs.core.empty_QMARK_.call(null, props) && id_class == null) {
    return null;
  } else {
    var objprops = cljs.core.reduce_kv.call(null, function(o, k, v) {
      var pname_24556 = reagent.impl.template.cached_prop_name.call(null, k);
      o[pname_24556] = reagent.impl.template.convert_prop_value.call(null, v);
      return o;
    }, {}, props);
    if (cljs.core.some_QMARK_.call(null, id_class)) {
      reagent.impl.template.set_id_class.call(null, objprops, id_class);
    } else {
    }
    return objprops;
  }
};
reagent.impl.template.input_unmount = function input_unmount(this$) {
  return this$["cljsInputValue"] = null;
};
reagent.impl.template.input_set_value = function input_set_value(this$) {
  var temp__4130__auto__ = this$["cljsInputValue"];
  if (temp__4130__auto__ == null) {
    return null;
  } else {
    var value = temp__4130__auto__;
    this$["cljsInputDirty"] = false;
    var node = this$["getDOMNode"]();
    if (cljs.core.not_EQ_.call(null, value, node["value"])) {
      return node["value"] = value;
    } else {
      return null;
    }
  }
};
reagent.impl.template.input_handle_change = function input_handle_change(this$, on_change, e) {
  var res = on_change.call(null, e);
  if (cljs.core.truth_(this$["cljsInputDirty"])) {
  } else {
    this$["cljsInputDirty"] = true;
    reagent.impl.batching.do_later.call(null, function(res) {
      return function() {
        return reagent.impl.template.input_set_value.call(null, this$);
      };
    }(res));
  }
  return res;
};
reagent.impl.template.input_render_setup = function input_render_setup(this$, jsprops) {
  if (cljs.core.truth_(function() {
    var and__3955__auto__ = jsprops["hasOwnProperty"]("onChange");
    if (cljs.core.truth_(and__3955__auto__)) {
      return jsprops["hasOwnProperty"]("value");
    } else {
      return and__3955__auto__;
    }
  }())) {
    var v = jsprops["value"];
    var value = v == null ? "" : v;
    var on_change = jsprops["onChange"];
    this$["cljsInputValue"] = value;
    delete jsprops["value"];
    var G__24559 = jsprops;
    G__24559["defaultValue"] = value;
    G__24559["onChange"] = function(G__24559, v, value, on_change) {
      return function(p1__24557_SHARP_) {
        return reagent.impl.template.input_handle_change.call(null, this$, on_change, p1__24557_SHARP_);
      };
    }(G__24559, v, value, on_change);
    return G__24559;
  } else {
    return this$["cljsInputValue"] = null;
  }
};
reagent.impl.template.input_component_QMARK_ = function input_component_QMARK_(x) {
  return x === "input" || x === "textarea";
};
reagent.impl.template.reagent_input_class = null;
reagent.impl.template.input_spec = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "display-name", "display-name", 694513143), "ReagentInput", new cljs.core.Keyword(null, "component-did-update", "component-did-update", -1468549173), reagent.impl.template.input_set_value, new cljs.core.Keyword(null, "component-will-unmount", "component-will-unmount", -2058314698), reagent.impl.template.input_unmount, new cljs.core.Keyword(null, "component-function", "component-function", 654728922), 
function(argv, comp, jsprops, first_child) {
  var this$ = reagent.impl.component._STAR_current_component_STAR_;
  reagent.impl.template.input_render_setup.call(null, this$, jsprops);
  return reagent.impl.template.make_element.call(null, argv, comp, jsprops, first_child);
}], null);
reagent.impl.template.reagent_input = function reagent_input(argv, comp, jsprops, first_child) {
  if (reagent.impl.template.reagent_input_class == null) {
    reagent.impl.template.reagent_input_class = reagent.impl.component.create_class.call(null, reagent.impl.template.input_spec);
  } else {
  }
  return reagent.impl.template.reagent_input_class.call(null, argv, comp, jsprops, first_child);
};
reagent.impl.template.parse_tag = function parse_tag(hiccup_tag) {
  var vec__24561 = cljs.core.next.call(null, cljs.core.re_matches.call(null, reagent.impl.template.re_tag, cljs.core.name.call(null, hiccup_tag)));
  var tag = cljs.core.nth.call(null, vec__24561, 0, null);
  var id = cljs.core.nth.call(null, vec__24561, 1, null);
  var class$ = cljs.core.nth.call(null, vec__24561, 2, null);
  var class_SINGLEQUOTE_ = cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, /\./, " ") : null;
  if (cljs.core.truth_(tag)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Unknown tag: '"), cljs.core.str(hiccup_tag), cljs.core.str("'")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "tag", "tag", 350170304, null)))].join(""));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag, cljs.core.truth_(function() {
    var or__3967__auto__ = id;
    if (cljs.core.truth_(or__3967__auto__)) {
      return or__3967__auto__;
    } else {
      return class_SINGLEQUOTE_;
    }
  }()) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, class_SINGLEQUOTE_], null) : null], null);
};
reagent.impl.template.fn_to_class = function fn_to_class(f) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Expected a function, not "), cljs.core.str(cljs.core.pr_str.call(null, f))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  var spec = cljs.core.meta.call(null, f);
  var withrender = cljs.core.assoc.call(null, spec, new cljs.core.Keyword(null, "component-function", "component-function", 654728922), f);
  var res = reagent.impl.component.create_class.call(null, withrender);
  var wrapf = reagent.impl.util.cached_react_class.call(null, res);
  reagent.impl.util.cache_react_class.call(null, f, wrapf);
  return wrapf;
};
reagent.impl.template.as_class = function as_class(tag) {
  var temp__4128__auto__ = reagent.impl.util.cached_react_class.call(null, tag);
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.fn_to_class.call(null, tag);
  } else {
    var cached_class = temp__4128__auto__;
    return cached_class;
  }
};
reagent.impl.template.get_key = function get_key(x) {
  if (cljs.core.map_QMARK_.call(null, x)) {
    return cljs.core.get.call(null, x, new cljs.core.Keyword(null, "key", "key", -1516042587));
  } else {
    return null;
  }
};
reagent.impl.template.reag_element = function reag_element(tag, v) {
  var c = reagent.impl.template.as_class.call(null, tag);
  var jsprops = {"argv":v};
  var key_24566 = function() {
    var temp__4128__auto__ = function() {
      var G__24564 = cljs.core.meta.call(null, v);
      var G__24564__$1 = G__24564 == null ? null : reagent.impl.template.get_key.call(null, G__24564);
      return G__24564__$1;
    }();
    if (temp__4128__auto__ == null) {
      return reagent.impl.template.get_key.call(null, cljs.core.nth.call(null, v, 1, null));
    } else {
      var k = temp__4128__auto__;
      return k;
    }
  }();
  var G__24565_24567 = key_24566;
  var G__24565_24568__$1 = G__24565_24567 == null ? null : jsprops["key"] = G__24565_24567;
  return React["createElement"](c, jsprops);
};
reagent.impl.template.cached_parse = reagent.impl.util.memoize_1.call(null, reagent.impl.template.parse_tag);
reagent.impl.template.native_element = function native_element(tag, argv) {
  if (reagent.impl.template.hiccup_tag_QMARK_.call(null, tag)) {
    var vec__24572 = reagent.impl.template.cached_parse.call(null, tag);
    var comp = cljs.core.nth.call(null, vec__24572, 0, null);
    var id_class = cljs.core.nth.call(null, vec__24572, 1, null);
    var props = cljs.core.nth.call(null, argv, 1, null);
    var hasprops = props == null || cljs.core.map_QMARK_.call(null, props);
    var jsprops = reagent.impl.template.convert_props.call(null, hasprops ? props : null, id_class);
    var first_child = hasprops ? 2 : 1;
    if (reagent.impl.template.input_component_QMARK_.call(null, comp)) {
      return reagent.impl.template.as_element.call(null, cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.impl.template.reagent_input, argv, comp, jsprops, first_child], null), cljs.core.meta.call(null, argv)));
    } else {
      var p = function() {
        var temp__4128__auto__ = function() {
          var G__24573 = cljs.core.meta.call(null, argv);
          var G__24573__$1 = G__24573 == null ? null : reagent.impl.template.get_key.call(null, G__24573);
          return G__24573__$1;
        }();
        if (temp__4128__auto__ == null) {
          return jsprops;
        } else {
          var key = temp__4128__auto__;
          var G__24574 = jsprops == null ? {} : jsprops;
          G__24574["key"] = key;
          return G__24574;
        }
      }();
      return reagent.impl.template.make_element.call(null, argv, comp, p, first_child);
    }
  } else {
    return null;
  }
};
reagent.impl.template.vec_to_elem = function vec_to_elem(v) {
  if (cljs.core.count.call(null, v) > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Hiccup form should not be empty"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))))].join(""));
  }
  var tag = cljs.core.nth.call(null, v, 0);
  if (reagent.impl.template.valid_tag_QMARK_.call(null, tag)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Hiccup form: "), cljs.core.str(cljs.core.pr_str.call(null, v))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-tag?", "valid-tag?", 1243064160, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))))].join(""));
  }
  var temp__4128__auto__ = reagent.impl.template.native_element.call(null, tag, v);
  if (temp__4128__auto__ == null) {
    return reagent.impl.template.reag_element.call(null, tag, v);
  } else {
    var ne = temp__4128__auto__;
    return ne;
  }
};
reagent.impl.template.seq_ctx = {};
reagent.impl.template.warn_on_deref = function warn_on_deref(x) {
  if (cljs.core.truth_(reagent.impl.template.seq_ctx["warned"])) {
    return null;
  } else {
    if (typeof console !== "undefined") {
      console.log("Warning: Reactive deref not supported in seq in ", cljs.core.pr_str.call(null, x));
    } else {
    }
    return reagent.impl.template.seq_ctx["warned"] = true;
  }
};
reagent.impl.template.as_element = function as_element(x) {
  if (typeof x === "string") {
    return x;
  } else {
    if (cljs.core.vector_QMARK_.call(null, x)) {
      return reagent.impl.template.vec_to_elem.call(null, x);
    } else {
      if (cljs.core.seq_QMARK_.call(null, x)) {
        if (reagent.ratom._STAR_ratom_context_STAR_ == null) {
          return reagent.impl.template.expand_seq.call(null, x);
        } else {
          var s = reagent.ratom.capture_derefed.call(null, function() {
            return reagent.impl.template.expand_seq.call(null, x);
          }, reagent.impl.template.seq_ctx);
          if (cljs.core.truth_(reagent.ratom.captured.call(null, reagent.impl.template.seq_ctx))) {
            reagent.impl.template.warn_on_deref.call(null, x);
          } else {
          }
          return s;
        }
      } else {
        return x;
      }
    }
  }
};
reagent.impl.template.expand_seq = function expand_seq(s) {
  var a = cljs.core.into_array.call(null, s);
  var n__4854__auto___24575 = a.length;
  var i_24576 = 0;
  while (true) {
    if (i_24576 < n__4854__auto___24575) {
      a[i_24576] = reagent.impl.template.as_element.call(null, a[i_24576]);
      var G__24577 = i_24576 + 1;
      i_24576 = G__24577;
      continue;
    } else {
    }
    break;
  }
  return a;
};
reagent.impl.template.make_element = function make_element(argv, comp, jsprops, first_child) {
  if (cljs.core.count.call(null, argv) === first_child + 1) {
    return React["createElement"](comp, jsprops, reagent.impl.template.as_element.call(null, cljs.core.nth.call(null, argv, first_child)));
  } else {
    return React["createElement"].apply(null, cljs.core.reduce_kv.call(null, function(a, k, v) {
      if (k >= first_child) {
        a.push(reagent.impl.template.as_element.call(null, v));
      } else {
      }
      return a;
    }, [comp, jsprops], argv));
  }
};
goog.provide("reagent.core");
goog.require("cljs.core");
goog.require("reagent.impl.util");
goog.require("reagent.impl.component");
goog.require("reagent.interop");
goog.require("reagent.ratom");
goog.require("reagent.impl.template");
goog.require("reagent.impl.batching");
goog.require("reagent.debug");
reagent.core.is_client = reagent.impl.util.is_client;
reagent.core.create_element = function() {
  var create_element = null;
  var create_element__1 = function(type) {
    return create_element.call(null, type, null);
  };
  var create_element__2 = function(type, props) {
    if (!cljs.core.map_QMARK_.call(null, props)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
    }
    return React.createElement(type, props);
  };
  var create_element__3 = function(type, props, child) {
    if (!cljs.core.map_QMARK_.call(null, props)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
    }
    return React.createElement(type, props, child);
  };
  var create_element__4 = function() {
    var G__24464__delegate = function(type, props, child, children) {
      if (!cljs.core.map_QMARK_.call(null, props)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "props", "props", 2093813254, null)))))].join(""));
      }
      return cljs.core.apply.call(null, React.createElement, type, props, child, children);
    };
    var G__24464 = function(type, props, child, var_args) {
      var children = null;
      if (arguments.length > 3) {
        var G__24465__i = 0, G__24465__a = new Array(arguments.length - 3);
        while (G__24465__i < G__24465__a.length) {
          G__24465__a[G__24465__i] = arguments[G__24465__i + 3];
          ++G__24465__i;
        }
        children = new cljs.core.IndexedSeq(G__24465__a, 0);
      }
      return G__24464__delegate.call(this, type, props, child, children);
    };
    G__24464.cljs$lang$maxFixedArity = 3;
    G__24464.cljs$lang$applyTo = function(arglist__24466) {
      var type = cljs.core.first(arglist__24466);
      arglist__24466 = cljs.core.next(arglist__24466);
      var props = cljs.core.first(arglist__24466);
      arglist__24466 = cljs.core.next(arglist__24466);
      var child = cljs.core.first(arglist__24466);
      var children = cljs.core.rest(arglist__24466);
      return G__24464__delegate(type, props, child, children);
    };
    G__24464.cljs$core$IFn$_invoke$arity$variadic = G__24464__delegate;
    return G__24464;
  }();
  create_element = function(type, props, child, var_args) {
    var children = var_args;
    switch(arguments.length) {
      case 1:
        return create_element__1.call(this, type);
      case 2:
        return create_element__2.call(this, type, props);
      case 3:
        return create_element__3.call(this, type, props, child);
      default:
        var G__24467 = null;
        if (arguments.length > 3) {
          var G__24468__i = 0, G__24468__a = new Array(arguments.length - 3);
          while (G__24468__i < G__24468__a.length) {
            G__24468__a[G__24468__i] = arguments[G__24468__i + 3];
            ++G__24468__i;
          }
          G__24467 = new cljs.core.IndexedSeq(G__24468__a, 0);
        }
        return create_element__4.cljs$core$IFn$_invoke$arity$variadic(type, props, child, G__24467);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_element.cljs$lang$maxFixedArity = 3;
  create_element.cljs$lang$applyTo = create_element__4.cljs$lang$applyTo;
  create_element.cljs$core$IFn$_invoke$arity$1 = create_element__1;
  create_element.cljs$core$IFn$_invoke$arity$2 = create_element__2;
  create_element.cljs$core$IFn$_invoke$arity$3 = create_element__3;
  create_element.cljs$core$IFn$_invoke$arity$variadic = create_element__4.cljs$core$IFn$_invoke$arity$variadic;
  return create_element;
}();
reagent.core.as_element = function as_element(form) {
  return reagent.impl.template.as_element.call(null, form);
};
reagent.core.render = function() {
  var render = null;
  var render__2 = function(comp, container) {
    return render.call(null, comp, container, null);
  };
  var render__3 = function(comp, container, callback) {
    var f = function() {
      return reagent.core.as_element.call(null, cljs.core.fn_QMARK_.call(null, comp) ? comp.call(null) : comp);
    };
    return reagent.impl.util.render_component.call(null, f, container, callback);
  };
  render = function(comp, container, callback) {
    switch(arguments.length) {
      case 2:
        return render__2.call(this, comp, container);
      case 3:
        return render__3.call(this, comp, container, callback);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  render.cljs$core$IFn$_invoke$arity$2 = render__2;
  render.cljs$core$IFn$_invoke$arity$3 = render__3;
  return render;
}();
reagent.core.unmount_component_at_node = function unmount_component_at_node(container) {
  return reagent.impl.util.unmount_component_at_node.call(null, container);
};
reagent.core.render_to_string = function render_to_string(component) {
  var _STAR_non_reactive_STAR_24470 = reagent.impl.component._STAR_non_reactive_STAR_;
  reagent.impl.component._STAR_non_reactive_STAR_ = true;
  try {
    return React["renderToString"](reagent.core.as_element.call(null, component));
  } finally {
    reagent.impl.component._STAR_non_reactive_STAR_ = _STAR_non_reactive_STAR_24470;
  }
};
reagent.core.as_component = reagent.core.as_element;
reagent.core.render_component = reagent.core.render;
reagent.core.render_component_to_string = reagent.core.render_to_string;
reagent.core.render_to_static_markup = function render_to_static_markup(component) {
  var _STAR_non_reactive_STAR_24472 = reagent.impl.component._STAR_non_reactive_STAR_;
  reagent.impl.component._STAR_non_reactive_STAR_ = true;
  try {
    return React["renderToStaticMarkup"](reagent.core.as_element.call(null, component));
  } finally {
    reagent.impl.component._STAR_non_reactive_STAR_ = _STAR_non_reactive_STAR_24472;
  }
};
reagent.core.force_update_all = function force_update_all() {
  return reagent.impl.util.force_update_all.call(null);
};
goog.exportSymbol("reagent.core.force_update_all", reagent.core.force_update_all);
reagent.core.create_class = function create_class(spec) {
  return reagent.impl.component.create_class.call(null, spec);
};
reagent.core.current_component = function current_component() {
  return reagent.impl.component._STAR_current_component_STAR_;
};
reagent.core.state = function state(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.component.state.call(null, this$);
};
reagent.core.replace_state = function replace_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return reagent.impl.component.replace_state.call(null, this$, new_state);
};
reagent.core.set_state = function set_state(this$, new_state) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  if (new_state == null || cljs.core.map_QMARK_.call(null, new_state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "new-state", "new-state", 1150182315, null)))))].join(""));
  }
  return reagent.impl.component.set_state.call(null, this$, new_state);
};
reagent.core.props = function props(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_props.call(null, this$);
};
reagent.core.children = function children(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_children.call(null, this$);
};
reagent.core.argv = function argv(this$) {
  if (reagent.impl.util.reagent_component_QMARK_.call(null, this$)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("util", "reagent-component?", "util/reagent-component?", 1508385933, null), new cljs.core.Symbol(null, "this", "this", 1028897902, null))))].join(""));
  }
  return reagent.impl.util.get_argv.call(null, this$);
};
reagent.core.dom_node = function dom_node(this$) {
  return this$["getDOMNode"]();
};
reagent.core.merge_props = function merge_props(defaults, props) {
  return reagent.impl.util.merge_props.call(null, defaults, props);
};
reagent.core.flush = function flush() {
  return reagent.impl.batching.flush.call(null);
};
reagent.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return reagent.ratom.atom.call(null, x);
  };
  var atom__2 = function() {
    var G__24473__delegate = function(x, rest) {
      return cljs.core.apply.call(null, reagent.ratom.atom, x, rest);
    };
    var G__24473 = function(x, var_args) {
      var rest = null;
      if (arguments.length > 1) {
        var G__24474__i = 0, G__24474__a = new Array(arguments.length - 1);
        while (G__24474__i < G__24474__a.length) {
          G__24474__a[G__24474__i] = arguments[G__24474__i + 1];
          ++G__24474__i;
        }
        rest = new cljs.core.IndexedSeq(G__24474__a, 0);
      }
      return G__24473__delegate.call(this, x, rest);
    };
    G__24473.cljs$lang$maxFixedArity = 1;
    G__24473.cljs$lang$applyTo = function(arglist__24475) {
      var x = cljs.core.first(arglist__24475);
      var rest = cljs.core.rest(arglist__24475);
      return G__24473__delegate(x, rest);
    };
    G__24473.cljs$core$IFn$_invoke$arity$variadic = G__24473__delegate;
    return G__24473;
  }();
  atom = function(x, var_args) {
    var rest = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__24476 = null;
        if (arguments.length > 1) {
          var G__24477__i = 0, G__24477__a = new Array(arguments.length - 1);
          while (G__24477__i < G__24477__a.length) {
            G__24477__a[G__24477__i] = arguments[G__24477__i + 1];
            ++G__24477__i;
          }
          G__24476 = new cljs.core.IndexedSeq(G__24477__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__24476);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
reagent.core.wrap = function() {
  var wrap__delegate = function(value, reset_fn, args) {
    if (cljs.core.ifn_QMARK_.call(null, reset_fn)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "reset-fn", "reset-fn", 949643977, null))))].join(""));
    }
    return reagent.impl.util.make_wrapper.call(null, value, reset_fn, args);
  };
  var wrap = function(value, reset_fn, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__24478__i = 0, G__24478__a = new Array(arguments.length - 2);
      while (G__24478__i < G__24478__a.length) {
        G__24478__a[G__24478__i] = arguments[G__24478__i + 2];
        ++G__24478__i;
      }
      args = new cljs.core.IndexedSeq(G__24478__a, 0);
    }
    return wrap__delegate.call(this, value, reset_fn, args);
  };
  wrap.cljs$lang$maxFixedArity = 2;
  wrap.cljs$lang$applyTo = function(arglist__24479) {
    var value = cljs.core.first(arglist__24479);
    arglist__24479 = cljs.core.next(arglist__24479);
    var reset_fn = cljs.core.first(arglist__24479);
    var args = cljs.core.rest(arglist__24479);
    return wrap__delegate(value, reset_fn, args);
  };
  wrap.cljs$core$IFn$_invoke$arity$variadic = wrap__delegate;
  return wrap;
}();
reagent.core.cursor = function() {
  var cursor = null;
  var cursor__1 = function(path) {
    return function(ra) {
      return cursor.call(null, path, ra);
    };
  };
  var cursor__2 = function(path, ra) {
    if (function() {
      var G__24482 = ra;
      if (G__24482) {
        var bit__4648__auto__ = G__24482.cljs$lang$protocol_mask$partition0$ & 32768;
        if (bit__4648__auto__ || G__24482.cljs$core$IDeref$) {
          return true;
        } else {
          if (!G__24482.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__24482);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__24482);
      }
    }()) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null), new cljs.core.Symbol(null, "ra", "ra", 1258496501, null))))].join(""));
    }
    return reagent.ratom.cursor.call(null, path, ra);
  };
  var cursor__4 = function() {
    var G__24484__delegate = function(path, ra, reset_fn, args) {
      if (function() {
        var G__24483 = ra;
        if (G__24483) {
          var bit__4648__auto__ = G__24483.cljs$lang$protocol_mask$partition0$ & 32768;
          if (bit__4648__auto__ || G__24483.cljs$core$IDeref$) {
            return true;
          } else {
            if (!G__24483.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__24483);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__24483);
        }
      }()) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null), new cljs.core.Symbol(null, "ra", "ra", 1258496501, null))))].join(""));
      }
      if (cljs.core.ifn_QMARK_.call(null, reset_fn)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "reset-fn", "reset-fn", 949643977, null))))].join(""));
      }
      return reagent.ratom.cursor.call(null, path, ra, reset_fn, args);
    };
    var G__24484 = function(path, ra, reset_fn, var_args) {
      var args = null;
      if (arguments.length > 3) {
        var G__24485__i = 0, G__24485__a = new Array(arguments.length - 3);
        while (G__24485__i < G__24485__a.length) {
          G__24485__a[G__24485__i] = arguments[G__24485__i + 3];
          ++G__24485__i;
        }
        args = new cljs.core.IndexedSeq(G__24485__a, 0);
      }
      return G__24484__delegate.call(this, path, ra, reset_fn, args);
    };
    G__24484.cljs$lang$maxFixedArity = 3;
    G__24484.cljs$lang$applyTo = function(arglist__24486) {
      var path = cljs.core.first(arglist__24486);
      arglist__24486 = cljs.core.next(arglist__24486);
      var ra = cljs.core.first(arglist__24486);
      arglist__24486 = cljs.core.next(arglist__24486);
      var reset_fn = cljs.core.first(arglist__24486);
      var args = cljs.core.rest(arglist__24486);
      return G__24484__delegate(path, ra, reset_fn, args);
    };
    G__24484.cljs$core$IFn$_invoke$arity$variadic = G__24484__delegate;
    return G__24484;
  }();
  cursor = function(path, ra, reset_fn, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return cursor__1.call(this, path);
      case 2:
        return cursor__2.call(this, path, ra);
      default:
        var G__24487 = null;
        if (arguments.length > 3) {
          var G__24488__i = 0, G__24488__a = new Array(arguments.length - 3);
          while (G__24488__i < G__24488__a.length) {
            G__24488__a[G__24488__i] = arguments[G__24488__i + 3];
            ++G__24488__i;
          }
          G__24487 = new cljs.core.IndexedSeq(G__24488__a, 0);
        }
        return cursor__4.cljs$core$IFn$_invoke$arity$variadic(path, ra, reset_fn, G__24487);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  cursor.cljs$lang$maxFixedArity = 3;
  cursor.cljs$lang$applyTo = cursor__4.cljs$lang$applyTo;
  cursor.cljs$core$IFn$_invoke$arity$1 = cursor__1;
  cursor.cljs$core$IFn$_invoke$arity$2 = cursor__2;
  cursor.cljs$core$IFn$_invoke$arity$variadic = cursor__4.cljs$core$IFn$_invoke$arity$variadic;
  return cursor;
}();
reagent.core.next_tick = function next_tick(f) {
  return reagent.impl.batching.next_tick.call(null, f);
};
reagent.core.partial = function() {
  var partial__delegate = function(f, args) {
    return new reagent.impl.util.partial_ifn(f, args, null);
  };
  var partial = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__24489__i = 0, G__24489__a = new Array(arguments.length - 1);
      while (G__24489__i < G__24489__a.length) {
        G__24489__a[G__24489__i] = arguments[G__24489__i + 1];
        ++G__24489__i;
      }
      args = new cljs.core.IndexedSeq(G__24489__a, 0);
    }
    return partial__delegate.call(this, f, args);
  };
  partial.cljs$lang$maxFixedArity = 1;
  partial.cljs$lang$applyTo = function(arglist__24490) {
    var f = cljs.core.first(arglist__24490);
    var args = cljs.core.rest(arglist__24490);
    return partial__delegate(f, args);
  };
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__delegate;
  return partial;
}();
goog.provide("html");
goog.require("cljs.core");
goog.require("reagent.core");
html.timer = reagent.core.atom.call(null, new Date);
html.time_color = reagent.core.atom.call(null, "#f34");
html.update_time = function update_time(time) {
  return setTimeout(function() {
    return cljs.core.reset_BANG_.call(null, time, new Date);
  }, 100);
};
html.greeting = function greeting(message) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h1", "h1", -1896887462), message], null);
};
html.proFile = function proFile(name, desc, pic, extra) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "width", "width", -384071477), "200px"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul.unstyled", 
  "ul.unstyled", -1948620308), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "a.list-item", "a.list-item", -1757304900), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.pull-left", "div.pull-left", 727555294), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.circle", "div.circle", 2134211799), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "img", "img", 1442687358), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), pic, new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "width", "width", 
  -384071477), "40px", new cljs.core.Keyword(null, "height", "height", 1025178622), "40px"], null)], null)], null)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.text", "div.text", 645060726), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), desc, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "br", "br", 934104792)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.small", "span.small", 1761756015), name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span.text-grey", "span.text-grey", 391584589), extra], null)], null)], null)], null)], null)], null)], null)], null);
};
html.clock = function clock() {
  html.update_time.call(null, html.timer);
  var time_str = cljs.core.first.call(null, clojure.string.split.call(null, cljs.core.deref.call(null, html.timer).toTimeString(), " "));
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.example-clock", "div.example-clock", 1559289088), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "color", "color", 1011675173), cljs.core.deref.call(null, html.time_color)], null)], null), time_str], null);
};
html.color_input = function color_input() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div.color-input", "div.color-input", -879914246), "Time color: ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "input", "input", 556931961), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), "text", new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.deref.call(null, 
  html.time_color), new cljs.core.Keyword(null, "on-change", "on-change", -732046149), function(p1__16528_SHARP_) {
    return cljs.core.reset_BANG_.call(null, html.time_color, p1__16528_SHARP_.target.value);
  }], null)], null)], null);
};
html.simple_example = function simple_example(name, desc, pic, extra) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [html.proFile, name, desc, pic, extra], null);
};
html.run = function run(name, desc, pic, extra) {
  return reagent.core.render_component.call(null, function() {
    return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [html.proFile, name, desc, pic, extra], null);
  }, document.body);
};
goog.provide("renderStrategy");
goog.require("cljs.core");
goog.require("html");
renderStrategy.run = function run(renderer) {
  return html.run.call(null);
};
goog.provide("pouchDB");
goog.require("cljs.core");
pouchDB.flushdb = cljs.core.PersistentVector.EMPTY;
pouchDB.dumpdb = cljs.core.PersistentVector.EMPTY;
pouchDB.dbase = function() {
  var obj13831 = {};
  return obj13831;
}();
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj23947 = {};
  return obj23947;
}();
cljs.reader.read_char = function read_char(reader) {
  if (function() {
    var and__3955__auto__ = reader;
    if (and__3955__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4611__auto__ = reader == null ? null : reader;
    return function() {
      var or__3967__auto__ = cljs.reader.read_char[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.reader.read_char["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if (function() {
    var and__3955__auto__ = reader;
    if (and__3955__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__3955__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4611__auto__ = reader == null ? null : reader;
    return function() {
      var or__3967__auto__ = cljs.reader.unread[goog.typeOf(x__4611__auto__)];
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.reader.unread["_"];
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4554__auto__, writer__4555__auto__, opt__4556__auto__) {
  return cljs.core._write.call(null, writer__4555__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function __GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3967__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__3967__auto__)) {
    return or__3967__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if (arguments.length > 1) {
      var G__23948__i = 0, G__23948__a = new Array(arguments.length - 1);
      while (G__23948__i < G__23948__a.length) {
        G__23948__a[G__23948__i] = arguments[G__23948__i + 1];
        ++G__23948__i;
      }
      msg = new cljs.core.IndexedSeq(G__23948__a, 0);
    }
    return reader_error__delegate.call(this, rdr, msg);
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__23949) {
    var rdr = cljs.core.first(arglist__23949);
    var msg = cljs.core.rest(arglist__23949);
    return reader_error__delegate(rdr, msg);
  };
  reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
  return reader_error;
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3955__auto__ = !(ch === "#");
  if (and__3955__auto__) {
    var and__3955__auto____$1 = !(ch === "'");
    if (and__3955__auto____$1) {
      var and__3955__auto____$2 = !(ch === ":");
      if (and__3955__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__3955__auto____$2;
      }
    } else {
      return and__3955__auto____$1;
    }
  } else {
    return and__3955__auto__;
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__23950 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__23951 = cljs.reader.read_char.call(null, rdr);
      sb = G__23950;
      ch = G__23951;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.call(null, ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__23952 = cljs.reader.read_char.call(null, rdr);
      ch = G__23952;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__23953 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__23953;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__23954 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__23954;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__3967__auto__ = ch == null;
      if (or__3967__auto__) {
        return or__3967__auto__;
      } else {
        var or__3967__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__3967__auto____$1) {
          return or__3967__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__3967__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__23955 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__23956 = cljs.reader.read_char.call(null, reader);
      buffer = G__23955;
      ch = G__23956;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__23957 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__23958 = cljs.reader.read_char.call(null, reader);
        buffer = G__23957;
        ch = G__23958;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__23959 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__23960 = cljs.reader.read_char.call(null, reader);
          buffer = G__23959;
          ch = G__23960;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__23965 = function() {
            var G__23963 = buffer;
            G__23963.append(nch);
            return G__23963;
          }();
          var G__23966 = cljs.reader.read_char.call(null, reader);
          buffer = G__23965;
          ch = G__23966;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__23967 = function() {
            var G__23964 = buffer;
            G__23964.append(ch);
            return G__23964;
          }();
          var G__23968 = cljs.reader.read_char.call(null, reader);
          buffer = G__23967;
          ch = G__23968;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(function() {
    var and__3955__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__3955__auto__)) {
      return!(token.length === 1);
    } else {
      return and__3955__auto__;
    }
  }())) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__23970 = o;
    if (G__23970) {
      var bit__4648__auto__ = G__23970.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4648__auto__ || G__23970.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__23970.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__23970);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__23970);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__23971 = reader;
        var G__23972 = eof_is_error;
        var G__23973 = sentinel;
        var G__23974 = is_recursive;
        reader = G__23971;
        eof_is_error = G__23972;
        sentinel = G__23973;
        is_recursive = G__23974;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__23975 = cljs.reader.read_comment.call(null, reader, ch);
          var G__23976 = eof_is_error;
          var G__23977 = sentinel;
          var G__23978 = is_recursive;
          reader = G__23975;
          eof_is_error = G__23976;
          sentinel = G__23977;
          is_recursive = G__23978;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__23979 = reader;
            var G__23980 = eof_is_error;
            var G__23981 = sentinel;
            var G__23982 = is_recursive;
            reader = G__23979;
            eof_is_error = G__23980;
            sentinel = G__23981;
            is_recursive = G__23982;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__23983 = b.append("0");
          b = G__23983;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return!cljs.reader.divisible_QMARK_.call(null, num, div);
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  return cljs.reader.divisible_QMARK_.call(null, year, 4) && (cljs.reader.indivisible_QMARK_.call(null, year, 100) || cljs.reader.divisible_QMARK_.call(null, year, 400));
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function parse_and_validate_timestamp(s) {
  var vec__23985 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__23985, 0, null);
  var years = cljs.core.nth.call(null, vec__23985, 1, null);
  var months = cljs.core.nth.call(null, vec__23985, 2, null);
  var days = cljs.core.nth.call(null, vec__23985, 3, null);
  var hours = cljs.core.nth.call(null, vec__23985, 4, null);
  var minutes = cljs.core.nth.call(null, vec__23985, 5, null);
  var seconds = cljs.core.nth.call(null, vec__23985, 6, null);
  var fraction = cljs.core.nth.call(null, vec__23985, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__23985, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__23985, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__23985, 10, null);
  var v = vec__23985;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__3967__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__3967__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__3967__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__3967__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__3967__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__3967__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__3967__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__3967__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__3967__auto__)) {
        return or__3967__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__23987 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__23987, 0, null);
    var months = cljs.core.nth.call(null, vec__23987, 1, null);
    var days = cljs.core.nth.call(null, vec__23987, 2, null);
    var hours = cljs.core.nth.call(null, vec__23987, 3, null);
    var minutes = cljs.core.nth.call(null, vec__23987, 4, null);
    var seconds = cljs.core.nth.call(null, vec__23987, 5, null);
    var ms = cljs.core.nth.call(null, vec__23987, 6, null);
    var offset = cljs.core.nth.call(null, vec__23987, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__24000_24012 = cljs.core.seq.call(null, form);
    var chunk__24001_24013 = null;
    var count__24002_24014 = 0;
    var i__24003_24015 = 0;
    while (true) {
      if (i__24003_24015 < count__24002_24014) {
        var x_24016 = cljs.core._nth.call(null, chunk__24001_24013, i__24003_24015);
        arr.push(x_24016);
        var G__24017 = seq__24000_24012;
        var G__24018 = chunk__24001_24013;
        var G__24019 = count__24002_24014;
        var G__24020 = i__24003_24015 + 1;
        seq__24000_24012 = G__24017;
        chunk__24001_24013 = G__24018;
        count__24002_24014 = G__24019;
        i__24003_24015 = G__24020;
        continue;
      } else {
        var temp__4126__auto___24021 = cljs.core.seq.call(null, seq__24000_24012);
        if (temp__4126__auto___24021) {
          var seq__24000_24022__$1 = temp__4126__auto___24021;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__24000_24022__$1)) {
            var c__4754__auto___24023 = cljs.core.chunk_first.call(null, seq__24000_24022__$1);
            var G__24024 = cljs.core.chunk_rest.call(null, seq__24000_24022__$1);
            var G__24025 = c__4754__auto___24023;
            var G__24026 = cljs.core.count.call(null, c__4754__auto___24023);
            var G__24027 = 0;
            seq__24000_24012 = G__24024;
            chunk__24001_24013 = G__24025;
            count__24002_24014 = G__24026;
            i__24003_24015 = G__24027;
            continue;
          } else {
            var x_24028 = cljs.core.first.call(null, seq__24000_24022__$1);
            arr.push(x_24028);
            var G__24029 = cljs.core.next.call(null, seq__24000_24022__$1);
            var G__24030 = null;
            var G__24031 = 0;
            var G__24032 = 0;
            seq__24000_24012 = G__24029;
            chunk__24001_24013 = G__24030;
            count__24002_24014 = G__24031;
            i__24003_24015 = G__24032;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj24005 = {};
        return obj24005;
      }();
      var seq__24006_24033 = cljs.core.seq.call(null, form);
      var chunk__24007_24034 = null;
      var count__24008_24035 = 0;
      var i__24009_24036 = 0;
      while (true) {
        if (i__24009_24036 < count__24008_24035) {
          var vec__24010_24037 = cljs.core._nth.call(null, chunk__24007_24034, i__24009_24036);
          var k_24038 = cljs.core.nth.call(null, vec__24010_24037, 0, null);
          var v_24039 = cljs.core.nth.call(null, vec__24010_24037, 1, null);
          obj[cljs.core.name.call(null, k_24038)] = v_24039;
          var G__24040 = seq__24006_24033;
          var G__24041 = chunk__24007_24034;
          var G__24042 = count__24008_24035;
          var G__24043 = i__24009_24036 + 1;
          seq__24006_24033 = G__24040;
          chunk__24007_24034 = G__24041;
          count__24008_24035 = G__24042;
          i__24009_24036 = G__24043;
          continue;
        } else {
          var temp__4126__auto___24044 = cljs.core.seq.call(null, seq__24006_24033);
          if (temp__4126__auto___24044) {
            var seq__24006_24045__$1 = temp__4126__auto___24044;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__24006_24045__$1)) {
              var c__4754__auto___24046 = cljs.core.chunk_first.call(null, seq__24006_24045__$1);
              var G__24047 = cljs.core.chunk_rest.call(null, seq__24006_24045__$1);
              var G__24048 = c__4754__auto___24046;
              var G__24049 = cljs.core.count.call(null, c__4754__auto___24046);
              var G__24050 = 0;
              seq__24006_24033 = G__24047;
              chunk__24007_24034 = G__24048;
              count__24008_24035 = G__24049;
              i__24009_24036 = G__24050;
              continue;
            } else {
              var vec__24011_24051 = cljs.core.first.call(null, seq__24006_24045__$1);
              var k_24052 = cljs.core.nth.call(null, vec__24011_24051, 0, null);
              var v_24053 = cljs.core.nth.call(null, vec__24011_24051, 1, null);
              obj[cljs.core.name.call(null, k_24052)] = v_24053;
              var G__24054 = cljs.core.next.call(null, seq__24006_24045__$1);
              var G__24055 = null;
              var G__24056 = 0;
              var G__24057 = 0;
              seq__24006_24033 = G__24054;
              chunk__24007_24034 = G__24055;
              count__24008_24035 = G__24056;
              i__24009_24036 = G__24057;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
    }
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("servant.worker");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("cljs.core.async");
servant.worker.worker_fn_map = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
servant.worker.register_servant_fn = function register_servant_fn(fn_name, f) {
  return cljs.core.swap_BANG_.call(null, servant.worker.worker_fn_map, cljs.core.assoc, cljs.core.keyword.call(null, fn_name), f);
};
servant.worker.run_function_name = function run_function_name(message_data) {
  var fn_key = cljs.reader.read_string.call(null, message_data["fn"]);
  var f = cljs.core.get.call(null, cljs.core.deref.call(null, servant.worker.worker_fn_map), fn_key);
  var args = message_data["args"];
  return cljs.core.apply.call(null, f, args);
};
servant.worker.post_array_buffer = function post_array_buffer(p__23935) {
  var vec__23937 = p__23935;
  var result = cljs.core.nth.call(null, vec__23937, 0, null);
  var arraybuffers = cljs.core.nth.call(null, vec__23937, 1, null);
  return self.postMessage(result, cljs.core.clj__GT_js.call(null, arraybuffers));
};
servant.worker.decode_message = function decode_message(event) {
  var pred__23941 = cljs.core._EQ_;
  var expr__23942 = event.data["command"];
  if (cljs.core.truth_(pred__23941.call(null, "channel", expr__23942))) {
    return self.postMessage(servant.worker.run_function_name.call(null, event.data));
  } else {
    if (cljs.core.truth_(pred__23941.call(null, "channel-arraybuffer", expr__23942))) {
      return servant.worker.post_array_buffer.call(null, servant.worker.run_function_name.call(null, event.data));
    } else {
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__23942)].join(""));
    }
  }
};
servant.worker.bootstrap = function bootstrap() {
  return self.onmessage = servant.worker.decode_message;
};
goog.provide("servant.core");
goog.require("cljs.core");
goog.require("servant.worker");
goog.require("cljs.core.async");
servant.core.webworker_QMARK_ = function webworker_QMARK_() {
  return void 0 === self.document;
};
servant.core.not_webworker_QMARK_ = cljs.core.complement.call(null, servant.core.webworker_QMARK_);
servant.core.spawn_servants = function spawn_servants(worker_count, worker_script) {
  var servant_channel = cljs.core.async.chan.call(null, worker_count);
  var c__6608__auto___24210 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto___24210, servant_channel) {
    return function() {
      var f__6609__auto__ = function() {
        var switch__6564__auto__ = function(c__6608__auto___24210, servant_channel) {
          return function(state_24181) {
            var state_val_24182 = state_24181[1];
            if (state_val_24182 === 7) {
              var inst_24142 = state_24181[5];
              var inst_24144 = state_24181[6];
              var inst_24141 = state_24181[7];
              var inst_24143 = state_24181[8];
              var inst_24152 = state_24181[2];
              var inst_24153 = inst_24144 + 1;
              var tmp24183 = inst_24142;
              var tmp24184 = inst_24141;
              var tmp24185 = inst_24143;
              var inst_24141__$1 = tmp24184;
              var inst_24142__$1 = tmp24183;
              var inst_24143__$1 = tmp24185;
              var inst_24144__$1 = inst_24153;
              var state_24181__$1 = function() {
                var statearr_24186 = state_24181;
                statearr_24186[9] = inst_24152;
                statearr_24186[5] = inst_24142__$1;
                statearr_24186[6] = inst_24144__$1;
                statearr_24186[7] = inst_24141__$1;
                statearr_24186[8] = inst_24143__$1;
                return statearr_24186;
              }();
              var statearr_24187_24211 = state_24181__$1;
              statearr_24187_24211[2] = null;
              statearr_24187_24211[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_24182 === 1) {
                var inst_24139 = cljs.core.range.call(null, worker_count);
                var inst_24140 = cljs.core.seq.call(null, inst_24139);
                var inst_24141 = inst_24140;
                var inst_24142 = null;
                var inst_24143 = 0;
                var inst_24144 = 0;
                var state_24181__$1 = function() {
                  var statearr_24188 = state_24181;
                  statearr_24188[5] = inst_24142;
                  statearr_24188[6] = inst_24144;
                  statearr_24188[7] = inst_24141;
                  statearr_24188[8] = inst_24143;
                  return statearr_24188;
                }();
                var statearr_24189_24212 = state_24181__$1;
                statearr_24189_24212[2] = null;
                statearr_24189_24212[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24182 === 4) {
                  var inst_24142 = state_24181[5];
                  var inst_24144 = state_24181[6];
                  var inst_24149 = cljs.core._nth.call(null, inst_24142, inst_24144);
                  var inst_24150 = new Worker(worker_script);
                  var state_24181__$1 = function() {
                    var statearr_24190 = state_24181;
                    statearr_24190[10] = inst_24149;
                    return statearr_24190;
                  }();
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24181__$1, 7, servant_channel, inst_24150);
                } else {
                  if (state_val_24182 === 13) {
                    var inst_24172 = state_24181[2];
                    var state_24181__$1 = state_24181;
                    var statearr_24191_24213 = state_24181__$1;
                    statearr_24191_24213[2] = inst_24172;
                    statearr_24191_24213[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24182 === 6) {
                      var inst_24177 = state_24181[2];
                      var state_24181__$1 = state_24181;
                      var statearr_24192_24214 = state_24181__$1;
                      statearr_24192_24214[2] = inst_24177;
                      statearr_24192_24214[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24182 === 3) {
                        var inst_24179 = state_24181[2];
                        var state_24181__$1 = state_24181;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24181__$1, inst_24179);
                      } else {
                        if (state_val_24182 === 12) {
                          var inst_24156 = state_24181[11];
                          var inst_24165 = cljs.core.first.call(null, inst_24156);
                          var inst_24166 = new Worker(worker_script);
                          var state_24181__$1 = function() {
                            var statearr_24193 = state_24181;
                            statearr_24193[12] = inst_24165;
                            return statearr_24193;
                          }();
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24181__$1, 14, servant_channel, inst_24166);
                        } else {
                          if (state_val_24182 === 2) {
                            var inst_24144 = state_24181[6];
                            var inst_24143 = state_24181[8];
                            var inst_24146 = inst_24144 < inst_24143;
                            var inst_24147 = inst_24146;
                            var state_24181__$1 = state_24181;
                            if (cljs.core.truth_(inst_24147)) {
                              var statearr_24194_24215 = state_24181__$1;
                              statearr_24194_24215[1] = 4;
                            } else {
                              var statearr_24195_24216 = state_24181__$1;
                              statearr_24195_24216[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24182 === 11) {
                              var inst_24156 = state_24181[11];
                              var inst_24160 = cljs.core.chunk_first.call(null, inst_24156);
                              var inst_24161 = cljs.core.chunk_rest.call(null, inst_24156);
                              var inst_24162 = cljs.core.count.call(null, inst_24160);
                              var inst_24141 = inst_24161;
                              var inst_24142 = inst_24160;
                              var inst_24143 = inst_24162;
                              var inst_24144 = 0;
                              var state_24181__$1 = function() {
                                var statearr_24196 = state_24181;
                                statearr_24196[5] = inst_24142;
                                statearr_24196[6] = inst_24144;
                                statearr_24196[7] = inst_24141;
                                statearr_24196[8] = inst_24143;
                                return statearr_24196;
                              }();
                              var statearr_24197_24217 = state_24181__$1;
                              statearr_24197_24217[2] = null;
                              statearr_24197_24217[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_24182 === 9) {
                                var state_24181__$1 = state_24181;
                                var statearr_24198_24218 = state_24181__$1;
                                statearr_24198_24218[2] = null;
                                statearr_24198_24218[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_24182 === 5) {
                                  var inst_24156 = state_24181[11];
                                  var inst_24141 = state_24181[7];
                                  var inst_24156__$1 = cljs.core.seq.call(null, inst_24141);
                                  var state_24181__$1 = function() {
                                    var statearr_24199 = state_24181;
                                    statearr_24199[11] = inst_24156__$1;
                                    return statearr_24199;
                                  }();
                                  if (inst_24156__$1) {
                                    var statearr_24200_24219 = state_24181__$1;
                                    statearr_24200_24219[1] = 8;
                                  } else {
                                    var statearr_24201_24220 = state_24181__$1;
                                    statearr_24201_24220[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24182 === 14) {
                                    var inst_24156 = state_24181[11];
                                    var inst_24168 = state_24181[2];
                                    var inst_24169 = cljs.core.next.call(null, inst_24156);
                                    var inst_24141 = inst_24169;
                                    var inst_24142 = null;
                                    var inst_24143 = 0;
                                    var inst_24144 = 0;
                                    var state_24181__$1 = function() {
                                      var statearr_24202 = state_24181;
                                      statearr_24202[5] = inst_24142;
                                      statearr_24202[6] = inst_24144;
                                      statearr_24202[13] = inst_24168;
                                      statearr_24202[7] = inst_24141;
                                      statearr_24202[8] = inst_24143;
                                      return statearr_24202;
                                    }();
                                    var statearr_24203_24221 = state_24181__$1;
                                    statearr_24203_24221[2] = null;
                                    statearr_24203_24221[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_24182 === 10) {
                                      var inst_24175 = state_24181[2];
                                      var state_24181__$1 = state_24181;
                                      var statearr_24204_24222 = state_24181__$1;
                                      statearr_24204_24222[2] = inst_24175;
                                      statearr_24204_24222[1] = 6;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_24182 === 8) {
                                        var inst_24156 = state_24181[11];
                                        var inst_24158 = cljs.core.chunked_seq_QMARK_.call(null, inst_24156);
                                        var state_24181__$1 = state_24181;
                                        if (inst_24158) {
                                          var statearr_24205_24223 = state_24181__$1;
                                          statearr_24205_24223[1] = 11;
                                        } else {
                                          var statearr_24206_24224 = state_24181__$1;
                                          statearr_24206_24224[1] = 12;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6608__auto___24210, servant_channel);
        return function(switch__6564__auto__, c__6608__auto___24210, servant_channel) {
          return function() {
            var state_machine__6565__auto__ = null;
            var state_machine__6565__auto____0 = function() {
              var statearr_24208 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_24208[0] = state_machine__6565__auto__;
              statearr_24208[1] = 1;
              return statearr_24208;
            };
            var state_machine__6565__auto____1 = function(state_24181) {
              while (true) {
                var result__6566__auto__ = switch__6564__auto__.call(null, state_24181);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6566__auto__;
                }
                break;
              }
            };
            state_machine__6565__auto__ = function(state_24181) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6565__auto____0.call(this);
                case 1:
                  return state_machine__6565__auto____1.call(this, state_24181);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
            state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
            return state_machine__6565__auto__;
          }();
        }(switch__6564__auto__, c__6608__auto___24210, servant_channel);
      }();
      var state__6610__auto__ = function() {
        var statearr_24209 = f__6609__auto__.call(null);
        statearr_24209[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto___24210;
        return statearr_24209;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
    };
  }(c__6608__auto___24210, servant_channel));
  return servant_channel;
};
servant.core.kill_servants = function kill_servants(servant_channel, worker_count) {
  var c__6608__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto__) {
    return function() {
      var f__6609__auto__ = function() {
        var switch__6564__auto__ = function(c__6608__auto__) {
          return function(state_24346) {
            var state_val_24347 = state_24346[1];
            if (state_val_24347 === 7) {
              var inst_24306 = state_24346[5];
              var inst_24307 = state_24346[6];
              var inst_24308 = state_24346[7];
              var inst_24309 = state_24346[8];
              var inst_24316 = state_24346[2];
              var inst_24317 = inst_24316.terminate();
              var inst_24318 = inst_24309 + 1;
              var tmp24348 = inst_24306;
              var tmp24349 = inst_24307;
              var tmp24350 = inst_24308;
              var inst_24306__$1 = tmp24348;
              var inst_24307__$1 = tmp24349;
              var inst_24308__$1 = tmp24350;
              var inst_24309__$1 = inst_24318;
              var state_24346__$1 = function() {
                var statearr_24351 = state_24346;
                statearr_24351[5] = inst_24306__$1;
                statearr_24351[6] = inst_24307__$1;
                statearr_24351[7] = inst_24308__$1;
                statearr_24351[9] = inst_24317;
                statearr_24351[8] = inst_24309__$1;
                return statearr_24351;
              }();
              var statearr_24352_24375 = state_24346__$1;
              statearr_24352_24375[2] = null;
              statearr_24352_24375[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_24347 === 1) {
                var inst_24304 = cljs.core.range.call(null, worker_count);
                var inst_24305 = cljs.core.seq.call(null, inst_24304);
                var inst_24306 = inst_24305;
                var inst_24307 = null;
                var inst_24308 = 0;
                var inst_24309 = 0;
                var state_24346__$1 = function() {
                  var statearr_24353 = state_24346;
                  statearr_24353[5] = inst_24306;
                  statearr_24353[6] = inst_24307;
                  statearr_24353[7] = inst_24308;
                  statearr_24353[8] = inst_24309;
                  return statearr_24353;
                }();
                var statearr_24354_24376 = state_24346__$1;
                statearr_24354_24376[2] = null;
                statearr_24354_24376[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24347 === 4) {
                  var inst_24307 = state_24346[6];
                  var inst_24309 = state_24346[8];
                  var inst_24314 = cljs.core._nth.call(null, inst_24307, inst_24309);
                  var state_24346__$1 = function() {
                    var statearr_24355 = state_24346;
                    statearr_24355[10] = inst_24314;
                    return statearr_24355;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24346__$1, 7, servant_channel);
                } else {
                  if (state_val_24347 === 13) {
                    var inst_24337 = state_24346[2];
                    var state_24346__$1 = state_24346;
                    var statearr_24356_24377 = state_24346__$1;
                    statearr_24356_24377[2] = inst_24337;
                    statearr_24356_24377[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_24347 === 6) {
                      var inst_24342 = state_24346[2];
                      var state_24346__$1 = state_24346;
                      var statearr_24357_24378 = state_24346__$1;
                      statearr_24357_24378[2] = inst_24342;
                      statearr_24357_24378[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_24347 === 3) {
                        var inst_24344 = state_24346[2];
                        var state_24346__$1 = state_24346;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24346__$1, inst_24344);
                      } else {
                        if (state_val_24347 === 12) {
                          var inst_24321 = state_24346[11];
                          var inst_24330 = cljs.core.first.call(null, inst_24321);
                          var state_24346__$1 = function() {
                            var statearr_24358 = state_24346;
                            statearr_24358[12] = inst_24330;
                            return statearr_24358;
                          }();
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24346__$1, 14, servant_channel);
                        } else {
                          if (state_val_24347 === 2) {
                            var inst_24308 = state_24346[7];
                            var inst_24309 = state_24346[8];
                            var inst_24311 = inst_24309 < inst_24308;
                            var inst_24312 = inst_24311;
                            var state_24346__$1 = state_24346;
                            if (cljs.core.truth_(inst_24312)) {
                              var statearr_24359_24379 = state_24346__$1;
                              statearr_24359_24379[1] = 4;
                            } else {
                              var statearr_24360_24380 = state_24346__$1;
                              statearr_24360_24380[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_24347 === 11) {
                              var inst_24321 = state_24346[11];
                              var inst_24325 = cljs.core.chunk_first.call(null, inst_24321);
                              var inst_24326 = cljs.core.chunk_rest.call(null, inst_24321);
                              var inst_24327 = cljs.core.count.call(null, inst_24325);
                              var inst_24306 = inst_24326;
                              var inst_24307 = inst_24325;
                              var inst_24308 = inst_24327;
                              var inst_24309 = 0;
                              var state_24346__$1 = function() {
                                var statearr_24361 = state_24346;
                                statearr_24361[5] = inst_24306;
                                statearr_24361[6] = inst_24307;
                                statearr_24361[7] = inst_24308;
                                statearr_24361[8] = inst_24309;
                                return statearr_24361;
                              }();
                              var statearr_24362_24381 = state_24346__$1;
                              statearr_24362_24381[2] = null;
                              statearr_24362_24381[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_24347 === 9) {
                                var state_24346__$1 = state_24346;
                                var statearr_24363_24382 = state_24346__$1;
                                statearr_24363_24382[2] = null;
                                statearr_24363_24382[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_24347 === 5) {
                                  var inst_24306 = state_24346[5];
                                  var inst_24321 = state_24346[11];
                                  var inst_24321__$1 = cljs.core.seq.call(null, inst_24306);
                                  var state_24346__$1 = function() {
                                    var statearr_24364 = state_24346;
                                    statearr_24364[11] = inst_24321__$1;
                                    return statearr_24364;
                                  }();
                                  if (inst_24321__$1) {
                                    var statearr_24365_24383 = state_24346__$1;
                                    statearr_24365_24383[1] = 8;
                                  } else {
                                    var statearr_24366_24384 = state_24346__$1;
                                    statearr_24366_24384[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_24347 === 14) {
                                    var inst_24321 = state_24346[11];
                                    var inst_24332 = state_24346[2];
                                    var inst_24333 = inst_24332.terminate();
                                    var inst_24334 = cljs.core.next.call(null, inst_24321);
                                    var inst_24306 = inst_24334;
                                    var inst_24307 = null;
                                    var inst_24308 = 0;
                                    var inst_24309 = 0;
                                    var state_24346__$1 = function() {
                                      var statearr_24367 = state_24346;
                                      statearr_24367[5] = inst_24306;
                                      statearr_24367[6] = inst_24307;
                                      statearr_24367[7] = inst_24308;
                                      statearr_24367[13] = inst_24333;
                                      statearr_24367[8] = inst_24309;
                                      return statearr_24367;
                                    }();
                                    var statearr_24368_24385 = state_24346__$1;
                                    statearr_24368_24385[2] = null;
                                    statearr_24368_24385[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_24347 === 10) {
                                      var inst_24340 = state_24346[2];
                                      var state_24346__$1 = state_24346;
                                      var statearr_24369_24386 = state_24346__$1;
                                      statearr_24369_24386[2] = inst_24340;
                                      statearr_24369_24386[1] = 6;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_24347 === 8) {
                                        var inst_24321 = state_24346[11];
                                        var inst_24323 = cljs.core.chunked_seq_QMARK_.call(null, inst_24321);
                                        var state_24346__$1 = state_24346;
                                        if (inst_24323) {
                                          var statearr_24370_24387 = state_24346__$1;
                                          statearr_24370_24387[1] = 11;
                                        } else {
                                          var statearr_24371_24388 = state_24346__$1;
                                          statearr_24371_24388[1] = 12;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6608__auto__);
        return function(switch__6564__auto__, c__6608__auto__) {
          return function() {
            var state_machine__6565__auto__ = null;
            var state_machine__6565__auto____0 = function() {
              var statearr_24373 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_24373[0] = state_machine__6565__auto__;
              statearr_24373[1] = 1;
              return statearr_24373;
            };
            var state_machine__6565__auto____1 = function(state_24346) {
              while (true) {
                var result__6566__auto__ = switch__6564__auto__.call(null, state_24346);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6566__auto__;
                }
                break;
              }
            };
            state_machine__6565__auto__ = function(state_24346) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6565__auto____0.call(this);
                case 1:
                  return state_machine__6565__auto____1.call(this, state_24346);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
            state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
            return state_machine__6565__auto__;
          }();
        }(switch__6564__auto__, c__6608__auto__);
      }();
      var state__6610__auto__ = function() {
        var statearr_24374 = f__6609__auto__.call(null);
        statearr_24374[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto__;
        return statearr_24374;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
    };
  }(c__6608__auto__));
  return c__6608__auto__;
};
servant.core.f__GT_key = function f__GT_key(f) {
  return cljs.core.ffirst.call(null, cljs.core.filter.call(null, function(p1__24389_SHARP_) {
    return cljs.core._EQ_.call(null, f, cljs.core.second.call(null, p1__24389_SHARP_));
  }, cljs.core.deref.call(null, servant.worker.worker_fn_map)));
};
servant.core.standard_message = function standard_message(worker, fn_key, args) {
  return worker.postMessage(function() {
    var obj24393 = {"command":"channel", "fn":fn_key, "args":cljs.core.clj__GT_js.call(null, args)};
    return obj24393;
  }());
};
servant.core.array_buffer_message = function array_buffer_message(worker, fn_key, args) {
  var vec__24397 = args;
  var args__$1 = cljs.core.nth.call(null, vec__24397, 0, null);
  var arraybuffers = cljs.core.nth.call(null, vec__24397, 1, null);
  return worker.postMessage(function() {
    var obj24399 = {"command":"channel-arraybuffer", "fn":fn_key, "args":cljs.core.clj__GT_js.call(null, args__$1)};
    return obj24399;
  }(), cljs.core.clj__GT_js.call(null, arraybuffers));
};
servant.core.array_buffer_message_standard_reply = function array_buffer_message_standard_reply(worker, fn_key, args) {
  var vec__24403 = args;
  var args__$1 = cljs.core.nth.call(null, vec__24403, 0, null);
  var arraybuffers = cljs.core.nth.call(null, vec__24403, 1, null);
  return worker.postMessage(function() {
    var obj24405 = {"command":"channel", "fn":fn_key, "args":cljs.core.clj__GT_js.call(null, args__$1)};
    return obj24405;
  }(), cljs.core.clj__GT_js.call(null, arraybuffers));
};
servant.core.servant_thread_with_key = function() {
  var servant_thread_with_key__delegate = function(servant_channel, post_message_fn, fn_key, args) {
    var out_channel = cljs.core.async.chan.call(null, 1);
    var c__6608__auto___24457 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto___24457, out_channel) {
      return function() {
        var f__6609__auto__ = function() {
          var switch__6564__auto__ = function(c__6608__auto___24457, out_channel) {
            return function(state_24439) {
              var state_val_24440 = state_24439[1];
              if (state_val_24440 === 2) {
                var inst_24433 = state_24439[2];
                var inst_24434 = cljs.core.pr_str.call(null, fn_key);
                var inst_24435 = post_message_fn.call(null, inst_24433, inst_24434, args);
                var inst_24436 = function() {
                  var worker = inst_24433;
                  return function(worker, inst_24433, inst_24434, inst_24435, state_val_24440, c__6608__auto___24457, out_channel) {
                    return function(p1__24406_SHARP_) {
                      var c__6608__auto____$1 = cljs.core.async.chan.call(null, 1);
                      cljs.core.async.impl.dispatch.run.call(null, function(c__6608__auto____$1, worker, inst_24433, inst_24434, inst_24435, state_val_24440, c__6608__auto___24457, out_channel) {
                        return function() {
                          var f__6609__auto__ = function() {
                            var switch__6564__auto__ = function(c__6608__auto____$1, worker, inst_24433, inst_24434, inst_24435, state_val_24440, c__6608__auto___24457, out_channel) {
                              return function(state_24447) {
                                var state_val_24448 = state_24447[1];
                                if (state_val_24448 === 3) {
                                  var inst_24445 = state_24447[2];
                                  var state_24447__$1 = state_24447;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24447__$1, inst_24445);
                                } else {
                                  if (state_val_24448 === 2) {
                                    var inst_24443 = state_24447[2];
                                    var state_24447__$1 = function() {
                                      var statearr_24449 = state_24447;
                                      statearr_24449[5] = inst_24443;
                                      return statearr_24449;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24447__$1, 3, servant_channel, worker);
                                  } else {
                                    if (state_val_24448 === 1) {
                                      var inst_24441 = p1__24406_SHARP_.data;
                                      var state_24447__$1 = state_24447;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_24447__$1, 2, out_channel, inst_24441);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              };
                            }(c__6608__auto____$1, worker, inst_24433, inst_24434, inst_24435, state_val_24440, c__6608__auto___24457, out_channel);
                            return function(switch__6564__auto__, c__6608__auto____$1, worker, inst_24433, inst_24434, inst_24435, state_val_24440, c__6608__auto___24457, out_channel) {
                              return function() {
                                var state_machine__6565__auto__ = null;
                                var state_machine__6565__auto____0 = function() {
                                  var statearr_24451 = [null, null, null, null, null, null];
                                  statearr_24451[0] = state_machine__6565__auto__;
                                  statearr_24451[1] = 1;
                                  return statearr_24451;
                                };
                                var state_machine__6565__auto____1 = function(state_24447) {
                                  while (true) {
                                    var result__6566__auto__ = switch__6564__auto__.call(null, state_24447);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                      continue;
                                    } else {
                                      return result__6566__auto__;
                                    }
                                    break;
                                  }
                                };
                                state_machine__6565__auto__ = function(state_24447) {
                                  switch(arguments.length) {
                                    case 0:
                                      return state_machine__6565__auto____0.call(this);
                                    case 1:
                                      return state_machine__6565__auto____1.call(this, state_24447);
                                  }
                                  throw new Error("Invalid arity: " + arguments.length);
                                };
                                state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
                                state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
                                return state_machine__6565__auto__;
                              }();
                            }(switch__6564__auto__, c__6608__auto____$1, worker, inst_24433, inst_24434, inst_24435, state_val_24440, c__6608__auto___24457, out_channel);
                          }();
                          var state__6610__auto__ = function() {
                            var statearr_24452 = f__6609__auto__.call(null);
                            statearr_24452[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto____$1;
                            return statearr_24452;
                          }();
                          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
                        };
                      }(c__6608__auto____$1, worker, inst_24433, inst_24434, inst_24435, state_val_24440, c__6608__auto___24457, out_channel));
                      return c__6608__auto____$1;
                    };
                  }(worker, inst_24433, inst_24434, inst_24435, state_val_24440, c__6608__auto___24457, out_channel);
                }();
                var inst_24437 = inst_24433.addEventListener("message", inst_24436);
                var state_24439__$1 = function() {
                  var statearr_24453 = state_24439;
                  statearr_24453[5] = inst_24435;
                  return statearr_24453;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24439__$1, inst_24437);
              } else {
                if (state_val_24440 === 1) {
                  var state_24439__$1 = state_24439;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24439__$1, 2, servant_channel);
                } else {
                  return null;
                }
              }
            };
          }(c__6608__auto___24457, out_channel);
          return function(switch__6564__auto__, c__6608__auto___24457, out_channel) {
            return function() {
              var state_machine__6565__auto__ = null;
              var state_machine__6565__auto____0 = function() {
                var statearr_24455 = [null, null, null, null, null, null];
                statearr_24455[0] = state_machine__6565__auto__;
                statearr_24455[1] = 1;
                return statearr_24455;
              };
              var state_machine__6565__auto____1 = function(state_24439) {
                while (true) {
                  var result__6566__auto__ = switch__6564__auto__.call(null, state_24439);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6566__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6566__auto__;
                  }
                  break;
                }
              };
              state_machine__6565__auto__ = function(state_24439) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6565__auto____0.call(this);
                  case 1:
                    return state_machine__6565__auto____1.call(this, state_24439);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6565__auto____0;
              state_machine__6565__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6565__auto____1;
              return state_machine__6565__auto__;
            }();
          }(switch__6564__auto__, c__6608__auto___24457, out_channel);
        }();
        var state__6610__auto__ = function() {
          var statearr_24456 = f__6609__auto__.call(null);
          statearr_24456[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6608__auto___24457;
          return statearr_24456;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6610__auto__);
      };
    }(c__6608__auto___24457, out_channel));
    return out_channel;
  };
  var servant_thread_with_key = function(servant_channel, post_message_fn, fn_key, var_args) {
    var args = null;
    if (arguments.length > 3) {
      var G__24458__i = 0, G__24458__a = new Array(arguments.length - 3);
      while (G__24458__i < G__24458__a.length) {
        G__24458__a[G__24458__i] = arguments[G__24458__i + 3];
        ++G__24458__i;
      }
      args = new cljs.core.IndexedSeq(G__24458__a, 0);
    }
    return servant_thread_with_key__delegate.call(this, servant_channel, post_message_fn, fn_key, args);
  };
  servant_thread_with_key.cljs$lang$maxFixedArity = 3;
  servant_thread_with_key.cljs$lang$applyTo = function(arglist__24459) {
    var servant_channel = cljs.core.first(arglist__24459);
    arglist__24459 = cljs.core.next(arglist__24459);
    var post_message_fn = cljs.core.first(arglist__24459);
    arglist__24459 = cljs.core.next(arglist__24459);
    var fn_key = cljs.core.first(arglist__24459);
    var args = cljs.core.rest(arglist__24459);
    return servant_thread_with_key__delegate(servant_channel, post_message_fn, fn_key, args);
  };
  servant_thread_with_key.cljs$core$IFn$_invoke$arity$variadic = servant_thread_with_key__delegate;
  return servant_thread_with_key;
}();
servant.core.servant_thread = function() {
  var servant_thread__delegate = function(servant_channel, post_message_fn, f, args) {
    return cljs.core.apply.call(null, servant.core.servant_thread_with_key, servant_channel, post_message_fn, servant.core.f__GT_key.call(null, f), args);
  };
  var servant_thread = function(servant_channel, post_message_fn, f, var_args) {
    var args = null;
    if (arguments.length > 3) {
      var G__24460__i = 0, G__24460__a = new Array(arguments.length - 3);
      while (G__24460__i < G__24460__a.length) {
        G__24460__a[G__24460__i] = arguments[G__24460__i + 3];
        ++G__24460__i;
      }
      args = new cljs.core.IndexedSeq(G__24460__a, 0);
    }
    return servant_thread__delegate.call(this, servant_channel, post_message_fn, f, args);
  };
  servant_thread.cljs$lang$maxFixedArity = 3;
  servant_thread.cljs$lang$applyTo = function(arglist__24461) {
    var servant_channel = cljs.core.first(arglist__24461);
    arglist__24461 = cljs.core.next(arglist__24461);
    var post_message_fn = cljs.core.first(arglist__24461);
    arglist__24461 = cljs.core.next(arglist__24461);
    var f = cljs.core.first(arglist__24461);
    var args = cljs.core.rest(arglist__24461);
    return servant_thread__delegate(servant_channel, post_message_fn, f, args);
  };
  servant_thread.cljs$core$IFn$_invoke$arity$variadic = servant_thread__delegate;
  return servant_thread;
}();
goog.provide("mining");
goog.require("cljs.core");
goog.require("pubsub");
goog.require("servant.worker");
goog.require("servant.core");
goog.require("cljs.core.async");
mining.hashmine = cljs.core.async.chan.call(null);
mining.hashmine.type = "workerch";
console.log("this runs in the browser");
mining.worker_count = 2;
mining.worker_script = "wrkr.js";
mining.servant_channel = servant.core.spawn_servants.call(null, mining.worker_count, mining.worker_script);
mining.mine = function mine(rootHash) {
  l.og.call(null, new cljs.core.Keyword(null, "mine", "mine", -130428525), "about to mine %s ", rootHash);
  mining.chann = servant.core.servant_thread.call(null, mining.servant_channel, servant.core.standard_message, "none", "newjob", rootHash);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99532) {
            var state_val_99533 = state_99532[1];
            if (state_val_99533 === 2) {
              var inst_99526 = state_99532[2];
              var inst_99527 = mining.v = inst_99526;
              var inst_99528 = l.og.call(null, new cljs.core.Keyword(null, "mine", "mine", -130428525), "recieved from mining", mining.v);
              var inst_99529 = JSON.parse(mining.v);
              var inst_99530 = mining.pub.call(null, "blockMined", inst_99529);
              var state_99532__$1 = function() {
                var statearr_99534 = state_99532;
                statearr_99534[5] = inst_99527;
                statearr_99534[6] = inst_99528;
                return statearr_99534;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99532__$1, inst_99530);
            } else {
              if (state_val_99533 === 1) {
                var inst_99524 = l.og.call(null, new cljs.core.Keyword(null, "mine", "mine", -130428525), "about to wait for mining to end ");
                var state_99532__$1 = function() {
                  var statearr_99535 = state_99532;
                  statearr_99535[7] = inst_99524;
                  return statearr_99535;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99532__$1, 2, mining.chann);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99537 = [null, null, null, null, null, null, null, null];
              statearr_99537[0] = state_machine__6577__auto__;
              statearr_99537[1] = 1;
              return statearr_99537;
            };
            var state_machine__6577__auto____1 = function(state_99532) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99532);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99532) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99532);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99538 = f__6621__auto__.call(null);
        statearr_99538[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99538;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
goog.provide("plainText");
goog.require("cljs.core");
goog.provide("peerjs");
goog.require("cljs.core");
peerjs.peerParams = function() {
  var obj13827 = {"host":"localhost", "port":8E3, "key":"peerjs", "debug":false};
  return obj13827;
}();
goog.provide("servantWorkers");
goog.require("cljs.core");
goog.require("servant.worker");
goog.require("servant.core");
servantWorkers.worker_count = 2;
servantWorkers.worker_script = "wrkr.js";
servantWorkers.servant_channel = servant.core.spawn_servants.call(null, servantWorkers.worker_count, servantWorkers.worker_script);
goog.provide("intercomMake");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
intercomMake.makeInv = function makeInv(typ, message) {
  var obj99805 = {"type":"json", "data":JSON.stringify(function() {
    var obj99807 = {"type":"inv", "data":function() {
      var obj99809 = {"type":typ, "vector":message};
      return obj99809;
    }()};
    return obj99807;
  }())};
  return obj99805;
};
intercomMake.makeData = function makeData(typ, message) {
  return null;
};
intercomMake.makeGetVersion = function makeGetVersion(typ, message) {
  return null;
};
intercomMake.makeVersion = function makeVersion(message) {
  var obj99813 = {"type":"version", "data":message};
  return obj99813;
};
intercomMake.makeConn = function makeConn(conn) {
  l.og.call(null, new cljs.core.Keyword(null, "makeConn", "makeConn", 176409920), "make conn ", conn);
  var obj99817 = {"type":"conn", "data":conn};
  return obj99817;
};
intercomMake.makeGetBlock = function makeGetBlock(hash) {
  l.og.call(null, new cljs.core.Keyword(null, "makeGetBlock", "makeGetBlock", -1966015644), "about to make block ", hash);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99923) {
            var state_val_99924 = state_99923[1];
            if (state_val_99924 === 7) {
              var state_99923__$1 = state_99923;
              var statearr_99925_99944 = state_99923__$1;
              statearr_99925_99944[2] = null;
              statearr_99925_99944[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_99924 === 1) {
                var inst_99883 = [];
                var inst_99884 = {"count":0, "blocks":inst_99883};
                var inst_99885 = inst_99884[intercomMake.hash_stop] = 0;
                var inst_99886 = intercomMake.gtBlock = inst_99884;
                var inst_99887 = app.blockchain.blockchainHeight.call(null, 1);
                var state_99923__$1 = function() {
                  var statearr_99926 = state_99923;
                  statearr_99926[5] = inst_99886;
                  statearr_99926[6] = inst_99885;
                  return statearr_99926;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99923__$1, 2, inst_99887);
              } else {
                if (state_val_99924 === 4) {
                  var inst_99921 = state_99923[2];
                  var state_99923__$1 = function() {
                    var statearr_99927 = state_99923;
                    statearr_99927[7] = inst_99921;
                    return statearr_99927;
                  }();
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99923__$1, intercomMake.gtBlock);
                } else {
                  if (state_val_99924 === 6) {
                    var inst_99892 = state_99923[8];
                    var inst_99908 = inst_99892 < 10;
                    var state_99923__$1 = state_99923;
                    if (cljs.core.truth_(inst_99908)) {
                      var statearr_99928_99945 = state_99923__$1;
                      statearr_99928_99945[1] = 9;
                    } else {
                      var statearr_99929_99946 = state_99923__$1;
                      statearr_99929_99946[1] = 10;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_99924 === 3) {
                      var inst_99891 = state_99923[9];
                      var inst_99892 = state_99923[8];
                      var inst_99894 = "new loop " + inst_99891;
                      var inst_99895 = inst_99894 + " ";
                      var inst_99896 = l.og.call(null, new cljs.core.Keyword(null, "makeGetBlock", "makeGetBlock", -1966015644), inst_99895, inst_99892);
                      var inst_99897 = "b" + inst_99891;
                      var inst_99898 = db.g.call(null, inst_99897);
                      var state_99923__$1 = function() {
                        var statearr_99930 = state_99923;
                        statearr_99930[10] = inst_99896;
                        return statearr_99930;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99923__$1, 5, inst_99898);
                    } else {
                      if (state_val_99924 === 2) {
                        var inst_99889 = state_99923[2];
                        var inst_99890 = intercomMake.heightForBlock = inst_99889;
                        var inst_99891 = intercomMake.heightForBlock;
                        var inst_99892 = 0;
                        var state_99923__$1 = function() {
                          var statearr_99931 = state_99923;
                          statearr_99931[11] = inst_99890;
                          statearr_99931[9] = inst_99891;
                          statearr_99931[8] = inst_99892;
                          return statearr_99931;
                        }();
                        var statearr_99932_99947 = state_99923__$1;
                        statearr_99932_99947[2] = null;
                        statearr_99932_99947[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_99924 === 11) {
                          var inst_99892 = state_99923[8];
                          var inst_99914 = state_99923[2];
                          var inst_99915 = inst_99892 + 1;
                          var inst_99891 = inst_99914;
                          var inst_99892__$1 = inst_99915;
                          var state_99923__$1 = function() {
                            var statearr_99933 = state_99923;
                            statearr_99933[9] = inst_99891;
                            statearr_99933[8] = inst_99892__$1;
                            return statearr_99933;
                          }();
                          var statearr_99934_99948 = state_99923__$1;
                          statearr_99934_99948[2] = null;
                          statearr_99934_99948[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_99924 === 9) {
                            var inst_99891 = state_99923[9];
                            var inst_99910 = inst_99891 - 1;
                            var state_99923__$1 = state_99923;
                            var statearr_99935_99949 = state_99923__$1;
                            statearr_99935_99949[2] = inst_99910;
                            statearr_99935_99949[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_99924 === 5) {
                              var inst_99891 = state_99923[9];
                              var inst_99900 = state_99923[2];
                              var inst_99901 = intercomMake.blockg = inst_99900;
                              var inst_99902 = l.og.call(null, new cljs.core.Keyword(null, "makeGetBlock", "makeGetBlock", -1966015644), "curr block ");
                              var inst_99903 = intercomMake.gtBlock.count = inst_99891;
                              var inst_99904 = intercomMake.gtBlock.blocks;
                              var inst_99905 = inst_99904.push(intercomMake.blockg);
                              var inst_99906 = 0 < inst_99891;
                              var state_99923__$1 = function() {
                                var statearr_99936 = state_99923;
                                statearr_99936[12] = inst_99902;
                                statearr_99936[13] = inst_99903;
                                statearr_99936[14] = inst_99905;
                                statearr_99936[15] = inst_99901;
                                return statearr_99936;
                              }();
                              if (cljs.core.truth_(inst_99906)) {
                                var statearr_99937_99950 = state_99923__$1;
                                statearr_99937_99950[1] = 6;
                              } else {
                                var statearr_99938_99951 = state_99923__$1;
                                statearr_99938_99951[1] = 7;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_99924 === 10) {
                                var inst_99891 = state_99923[9];
                                var inst_99912 = cljs.core.quot.call(null, inst_99891, 2);
                                var state_99923__$1 = state_99923;
                                var statearr_99939_99952 = state_99923__$1;
                                statearr_99939_99952[2] = inst_99912;
                                statearr_99939_99952[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_99924 === 8) {
                                  var inst_99919 = state_99923[2];
                                  var state_99923__$1 = state_99923;
                                  var statearr_99940_99953 = state_99923__$1;
                                  statearr_99940_99953[2] = inst_99919;
                                  statearr_99940_99953[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99942 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_99942[0] = state_machine__6577__auto__;
              statearr_99942[1] = 1;
              return statearr_99942;
            };
            var state_machine__6577__auto____1 = function(state_99923) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99923);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99923) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99923);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99943 = f__6621__auto__.call(null);
        statearr_99943[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99943;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
goog.provide("crypt");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
crypt.arraybtostring = function arraybtostring(buff) {
  return arrayBToString(buff);
};
crypt.encode = function encode(x) {
  return(new TextEncoder("utf-8")).encode(x);
};
crypt.shaC = cljs.core.async.chan.call(null);
crypt.resultToCh = function resultToCh(chan, digest) {
  crypt.m = crypt.arraybtostring.call(null, digest);
  l.og.call(null, new cljs.core.Keyword(null, "blockchain", "blockchain", -1030570049), "to channel: %s", crypt.m);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99967) {
            var state_val_99968 = state_99967[1];
            if (state_val_99968 === 2) {
              var inst_99965 = state_99967[2];
              var state_99967__$1 = state_99967;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99967__$1, inst_99965);
            } else {
              if (state_val_99968 === 1) {
                var state_99967__$1 = state_99967;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_99967__$1, 2, chan, crypt.m);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99970 = [null, null, null, null, null];
              statearr_99970[0] = state_machine__6577__auto__;
              statearr_99970[1] = 1;
              return statearr_99970;
            };
            var state_machine__6577__auto____1 = function(state_99967) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99967);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99967) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99967);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99971 = f__6621__auto__.call(null);
        statearr_99971[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99971;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
crypt.shaCallb = function shaCallb(digest) {
  l.og.call(null, new cljs.core.Keyword(null, "shaCallB", "shaCallB", 117825821), "%s", "about to do hash2");
  crypt.h = crypt.arraybtostring.call(null, digest);
  l.og.call(null, new cljs.core.Keyword(null, "shaCallB", "shaCallB", 117825821), "", crypt.h);
  return pubsub.pub.call(null, "crypto", crypt.h);
};
crypt.sha256 = function sha256(x) {
  l.og.call(null, new cljs.core.Keyword(null, "sha256", "sha256", 1890611800), "sha256 %s", x);
  return crypto.subtle.digest(function() {
    var obj99975 = {"name":"SHA-256"};
    return obj99975;
  }(), crypt.encode.call(null, x)).then(crypt.shaCallb);
};
crypt.sha256c = function sha256c(c, x) {
  return crypto.subtle.digest(function() {
    var obj99979 = {"name":"SHA-256"};
    return obj99979;
  }(), crypt.encode.call(null, x)).then(c);
};
crypt.s256 = function s256(k) {
  console.log((new cljs.core.Keyword(null, "blockchain", "blockchain", -1030570049)).toString(), "about to sha256 ", k);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_100020) {
            var state_val_100021 = state_100020[1];
            if (state_val_100021 === 2) {
              var inst_100013 = state_100020[2];
              var inst_100014 = crypt.arraybtostring.call(null, inst_100013);
              var inst_100015 = crypt.r = inst_100014;
              var inst_100016 = (new cljs.core.Keyword(null, "s256", "s256", -1445609188)).toString();
              var inst_100017 = "got from sha256 " + k;
              var inst_100018 = console.log(inst_100016, inst_100017, crypt.r);
              var state_100020__$1 = function() {
                var statearr_100022 = state_100020;
                statearr_100022[5] = inst_100015;
                statearr_100022[6] = inst_100018;
                return statearr_100022;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_100020__$1, crypt.r);
            } else {
              if (state_val_100021 === 1) {
                var inst_100004 = cljs.core.async.chan.call(null);
                var inst_100007 = {"name":"SHA-256"};
                var inst_100008 = crypt.encode.call(null, k);
                var inst_100009 = crypto.subtle.digest(inst_100007, inst_100008);
                var inst_100010 = function() {
                  var c = inst_100004;
                  return function(c, inst_100004, inst_100007, inst_100008, inst_100009, state_val_100021, c__6620__auto__) {
                    return function(p1__99980_SHARP_) {
                      return cljs.core.async.put_BANG_.call(null, c, p1__99980_SHARP_);
                    };
                  }(c, inst_100004, inst_100007, inst_100008, inst_100009, state_val_100021, c__6620__auto__);
                }();
                var inst_100011 = inst_100009.then(inst_100010);
                var state_100020__$1 = function() {
                  var statearr_100023 = state_100020;
                  statearr_100023[7] = inst_100011;
                  return statearr_100023;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_100020__$1, 2, inst_100004);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_100025 = [null, null, null, null, null, null, null, null];
              statearr_100025[0] = state_machine__6577__auto__;
              statearr_100025[1] = 1;
              return statearr_100025;
            };
            var state_machine__6577__auto____1 = function(state_100020) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_100020);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_100020) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_100020);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_100026 = f__6621__auto__.call(null);
        statearr_100026[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_100026;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
crypt.bHash = function bHash(blockHeader) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_100050) {
            var state_val_100051 = state_100050[1];
            if (state_val_100051 === 2) {
              var inst_100047 = state_100050[2];
              var inst_100048 = crypt.blockHash = inst_100047;
              var state_100050__$1 = function() {
                var statearr_100052 = state_100050;
                statearr_100052[5] = inst_100048;
                return statearr_100052;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_100050__$1, crypt.blockHash);
            } else {
              if (state_val_100051 === 1) {
                var inst_100042 = JSON.stringify(blockHeader);
                var inst_100043 = crypt.stringified = inst_100042;
                var inst_100044 = l.og.call(null, new cljs.core.Keyword(null, "blockchain", "blockchain", -1030570049), "stringified", crypt.stringified);
                var inst_100045 = crypt.s256.call(null, crypt.stringified);
                var state_100050__$1 = function() {
                  var statearr_100053 = state_100050;
                  statearr_100053[6] = inst_100043;
                  statearr_100053[7] = inst_100044;
                  return statearr_100053;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_100050__$1, 2, inst_100045);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_100055 = [null, null, null, null, null, null, null, null];
              statearr_100055[0] = state_machine__6577__auto__;
              statearr_100055[1] = 1;
              return statearr_100055;
            };
            var state_machine__6577__auto____1 = function(state_100050) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_100050);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_100050) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_100050);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_100056 = f__6621__auto__.call(null);
        statearr_100056[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_100056;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
crypt.merkleRoot = function merkleRoot(transactions) {
  l.og.call(null, new cljs.core.Keyword(null, "merkleRoot", "merkleRoot", -1567310602), "transactions ", transactions);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_100198) {
            var state_val_100199 = state_100198[1];
            if (state_val_100199 === 9) {
              var inst_100190 = state_100198[2];
              var inst_100191 = crypt.fromC = inst_100190;
              var inst_100192 = l.og.call(null, new cljs.core.Keyword(null, "merkleRoot", "merkleRoot", -1567310602), "from ch ", crypt.fromC);
              var inst_100193 = crypt.fromC.type = "fmr";
              var inst_100196 = {"value":crypt.fromC, "type":"fmr"};
              var state_100198__$1 = function() {
                var statearr_100201 = state_100198;
                statearr_100201[5] = inst_100191;
                statearr_100201[6] = inst_100192;
                statearr_100201[7] = inst_100193;
                return statearr_100201;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_100198__$1, inst_100196);
            } else {
              if (state_val_100199 === 8) {
                var inst_100186 = state_100198[2];
                var state_100198__$1 = state_100198;
                var statearr_100202_100221 = state_100198__$1;
                statearr_100202_100221[2] = inst_100186;
                statearr_100202_100221[1] = 4;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_100199 === 7) {
                  var inst_100164 = state_100198[8];
                  var inst_100182 = inst_100164.shift();
                  var inst_100183 = inst_100164.length;
                  var tmp100200 = inst_100164;
                  var inst_100162 = inst_100182;
                  var inst_100163 = inst_100183;
                  var inst_100164__$1 = tmp100200;
                  var state_100198__$1 = function() {
                    var statearr_100203 = state_100198;
                    statearr_100203[8] = inst_100164__$1;
                    statearr_100203[9] = inst_100163;
                    statearr_100203[10] = inst_100162;
                    return statearr_100203;
                  }();
                  var statearr_100204_100222 = state_100198__$1;
                  statearr_100204_100222[2] = null;
                  statearr_100204_100222[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_100199 === 6) {
                    var inst_100164 = state_100198[8];
                    var inst_100163 = state_100198[9];
                    var inst_100162 = state_100198[10];
                    var inst_100178 = cljs.core.async.chan.call(null, 1);
                    var inst_100179 = function() {
                      var c__6620__auto____$1 = inst_100178;
                      var next = inst_100162;
                      var cnt = inst_100163;
                      var txs = inst_100164;
                      return function(c__6620__auto____$1, next, cnt, txs, inst_100164, inst_100163, inst_100162, inst_100178, state_val_100199, c__6620__auto__) {
                        return function() {
                          var f__6621__auto__ = function() {
                            var switch__6576__auto__ = function(c__6620__auto____$1, next, cnt, txs, inst_100164, inst_100163, inst_100162, inst_100178, state_val_100199, c__6620__auto__) {
                              return function(state_100176) {
                                var state_val_100177 = state_100176[1];
                                if (state_val_100177 === 1) {
                                  var state_100176__$1 = state_100176;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_100176__$1, null);
                                } else {
                                  return null;
                                }
                              };
                            }(c__6620__auto____$1, next, cnt, txs, inst_100164, inst_100163, inst_100162, inst_100178, state_val_100199, c__6620__auto__);
                            return function(switch__6576__auto__, c__6620__auto____$1, next, cnt, txs, inst_100164, inst_100163, inst_100162, inst_100178, state_val_100199, c__6620__auto__) {
                              return function() {
                                var state_machine__6577__auto__ = null;
                                var state_machine__6577__auto____0 = function() {
                                  var statearr_100206 = [null, null, null, null, null];
                                  statearr_100206[0] = state_machine__6577__auto__;
                                  statearr_100206[1] = 1;
                                  return statearr_100206;
                                };
                                var state_machine__6577__auto____1 = function(state_100176) {
                                  while (true) {
                                    var result__6578__auto__ = switch__6576__auto__.call(null, state_100176);
                                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                      continue;
                                    } else {
                                      return result__6578__auto__;
                                    }
                                    break;
                                  }
                                };
                                state_machine__6577__auto__ = function(state_100176) {
                                  switch(arguments.length) {
                                    case 0:
                                      return state_machine__6577__auto____0.call(this);
                                    case 1:
                                      return state_machine__6577__auto____1.call(this, state_100176);
                                  }
                                  throw new Error("Invalid arity: " + arguments.length);
                                };
                                state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
                                state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
                                return state_machine__6577__auto__;
                              }();
                            }(switch__6576__auto__, c__6620__auto____$1, next, cnt, txs, inst_100164, inst_100163, inst_100162, inst_100178, state_val_100199, c__6620__auto__);
                          }();
                          var state__6622__auto__ = function() {
                            var statearr_100207 = f__6621__auto__.call(null);
                            statearr_100207[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto____$1;
                            return statearr_100207;
                          }();
                          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
                        };
                      }(c__6620__auto____$1, next, cnt, txs, inst_100164, inst_100163, inst_100162, inst_100178, state_val_100199, c__6620__auto__);
                    }();
                    var inst_100180 = cljs.core.async.impl.dispatch.run.call(null, inst_100179);
                    var state_100198__$1 = function() {
                      var statearr_100208 = state_100198;
                      statearr_100208[11] = inst_100180;
                      return statearr_100208;
                    }();
                    var statearr_100209_100223 = state_100198__$1;
                    statearr_100209_100223[2] = inst_100178;
                    statearr_100209_100223[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_100199 === 5) {
                      var inst_100163 = state_100198[9];
                      var inst_100162 = state_100198[10];
                      var inst_100168 = state_100198[2];
                      var inst_100169 = crypt.tx = inst_100168;
                      var inst_100170 = cljs.core.partial.call(null, crypt.resultToCh, crypt.shaC);
                      var inst_100171 = crypt.tx + inst_100162;
                      var inst_100172 = crypt.sha256c.call(null, inst_100170, inst_100171);
                      var inst_100173 = 0 === inst_100163;
                      var state_100198__$1 = function() {
                        var statearr_100210 = state_100198;
                        statearr_100210[12] = inst_100169;
                        statearr_100210[13] = inst_100172;
                        return statearr_100210;
                      }();
                      if (cljs.core.truth_(inst_100173)) {
                        var statearr_100211_100224 = state_100198__$1;
                        statearr_100211_100224[1] = 6;
                      } else {
                        var statearr_100212_100225 = state_100198__$1;
                        statearr_100212_100225[1] = 7;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_100199 === 4) {
                        var inst_100188 = state_100198[2];
                        var state_100198__$1 = function() {
                          var statearr_100213 = state_100198;
                          statearr_100213[14] = inst_100188;
                          return statearr_100213;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_100198__$1, 9, crypt.shaC);
                      } else {
                        if (state_val_100199 === 3) {
                          var inst_100163 = state_100198[9];
                          var inst_100166 = l.og.call(null, new cljs.core.Keyword(null, "merkleRoot", "merkleRoot", -1567310602), "count  %s", inst_100163);
                          var state_100198__$1 = function() {
                            var statearr_100214 = state_100198;
                            statearr_100214[15] = inst_100166;
                            return statearr_100214;
                          }();
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_100198__$1, 5, crypt.shaC);
                        } else {
                          if (state_val_100199 === 2) {
                            var inst_100147 = state_100198[2];
                            var inst_100148 = cljs.core.async.chan.call(null);
                            var inst_100149 = crypt.shaC = inst_100148;
                            var inst_100150 = transactions.length;
                            var inst_100151 = crypt.originl = inst_100150;
                            var inst_100152 = l.og.call(null, new cljs.core.Keyword(null, "merkleRoot", "merkleRoot", -1567310602), "transactions length ", crypt.originl);
                            var inst_100153 = transactions.shift();
                            var inst_100154 = crypt.tx = inst_100153;
                            var inst_100155 = transactions.shift();
                            var inst_100156 = crypt.next = inst_100155;
                            var inst_100157 = cljs.core.partial.call(null, crypt.resultToCh, crypt.shaC);
                            var inst_100158 = crypt.tx + crypt.next;
                            var inst_100159 = crypt.sha256c.call(null, inst_100157, inst_100158);
                            var inst_100160 = transactions.shift();
                            var inst_100161 = transactions.length;
                            var inst_100162 = inst_100160;
                            var inst_100163 = inst_100161;
                            var inst_100164 = transactions;
                            var state_100198__$1 = function() {
                              var statearr_100215 = state_100198;
                              statearr_100215[16] = inst_100147;
                              statearr_100215[17] = inst_100152;
                              statearr_100215[8] = inst_100164;
                              statearr_100215[9] = inst_100163;
                              statearr_100215[10] = inst_100162;
                              statearr_100215[18] = inst_100159;
                              statearr_100215[19] = inst_100151;
                              statearr_100215[20] = inst_100154;
                              statearr_100215[21] = inst_100156;
                              statearr_100215[22] = inst_100149;
                              return statearr_100215;
                            }();
                            var statearr_100216_100226 = state_100198__$1;
                            statearr_100216_100226[2] = null;
                            statearr_100216_100226[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_100199 === 1) {
                              var inst_100139 = l.og.call(null, new cljs.core.Keyword(null, "merkleRoot", "merkleRoot", -1567310602), "transactions2 ", transactions);
                              var inst_100140 = crypt.tr = transactions;
                              var inst_100141 = function() {
                                return function(inst_100139, inst_100140, state_val_100199, c__6620__auto__) {
                                  return function(x) {
                                    console.log("OLD : ", x);
                                    console.log("NEW : ", crypt.tr);
                                    return crypt.tr;
                                  };
                                }(inst_100139, inst_100140, state_val_100199, c__6620__auto__);
                              }();
                              var inst_100142 = crypt.a = inst_100141;
                              var inst_100143 = function() {
                                return function(inst_100139, inst_100140, inst_100141, inst_100142, state_val_100199, c__6620__auto__) {
                                  return function() {
                                    return db.update.call(null, "txs", crypt.a);
                                  };
                                }(inst_100139, inst_100140, inst_100141, inst_100142, state_val_100199, c__6620__auto__);
                              }();
                              var inst_100144 = crypt.utx = inst_100143;
                              var inst_100145 = db.update.call(null, "txs", crypt.a);
                              var state_100198__$1 = function() {
                                var statearr_100217 = state_100198;
                                statearr_100217[23] = inst_100142;
                                statearr_100217[24] = inst_100140;
                                statearr_100217[25] = inst_100144;
                                statearr_100217[26] = inst_100139;
                                return statearr_100217;
                              }();
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_100198__$1, 2, inst_100145);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_100219 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_100219[0] = state_machine__6577__auto__;
              statearr_100219[1] = 1;
              return statearr_100219;
            };
            var state_machine__6577__auto____1 = function(state_100198) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_100198);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_100198) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_100198);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_100220 = f__6621__auto__.call(null);
        statearr_100220[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_100220;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
goog.provide("blockchain");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
cljs.core.enable_console_print_BANG_.call(null);
blockchain.memPool = [];
blockchain.blockhainInfo = function() {
  var obj98895 = {};
  return obj98895;
}();
blockchain.blockhainInfo.dificulty = 5;
blockchain.addTransactionToMemPool = function addTransactionToMemPool(x) {
  blockchain.memPool.push(x);
  return l.og.call(null, new cljs.core.Keyword(null, "blockchain", "blockchain", -1030570049), "new memPool after adding ", blockchain.memPool);
};
blockchain.removeTransactionFromMemPool = function removeTransactionFromMemPool(x) {
  blockchain.memPool.splice(blockchain.memPool.indexOf(x));
  return l.og.call(null, new cljs.core.Keyword(null, "blockchain", "blockchain", -1030570049), "new memPool after remove ", blockchain.memPool);
};
blockchain.makeBlockHeader1 = function makeBlockHeader1(version, previous, fmroot, timestamp, bits, nonce, txcount) {
  var obj98899 = {"version":1, "heightFromRoot":0, "previous":previous, "merkleRoot":fmroot, "timestamp":timestamp, "bits":bits, "nonce":nonce, "txcount":txcount};
  return obj98899;
};
blockchain.makeTransaction = function makeTransaction() {
  var obj98903 = {"":1};
  return obj98903;
};
blockchain.addTransactionToBlock = function addTransactionToBlock() {
  var obj98907 = {"":1};
  return obj98907;
};
blockchain.prevblk = function prevblk(blockk) {
  blockchain._LT__BANG_.call(null, pubsub.sia.call(null, "log", new cljs.core.Keyword(null, "prevblk", "prevblk", 1731240431), "about to get prev blk ", blockk));
  return blockk.header.previous;
};
blockchain.blockKnown_QMARK_ = function blockKnown_QMARK_(blockk) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98985) {
            var state_val_98986 = state_98985[1];
            if (state_val_98986 === 7) {
              var inst_98979 = state_98985[2];
              var inst_98980 = blockchain.res = inst_98979;
              var state_98985__$1 = function() {
                var statearr_98987 = state_98985;
                statearr_98987[5] = inst_98980;
                return statearr_98987;
              }();
              var statearr_98988_99008 = state_98985__$1;
              statearr_98988_99008[2] = blockchain.res;
              statearr_98988_99008[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_98986 === 1) {
                var state_98985__$1 = state_98985;
                if (cljs.core.truth_(blockk)) {
                  var statearr_98989_99009 = state_98985__$1;
                  statearr_98989_99009[1] = 2;
                } else {
                  var statearr_98990_99010 = state_98985__$1;
                  statearr_98990_99010[1] = 3;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_98986 === 4) {
                  var inst_98983 = state_98985[2];
                  var state_98985__$1 = state_98985;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98985__$1, inst_98983);
                } else {
                  if (state_val_98986 === 15) {
                    var inst_98977 = state_98985[2];
                    var state_98985__$1 = state_98985;
                    var statearr_98991_99011 = state_98985__$1;
                    statearr_98991_99011[2] = inst_98977;
                    statearr_98991_99011[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_98986 === 13) {
                      var state_98985__$1 = state_98985;
                      var statearr_98992_99012 = state_98985__$1;
                      statearr_98992_99012[2] = true;
                      statearr_98992_99012[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_98986 === 6) {
                        var inst_98971 = pubsub.sia.call(null, "g", blockk);
                        var state_98985__$1 = state_98985;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98985__$1, 12, inst_98971);
                      } else {
                        if (state_val_98986 === 3) {
                          var state_98985__$1 = state_98985;
                          var statearr_98993_99013 = state_98985__$1;
                          statearr_98993_99013[2] = false;
                          statearr_98993_99013[1] = 4;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_98986 === 12) {
                            var inst_98973 = state_98985[2];
                            var state_98985__$1 = state_98985;
                            if (cljs.core.truth_(inst_98973)) {
                              var statearr_98994_99014 = state_98985__$1;
                              statearr_98994_99014[1] = 13;
                            } else {
                              var statearr_98995_99015 = state_98985__$1;
                              statearr_98995_99015[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_98986 === 2) {
                              var inst_98959 = l.og.call(null, new cljs.core.Keyword(null, "blockknown", "blockknown", -1662820144), "block known? ", blockk);
                              var inst_98960 = blockk.hash;
                              var state_98985__$1 = function() {
                                var statearr_98996 = state_98985;
                                statearr_98996[6] = inst_98959;
                                return statearr_98996;
                              }();
                              if (cljs.core.truth_(inst_98960)) {
                                var statearr_98997_99016 = state_98985__$1;
                                statearr_98997_99016[1] = 5;
                              } else {
                                var statearr_98998_99017 = state_98985__$1;
                                statearr_98998_99017[1] = 6;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_98986 === 11) {
                                var inst_98969 = state_98985[2];
                                var state_98985__$1 = state_98985;
                                var statearr_98999_99018 = state_98985__$1;
                                statearr_98999_99018[2] = inst_98969;
                                statearr_98999_99018[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_98986 === 9) {
                                  var state_98985__$1 = state_98985;
                                  var statearr_99000_99019 = state_98985__$1;
                                  statearr_99000_99019[2] = true;
                                  statearr_99000_99019[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_98986 === 5) {
                                    var inst_98962 = blockk.hash;
                                    var inst_98963 = pubsub.sia.call(null, "g", inst_98962);
                                    var state_98985__$1 = state_98985;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98985__$1, 8, inst_98963);
                                  } else {
                                    if (state_val_98986 === 14) {
                                      var state_98985__$1 = state_98985;
                                      var statearr_99001_99020 = state_98985__$1;
                                      statearr_99001_99020[2] = false;
                                      statearr_99001_99020[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_98986 === 10) {
                                        var state_98985__$1 = state_98985;
                                        var statearr_99002_99021 = state_98985__$1;
                                        statearr_99002_99021[2] = false;
                                        statearr_99002_99021[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_98986 === 8) {
                                          var inst_98965 = state_98985[2];
                                          var state_98985__$1 = state_98985;
                                          if (cljs.core.truth_(inst_98965)) {
                                            var statearr_99003_99022 = state_98985__$1;
                                            statearr_99003_99022[1] = 9;
                                          } else {
                                            var statearr_99004_99023 = state_98985__$1;
                                            statearr_99004_99023[1] = 10;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99006 = [null, null, null, null, null, null, null];
              statearr_99006[0] = state_machine__6577__auto__;
              statearr_99006[1] = 1;
              return statearr_99006;
            };
            var state_machine__6577__auto____1 = function(state_98985) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98985);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98985) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98985);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99007 = f__6621__auto__.call(null);
        statearr_99007[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99007;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
blockchain.last_QMARK_ = function last_QMARK_(blockk) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99110) {
            var state_val_99111 = state_99110[1];
            if (state_val_99111 === 7) {
              var state_99110__$1 = state_99110;
              var statearr_99112_99130 = state_99110__$1;
              statearr_99112_99130[2] = true;
              statearr_99112_99130[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_99111 === 1) {
                var inst_99077 = l.og.call(null, new cljs.core.Keyword(null, "blockchain", "blockchain", -1030570049), "block known? ", blockk);
                var inst_99078 = pubsub.sia.call(null, "g", "last");
                var state_99110__$1 = function() {
                  var statearr_99113 = state_99110;
                  statearr_99113[5] = inst_99077;
                  return statearr_99113;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99110__$1, 2, inst_99078);
              } else {
                if (state_val_99111 === 4) {
                  var inst_99096 = pubsub.sia.call(null, "g", blockk);
                  var state_99110__$1 = state_99110;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99110__$1, 10, inst_99096);
                } else {
                  if (state_val_99111 === 13) {
                    var inst_99105 = state_99110[2];
                    var state_99110__$1 = state_99110;
                    var statearr_99114_99131 = state_99110__$1;
                    statearr_99114_99131[2] = inst_99105;
                    statearr_99114_99131[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_99111 === 6) {
                      var inst_99087 = state_99110[2];
                      var inst_99088 = inst_99087.hash;
                      var inst_99089 = blockk.hash;
                      var inst_99090 = inst_99088 === inst_99089;
                      var state_99110__$1 = state_99110;
                      if (cljs.core.truth_(inst_99090)) {
                        var statearr_99115_99132 = state_99110__$1;
                        statearr_99115_99132[1] = 7;
                      } else {
                        var statearr_99116_99133 = state_99110__$1;
                        statearr_99116_99133[1] = 8;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_99111 === 3) {
                        var inst_99084 = blockk.hash;
                        var inst_99085 = pubsub.sia.call(null, "g", inst_99084);
                        var state_99110__$1 = state_99110;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99110__$1, 6, inst_99085);
                      } else {
                        if (state_val_99111 === 12) {
                          var state_99110__$1 = state_99110;
                          var statearr_99117_99134 = state_99110__$1;
                          statearr_99117_99134[2] = false;
                          statearr_99117_99134[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_99111 === 2) {
                            var inst_99080 = state_99110[2];
                            var inst_99081 = blockchain.lastt = inst_99080;
                            var inst_99082 = blockk.hash;
                            var state_99110__$1 = function() {
                              var statearr_99118 = state_99110;
                              statearr_99118[6] = inst_99081;
                              return statearr_99118;
                            }();
                            if (cljs.core.truth_(inst_99082)) {
                              var statearr_99119_99135 = state_99110__$1;
                              statearr_99119_99135[1] = 3;
                            } else {
                              var statearr_99120_99136 = state_99110__$1;
                              statearr_99120_99136[1] = 4;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_99111 === 11) {
                              var state_99110__$1 = state_99110;
                              var statearr_99121_99137 = state_99110__$1;
                              statearr_99121_99137[2] = true;
                              statearr_99121_99137[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_99111 === 9) {
                                var inst_99094 = state_99110[2];
                                var state_99110__$1 = state_99110;
                                var statearr_99122_99138 = state_99110__$1;
                                statearr_99122_99138[2] = inst_99094;
                                statearr_99122_99138[1] = 5;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_99111 === 5) {
                                  var inst_99107 = state_99110[2];
                                  var inst_99108 = blockchain.res = inst_99107;
                                  var state_99110__$1 = function() {
                                    var statearr_99123 = state_99110;
                                    statearr_99123[7] = inst_99108;
                                    return statearr_99123;
                                  }();
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99110__$1, blockchain.res);
                                } else {
                                  if (state_val_99111 === 10) {
                                    var inst_99098 = state_99110[2];
                                    var inst_99099 = inst_99098.hash;
                                    var inst_99100 = blockk.hash;
                                    var inst_99101 = inst_99099 === inst_99100;
                                    var state_99110__$1 = state_99110;
                                    if (cljs.core.truth_(inst_99101)) {
                                      var statearr_99124_99139 = state_99110__$1;
                                      statearr_99124_99139[1] = 11;
                                    } else {
                                      var statearr_99125_99140 = state_99110__$1;
                                      statearr_99125_99140[1] = 12;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_99111 === 8) {
                                      var state_99110__$1 = state_99110;
                                      var statearr_99126_99141 = state_99110__$1;
                                      statearr_99126_99141[2] = false;
                                      statearr_99126_99141[1] = 9;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99128 = [null, null, null, null, null, null, null, null];
              statearr_99128[0] = state_machine__6577__auto__;
              statearr_99128[1] = 1;
              return statearr_99128;
            };
            var state_machine__6577__auto____1 = function(state_99110) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99110);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99110) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99110);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99129 = f__6621__auto__.call(null);
        statearr_99129[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99129;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
blockchain.heightFromBlock = function heightFromBlock(blockk) {
  l.og.call(null, new cljs.core.Keyword(null, "heightFromBlock", "heightFromBlock", 328660240), "getting height from block ", blockk);
  return blockk.header.heightFromRoot;
};
blockchain.makeBlock = function makeBlock(work) {
  console.log((new cljs.core.Keyword(null, "makeBlock", "makeBlock", -1854081426)).toString(), "about to make block ", work);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99222) {
            var state_val_99223 = state_99222[1];
            if (state_val_99223 === 4) {
              var inst_99216 = state_99222[2];
              var inst_99217 = {"header":blockchain.blockHeader, "hash":inst_99216, "transactions":blockchain.transactions};
              var inst_99218 = blockchain.blockk = inst_99217;
              var inst_99219 = (new cljs.core.Keyword(null, "makeBlock", "makeBlock", -1854081426)).toString();
              var inst_99220 = console.log(inst_99219, "newly made block ", blockchain.blockk);
              var state_99222__$1 = function() {
                var statearr_99224 = state_99222;
                statearr_99224[5] = inst_99220;
                statearr_99224[6] = inst_99218;
                return statearr_99224;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99222__$1, blockchain.blockk);
            } else {
              if (state_val_99223 === 3) {
                var inst_99194 = state_99222[2];
                var inst_99195 = blockchain.transactions = inst_99194;
                var inst_99196 = blockchain.lastv = blockchain.lastt2;
                var inst_99197 = (new cljs.core.Keyword(null, "makeBlock", "makeBlock", -1854081426)).toString();
                var inst_99198 = console.log(inst_99197, "last ", blockchain.lastv);
                var inst_99199 = blockchain.lastv.hash;
                var inst_99200 = work.root;
                var inst_99201 = new Date;
                var inst_99202 = inst_99201.getTime();
                var inst_99203 = blockchain.blockhainInfo.dificulty;
                var inst_99204 = work.nonce;
                var inst_99205 = blockchain.transactions.lenght;
                var inst_99206 = blockchain.makeBlockHeader1.call(null, "0", inst_99199, inst_99200, inst_99202, inst_99203, inst_99204, inst_99205);
                var inst_99207 = blockchain.blockHeader = inst_99206;
                var inst_99208 = (new cljs.core.Keyword(null, "makeBlock", "makeBlock", -1854081426)).toString();
                var inst_99209 = console.log(inst_99208, "block header ", blockchain.blockHeader);
                var inst_99210 = (new cljs.core.Keyword(null, "makeBlock", "makeBlock", -1854081426)).toString();
                var inst_99211 = console.log(inst_99210, "transactions when saving block ", blockchain.transactions);
                var inst_99214 = pubsub.sia.call(null, "hash", blockchain.blockHeader);
                var state_99222__$1 = function() {
                  var statearr_99225 = state_99222;
                  statearr_99225[7] = inst_99195;
                  statearr_99225[8] = inst_99207;
                  statearr_99225[9] = inst_99196;
                  statearr_99225[10] = inst_99198;
                  statearr_99225[11] = inst_99209;
                  statearr_99225[12] = inst_99211;
                  return statearr_99225;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99222__$1, 4, inst_99214);
              } else {
                if (state_val_99223 === 2) {
                  var inst_99188 = state_99222[2];
                  var inst_99189 = blockchain.lastt2 = inst_99188;
                  var inst_99190 = (new cljs.core.Keyword(null, "makeBlock", "makeBlock", -1854081426)).toString();
                  var inst_99191 = console.log(inst_99190, "last ", blockchain.lastt2);
                  var inst_99192 = pubsub.sia.call(null, "g", "txs");
                  var state_99222__$1 = function() {
                    var statearr_99226 = state_99222;
                    statearr_99226[13] = inst_99191;
                    statearr_99226[14] = inst_99189;
                    return statearr_99226;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99222__$1, 3, inst_99192);
                } else {
                  if (state_val_99223 === 1) {
                    var inst_99186 = pubsub.sia.call(null, "g", "last");
                    var state_99222__$1 = state_99222;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99222__$1, 2, inst_99186);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99228 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_99228[0] = state_machine__6577__auto__;
              statearr_99228[1] = 1;
              return statearr_99228;
            };
            var state_machine__6577__auto____1 = function(state_99222) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99222);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99222) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99222);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99229 = f__6621__auto__.call(null);
        statearr_99229[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99229;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
blockchain.saveBlock = function saveBlock(dbase, blockR) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99276) {
            var state_val_99277 = state_99276[1];
            if (state_val_99277 === 4) {
              var inst_99274 = state_99276[2];
              var state_99276__$1 = state_99276;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99276__$1, inst_99274);
            } else {
              if (state_val_99277 === 3) {
                var inst_99270 = state_99276[2];
                var inst_99271 = "b" + blockchain.heightForBlock;
                var inst_99272 = db.ps.call(null, inst_99271, blockR);
                var state_99276__$1 = function() {
                  var statearr_99278 = state_99276;
                  statearr_99278[5] = inst_99270;
                  return statearr_99278;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99276__$1, 4, inst_99272);
              } else {
                if (state_val_99277 === 2) {
                  var inst_99260 = state_99276[2];
                  var inst_99261 = blockchain.heightForBlock = inst_99260;
                  var inst_99262 = blockR.header;
                  var inst_99263 = inst_99262.heightFromRoot = blockchain.heightForBlock;
                  var inst_99264 = function() {
                    return function(inst_99260, inst_99261, inst_99262, inst_99263, state_val_99277, c__6620__auto__) {
                      return function() {
                        return blockR;
                      };
                    }(inst_99260, inst_99261, inst_99262, inst_99263, state_val_99277, c__6620__auto__);
                  }();
                  var inst_99265 = blockchain.a = inst_99264;
                  var inst_99266 = db.update.call(null, "last", blockchain.a);
                  var inst_99267 = blockR.hash;
                  var inst_99268 = db.ps.call(null, inst_99267, blockR);
                  var state_99276__$1 = function() {
                    var statearr_99279 = state_99276;
                    statearr_99279[6] = inst_99261;
                    statearr_99279[7] = inst_99266;
                    statearr_99279[8] = inst_99263;
                    statearr_99279[9] = inst_99265;
                    return statearr_99279;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99276__$1, 3, inst_99268);
                } else {
                  if (state_val_99277 === 1) {
                    var inst_99257 = l.og.call(null, new cljs.core.Keyword(null, "saveBlock", "saveBlock", 2070754850), "saving ", blockR);
                    var inst_99258 = blockchain.blockchainHeight.call(null, 1);
                    var state_99276__$1 = function() {
                      var statearr_99280 = state_99276;
                      statearr_99280[10] = inst_99257;
                      return statearr_99280;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99276__$1, 2, inst_99258);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99282 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_99282[0] = state_machine__6577__auto__;
              statearr_99282[1] = 1;
              return statearr_99282;
            };
            var state_machine__6577__auto____1 = function(state_99276) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99276);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99276) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99276);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99283 = f__6621__auto__.call(null);
        statearr_99283[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99283;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
blockchain.addToChain = function addToChain(schain) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99363) {
            var state_val_99364 = state_99363[1];
            if (state_val_99364 === 7) {
              var inst_99335 = state_99363[5];
              var inst_99349 = state_99363[2];
              var inst_99350 = schain.length;
              var inst_99351 = inst_99335 < inst_99350;
              var state_99363__$1 = function() {
                var statearr_99365 = state_99363;
                statearr_99365[6] = inst_99349;
                return statearr_99365;
              }();
              if (cljs.core.truth_(inst_99351)) {
                var statearr_99366_99384 = state_99363__$1;
                statearr_99366_99384[1] = 8;
              } else {
                var statearr_99367_99385 = state_99363__$1;
                statearr_99367_99385[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_99364 === 1) {
                var inst_99334 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "about to add to chain");
                var inst_99335 = 0;
                var state_99363__$1 = function() {
                  var statearr_99368 = state_99363;
                  statearr_99368[5] = inst_99335;
                  statearr_99368[7] = inst_99334;
                  return statearr_99368;
                }();
                var statearr_99369_99386 = state_99363__$1;
                statearr_99369_99386[2] = null;
                statearr_99369_99386[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_99364 === 4) {
                  var inst_99342 = state_99363[2];
                  var state_99363__$1 = state_99363;
                  if (cljs.core.truth_(inst_99342)) {
                    var statearr_99370_99387 = state_99363__$1;
                    statearr_99370_99387[1] = 5;
                  } else {
                    var statearr_99371_99388 = state_99363__$1;
                    statearr_99371_99388[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_99364 === 6) {
                    var inst_99335 = state_99363[5];
                    var inst_99346 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "block is not known ", inst_99335);
                    var inst_99347 = blockchain.saveBlock.call(null, inst_99335);
                    var state_99363__$1 = function() {
                      var statearr_99372 = state_99363;
                      statearr_99372[8] = inst_99346;
                      return statearr_99372;
                    }();
                    var statearr_99373_99389 = state_99363__$1;
                    statearr_99373_99389[2] = inst_99347;
                    statearr_99373_99389[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_99364 === 3) {
                      var inst_99359 = state_99363[2];
                      var inst_99360 = cljs.core.last.call(null, schain);
                      var inst_99361 = db.update.call(null, "last", inst_99360);
                      var state_99363__$1 = function() {
                        var statearr_99374 = state_99363;
                        statearr_99374[9] = inst_99359;
                        return statearr_99374;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99363__$1, inst_99361);
                    } else {
                      if (state_val_99364 === 2) {
                        var inst_99335 = state_99363[5];
                        var inst_99337 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "itterating current step ", inst_99335);
                        var inst_99338 = schain[inst_99335];
                        var inst_99339 = blockchain.prevblk.call(null, inst_99338);
                        var inst_99340 = blockchain.blockKnown_QMARK_.call(null, inst_99339);
                        var state_99363__$1 = function() {
                          var statearr_99375 = state_99363;
                          statearr_99375[10] = inst_99337;
                          return statearr_99375;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99363__$1, 4, inst_99340);
                      } else {
                        if (state_val_99364 === 9) {
                          var state_99363__$1 = state_99363;
                          var statearr_99376_99390 = state_99363__$1;
                          statearr_99376_99390[2] = null;
                          statearr_99376_99390[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_99364 === 5) {
                            var inst_99335 = state_99363[5];
                            var inst_99344 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "block is known ", inst_99335);
                            var state_99363__$1 = state_99363;
                            var statearr_99377_99391 = state_99363__$1;
                            statearr_99377_99391[2] = inst_99344;
                            statearr_99377_99391[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_99364 === 10) {
                              var inst_99357 = state_99363[2];
                              var state_99363__$1 = state_99363;
                              var statearr_99378_99392 = state_99363__$1;
                              statearr_99378_99392[2] = inst_99357;
                              statearr_99378_99392[1] = 3;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_99364 === 8) {
                                var inst_99335 = state_99363[5];
                                var inst_99353 = inst_99335 + 1;
                                var inst_99335__$1 = inst_99353;
                                var state_99363__$1 = function() {
                                  var statearr_99379 = state_99363;
                                  statearr_99379[5] = inst_99335__$1;
                                  return statearr_99379;
                                }();
                                var statearr_99380_99393 = state_99363__$1;
                                statearr_99380_99393[2] = null;
                                statearr_99380_99393[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99382 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_99382[0] = state_machine__6577__auto__;
              statearr_99382[1] = 1;
              return statearr_99382;
            };
            var state_machine__6577__auto____1 = function(state_99363) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99363);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99363) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99363);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99383 = f__6621__auto__.call(null);
        statearr_99383[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99383;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
blockchain.blockchainHeight = function blockchainHeight(x) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99432) {
            var state_val_99433 = state_99432[1];
            if (state_val_99433 === 6) {
              var inst_99427 = state_99432[2];
              var state_99432__$1 = state_99432;
              var statearr_99434_99442 = state_99432__$1;
              statearr_99434_99442[2] = inst_99427;
              statearr_99434_99442[1] = 5;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_99433 === 5) {
                var inst_99430 = state_99432[2];
                var state_99432__$1 = state_99432;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99432__$1, inst_99430);
              } else {
                if (state_val_99433 === 4) {
                  var state_99432__$1 = state_99432;
                  var statearr_99435_99443 = state_99432__$1;
                  statearr_99435_99443[2] = blockchain.hght;
                  statearr_99435_99443[1] = 5;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_99433 === 3) {
                    var inst_99424 = function() {
                      return function(state_val_99433, c__6620__auto__) {
                        return function(v) {
                          l.og.call(null, new cljs.core.Keyword(null, "height", "height", 1025178622), "prev height ", v);
                          l.og.call(null, new cljs.core.Keyword(null, "height", "height", 1025178622), "to add  ", x);
                          l.og.call(null, new cljs.core.Keyword(null, "height", "height", 1025178622), "after addition  ", v + x);
                          return v + x;
                        };
                      }(state_val_99433, c__6620__auto__);
                    }();
                    var inst_99425 = db.update.call(null, "height", inst_99424);
                    var state_99432__$1 = state_99432;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99432__$1, 6, inst_99425);
                  } else {
                    if (state_val_99433 === 2) {
                      var inst_99420 = state_99432[2];
                      var inst_99421 = blockchain.hght = inst_99420;
                      var inst_99422 = l.og.call(null, new cljs.core.Keyword(null, "blockchainHeight", "blockchainHeight", -607390728), "blockchain height ", blockchain.hght);
                      var state_99432__$1 = function() {
                        var statearr_99436 = state_99432;
                        statearr_99436[5] = inst_99422;
                        statearr_99436[6] = inst_99421;
                        return statearr_99436;
                      }();
                      if (cljs.core.truth_(x)) {
                        var statearr_99437_99444 = state_99432__$1;
                        statearr_99437_99444[1] = 3;
                      } else {
                        var statearr_99438_99445 = state_99432__$1;
                        statearr_99438_99445[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_99433 === 1) {
                        var inst_99418 = db.g.call(null, "height");
                        var state_99432__$1 = state_99432;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99432__$1, 2, inst_99418);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99440 = [null, null, null, null, null, null, null];
              statearr_99440[0] = state_machine__6577__auto__;
              statearr_99440[1] = 1;
              return statearr_99440;
            };
            var state_machine__6577__auto____1 = function(state_99432) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99432);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99432) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99432);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99441 = f__6621__auto__.call(null);
        statearr_99441[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99441;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
blockchain.popA = function popA(a) {
  return a.splice(0, 1);
};
blockchain.log2 = function log2(n) {
  return Math.log.call(null, n) / Math.log.call(null, 2);
};
goog.provide("intercomTakeUtil");
goog.require("cljs.core");
goog.provide("communications");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
communications.intercomMeta = function() {
  var obj97706 = {"id":1, "knownPeers":cljs.core.PersistentVector.EMPTY, "knownPeersChannels":cljs.core.PersistentVector.EMPTY, "p2pchans":cljs.core.PersistentVector.EMPTY};
  return obj97706;
}();
communications.peers = cljs.core.PersistentVector.EMPTY;
communications.transactionch = cljs.core.async.chan.call(null);
communications.transactionch.type = "transactionch";
communications.cryptoCh = cljs.core.async.chan.call(null);
communications.cryptoCh.type = "cryptoch";
communications.setID = function setID(ev, id) {
  cljs.core.println.call(null, id);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_97734) {
            var state_val_97735 = state_97734[1];
            if (state_val_97735 === 2) {
              var inst_97727 = state_97734[2];
              var inst_97728 = console.log(inst_97727);
              var inst_97729 = new Peer(id, communications.peerParams);
              var inst_97730 = communications.peerjs = inst_97729;
              var inst_97731 = communications.init.call(null, communications.peerjs);
              var inst_97732 = communications.peerjs.on("connection", comm.onConnection);
              var state_97734__$1 = function() {
                var statearr_97736 = state_97734;
                statearr_97736[5] = inst_97731;
                statearr_97736[6] = inst_97730;
                statearr_97736[7] = inst_97728;
                return statearr_97736;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_97734__$1, inst_97732);
            } else {
              if (state_val_97735 === 1) {
                var inst_97724 = communications.p.call(null, "lid", id);
                var inst_97725 = communications.g.call(null, "lid");
                var state_97734__$1 = function() {
                  var statearr_97737 = state_97734;
                  statearr_97737[8] = inst_97724;
                  return statearr_97737;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_97734__$1, 2, inst_97725);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_97739 = [null, null, null, null, null, null, null, null, null];
              statearr_97739[0] = state_machine__6577__auto__;
              statearr_97739[1] = 1;
              return statearr_97739;
            };
            var state_machine__6577__auto____1 = function(state_97734) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_97734);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_97734) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_97734);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_97740 = f__6621__auto__.call(null);
        statearr_97740[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_97740;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
communications.start = cljs.core.async.chan.call(null);
communications.initial = function initial() {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_97801) {
            var state_val_97802 = state_97801[1];
            if (state_val_97802 === 6) {
              var inst_97793 = state_97801[2];
              var state_97801__$1 = state_97801;
              var statearr_97803_97813 = state_97801__$1;
              statearr_97803_97813[2] = inst_97793;
              statearr_97803_97813[1] = 5;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_97802 === 5) {
                var inst_97795 = state_97801[2];
                var inst_97796 = pubsub.initpubsub.call(null);
                var inst_97797 = comm.setupComm.call(null);
                var inst_97798 = comm.startP2PCommLoop.call(null);
                var inst_97799 = ht.run.call(null, "Taras Bulba", "zaparozie r0x", "i4c32d4308e1fe.jpg", "- zaparozie");
                var state_97801__$1 = function() {
                  var statearr_97804 = state_97801;
                  statearr_97804[5] = inst_97796;
                  statearr_97804[6] = inst_97797;
                  statearr_97804[7] = inst_97798;
                  statearr_97804[8] = inst_97795;
                  return statearr_97804;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_97801__$1, inst_97799);
              } else {
                if (state_val_97802 === 4) {
                  var inst_97791 = communications.initDBase.call(null);
                  var state_97801__$1 = state_97801;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_97801__$1, 6, inst_97791);
                } else {
                  if (state_val_97802 === 3) {
                    var inst_97783 = console.log(communications.id);
                    var inst_97784 = $("#id");
                    var inst_97785 = inst_97784.val(communications.id);
                    var inst_97786 = new Peer(communications.id, communications.peerParams);
                    var inst_97787 = communications.peerjs = inst_97786;
                    var inst_97788 = communications.init.call(null, communications.peerjs);
                    var inst_97789 = communications.peerjs.on("connection", comm.onConnection);
                    var state_97801__$1 = function() {
                      var statearr_97805 = state_97801;
                      statearr_97805[9] = inst_97787;
                      statearr_97805[10] = inst_97783;
                      statearr_97805[11] = inst_97788;
                      statearr_97805[12] = inst_97785;
                      return statearr_97805;
                    }();
                    var statearr_97806_97814 = state_97801__$1;
                    statearr_97806_97814[2] = inst_97789;
                    statearr_97806_97814[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_97802 === 2) {
                      var inst_97779 = state_97801[2];
                      var inst_97780 = communications.id = inst_97779;
                      var inst_97781 = l.og.call(null, new cljs.core.Keyword(null, "entryy", "entryy", -1997262549), "got id %s ", communications.id);
                      var state_97801__$1 = function() {
                        var statearr_97807 = state_97801;
                        statearr_97807[13] = inst_97781;
                        statearr_97807[14] = inst_97780;
                        return statearr_97807;
                      }();
                      if (cljs.core.truth_(communications.id)) {
                        var statearr_97808_97815 = state_97801__$1;
                        statearr_97808_97815[1] = 3;
                      } else {
                        var statearr_97809_97816 = state_97801__$1;
                        statearr_97809_97816[1] = 4;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_97802 === 1) {
                        var inst_97777 = communications.g.call(null, "lid");
                        var state_97801__$1 = state_97801;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_97801__$1, 2, inst_97777);
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_97811 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_97811[0] = state_machine__6577__auto__;
              statearr_97811[1] = 1;
              return statearr_97811;
            };
            var state_machine__6577__auto____1 = function(state_97801) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_97801);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_97801) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_97801);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_97812 = f__6621__auto__.call(null);
        statearr_97812[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_97812;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
communications.connectionch = cljs.core.async.chan.call(null);
communications.broadcastNewBlock = function broadcastNewBlock(blockk) {
  l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "broadsacting new block", blockk);
  l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "broadsacting new block to ", communications.intercomMeta.knownPeersChannels);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_97962) {
            var state_val_97963 = state_97962[1];
            if (state_val_97963 === 7) {
              var inst_97911 = state_97962[5];
              var inst_97910 = state_97962[6];
              var inst_97912 = state_97962[7];
              var inst_97913 = state_97962[8];
              var inst_97927 = state_97962[2];
              var inst_97928 = inst_97913 + 1;
              var tmp97964 = inst_97911;
              var tmp97965 = inst_97910;
              var tmp97966 = inst_97912;
              var inst_97910__$1 = tmp97965;
              var inst_97911__$1 = tmp97964;
              var inst_97912__$1 = tmp97966;
              var inst_97913__$1 = inst_97928;
              var state_97962__$1 = function() {
                var statearr_97967 = state_97962;
                statearr_97967[9] = inst_97927;
                statearr_97967[5] = inst_97911__$1;
                statearr_97967[6] = inst_97910__$1;
                statearr_97967[7] = inst_97912__$1;
                statearr_97967[8] = inst_97913__$1;
                return statearr_97967;
              }();
              var statearr_97968_97991 = state_97962__$1;
              statearr_97968_97991[2] = null;
              statearr_97968_97991[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_97963 === 1) {
                var inst_97908 = communications.intercomMeta.knownPeersChannels;
                var inst_97909 = cljs.core.seq.call(null, inst_97908);
                var inst_97910 = inst_97909;
                var inst_97911 = null;
                var inst_97912 = 0;
                var inst_97913 = 0;
                var state_97962__$1 = function() {
                  var statearr_97969 = state_97962;
                  statearr_97969[5] = inst_97911;
                  statearr_97969[6] = inst_97910;
                  statearr_97969[7] = inst_97912;
                  statearr_97969[8] = inst_97913;
                  return statearr_97969;
                }();
                var statearr_97970_97992 = state_97962__$1;
                statearr_97970_97992[2] = null;
                statearr_97970_97992[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_97963 === 4) {
                  var inst_97911 = state_97962[5];
                  var inst_97913 = state_97962[8];
                  var inst_97918 = cljs.core._nth.call(null, inst_97911, inst_97913);
                  var inst_97919 = "broadsacting new block to peer " + inst_97918;
                  var inst_97920 = inst_97919 + " ";
                  var inst_97921 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), inst_97920, blockk);
                  var inst_97922 = [];
                  var inst_97923 = communications.vectoR = inst_97922;
                  var inst_97924 = communications.vectoR.push(blockk);
                  var inst_97925 = im.makeInv.call(null, "block", communications.vectoR);
                  var state_97962__$1 = function() {
                    var statearr_97971 = state_97962;
                    statearr_97971[10] = inst_97924;
                    statearr_97971[11] = inst_97921;
                    statearr_97971[12] = inst_97923;
                    return statearr_97971;
                  }();
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_97962__$1, 7, inst_97918, inst_97925);
                } else {
                  if (state_val_97963 === 13) {
                    var inst_97953 = state_97962[2];
                    var state_97962__$1 = state_97962;
                    var statearr_97972_97993 = state_97962__$1;
                    statearr_97972_97993[2] = inst_97953;
                    statearr_97972_97993[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_97963 === 6) {
                      var inst_97958 = state_97962[2];
                      var state_97962__$1 = state_97962;
                      var statearr_97973_97994 = state_97962__$1;
                      statearr_97973_97994[2] = inst_97958;
                      statearr_97973_97994[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_97963 === 3) {
                        var inst_97960 = state_97962[2];
                        var state_97962__$1 = state_97962;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_97962__$1, inst_97960);
                      } else {
                        if (state_val_97963 === 12) {
                          var inst_97931 = state_97962[13];
                          var inst_97940 = cljs.core.first.call(null, inst_97931);
                          var inst_97941 = "broadsacting new block to peer " + inst_97940;
                          var inst_97942 = inst_97941 + " ";
                          var inst_97943 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), inst_97942, blockk);
                          var inst_97944 = [];
                          var inst_97945 = communications.vectoR = inst_97944;
                          var inst_97946 = communications.vectoR.push(blockk);
                          var inst_97947 = im.makeInv.call(null, "block", communications.vectoR);
                          var state_97962__$1 = function() {
                            var statearr_97974 = state_97962;
                            statearr_97974[14] = inst_97943;
                            statearr_97974[15] = inst_97946;
                            statearr_97974[16] = inst_97945;
                            return statearr_97974;
                          }();
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_97962__$1, 14, inst_97940, inst_97947);
                        } else {
                          if (state_val_97963 === 2) {
                            var inst_97912 = state_97962[7];
                            var inst_97913 = state_97962[8];
                            var inst_97915 = inst_97913 < inst_97912;
                            var inst_97916 = inst_97915;
                            var state_97962__$1 = state_97962;
                            if (cljs.core.truth_(inst_97916)) {
                              var statearr_97975_97995 = state_97962__$1;
                              statearr_97975_97995[1] = 4;
                            } else {
                              var statearr_97976_97996 = state_97962__$1;
                              statearr_97976_97996[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_97963 === 11) {
                              var inst_97931 = state_97962[13];
                              var inst_97935 = cljs.core.chunk_first.call(null, inst_97931);
                              var inst_97936 = cljs.core.chunk_rest.call(null, inst_97931);
                              var inst_97937 = cljs.core.count.call(null, inst_97935);
                              var inst_97910 = inst_97936;
                              var inst_97911 = inst_97935;
                              var inst_97912 = inst_97937;
                              var inst_97913 = 0;
                              var state_97962__$1 = function() {
                                var statearr_97977 = state_97962;
                                statearr_97977[5] = inst_97911;
                                statearr_97977[6] = inst_97910;
                                statearr_97977[7] = inst_97912;
                                statearr_97977[8] = inst_97913;
                                return statearr_97977;
                              }();
                              var statearr_97978_97997 = state_97962__$1;
                              statearr_97978_97997[2] = null;
                              statearr_97978_97997[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_97963 === 9) {
                                var state_97962__$1 = state_97962;
                                var statearr_97979_97998 = state_97962__$1;
                                statearr_97979_97998[2] = null;
                                statearr_97979_97998[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_97963 === 5) {
                                  var inst_97910 = state_97962[6];
                                  var inst_97931 = state_97962[13];
                                  var inst_97931__$1 = cljs.core.seq.call(null, inst_97910);
                                  var state_97962__$1 = function() {
                                    var statearr_97980 = state_97962;
                                    statearr_97980[13] = inst_97931__$1;
                                    return statearr_97980;
                                  }();
                                  if (inst_97931__$1) {
                                    var statearr_97981_97999 = state_97962__$1;
                                    statearr_97981_97999[1] = 8;
                                  } else {
                                    var statearr_97982_98000 = state_97962__$1;
                                    statearr_97982_98000[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_97963 === 14) {
                                    var inst_97931 = state_97962[13];
                                    var inst_97949 = state_97962[2];
                                    var inst_97950 = cljs.core.next.call(null, inst_97931);
                                    var inst_97910 = inst_97950;
                                    var inst_97911 = null;
                                    var inst_97912 = 0;
                                    var inst_97913 = 0;
                                    var state_97962__$1 = function() {
                                      var statearr_97983 = state_97962;
                                      statearr_97983[5] = inst_97911;
                                      statearr_97983[6] = inst_97910;
                                      statearr_97983[7] = inst_97912;
                                      statearr_97983[17] = inst_97949;
                                      statearr_97983[8] = inst_97913;
                                      return statearr_97983;
                                    }();
                                    var statearr_97984_98001 = state_97962__$1;
                                    statearr_97984_98001[2] = null;
                                    statearr_97984_98001[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_97963 === 10) {
                                      var inst_97956 = state_97962[2];
                                      var state_97962__$1 = state_97962;
                                      var statearr_97985_98002 = state_97962__$1;
                                      statearr_97985_98002[2] = inst_97956;
                                      statearr_97985_98002[1] = 6;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_97963 === 8) {
                                        var inst_97931 = state_97962[13];
                                        var inst_97933 = cljs.core.chunked_seq_QMARK_.call(null, inst_97931);
                                        var state_97962__$1 = state_97962;
                                        if (inst_97933) {
                                          var statearr_97986_98003 = state_97962__$1;
                                          statearr_97986_98003[1] = 11;
                                        } else {
                                          var statearr_97987_98004 = state_97962__$1;
                                          statearr_97987_98004[1] = 12;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_97989 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_97989[0] = state_machine__6577__auto__;
              statearr_97989[1] = 1;
              return statearr_97989;
            };
            var state_machine__6577__auto____1 = function(state_97962) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_97962);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_97962) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_97962);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_97990 = f__6621__auto__.call(null);
        statearr_97990[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_97990;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
communications.sendmsg = function sendmsg(peer, type, msg) {
  l.og.call(null, new cljs.core.Keyword(null, "sendmsg", "sendmsg", -606247143), "sending " + type, msg);
  l.og.call(null, new cljs.core.Keyword(null, "sendmsg", "sendmsg", -606247143), "peer ", peer);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98022) {
            var state_val_98023 = state_98022[1];
            if (state_val_98023 === 2) {
              var inst_98020 = state_98022[2];
              var state_98022__$1 = state_98022;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98022__$1, inst_98020);
            } else {
              if (state_val_98023 === 1) {
                var inst_98018 = {"type":type, "msg":msg};
                var state_98022__$1 = state_98022;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_98022__$1, 2, peer, inst_98018);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98025 = [null, null, null, null, null];
              statearr_98025[0] = state_machine__6577__auto__;
              statearr_98025[1] = 1;
              return statearr_98025;
            };
            var state_machine__6577__auto____1 = function(state_98022) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98022);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98022) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98022);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98026 = f__6621__auto__.call(null);
        statearr_98026[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98026;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
communications.onOpen = function onOpen(conn) {
  l.og.call(null, new cljs.core.Keyword(null, "conn", "conn", 278309663), "connection opened trying to send data trough");
  l.og.call(null, new cljs.core.Keyword(null, "conn", "conn", 278309663), conn);
  conn.connType = "saltan";
  var c__6620__auto___98043 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto___98043) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto___98043) {
          return function(state_98038) {
            var state_val_98039 = state_98038[1];
            if (state_val_98039 === 2) {
              var inst_98036 = state_98038[2];
              var state_98038__$1 = state_98038;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98038__$1, inst_98036);
            } else {
              if (state_val_98039 === 1) {
                var state_98038__$1 = state_98038;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_98038__$1, 2, communications.connectionch, conn);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto___98043);
        return function(switch__6576__auto__, c__6620__auto___98043) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98041 = [null, null, null, null, null];
              statearr_98041[0] = state_machine__6577__auto__;
              statearr_98041[1] = 1;
              return statearr_98041;
            };
            var state_machine__6577__auto____1 = function(state_98038) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98038);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98038) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98038);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto___98043);
      }();
      var state__6622__auto__ = function() {
        var statearr_98042 = f__6621__auto__.call(null);
        statearr_98042[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto___98043;
        return statearr_98042;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto___98043));
  return l.og.call(null, new cljs.core.Keyword(null, "conn", "conn", 278309663), "conn: ", conn);
};
communications.onConnection = function onConnection(conn) {
  l.og.call(null, new cljs.core.Keyword(null, "conn", "conn", 278309663), "connection is opened now try to send something");
  conn.connType = "tsaritsa";
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98055) {
            var state_val_98056 = state_98055[1];
            if (state_val_98056 === 2) {
              var inst_98053 = state_98055[2];
              var state_98055__$1 = state_98055;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98055__$1, inst_98053);
            } else {
              if (state_val_98056 === 1) {
                var state_98055__$1 = state_98055;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_98055__$1, 2, communications.connectionch, conn);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98058 = [null, null, null, null, null];
              statearr_98058[0] = state_machine__6577__auto__;
              statearr_98058[1] = 1;
              return statearr_98058;
            };
            var state_machine__6577__auto____1 = function(state_98055) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98055);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98055) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98055);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98059 = f__6621__auto__.call(null);
        statearr_98059[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98059;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
communications.onData = function onData(read, data) {
  l.og.call(null, new cljs.core.Keyword(null, "conn", "conn", 278309663), "data recieved", data);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98071) {
            var state_val_98072 = state_98071[1];
            if (state_val_98072 === 2) {
              var inst_98069 = state_98071[2];
              var state_98071__$1 = state_98071;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98071__$1, inst_98069);
            } else {
              if (state_val_98072 === 1) {
                var state_98071__$1 = state_98071;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_98071__$1, 2, read, data);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98074 = [null, null, null, null, null];
              statearr_98074[0] = state_machine__6577__auto__;
              statearr_98074[1] = 1;
              return statearr_98074;
            };
            var state_machine__6577__auto____1 = function(state_98071) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98071);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98071) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98071);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98075 = f__6621__auto__.call(null);
        statearr_98075[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98075;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
communications.channelsFromConnection = function channelsFromConnection(conn) {
  communications.readc = cljs.core.async.chan.call(null, 10);
  communications.writec = cljs.core.async.chan.call(null, 10);
  communications.readc.writec = communications.writec;
  communications.readc.type = "readch";
  communications.writec.type = "writech";
  conn.writec = communications.writec;
  conn.readc = communications.readc;
  communications.readc.conn = conn;
  communications.writec.conn = conn;
  conn.on("data", cljs.core.partial.call(null, communications.onData, communications.readc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [communications.readc, communications.writec], null);
};
communications.startP2PCommLoop = function startP2PCommLoop() {
  communications.stated = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [communications.connectionch], null);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98230) {
            var state_val_98231 = state_98230[1];
            if (state_val_98231 === 7) {
              var inst_98225 = state_98230[2];
              var state_98230__$1 = function() {
                var statearr_98232 = state_98230;
                statearr_98232[5] = inst_98225;
                return statearr_98232;
              }();
              var statearr_98233_98260 = state_98230__$1;
              statearr_98233_98260[2] = null;
              statearr_98233_98260[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_98231 === 1) {
                var state_98230__$1 = state_98230;
                var statearr_98234_98261 = state_98230__$1;
                statearr_98234_98261[2] = null;
                statearr_98234_98261[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_98231 === 4) {
                  var inst_98172 = state_98230[2];
                  var inst_98173 = communications.v = inst_98172;
                  var inst_98174 = l.og.call(null, new cljs.core.Keyword(null, "p2ploop", "p2ploop", -674348610), "got from state", communications.v);
                  var inst_98175 = cljs.core.nth.call(null, communications.v, 0);
                  var inst_98176 = communications.vrecieved = inst_98175;
                  var inst_98177 = cljs.core.nth.call(null, communications.v, 1);
                  var inst_98178 = communications.ch2 = inst_98177;
                  var inst_98179 = cljs.core.nth.call(null, communications.v, 1);
                  var inst_98180 = inst_98179 === communications.connectionch;
                  var state_98230__$1 = function() {
                    var statearr_98235 = state_98230;
                    statearr_98235[6] = inst_98174;
                    statearr_98235[7] = inst_98176;
                    statearr_98235[8] = inst_98173;
                    statearr_98235[9] = inst_98178;
                    return statearr_98235;
                  }();
                  if (cljs.core.truth_(inst_98180)) {
                    var statearr_98236_98262 = state_98230__$1;
                    statearr_98236_98262[1] = 5;
                  } else {
                    var statearr_98237_98263 = state_98230__$1;
                    statearr_98237_98263[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_98231 === 15) {
                    var state_98230__$1 = state_98230;
                    var statearr_98238_98264 = state_98230__$1;
                    statearr_98238_98264[2] = null;
                    statearr_98238_98264[1] = 16;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_98231 === 13) {
                      var inst_98205 = state_98230[2];
                      var inst_98206 = communications.ch2.writec;
                      var inst_98207 = communications.vrecieved.peer = inst_98206;
                      var inst_98208 = communications.ch2.conn;
                      var inst_98209 = i.intercomstatemachine.call(null, inst_98208, communications.vrecieved);
                      var state_98230__$1 = function() {
                        var statearr_98239 = state_98230;
                        statearr_98239[10] = inst_98205;
                        statearr_98239[11] = inst_98207;
                        return statearr_98239;
                      }();
                      var statearr_98240_98265 = state_98230__$1;
                      statearr_98240_98265[2] = inst_98209;
                      statearr_98240_98265[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_98231 === 6) {
                        var inst_98193 = communications.ch2.type;
                        var inst_98194 = inst_98193 === "readch";
                        var state_98230__$1 = state_98230;
                        if (cljs.core.truth_(inst_98194)) {
                          var statearr_98241_98266 = state_98230__$1;
                          statearr_98241_98266[1] = 8;
                        } else {
                          var statearr_98242_98267 = state_98230__$1;
                          statearr_98242_98267[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_98231 === 3) {
                          var inst_98228 = state_98230[2];
                          var state_98230__$1 = state_98230;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98230__$1, inst_98228);
                        } else {
                          if (state_val_98231 === 12) {
                            var state_98230__$1 = state_98230;
                            var statearr_98243_98268 = state_98230__$1;
                            statearr_98243_98268[2] = null;
                            statearr_98243_98268[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_98231 === 2) {
                              var inst_98169 = l.og.call(null, new cljs.core.Keyword(null, "p2pCommLoop", "p2pCommLoop", -1999314115), "new iteration with state");
                              var inst_98170 = l.og.call(null, new cljs.core.Keyword(null, "p2pCommLoop", "p2pCommLoop", -1999314115), "state ", communications.stated);
                              var state_98230__$1 = function() {
                                var statearr_98244 = state_98230;
                                statearr_98244[12] = inst_98170;
                                statearr_98244[13] = inst_98169;
                                return statearr_98244;
                              }();
                              return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_98230__$1, 4, communications.stated);
                            } else {
                              if (state_val_98231 === 11) {
                                var inst_98200 = communications.vrecieved.data;
                                var inst_98201 = JSON.parse(inst_98200);
                                var inst_98202 = communications.vrecieved = inst_98201;
                                var state_98230__$1 = state_98230;
                                var statearr_98245_98269 = state_98230__$1;
                                statearr_98245_98269[2] = inst_98202;
                                statearr_98245_98269[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_98231 === 9) {
                                  var inst_98211 = communications.ch2.type;
                                  var inst_98212 = inst_98211 === "writech";
                                  var state_98230__$1 = state_98230;
                                  if (cljs.core.truth_(inst_98212)) {
                                    var statearr_98246_98270 = state_98230__$1;
                                    statearr_98246_98270[1] = 14;
                                  } else {
                                    var statearr_98247_98271 = state_98230__$1;
                                    statearr_98247_98271[1] = 15;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_98231 === 5) {
                                    var inst_98182 = cljs.core.PersistentVector.EMPTY;
                                    var inst_98183 = communications.onNewConnection.call(null, communications.vrecieved);
                                    var inst_98184 = cljs.core.concat.call(null, communications.stated, inst_98183);
                                    var inst_98185 = cljs.core.into.call(null, inst_98182, inst_98184);
                                    var inst_98186 = communications.stated = inst_98185;
                                    var inst_98187 = i.getIntercomState.call(null, communications.vrecieved);
                                    var inst_98188 = communications.stat = inst_98187;
                                    var inst_98189 = l.og.call(null, new cljs.core.Keyword(null, "p2ploop", "p2ploop", -674348610), "intercom state", communications.stat);
                                    var inst_98190 = im.makeConn.call(null, communications.vrecieved);
                                    var inst_98191 = i.intercomstatemachine.call(null, communications.vrecieved, inst_98190);
                                    var state_98230__$1 = function() {
                                      var statearr_98248 = state_98230;
                                      statearr_98248[14] = inst_98188;
                                      statearr_98248[15] = inst_98189;
                                      statearr_98248[16] = inst_98186;
                                      return statearr_98248;
                                    }();
                                    var statearr_98249_98272 = state_98230__$1;
                                    statearr_98249_98272[2] = inst_98191;
                                    statearr_98249_98272[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_98231 === 14) {
                                      var inst_98214 = l.og.call(null, new cljs.core.Keyword(null, "p2ploop", "p2ploop", -674348610), "sending to peer ", communications.vrecieved);
                                      var inst_98215 = communications.ch2.conn;
                                      var inst_98216 = l.og.call(null, new cljs.core.Keyword(null, "p2ploop", "p2ploop", -674348610), "connection being sent to ", inst_98215);
                                      var inst_98217 = communications.ch2.conn;
                                      var inst_98218 = inst_98217.send(communications.vrecieved);
                                      var state_98230__$1 = function() {
                                        var statearr_98250 = state_98230;
                                        statearr_98250[17] = inst_98216;
                                        statearr_98250[18] = inst_98214;
                                        return statearr_98250;
                                      }();
                                      var statearr_98251_98273 = state_98230__$1;
                                      statearr_98251_98273[2] = inst_98218;
                                      statearr_98251_98273[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_98231 === 16) {
                                        var inst_98221 = state_98230[2];
                                        var state_98230__$1 = state_98230;
                                        var statearr_98252_98274 = state_98230__$1;
                                        statearr_98252_98274[2] = inst_98221;
                                        statearr_98252_98274[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_98231 === 10) {
                                          var inst_98223 = state_98230[2];
                                          var state_98230__$1 = state_98230;
                                          var statearr_98253_98275 = state_98230__$1;
                                          statearr_98253_98275[2] = inst_98223;
                                          statearr_98253_98275[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_98231 === 8) {
                                            var inst_98196 = l.og.call(null, new cljs.core.Keyword(null, "p2ploop", "p2ploop", -674348610), "recieved from peer ", communications.vrecieved);
                                            var inst_98197 = communications.vrecieved.type;
                                            var inst_98198 = inst_98197 === "json";
                                            var state_98230__$1 = function() {
                                              var statearr_98254 = state_98230;
                                              statearr_98254[19] = inst_98196;
                                              return statearr_98254;
                                            }();
                                            if (cljs.core.truth_(inst_98198)) {
                                              var statearr_98255_98276 = state_98230__$1;
                                              statearr_98255_98276[1] = 11;
                                            } else {
                                              var statearr_98256_98277 = state_98230__$1;
                                              statearr_98256_98277[1] = 12;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98258 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_98258[0] = state_machine__6577__auto__;
              statearr_98258[1] = 1;
              return statearr_98258;
            };
            var state_machine__6577__auto____1 = function(state_98230) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98230);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98230) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98230);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98259 = f__6621__auto__.call(null);
        statearr_98259[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98259;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
communications.onNewConnection = function onNewConnection(message) {
  communications.gconn = message;
  intercom.setIntercomState.call(null, message, "start");
  l.og.call(null, new cljs.core.Keyword(null, "mloop", "mloop", -1729555731), "got new connection", message);
  communications.peerChannels = communications.channelsFromConnection.call(null, message);
  communications.intercomMeta.knownPeers = cljs.core.conj.call(null, communications.intercomMeta.knownPeers, message.peer);
  l.og.call(null, new cljs.core.Keyword(null, "mloop", "mloop", -1729555731), "adding w channel to kpeers ", cljs.core.nth.call(null, communications.peerChannels, 1));
  communications.intercomMeta.p2pchans = cljs.core.concat.call(null, communications.intercomMeta.p2pchans, communications.peerChannels);
  communications.intercomMeta.knownPeersChannels = cljs.core.conj.call(null, communications.intercomMeta.knownPeersChannels, cljs.core.nth.call(null, communications.peerChannels, 1));
  l.og.call(null, new cljs.core.Keyword(null, "mloop", "mloop", -1729555731), "new state");
  return communications.peerChannels;
};
communications.onBlockMined = function onBlockMined(message) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98325) {
            var state_val_98326 = state_98325[1];
            if (state_val_98326 === 4) {
              var inst_98320 = state_98325[2];
              var inst_98321 = communications.gotFromHash = inst_98320;
              var inst_98322 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "got from hash ", communications.gotFromHash);
              var inst_98323 = communications.broadcastNewBlock.call(null, communications.gotFromHash);
              var state_98325__$1 = function() {
                var statearr_98327 = state_98325;
                statearr_98327[5] = inst_98321;
                statearr_98327[6] = inst_98322;
                return statearr_98327;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98325__$1, inst_98323);
            } else {
              if (state_val_98326 === 3) {
                var inst_98316 = state_98325[2];
                var inst_98317 = communications.blockk.hash;
                var inst_98318 = db.g.call(null, inst_98317);
                var state_98325__$1 = function() {
                  var statearr_98328 = state_98325;
                  statearr_98328[7] = inst_98316;
                  return statearr_98328;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98325__$1, 4, inst_98318);
              } else {
                if (state_val_98326 === 2) {
                  var inst_98309 = state_98325[2];
                  var inst_98310 = communications.blockk = inst_98309;
                  var inst_98311 = l.og.call(null, new cljs.core.Keyword(null, "onBlockMined", "onBlockMined", -993463133), "just made new block ", communications.blockk);
                  var inst_98312 = communications.blockk.hash;
                  var inst_98313 = l.og.call(null, new cljs.core.Keyword(null, "message", "message", -406056002), "hash to get ", inst_98312);
                  var inst_98314 = b.saveBlock.call(null, app.pouchDB.dbase, communications.blockk);
                  var state_98325__$1 = function() {
                    var statearr_98329 = state_98325;
                    statearr_98329[8] = inst_98311;
                    statearr_98329[9] = inst_98313;
                    statearr_98329[10] = inst_98310;
                    return statearr_98329;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98325__$1, 3, inst_98314);
                } else {
                  if (state_val_98326 === 1) {
                    var inst_98306 = l.og.call(null, new cljs.core.Keyword(null, "onBlockMined", "onBlockMined", -993463133), "recieved from worker ", message);
                    var inst_98307 = b.makeBlock.call(null, message);
                    var state_98325__$1 = function() {
                      var statearr_98330 = state_98325;
                      statearr_98330[11] = inst_98306;
                      return statearr_98330;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98325__$1, 2, inst_98307);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98332 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_98332[0] = state_machine__6577__auto__;
              statearr_98332[1] = 1;
              return statearr_98332;
            };
            var state_machine__6577__auto____1 = function(state_98325) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98325);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98325) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98325);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98333 = f__6621__auto__.call(null);
        statearr_98333[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98333;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
communications.onTransaction = function onTransaction(message) {
  l.og.call(null, new cljs.core.Keyword(null, "onTransaction", "onTransaction", 1991881135), "recieved new transaction ", message);
  return communications.sha256.call(null, message);
};
communications.onCrypto = function onCrypto(message) {
  l.og.call(null, new cljs.core.Keyword(null, "onCrypto", "onCrypto", -1930465906), "recieved from crypto ", message);
  l.og.call(null, new cljs.core.Keyword(null, "onCrypto", "onCrypto", -1930465906), "mempoll \x3d ", b.memPool);
  b.addTransactionToMemPool.call(null, message);
  l.og.call(null, new cljs.core.Keyword(null, "onCrypto", "onCrypto", -1930465906), message["type"]);
  if (message["type"] === "fmr") {
    l.og.call(null, new cljs.core.Keyword(null, "onCrypto", "onCrypto", -1930465906), "merkle root ", message);
    communications.mine.call(null, message["value"]);
  } else {
  }
  if (cljs.core.count.call(null, b.memPool) > 3) {
    var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
      return function() {
        var f__6621__auto__ = function() {
          var switch__6576__auto__ = function(c__6620__auto__) {
            return function(state_98354) {
              var state_val_98355 = state_98354[1];
              if (state_val_98355 === 2) {
                var inst_98349 = state_98354[2];
                var inst_98350 = communications.fmroot = inst_98349;
                var inst_98351 = l.og.call(null, new cljs.core.Keyword(null, "onCrypto", "onCrypto", -1930465906), "calculating hash of transactions %s", communications.fmroot);
                var inst_98352 = communications.mine.call(null, communications.fmroot);
                var state_98354__$1 = function() {
                  var statearr_98356 = state_98354;
                  statearr_98356[5] = inst_98351;
                  statearr_98356[6] = inst_98350;
                  return statearr_98356;
                }();
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98354__$1, inst_98352);
              } else {
                if (state_val_98355 === 1) {
                  var inst_98347 = crypto.merkleRoot.call(null, b.memPool);
                  var state_98354__$1 = state_98354;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98354__$1, 2, inst_98347);
                } else {
                  return null;
                }
              }
            };
          }(c__6620__auto__);
          return function(switch__6576__auto__, c__6620__auto__) {
            return function() {
              var state_machine__6577__auto__ = null;
              var state_machine__6577__auto____0 = function() {
                var statearr_98358 = [null, null, null, null, null, null, null];
                statearr_98358[0] = state_machine__6577__auto__;
                statearr_98358[1] = 1;
                return statearr_98358;
              };
              var state_machine__6577__auto____1 = function(state_98354) {
                while (true) {
                  var result__6578__auto__ = switch__6576__auto__.call(null, state_98354);
                  if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    continue;
                  } else {
                    return result__6578__auto__;
                  }
                  break;
                }
              };
              state_machine__6577__auto__ = function(state_98354) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6577__auto____0.call(this);
                  case 1:
                    return state_machine__6577__auto____1.call(this, state_98354);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
              state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
              return state_machine__6577__auto__;
            }();
          }(switch__6576__auto__, c__6620__auto__);
        }();
        var state__6622__auto__ = function() {
          var statearr_98359 = f__6621__auto__.call(null);
          statearr_98359[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
          return statearr_98359;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
      };
    }(c__6620__auto__));
    return c__6620__auto__;
  } else {
    return null;
  }
};
communications.setupComm = function setupComm() {
  pubsub.sub.call(null, "blockMined", communications.onBlockMined);
  pubsub.sub.call(null, "crypto", communications.onCrypto);
  pubsub.sub.call(null, "transaction", communications.onTransaction);
  return pubsub.sub.call(null, "newConnection", communications.onNewConnection);
};
goog.provide("intercomTake");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
intercomTake.sendm = function sendm(peer, payload) {
  l.og.call(null, new cljs.core.Keyword(null, "sendm", "sendm", -1454310736), "sending ", payload);
  l.og.call(null, new cljs.core.Keyword(null, "sendm", "sendm", -1454310736), "peer ", peer);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98583) {
            var state_val_98584 = state_98583[1];
            if (state_val_98584 === 2) {
              var inst_98581 = state_98583[2];
              var state_98583__$1 = state_98583;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98583__$1, inst_98581);
            } else {
              if (state_val_98584 === 1) {
                var state_98583__$1 = state_98583;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_98583__$1, 2, peer, payload);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98586 = [null, null, null, null, null];
              statearr_98586[0] = state_machine__6577__auto__;
              statearr_98586[1] = 1;
              return statearr_98586;
            };
            var state_machine__6577__auto____1 = function(state_98583) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98583);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98583) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98583);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98587 = f__6621__auto__.call(null);
        statearr_98587[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98587;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
intercomTake.takeInv = function takeInv(fullMessage) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98719) {
            var state_val_98720 = state_98719[1];
            if (state_val_98720 === 7) {
              var inst_98686 = state_98719[2];
              var inst_98687 = intercomTake.heightFromBlock.call(null, inst_98686);
              var inst_98688 = intercomTake.blocks.vector;
              var inst_98689 = inst_98688.length;
              var inst_98690 = inst_98687 + inst_98689;
              var inst_98691 = inst_98690 + 1;
              var inst_98692 = intercomTake.newHeight = inst_98691;
              var inst_98693 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "newHeight ", intercomTake.newHeight);
              var inst_98694 = intercomTake.bchainHeight < intercomTake.newHeight;
              var state_98719__$1 = function() {
                var statearr_98721 = state_98719;
                statearr_98721[5] = inst_98693;
                statearr_98721[6] = inst_98692;
                return statearr_98721;
              }();
              if (cljs.core.truth_(inst_98694)) {
                var statearr_98722_98740 = state_98719__$1;
                statearr_98722_98740[1] = 8;
              } else {
                var statearr_98723_98741 = state_98719__$1;
                statearr_98723_98741[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_98720 === 1) {
                var inst_98664 = fullMessage.data;
                var inst_98665 = intercomTake.blocks = inst_98664;
                var inst_98666 = l.og.call(null, new cljs.core.Keyword(null, "takeInv", "takeInv", 1845315889), "now about to handle inv block message ", intercomTake.blocks);
                var inst_98667 = intercomTake.blocks.vector;
                var inst_98668 = inst_98667[0];
                var inst_98669 = blockchain.prevblk.call(null, inst_98668);
                var inst_98670 = blockchain.blockKnown_QMARK_.call(null, inst_98669);
                var state_98719__$1 = function() {
                  var statearr_98724 = state_98719;
                  statearr_98724[7] = inst_98665;
                  statearr_98724[8] = inst_98666;
                  return statearr_98724;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98719__$1, 2, inst_98670);
              } else {
                if (state_val_98720 === 4) {
                  var inst_98703 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "request previous", intercomTake.blocks);
                  var inst_98704 = db.g.call(null, "last");
                  var state_98719__$1 = function() {
                    var statearr_98725 = state_98719;
                    statearr_98725[9] = inst_98703;
                    return statearr_98725;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98719__$1, 11, inst_98704);
                } else {
                  if (state_val_98720 === 13) {
                    var inst_98710 = state_98719[10];
                    var inst_98713 = state_98719[2];
                    var state_98719__$1 = state_98719;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_98719__$1, 12, inst_98710, inst_98713);
                  } else {
                    if (state_val_98720 === 6) {
                      var inst_98678 = state_98719[2];
                      var inst_98679 = intercomTake.bchainHeight = inst_98678;
                      var inst_98680 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "blockchainHeight ", intercomTake.bchainHeight);
                      var inst_98681 = intercomTake.blocks.vector;
                      var inst_98682 = inst_98681[0];
                      var inst_98683 = blockchain.prevblk.call(null, inst_98682);
                      var inst_98684 = db.g.call(null, inst_98683);
                      var state_98719__$1 = function() {
                        var statearr_98726 = state_98719;
                        statearr_98726[11] = inst_98679;
                        statearr_98726[12] = inst_98680;
                        return statearr_98726;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98719__$1, 7, inst_98684);
                    } else {
                      if (state_val_98720 === 3) {
                        var inst_98674 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "block is known ");
                        var inst_98675 = "blockchainHeight".call(null);
                        var inst_98676 = cljs.core.apply.call(null, pubsub.sia, inst_98675);
                        var state_98719__$1 = function() {
                          var statearr_98727 = state_98719;
                          statearr_98727[13] = inst_98674;
                          return statearr_98727;
                        }();
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98719__$1, 6, inst_98676);
                      } else {
                        if (state_val_98720 === 12) {
                          var inst_98715 = state_98719[2];
                          var state_98719__$1 = state_98719;
                          var statearr_98728_98742 = state_98719__$1;
                          statearr_98728_98742[2] = inst_98715;
                          statearr_98728_98742[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_98720 === 2) {
                            var inst_98672 = state_98719[2];
                            var state_98719__$1 = state_98719;
                            if (cljs.core.truth_(inst_98672)) {
                              var statearr_98729_98743 = state_98719__$1;
                              statearr_98729_98743[1] = 3;
                            } else {
                              var statearr_98730_98744 = state_98719__$1;
                              statearr_98730_98744[1] = 4;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_98720 === 11) {
                              var inst_98706 = state_98719[2];
                              var inst_98707 = inst_98706.hash;
                              var inst_98708 = intercomTake.lblock = inst_98707;
                              var inst_98709 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "last block ", intercomTake.lblock);
                              var inst_98710 = fullMessage.peer;
                              var inst_98711 = im.makeGetBlock.call(null, intercomTake.lblock);
                              var state_98719__$1 = function() {
                                var statearr_98731 = state_98719;
                                statearr_98731[14] = inst_98709;
                                statearr_98731[15] = inst_98708;
                                statearr_98731[10] = inst_98710;
                                return statearr_98731;
                              }();
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98719__$1, 13, inst_98711);
                            } else {
                              if (state_val_98720 === 9) {
                                var inst_98699 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "about to drop inv");
                                var state_98719__$1 = state_98719;
                                var statearr_98732_98745 = state_98719__$1;
                                statearr_98732_98745[2] = inst_98699;
                                statearr_98732_98745[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_98720 === 5) {
                                  var inst_98717 = state_98719[2];
                                  var state_98719__$1 = function() {
                                    var statearr_98733 = state_98719;
                                    statearr_98733[16] = inst_98717;
                                    return statearr_98733;
                                  }();
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98719__$1, "grind");
                                } else {
                                  if (state_val_98720 === 10) {
                                    var inst_98701 = state_98719[2];
                                    var state_98719__$1 = state_98719;
                                    var statearr_98734_98746 = state_98719__$1;
                                    statearr_98734_98746[2] = inst_98701;
                                    statearr_98734_98746[1] = 5;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_98720 === 8) {
                                      var inst_98696 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "now adding to chain");
                                      var inst_98697 = blockchain.addToChain.call(null, intercomTake.blocks);
                                      var state_98719__$1 = function() {
                                        var statearr_98735 = state_98719;
                                        statearr_98735[17] = inst_98696;
                                        return statearr_98735;
                                      }();
                                      var statearr_98736_98747 = state_98719__$1;
                                      statearr_98736_98747[2] = inst_98697;
                                      statearr_98736_98747[1] = 10;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98738 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_98738[0] = state_machine__6577__auto__;
              statearr_98738[1] = 1;
              return statearr_98738;
            };
            var state_machine__6577__auto____1 = function(state_98719) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98719);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98719) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98719);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98739 = f__6621__auto__.call(null);
        statearr_98739[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98739;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
intercomTake.takeData = function takeData(message) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98768) {
            var state_val_98769 = state_98768[1];
            if (state_val_98769 === 1) {
              var inst_98761 = l.og.call(null, new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312), "take data ", message);
              var inst_98762 = l.og.call(null, new cljs.core.Keyword(null, "inv", "inv", 1526077438), "got inv here ");
              var inst_98763 = intercomTake.v.data;
              var inst_98764 = it.handleInvBlock.call(null, inst_98763, intercomTake.v);
              var inst_98765 = intercomTake.tostate.call(null, "grind");
              var inst_98766 = intercomTake.tostate.call(null, "grind", intercomTake.handleInvBlock);
              var state_98768__$1 = function() {
                var statearr_98770 = state_98768;
                statearr_98770[5] = inst_98765;
                statearr_98770[6] = inst_98761;
                statearr_98770[7] = inst_98764;
                statearr_98770[8] = inst_98762;
                return statearr_98770;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98768__$1, inst_98766);
            } else {
              return null;
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98772 = [null, null, null, null, null, null, null, null, null];
              statearr_98772[0] = state_machine__6577__auto__;
              statearr_98772[1] = 1;
              return statearr_98772;
            };
            var state_machine__6577__auto____1 = function(state_98768) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98768);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98768) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98768);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98773 = f__6621__auto__.call(null);
        statearr_98773[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98773;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
intercomTake.takeGetVersion = function takeGetVersion(message) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98790) {
            var state_val_98791 = state_98790[1];
            if (state_val_98791 === 1) {
              var inst_98785 = intercomTake.v.peer;
              var inst_98786 = intercomTake.sendmsg.call(null, inst_98785, "version", "0");
              var inst_98787 = intercomTake.tostate.call(null, "grind");
              var inst_98788 = l.og.call(null, new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312), "take get version ", message);
              var state_98790__$1 = function() {
                var statearr_98792 = state_98790;
                statearr_98792[5] = inst_98787;
                statearr_98792[6] = inst_98786;
                return statearr_98792;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98790__$1, inst_98788);
            } else {
              return null;
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98794 = [null, null, null, null, null, null, null];
              statearr_98794[0] = state_machine__6577__auto__;
              statearr_98794[1] = 1;
              return statearr_98794;
            };
            var state_machine__6577__auto____1 = function(state_98790) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98790);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98790) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98790);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98795 = f__6621__auto__.call(null);
        statearr_98795[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98795;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
intercomTake.takeVersion = function takeVersion(message) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98806) {
            var state_val_98807 = state_98806[1];
            if (state_val_98807 === 1) {
              var inst_98804 = l.og.call(null, new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312), "take version ", message);
              var state_98806__$1 = function() {
                var statearr_98808 = state_98806;
                statearr_98808[5] = inst_98804;
                return statearr_98808;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98806__$1, "grind");
            } else {
              return null;
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98810 = [null, null, null, null, null, null];
              statearr_98810[0] = state_machine__6577__auto__;
              statearr_98810[1] = 1;
              return statearr_98810;
            };
            var state_machine__6577__auto____1 = function(state_98806) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98806);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98806) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98806);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98811 = f__6621__auto__.call(null);
        statearr_98811[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98811;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
intercomTake.takeConn = function takeConn(conn) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98852) {
            var state_val_98853 = state_98852[1];
            if (state_val_98853 === 4) {
              var inst_98850 = state_98852[2];
              var state_98852__$1 = state_98852;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98852__$1, inst_98850);
            } else {
              if (state_val_98853 === 3) {
                var state_98852__$1 = state_98852;
                var statearr_98854_98862 = state_98852__$1;
                statearr_98854_98862[2] = "version";
                statearr_98854_98862[1] = 4;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_98853 === 2) {
                  var state_98852__$1 = state_98852;
                  var statearr_98855_98863 = state_98852__$1;
                  statearr_98855_98863[2] = "grind";
                  statearr_98855_98863[1] = 4;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_98853 === 1) {
                    var inst_98837 = l.og.call(null, new cljs.core.Keyword(null, "takeConn", "takeConn", -426297678), "take conn ", conn);
                    var inst_98838 = conn.data;
                    var inst_98839 = inst_98838.writec;
                    var inst_98840 = im.makeVersion.call(null, "0");
                    var inst_98841 = intercomTake.sendm.call(null, inst_98839, inst_98840);
                    var inst_98842 = conn.connType;
                    var inst_98843 = l.og.call(null, new cljs.core.Keyword(null, "takeConn", "takeConn", -426297678), "conn type ", inst_98842);
                    var inst_98844 = conn.data;
                    var inst_98845 = inst_98844.connType;
                    var inst_98846 = inst_98845 === "saltan";
                    var state_98852__$1 = function() {
                      var statearr_98856 = state_98852;
                      statearr_98856[5] = inst_98843;
                      statearr_98856[6] = inst_98841;
                      statearr_98856[7] = inst_98837;
                      return statearr_98856;
                    }();
                    if (cljs.core.truth_(inst_98846)) {
                      var statearr_98857_98864 = state_98852__$1;
                      statearr_98857_98864[1] = 2;
                    } else {
                      var statearr_98858_98865 = state_98852__$1;
                      statearr_98858_98865[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98860 = [null, null, null, null, null, null, null, null];
              statearr_98860[0] = state_machine__6577__auto__;
              statearr_98860[1] = 1;
              return statearr_98860;
            };
            var state_machine__6577__auto____1 = function(state_98852) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98852);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98852) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98852);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98861 = f__6621__auto__.call(null);
        statearr_98861[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98861;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
intercomTake.takeGetBlocks = function takeGetBlocks(peer, hash) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98886) {
            var state_val_98887 = state_98886[1];
            if (state_val_98887 === 2) {
              var inst_98883 = state_98886[2];
              var inst_98884 = l.og.call(null, new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312), "make Get Blck", inst_98883);
              var state_98886__$1 = state_98886;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98886__$1, inst_98884);
            } else {
              if (state_val_98887 === 1) {
                var inst_98879 = l.og.call(null, new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312), "getting data from peer ", peer);
                var inst_98880 = l.og.call(null, new cljs.core.Keyword(null, "getBlocks", "getBlocks", 333767312), "getting data from hash ", hash);
                var inst_98881 = intercomTake.makeGetBlock.call(null, hash);
                var state_98886__$1 = function() {
                  var statearr_98888 = state_98886;
                  statearr_98888[5] = inst_98879;
                  statearr_98888[6] = inst_98880;
                  return statearr_98888;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98886__$1, 2, inst_98881);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98890 = [null, null, null, null, null, null, null];
              statearr_98890[0] = state_machine__6577__auto__;
              statearr_98890[1] = 1;
              return statearr_98890;
            };
            var state_machine__6577__auto____1 = function(state_98886) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98886);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98886) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98886);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98891 = f__6621__auto__.call(null);
        statearr_98891[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98891;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
goog.provide("routing");
goog.require("cljs.core");
goog.require("intercomMake");
goog.require("blockchain");
goog.require("cljs.core.async");
goog.require("mockdatabasew");
goog.require("intercomTake");
goog.require("crypt");
goog.require("logger");
goog.require("mining");
routing.routea = function routea(rch, sch) {
  return pubsub.rrsa.call(null, rch, sch, "cleandb", mockdatabasew.cleandb, "connectTo", mockdatabasew.connectTo, "dumpdb", mockdatabasew.dumpdb, "g", mockdatabasew.reg, "db", mockdatabasew.reg, "initdb", mockdatabasew.initDBase, "onDatabaseChange", mockdatabasew.onDatabaseChange, "p", mockdatabasew.reg, "s", mockdatabasew.s, "update", mockdatabasew.update, "database", mockdatabasew.reg, "addToChain", blockchain.addToChain, "addTransactionToBlock", blockchain.addTransactionToBlock, "blockKnown?", 
  blockchain.blockKnown_QMARK_, "blockchainHeight", blockchain.blockchainHeight, "heightFromBlock", blockchain.heightFromBlock, "last?", blockchain.last_QMARK_, "log2", blockchain.log2, "makeBlock", blockchain.makeBlock, "makeBlockHeader", blockchain.makeBlockHeader, "makeTransaction", blockchain.makeTransaction, "popA", blockchain.popA, "prevblk", blockchain.prevblk, "removeTransactionFromMemPool", blockchain.removeTransactionFromMemPool, "saveBlock", blockchain.saveBlock, "broadcastNewBlock", communications.broadcastNewBlock, 
  "channelsFromConnection", communications.channelsFromConnection, "cryptoCh", communications.cryptoCh, "initial", communications.initial, "intercomMeta", communications.intercomMeta, "onBlockMined", communications.onBlockMined, "onConnection", communications.onConnection, "onCrypto", communications.onCrypto, "onData", communications.onData, "onNewConnection", communications.onNewConnection, "onOpen", communications.onOpen, "onTransaction", communications.onTransaction, "sendmsg", communications.sendmsg, 
  "setID", communications.setID, "setupComm", communications.setupComm, "startP2PCommLoop", communications.startP2PCommLoop, "arraybtostring", crypt.arraybtostring, "bHash", crypt.bHash, "encode", crypt.encode, "hash", crypt.s256, "merkleRoot", crypt.merkleRoot, "resultToCh", crypt.resultToCh, "s256", crypt.s256, "sha256", crypt.sha256, "sha256c", crypt.sha256c, "shaCallb", crypt.shaCallb, "getIntercomState", intercom.getIntercomState, "intercomstatemachine", intercom.intercomstatemachine, "is?", 
  intercom.is_QMARK_, "onMessage", intercom.onMessage, "setIntercomState", intercom.setIntercomState, "tostateu", intercom.tostateu, "typeof?", intercom.typeof_QMARK_, "makeConn", intercomMake.makeConn, "makeData", intercomMake.makeData, "makeGetBlock", intercomMake.makeGetBlock, "makeInv", intercomMake.makeGetVersion, "makeInv", intercomMake.makeInv, "makeVersion", intercomMake.makeVersion, "sendm", intercomTake.sendm, "takeConn", intercomTake.takeConn, "takeData", intercomTake.takeData, "takeGetBlocks", 
  intercomTake.takeGetBlocks, "takeGetVersion", intercomTake.takeGetVersion, "takeInv", intercomTake.takeInv, "log", logger.og, "mine", mining.mine, "mg", mockdatabase.g, "mp", mockdatabase.p, "mps", mockdatabase.ps, "mupdate", mockdatabase.update, "mcleandb", mockdatabasew.cleandb, "mdumpdb", mockdatabasew.dumpdb, "mg", mockdatabasew.g, "minitDBase", mockdatabasew.initDBase, "mp", mockdatabasew.p, "mps", mockdatabasew.ps, "mupdate", mockdatabasew.update);
};
goog.provide("database");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
goog.require("logger");
database.states = function() {
  var obj98363 = {};
  return obj98363;
}();
database.cleandb = function cleandb() {
  return m.cleandb.call(null);
};
database.dumpdb = function dumpdb() {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98374) {
            var state_val_98375 = state_98374[1];
            if (state_val_98375 === 1) {
              var inst_98372 = logger.og.call(null, database.states);
              var state_98374__$1 = function() {
                var statearr_98376 = state_98374;
                statearr_98376[5] = inst_98372;
                return statearr_98376;
              }();
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98374__$1, 1);
            } else {
              return null;
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98378 = [null, null, null, null, null, null];
              statearr_98378[0] = state_machine__6577__auto__;
              statearr_98378[1] = 1;
              return statearr_98378;
            };
            var state_machine__6577__auto____1 = function(state_98374) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98374);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98374) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98374);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98379 = f__6621__auto__.call(null);
        statearr_98379[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98379;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
database.onDatabaseChange = cljs.core.async.chan.call(null);
database.onDatabaseChange.type = "databaseChange";
database.update = function update(k, f) {
  return logger.og.call(null, new cljs.core.Keyword(null, "dbupdate", "dbupdate", 1437384630), "getting from db ", k);
};
database.g = function g(k) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98393) {
            var state_val_98394 = state_98393[1];
            if (state_val_98394 === 2) {
              var inst_98391 = state_98393[2];
              var state_98393__$1 = state_98393;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98393__$1, inst_98391);
            } else {
              if (state_val_98394 === 1) {
                var inst_98389 = m.g.call(null, k);
                var state_98393__$1 = state_98393;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98393__$1, 2, inst_98389);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98396 = [null, null, null, null, null];
              statearr_98396[0] = state_machine__6577__auto__;
              statearr_98396[1] = 1;
              return statearr_98396;
            };
            var state_machine__6577__auto____1 = function(state_98393) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98393);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98393) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98393);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98397 = f__6621__auto__.call(null);
        statearr_98397[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98397;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
database.update = function update(k, v) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98411) {
            var state_val_98412 = state_98411[1];
            if (state_val_98412 === 2) {
              var inst_98409 = state_98411[2];
              var state_98411__$1 = state_98411;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98411__$1, inst_98409);
            } else {
              if (state_val_98412 === 1) {
                var inst_98407 = m.update.call(null, k, v);
                var state_98411__$1 = state_98411;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98411__$1, 2, inst_98407);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98414 = [null, null, null, null, null];
              statearr_98414[0] = state_machine__6577__auto__;
              statearr_98414[1] = 1;
              return statearr_98414;
            };
            var state_machine__6577__auto____1 = function(state_98411) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98411);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98411) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98411);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98415 = f__6621__auto__.call(null);
        statearr_98415[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98415;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
database.p = function p(k, v) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98429) {
            var state_val_98430 = state_98429[1];
            if (state_val_98430 === 2) {
              var inst_98427 = state_98429[2];
              var state_98429__$1 = state_98429;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98429__$1, inst_98427);
            } else {
              if (state_val_98430 === 1) {
                var inst_98425 = m.p.call(null, k, v);
                var state_98429__$1 = state_98429;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98429__$1, 2, inst_98425);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98432 = [null, null, null, null, null];
              statearr_98432[0] = state_machine__6577__auto__;
              statearr_98432[1] = 1;
              return statearr_98432;
            };
            var state_machine__6577__auto____1 = function(state_98429) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98429);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98429) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98429);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98433 = f__6621__auto__.call(null);
        statearr_98433[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98433;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
database.ps = function ps(k, v) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98447) {
            var state_val_98448 = state_98447[1];
            if (state_val_98448 === 2) {
              var inst_98445 = state_98447[2];
              var state_98447__$1 = state_98447;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98447__$1, inst_98445);
            } else {
              if (state_val_98448 === 1) {
                var inst_98443 = m.p.call(null, k, v);
                var state_98447__$1 = state_98447;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98447__$1, 2, inst_98443);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98450 = [null, null, null, null, null];
              statearr_98450[0] = state_machine__6577__auto__;
              statearr_98450[1] = 1;
              return statearr_98450;
            };
            var state_machine__6577__auto____1 = function(state_98447) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98447);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98447) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98447);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98451 = f__6621__auto__.call(null);
        statearr_98451[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98451;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
database.reg = function reg(typ, v) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98492) {
            var state_val_98493 = state_98492[1];
            if (state_val_98493 === 7) {
              var inst_98488 = state_98492[2];
              var state_98492__$1 = state_98492;
              var statearr_98494_98506 = state_98492__$1;
              statearr_98494_98506[2] = inst_98488;
              statearr_98494_98506[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_98493 === 6) {
                var state_98492__$1 = state_98492;
                var statearr_98495_98507 = state_98492__$1;
                statearr_98495_98507[2] = 0;
                statearr_98495_98507[1] = 7;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_98493 === 5) {
                  var inst_98485 = database.states[typ];
                  var state_98492__$1 = state_98492;
                  var statearr_98496_98508 = state_98492__$1;
                  statearr_98496_98508[2] = inst_98485;
                  statearr_98496_98508[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_98493 === 4) {
                    var inst_98490 = state_98492[2];
                    var state_98492__$1 = state_98492;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98492__$1, inst_98490);
                  } else {
                    if (state_val_98493 === 3) {
                      var inst_98483 = database.states[typ];
                      var state_98492__$1 = state_98492;
                      if (cljs.core.truth_(inst_98483)) {
                        var statearr_98497_98509 = state_98492__$1;
                        statearr_98497_98509[1] = 5;
                      } else {
                        var statearr_98498_98510 = state_98492__$1;
                        statearr_98498_98510[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_98493 === 2) {
                        var inst_98481 = database.states[typ] = v;
                        var state_98492__$1 = state_98492;
                        var statearr_98499_98511 = state_98492__$1;
                        statearr_98499_98511[2] = inst_98481;
                        statearr_98499_98511[1] = 4;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_98493 === 1) {
                          var inst_98479 = logger.og.call(null, new cljs.core.Keyword(null, "reg", "reg", 1636216344), typ, v);
                          var state_98492__$1 = function() {
                            var statearr_98500 = state_98492;
                            statearr_98500[5] = inst_98479;
                            return statearr_98500;
                          }();
                          if (cljs.core.truth_(v)) {
                            var statearr_98501_98512 = state_98492__$1;
                            statearr_98501_98512[1] = 2;
                          } else {
                            var statearr_98502_98513 = state_98492__$1;
                            statearr_98502_98513[1] = 3;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98504 = [null, null, null, null, null, null];
              statearr_98504[0] = state_machine__6577__auto__;
              statearr_98504[1] = 1;
              return statearr_98504;
            };
            var state_machine__6577__auto____1 = function(state_98492) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98492);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98492) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98492);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98505 = f__6621__auto__.call(null);
        statearr_98505[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98505;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
database.initDBase = function initDBase(x) {
  logger.og.call(null, new cljs.core.Keyword(null, "initdbwraper", "initdbwraper", 631490056), "wrapper", x);
  return m.initDBase.call(null, x);
};
database.connectTo = function connectTo(ev, id) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_98556) {
            var state_val_98557 = state_98556[1];
            if (state_val_98557 === 4) {
              var inst_98551 = state_98556[2];
              var inst_98552 = inst_98551.connect(id);
              var inst_98553 = cljs.core.partial.call(null, comm.onOpen, inst_98552);
              var inst_98554 = inst_98552.on("open", inst_98553);
              var state_98556__$1 = state_98556;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_98556__$1, inst_98554);
            } else {
              if (state_val_98557 === 3) {
                var inst_98547 = state_98556[2];
                var inst_98548 = logger.og.call(null, new cljs.core.Keyword(null, "connectTo", "connectTo", 1625853527), "", inst_98547);
                var inst_98549 = cljs.core.get.call(null);
                var state_98556__$1 = function() {
                  var statearr_98558 = state_98556;
                  statearr_98558[5] = inst_98548;
                  return statearr_98558;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98556__$1, 4, inst_98549);
              } else {
                if (state_val_98557 === 2) {
                  var inst_98543 = state_98556[2];
                  var inst_98544 = logger.og.call(null, new cljs.core.Keyword(null, "connectTo", "connectTo", 1625853527), "", inst_98543);
                  var inst_98545 = cljs.core.get.call(null);
                  var state_98556__$1 = function() {
                    var statearr_98559 = state_98556;
                    statearr_98559[6] = inst_98544;
                    return statearr_98559;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98556__$1, 3, inst_98545);
                } else {
                  if (state_val_98557 === 1) {
                    var inst_98539 = cljs.core.first.call(null, id);
                    var inst_98540 = logger.og.call(null, new cljs.core.Keyword(null, "connectTo", "connectTo", 1625853527), "", inst_98539);
                    var inst_98541 = cljs.core.get.call(null);
                    var state_98556__$1 = function() {
                      var statearr_98560 = state_98556;
                      statearr_98560[7] = inst_98540;
                      return statearr_98560;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_98556__$1, 2, inst_98541);
                  } else {
                    return null;
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_98562 = [null, null, null, null, null, null, null, null];
              statearr_98562[0] = state_machine__6577__auto__;
              statearr_98562[1] = 1;
              return statearr_98562;
            };
            var state_machine__6577__auto____1 = function(state_98556) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_98556);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_98556) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_98556);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_98563 = f__6621__auto__.call(null);
        statearr_98563[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_98563;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
goog.provide("intercomMakeUtil");
goog.require("cljs.core");
goog.provide("intercom");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
cljs.core.enable_console_print_BANG_.call(null);
intercom.intercomState = "start";
intercom.state = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
intercom.inputch = cljs.core.async.chan.call(null);
intercom.outputch = cljs.core.async.chan.call(null);
intercom.statech = cljs.core.async.chan.call(null);
intercom.onMessage = function onMessage(wch, type, data) {
  l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), type + " message in intercom", data);
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_13855) {
            var state_val_13856 = state_13855[1];
            if (state_val_13856 === 2) {
              var inst_13853 = state_13855[2];
              var state_13855__$1 = state_13855;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13855__$1, inst_13853);
            } else {
              if (state_val_13856 === 1) {
                var inst_13851 = {"type":type, "data":data, "peer":wch};
                var state_13855__$1 = state_13855;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13855__$1, 2, intercom.inputch, inst_13851);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_13858 = [null, null, null, null, null];
              statearr_13858[0] = state_machine__6577__auto__;
              statearr_13858[1] = 1;
              return statearr_13858;
            };
            var state_machine__6577__auto____1 = function(state_13855) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_13855);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_13855) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_13855);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_13859 = f__6621__auto__.call(null);
        statearr_13859[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_13859;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
intercom.setIntercomState = function setIntercomState(conn, state) {
  return conn.intercomstate = state;
};
intercom.getIntercomState = function getIntercomState(conn) {
  l.og.call(null, new cljs.core.Keyword(null, "getIntercomState", "getIntercomState", -1128989799), "intercom state", conn);
  return conn["intercomstate"];
};
intercom.tostateu = function tostateu(conn, statename) {
  l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "changing state to: ", statename);
  return conn["intercomstate"] = statename;
};
intercom.typeof_QMARK_ = function typeof_QMARK_(message, type) {
  return message.type === type;
};
intercom.is_QMARK_ = function is_QMARK_(state, qstate) {
  return state === qstate;
};
intercom.intercomstatemachine = function intercomstatemachine(conn, message) {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_14089) {
            var state_val_14090 = state_14089[1];
            if (state_val_14090 === 7) {
              var inst_14032 = intercom.is_QMARK_.call(null, intercom.state, "grind");
              var state_14089__$1 = state_14089;
              if (inst_14032) {
                var statearr_14091_14140 = state_14089__$1;
                statearr_14091_14140[1] = 13;
              } else {
                var statearr_14092_14141 = state_14089__$1;
                statearr_14092_14141[1] = 14;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14090 === 20) {
                var inst_14044 = intercom.typeof_QMARK_.call(null, message, "getdata");
                var state_14089__$1 = state_14089;
                if (inst_14044) {
                  var statearr_14093_14142 = state_14089__$1;
                  statearr_14093_14142[1] = 22;
                } else {
                  var statearr_14094_14143 = state_14089__$1;
                  statearr_14094_14143[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14090 === 27) {
                  var inst_14074 = state_14089[2];
                  var state_14089__$1 = state_14089;
                  var statearr_14095_14144 = state_14089__$1;
                  statearr_14095_14144[2] = inst_14074;
                  statearr_14095_14144[1] = 24;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14090 === 1) {
                    var inst_14000 = cljs.core.partial.call(null, intercom.tostateu, conn);
                    var inst_14001 = intercom.tostate = inst_14000;
                    var inst_14002 = intercom.getIntercomState.call(null, conn);
                    var inst_14003 = intercom.state = inst_14002;
                    var inst_14004 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "starting loop in intercom");
                    var inst_14005 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "state in intercom ", intercom.state);
                    var inst_14006 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "message in intercom ", message);
                    var inst_14007 = message.data;
                    var inst_14008 = intercom.v = inst_14007;
                    var inst_14009 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "state ", intercom.state);
                    var inst_14010 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "message ", message);
                    var inst_14011 = intercom.is_QMARK_.call(null, intercom.state, "start");
                    var state_14089__$1 = function() {
                      var statearr_14096 = state_14089;
                      statearr_14096[5] = inst_14008;
                      statearr_14096[6] = inst_14004;
                      statearr_14096[7] = inst_14009;
                      statearr_14096[8] = inst_14006;
                      statearr_14096[9] = inst_14010;
                      statearr_14096[10] = inst_14005;
                      statearr_14096[11] = inst_14001;
                      statearr_14096[12] = inst_14003;
                      return statearr_14096;
                    }();
                    if (inst_14011) {
                      var statearr_14097_14145 = state_14089__$1;
                      statearr_14097_14145[1] = 2;
                    } else {
                      var statearr_14098_14146 = state_14089__$1;
                      statearr_14098_14146[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14090 === 24) {
                      var inst_14076 = state_14089[2];
                      var state_14089__$1 = state_14089;
                      var statearr_14099_14147 = state_14089__$1;
                      statearr_14099_14147[2] = inst_14076;
                      statearr_14099_14147[1] = 21;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14090 === 4) {
                        var inst_14087 = state_14089[2];
                        var state_14089__$1 = state_14089;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14089__$1, inst_14087);
                      } else {
                        if (state_val_14090 === 15) {
                          var inst_14083 = state_14089[2];
                          var state_14089__$1 = state_14089;
                          var statearr_14100_14148 = state_14089__$1;
                          statearr_14100_14148[2] = inst_14083;
                          statearr_14100_14148[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14090 === 21) {
                            var inst_14078 = state_14089[2];
                            var state_14089__$1 = state_14089;
                            var statearr_14101_14149 = state_14089__$1;
                            statearr_14101_14149[2] = inst_14078;
                            statearr_14101_14149[1] = 18;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14090 === 31) {
                              var inst_14061 = it.takeData.call(null, message);
                              var inst_14062 = intercom.tostate.call(null, inst_14061);
                              var state_14089__$1 = state_14089;
                              var statearr_14102_14150 = state_14089__$1;
                              statearr_14102_14150[2] = inst_14062;
                              statearr_14102_14150[1] = 33;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14090 === 32) {
                                var state_14089__$1 = state_14089;
                                var statearr_14103_14151 = state_14089__$1;
                                statearr_14103_14151[1] = 34;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14090 === 33) {
                                  var inst_14070 = state_14089[2];
                                  var state_14089__$1 = state_14089;
                                  var statearr_14105_14152 = state_14089__$1;
                                  statearr_14105_14152[2] = inst_14070;
                                  statearr_14105_14152[1] = 30;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14090 === 13) {
                                    var inst_14034 = intercom.typeof_QMARK_.call(null, message, "conn");
                                    var state_14089__$1 = state_14089;
                                    if (inst_14034) {
                                      var statearr_14106_14153 = state_14089__$1;
                                      statearr_14106_14153[1] = 16;
                                    } else {
                                      var statearr_14107_14154 = state_14089__$1;
                                      statearr_14107_14154[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14090 === 22) {
                                      var inst_14046 = it.takeGetData.call(null, message);
                                      var inst_14047 = intercom.tostate.call(null, inst_14046);
                                      var state_14089__$1 = state_14089;
                                      var statearr_14108_14155 = state_14089__$1;
                                      statearr_14108_14155[2] = inst_14047;
                                      statearr_14108_14155[1] = 24;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_14090 === 36) {
                                        var inst_14068 = state_14089[2];
                                        var state_14089__$1 = state_14089;
                                        var statearr_14109_14156 = state_14089__$1;
                                        statearr_14109_14156[2] = inst_14068;
                                        statearr_14109_14156[1] = 33;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_14090 === 29) {
                                          var inst_14059 = intercom.typeof_QMARK_.call(null, message, "data");
                                          var state_14089__$1 = state_14089;
                                          if (inst_14059) {
                                            var statearr_14110_14157 = state_14089__$1;
                                            statearr_14110_14157[1] = 31;
                                          } else {
                                            var statearr_14111_14158 = state_14089__$1;
                                            statearr_14111_14158[1] = 32;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14090 === 6) {
                                            var inst_14022 = intercom.typeof_QMARK_.call(null, message, "version");
                                            var state_14089__$1 = state_14089;
                                            if (inst_14022) {
                                              var statearr_14112_14159 = state_14089__$1;
                                              statearr_14112_14159[1] = 9;
                                            } else {
                                              var statearr_14113_14160 = state_14089__$1;
                                              statearr_14113_14160[1] = 10;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_14090 === 28) {
                                              var inst_14056 = it.takeTx.call(null, message);
                                              var inst_14057 = intercom.tostate.call(null, inst_14056);
                                              var state_14089__$1 = state_14089;
                                              var statearr_14114_14161 = state_14089__$1;
                                              statearr_14114_14161[2] = inst_14057;
                                              statearr_14114_14161[1] = 30;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_14090 === 25) {
                                                var inst_14051 = it.takeGetTx.call(null, message);
                                                var inst_14052 = intercom.tostate.call(null, inst_14051);
                                                var state_14089__$1 = state_14089;
                                                var statearr_14115_14162 = state_14089__$1;
                                                statearr_14115_14162[2] = inst_14052;
                                                statearr_14115_14162[1] = 27;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_14090 === 34) {
                                                  var inst_14065 = intercom.tostate.call(null, "grind");
                                                  var state_14089__$1 = state_14089;
                                                  var statearr_14116_14163 = state_14089__$1;
                                                  statearr_14116_14163[2] = inst_14065;
                                                  statearr_14116_14163[1] = 36;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_14090 === 17) {
                                                    var inst_14039 = intercom.typeof_QMARK_.call(null, message, "inv");
                                                    var state_14089__$1 = state_14089;
                                                    if (inst_14039) {
                                                      var statearr_14117_14164 = state_14089__$1;
                                                      statearr_14117_14164[1] = 19;
                                                    } else {
                                                      var statearr_14118_14165 = state_14089__$1;
                                                      statearr_14118_14165[1] = 20;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_14090 === 3) {
                                                      var inst_14020 = intercom.is_QMARK_.call(null, intercom.state, "version");
                                                      var state_14089__$1 = state_14089;
                                                      if (inst_14020) {
                                                        var statearr_14119_14166 = state_14089__$1;
                                                        statearr_14119_14166[1] = 6;
                                                      } else {
                                                        var statearr_14120_14167 = state_14089__$1;
                                                        statearr_14120_14167[1] = 7;
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_14090 === 12) {
                                                        var inst_14026 = state_14089[2];
                                                        var inst_14027 = intercom.tostate.call(null, inst_14026);
                                                        var state_14089__$1 = state_14089;
                                                        var statearr_14121_14168 = state_14089__$1;
                                                        statearr_14121_14168[2] = inst_14027;
                                                        statearr_14121_14168[1] = 11;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_14090 === 2) {
                                                          var inst_14013 = it.takeConn.call(null, message);
                                                          var state_14089__$1 = state_14089;
                                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14089__$1, 5, inst_14013);
                                                        } else {
                                                          if (state_val_14090 === 23) {
                                                            var inst_14049 = intercom.typeof_QMARK_.call(null, message, "gettx");
                                                            var state_14089__$1 = state_14089;
                                                            if (inst_14049) {
                                                              var statearr_14122_14169 = state_14089__$1;
                                                              statearr_14122_14169[1] = 25;
                                                            } else {
                                                              var statearr_14123_14170 = state_14089__$1;
                                                              statearr_14123_14170[1] = 26;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_14090 === 35) {
                                                              var state_14089__$1 = state_14089;
                                                              var statearr_14124_14171 = state_14089__$1;
                                                              statearr_14124_14171[2] = null;
                                                              statearr_14124_14171[1] = 36;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_14090 === 19) {
                                                                var inst_14041 = it.takeInv.call(null, message);
                                                                var inst_14042 = intercom.tostate.call(null, inst_14041);
                                                                var state_14089__$1 = state_14089;
                                                                var statearr_14125_14172 = state_14089__$1;
                                                                statearr_14125_14172[2] = inst_14042;
                                                                statearr_14125_14172[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_14090 === 11) {
                                                                  var inst_14030 = state_14089[2];
                                                                  var state_14089__$1 = state_14089;
                                                                  var statearr_14126_14173 = state_14089__$1;
                                                                  statearr_14126_14173[2] = inst_14030;
                                                                  statearr_14126_14173[1] = 8;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_14090 === 9) {
                                                                    var inst_14024 = it.takeVersion.call(null, message);
                                                                    var state_14089__$1 = state_14089;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14089__$1, 12, inst_14024);
                                                                  } else {
                                                                    if (state_val_14090 === 5) {
                                                                      var inst_14015 = state_14089[2];
                                                                      var inst_14016 = intercom.newstate = inst_14015;
                                                                      var inst_14017 = l.og.call(null, new cljs.core.Keyword(null, "intercom", "intercom", -1489804996), "start -\x3e ", intercom.newstate);
                                                                      var inst_14018 = intercom.tostate.call(null, intercom.newstate);
                                                                      var state_14089__$1 = function() {
                                                                        var statearr_14127 = state_14089;
                                                                        statearr_14127[13] = inst_14016;
                                                                        statearr_14127[14] = inst_14017;
                                                                        return statearr_14127;
                                                                      }();
                                                                      var statearr_14128_14174 = state_14089__$1;
                                                                      statearr_14128_14174[2] = inst_14018;
                                                                      statearr_14128_14174[1] = 4;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_14090 === 14) {
                                                                        var state_14089__$1 = state_14089;
                                                                        var statearr_14129_14175 = state_14089__$1;
                                                                        statearr_14129_14175[2] = null;
                                                                        statearr_14129_14175[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_14090 === 26) {
                                                                          var inst_14054 = intercom.typeof_QMARK_.call(null, message, "tx");
                                                                          var state_14089__$1 = state_14089;
                                                                          if (inst_14054) {
                                                                            var statearr_14130_14176 = state_14089__$1;
                                                                            statearr_14130_14176[1] = 28;
                                                                          } else {
                                                                            var statearr_14131_14177 = state_14089__$1;
                                                                            statearr_14131_14177[1] = 29;
                                                                          }
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_14090 === 16) {
                                                                            var inst_14036 = it.takeConn.call(null, message);
                                                                            var inst_14037 = intercom.tostate.call(null, inst_14036);
                                                                            var state_14089__$1 = state_14089;
                                                                            var statearr_14132_14178 = state_14089__$1;
                                                                            statearr_14132_14178[2] = inst_14037;
                                                                            statearr_14132_14178[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_14090 === 30) {
                                                                              var inst_14072 = state_14089[2];
                                                                              var state_14089__$1 = state_14089;
                                                                              var statearr_14133_14179 = state_14089__$1;
                                                                              statearr_14133_14179[2] = inst_14072;
                                                                              statearr_14133_14179[1] = 27;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_14090 === 10) {
                                                                                var state_14089__$1 = state_14089;
                                                                                var statearr_14134_14180 = state_14089__$1;
                                                                                statearr_14134_14180[2] = null;
                                                                                statearr_14134_14180[1] = 11;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_14090 === 18) {
                                                                                  var inst_14080 = state_14089[2];
                                                                                  var state_14089__$1 = state_14089;
                                                                                  var statearr_14135_14181 = state_14089__$1;
                                                                                  statearr_14135_14181[2] = inst_14080;
                                                                                  statearr_14135_14181[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_14090 === 8) {
                                                                                    var inst_14085 = state_14089[2];
                                                                                    var state_14089__$1 = state_14089;
                                                                                    var statearr_14136_14182 = state_14089__$1;
                                                                                    statearr_14136_14182[2] = inst_14085;
                                                                                    statearr_14136_14182[1] = 4;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    return null;
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_14138 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_14138[0] = state_machine__6577__auto__;
              statearr_14138[1] = 1;
              return statearr_14138;
            };
            var state_machine__6577__auto____1 = function(state_14089) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_14089);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_14089) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_14089);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_14139 = f__6621__auto__.call(null);
        statearr_14139[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_14139;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
goog.provide("app.main");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
goog.require("logger");
cljs.core.enable_console_print_BANG_.call(null);
app.main.dumpdb = function dumpdb() {
  return pubsub.s.call(null, "dumpdb", "");
};
$(document).on("dumpdb", app.main.dumpdb);
app.main.cleandb = function cleandb() {
  return pubsub.s.call(null, "cleandb", "");
};
$(document).on("cleandb", app.main.cleadb);
app.main.replScratchFunction = function replScratchFunction() {
  pubsub.si.call(null, "dumpdb");
  var c__6620__auto___99466 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto___99466) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto___99466) {
          return function(state_99461) {
            var state_val_99462 = state_99461[1];
            if (state_val_99462 === 2) {
              var inst_99459 = state_99461[2];
              var state_99461__$1 = state_99461;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99461__$1, inst_99459);
            } else {
              if (state_val_99462 === 1) {
                var inst_99457 = pubsub.sia.call(null, "hash", "s");
                var state_99461__$1 = state_99461;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99461__$1, 2, inst_99457);
              } else {
                return null;
              }
            }
          };
        }(c__6620__auto___99466);
        return function(switch__6576__auto__, c__6620__auto___99466) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99464 = [null, null, null, null, null];
              statearr_99464[0] = state_machine__6577__auto__;
              statearr_99464[1] = 1;
              return statearr_99464;
            };
            var state_machine__6577__auto____1 = function(state_99461) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99461);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99461) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99461);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto___99466);
      }();
      var state__6622__auto__ = function() {
        var statearr_99465 = f__6621__auto__.call(null);
        statearr_99465[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto___99466;
        return statearr_99465;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto___99466));
  app.main._LT__BANG_.call(null, pubsub.sia.call(null, "makeBlock", "wadsdsad"));
  app.main.dumpdb.call(null);
  return app.main.cleandb.call(null);
};
app.main.empty_string = "";
app.main.pri = function pri(x) {
  cljs.core.println.call(null, x);
  return 3;
};
app.main.entryy = function entryy() {
  var c__6620__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6620__auto__) {
    return function() {
      var f__6621__auto__ = function() {
        var switch__6576__auto__ = function(c__6620__auto__) {
          return function(state_99500) {
            var state_val_99501 = state_99500[1];
            if (state_val_99501 === 3) {
              var inst_99497 = state_99500[2];
              var inst_99498 = logger.og.call(null, new cljs.core.Keyword(null, "main", "main", -2117802661), "0\x3d", inst_99497);
              var state_99500__$1 = state_99500;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_99500__$1, inst_99498);
            } else {
              if (state_val_99501 === 2) {
                var inst_99493 = state_99500[2];
                var inst_99494 = logger.og.call(null, new cljs.core.Keyword(null, "main", "main", -2117802661), "0\x3d", inst_99493);
                var inst_99495 = pubsub.sia.call(null, "dumpdb");
                var state_99500__$1 = function() {
                  var statearr_99502 = state_99500;
                  statearr_99502[5] = inst_99494;
                  return statearr_99502;
                }();
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99500__$1, 3, inst_99495);
              } else {
                if (state_val_99501 === 1) {
                  var inst_99489 = {"root":"somehash", "nonce":"somenonce", "newhash":"found"};
                  var inst_99490 = app.main.fwork = inst_99489;
                  var inst_99491 = pubsub.sia.call(null, "initdb");
                  var state_99500__$1 = function() {
                    var statearr_99503 = state_99500;
                    statearr_99503[6] = inst_99490;
                    return statearr_99503;
                  }();
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_99500__$1, 2, inst_99491);
                } else {
                  return null;
                }
              }
            }
          };
        }(c__6620__auto__);
        return function(switch__6576__auto__, c__6620__auto__) {
          return function() {
            var state_machine__6577__auto__ = null;
            var state_machine__6577__auto____0 = function() {
              var statearr_99505 = [null, null, null, null, null, null, null];
              statearr_99505[0] = state_machine__6577__auto__;
              statearr_99505[1] = 1;
              return statearr_99505;
            };
            var state_machine__6577__auto____1 = function(state_99500) {
              while (true) {
                var result__6578__auto__ = switch__6576__auto__.call(null, state_99500);
                if (cljs.core.keyword_identical_QMARK_.call(null, result__6578__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  continue;
                } else {
                  return result__6578__auto__;
                }
                break;
              }
            };
            state_machine__6577__auto__ = function(state_99500) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6577__auto____0.call(this);
                case 1:
                  return state_machine__6577__auto____1.call(this, state_99500);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6577__auto____0;
            state_machine__6577__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6577__auto____1;
            return state_machine__6577__auto__;
          }();
        }(switch__6576__auto__, c__6620__auto__);
      }();
      var state__6622__auto__ = function() {
        var statearr_99506 = f__6621__auto__.call(null);
        statearr_99506[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6620__auto__;
        return statearr_99506;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6622__auto__);
    };
  }(c__6620__auto__));
  return c__6620__auto__;
};
window.onload = app.main.entryy;
goog.provide("mockdatabase");
goog.require("cljs.core");
goog.require("cljs.core.async");
mockdatabase.mdbase = function() {
  var obj13390 = {};
  return obj13390;
}();
mockdatabase.g = function g(kie) {
  return mockdatabase.mdbase[kie];
};
mockdatabase.p = function p(kie, v) {
  return mockdatabase.mdbase[kie] = v;
};
mockdatabase.ps = function ps(kie, v) {
  return mockdatabase.mdbase[kie] = v;
};
mockdatabase.update = function update(kie, v) {
  return mockdatabase.mdbase[kie] = v;
};
goog.provide("router");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("pubsub");
router.a = function a(x) {
  var obj98569 = {"a":1};
  return obj98569;
};
