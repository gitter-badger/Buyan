function encode(n){return new TextEncoder("utf-8").encode(n)}function decode(n){return new TextDecoder("utf-8").decode(n)}function checkH(n,e){for(var r=new Uint8Array(n),o=0;o<r.byteLength&&e>o;o++)if(0!==r[o])return!1;return!0}function compare(n,e){var r=new Uint8Array(n),o=new Uint8Array(e);if(r.byteLength!=o.byteLength)return!1;for(var t=0;t<r.byteLength;t++)if(r[t]!==o[t])return!1;return!0}function arrayBToString(n){function e(n){for(var e="",r=0,o=n.length;o>r;){var t=n[r],c=(10>t?"0":"")+t.toString(16);e+=c,r++}return e}var r=e(new Uint8Array(n));return r}function encode(n){return new TextEncoder("utf-8").encode(n)}function decode(n){return new TextDecoder("utf-8").decode(n)}function checkH(n,e){for(var r=new Uint8Array(n),o=0;o<r.byteLength&&e>o;o++)if(0!==r[o])return!1;return arrayBToString(r)}var run=!1,hash="asdsad",nonce="nonce",difficulty=1,run=!0,not_found=!1,nonce=!1,merkleRoot="root",difficulty=1,run=!0,found=!1;onmessage=function(n){switch(console.log("recieved work ",n.data.args),n.data.args[0]){case"newjob":merkleRoot=n.data.args[1],run=!0,nonce=!1,found=!1,function e(){run&&!found&&(nonce+=1,crypto.subtle.digest({name:"SHA-256"},encode(merkleRoot+nonce)).then(function(n){found=checkH(n,difficulty),e()})),1==run&&found&&setTimeout(function(){var n=JSON.stringify({root:"somehash: "+merkleRoot,nonce:"somenonce "+nonce,newhash:found});console.log(n),postMessage(n)},0)}();break;case"stop":run=!1;break;case"start":run=!0;break;default:console.log("no message")}};